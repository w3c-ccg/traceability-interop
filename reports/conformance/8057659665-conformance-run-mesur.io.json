{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "39817c4e-417c-4fd4-a428-8c7d610f66e6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b732b2e9-fae8-4522-8725-a021a2a6cb20",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ab090c6d-166b-4c31-b805-859572e324ff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ceba4272-c609-4b3a-a9b2-33654e901ff1"
                }
              }
            ]
          },
          {
            "id": "aad1c644-aab4-4feb-91b6-3f7e7c9dc265",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de6f8999-2253-4bd6-85ab-f0c362bb9897",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "efd866d7-d859-4242-93f8-99d805d2eb5e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "254b0f88-1a48-40ac-acd5-218a6e6bb149",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e98d9798-10ee-4f8a-8226-697a2a276f1b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b3b04e3-ad3e-4b24-86ad-399f41347d77",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76f3bfb5-f6c0-4331-a4da-c5b897f7ffd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "438fc5f0-d999-42f6-827a-d77cef637028"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5339bcc-26bc-4c65-a128-48babd0f0180",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae5e7fac-c231-4e9b-9e7e-3424f276cba1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "162dcd37-0ec6-4b10-b7bd-31af0d0e56df",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3dd8e154-7b48-4cde-adfe-6139b63cc094"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fa949d20-3677-4887-8a57-2229dbd65dbd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f012efa7-4671-4dea-ab93-e22b5b5c999f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e8e0084a-f004-4270-85cd-6943fff8f132",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a9f2819-f2c6-4a1e-beff-3e5bbc9479ba"
            }
          }
        ]
      },
      {
        "id": "5e966c20-3647-4456-a8ed-b90edcf8922a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "439fa100-9f6f-4322-b8dc-f44bdaba3e54",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08d9a34e-caf4-4586-811c-ca61bb957f88",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "62bb3682-7996-4751-a221-31dd7316347b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95854132-c888-4ea5-a854-955915ae57ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d44a3d8-54a7-4217-af6f-39d27f2c7023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f6841b-4efb-4e23-8186-dbd693130dc2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57af5c97-00a6-4818-b772-dff58f20b6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d545311e-6bdf-4a7f-be44-94d19788eb5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea1c374-6733-425c-93db-99ef75fa0086",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61399cce-576a-4fef-bcc6-e357dea520ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "431c21ea-60ad-4f02-842c-a33abd255478"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "80dcb630-ba94-4e25-b8bd-c12a6264fb12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e485ca86-d4cf-4b99-a4b3-dd33a0011e1c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64940487-e47a-4d17-8db4-6b937bb4bbd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0a9fd7e2-4307-420d-86f9-b88b6de272c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cda87d-0da1-4029-a45f-14ec1b9125c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9844ac-63fd-4af2-896c-7a33e957f76a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "81648389-dd84-4cc2-9953-62e0a1fd2dda",
            "name": "Positive Testing",
            "item": [
              {
                "id": "507f175b-b7e8-4403-b5a8-9d58b97e4dcb",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c13915bc-7e65-4484-9fb9-3d3735fe4406",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fc592ca1-02ea-41b4-8a15-4b98c239c34b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50149ed3-43d2-44e4-bc98-f1aa73d452c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bd77e1ec-e38e-4256-be9f-843f3b7636f1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "91606c7b-fdd5-4378-8e2a-23617f1b55df",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3b7eae9-05b7-4b82-bf3f-49f0e18b06f0"
            }
          }
        ]
      },
      {
        "id": "0e7dc5cf-b43e-47c7-99ff-4c81c3c88f3c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "53ef82d6-9781-4363-982b-66374edc47ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "130ec2c6-cfa2-474a-9bac-e797282e5939",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bfa67b75-e1db-4637-9449-92f4e9774ef5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5342662-72a0-43f6-861e-fbba32c998eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc3ca3f-aeec-4c42-9118-1b20a22f65ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b971b426-fb93-451d-ae58-625789dfc504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d39fe78-a7a7-436d-9dbf-fd85ee7b5220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30f34bc-fdd3-42e0-ad93-34ff760434f7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f7b4ccd-29df-42c9-9a71-343cfbd6434a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9c2dc4-d147-4614-bb2a-c86e0858a526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9265c22-cc62-4aa7-8b00-f5f86fde35bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0250479e-ee69-4be1-89fd-e063f7752a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1d7ca4-c050-4576-9d30-92ed009a74e9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b035725-18b2-46dc-8a39-3733c4bef24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de741519-253d-43a1-ae5d-9e22aa213145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba17f0eb-0a95-4660-bbcd-4c43e68d0f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7be92b27-4da2-431b-96cd-0f88cb80ccf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d4f3cf-c368-4610-a03d-3795047894ea",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcedf2ff-e6e9-44b9-8887-293793de1dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e42cd53-a767-49d6-bd48-ffe821407f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3db076-3ed7-4eba-9150-27231306615d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfa93cd9-721c-4583-a68e-932aac1edbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6951e7c-d234-4886-b995-415761133cf1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf047f2-df37-497b-9f66-78ac0db3cf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe2120e-f5cc-444b-b852-f8f69a9568ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e247a59-abf1-409a-8c13-56ebf18a6b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bae065c1-b5a1-45be-b017-54f67d73bcc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1435423-6425-4ef2-a86e-6669df9fa4da",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0e16a1-7f6a-440d-831b-88e9a3a24bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527774b7-9872-477a-84ba-f7a60131ae67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0189b44e-9d4f-47f5-bf3e-72159d0b269c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "519f9925-6789-4a29-93a8-9f0f01933faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71704177-09a8-4cce-9539-197b6fad201f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c36e813-0a49-44f0-83f1-08fdd57f12a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483dd938-27ef-4cdf-bcf1-a9b399571ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782b8fb2-25a2-44cd-8de0-1f2ffd857442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dff7241-efce-4dbc-a129-0856c6bd2e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b418893-38e3-4ff2-bbd9-f9ae49a5967d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e062188-1e68-4df4-9aa4-5e231ac09d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27515ad6-27bc-4cc9-ab07-0f8a16da75dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91e732b7-aa36-461e-987b-79c930167612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d30e489-b321-46bd-ad5d-2fa186297274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84447e2-932e-4f4a-8e6f-c479faedacf7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1515b4c5-b608-46a2-90bc-a7863d507323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be46efa-ee66-4cd0-80fe-af2e6dcfee73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9eed660-0435-40a4-acdb-22a717881f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3daf192f-689e-4b06-812c-446fe81eff9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246b9f17-cb3b-4a8f-ab24-e4fa4d88c611",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5dffcc-6312-4d55-b4e8-1761b2c0e060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d239190-d505-448e-8966-f5056eda3f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67160535-7d9f-4f34-a544-caea7811a42c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a8a2c2b-a180-47df-ac0b-c171014d1b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdba809-3e24-4285-8998-99600998acfe",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc24feee-cf47-477b-a7ce-6ecff4b9ba70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fad3da1-6624-4832-a803-df8ba017f2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10b2532-5eb1-4dca-ab2f-d378a116d691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f372c62a-1518-40a6-8126-9fefbe238a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c163fc-13bd-4d7a-bfe8-b01d5f554241",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5a52f5-3c3f-412b-ac1f-5e90ab1f2073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7affb6c9-babb-4476-baed-284f9138735b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568417bc-ccca-443c-8afe-212c6b933c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65d89435-3836-4494-99ea-15d1e88965cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef468a43-67f1-48e8-85da-eb5d34f33130",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d93f58-3564-40cd-a852-0a6c593803de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a91527c-4031-45d9-adb5-4cb8dee772f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca3f415-ad62-4ec8-a2ba-9c0dc4bcfb3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba1bc500-3a51-465a-9582-73b630d99b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b021b75-9157-483d-a1e6-4535cbe022a6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c84407-cd69-4a2f-8da9-58b4cc0d27a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7067c91-bb82-4fd2-82ba-af6c5902cdc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351a6d1d-9f40-41a9-8f24-60bd7f3a1f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0fc9e45a-4b1e-4a3e-922c-e8ce16c01b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5ea226-07b8-4e02-8f94-1ecea21e03dc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd1ee15-fa98-4539-a27e-4d976b6be965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a9dfef-a327-4ed3-9b18-073386953230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3972c583-23c7-468e-94e8-9328acb6f18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45cab8aa-18c1-40ca-ba06-884933ae305c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2d4773-f821-4552-a8d6-9a247d99b5c0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294ec8e8-c544-424c-839b-cec55e638587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f2d04b-ce28-4022-991f-15bb746066f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b00148-1568-4466-a6b1-197aed9ee0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1102d72b-6976-4cfe-8338-e69616d00a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adef092f-ff97-4a5e-986f-3fd578dcabb6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d82f30-a029-448e-a98a-f9835849edfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8814078-094e-46bd-a345-836c5c13f39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6054e27-7ce1-4ac9-bfb9-b945e4b64494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01df0bcf-1066-4d6b-87fa-87745676ffe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8204eb55-720d-4039-a2ae-aa675cfaa266",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72605dfa-401c-44b1-977d-c5382c4948df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5229cf25-c445-4492-933a-e7ebf2edb887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d8b969-1ab2-4edd-b242-560df7a62342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "55efe355-cbb1-4ff5-b2fb-6c587033f1b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c808f8a-aeec-4953-b6a8-48db57fa2edf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa93a3f-c45f-4c5d-8a3a-535f1e9ebd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c65ee444-5f85-4d6e-9646-b3e390bc83a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea67fc54-095d-43bb-839c-a1ba0f2beaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "984081de-79f2-4649-ac85-e67c579ea2f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09989e0-aa35-43e6-ae82-69af845beb63",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ac294b-7b73-4369-9d21-f38390b2abab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7050acb6-c376-4aa6-a22e-6833b5bd1b6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e545fd3-0e32-4f0a-ac57-78368c7a904b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "547c758d-8b4a-4331-822f-0cdbf929cf3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6198a6-0912-48bf-b73d-fa2d0094da50",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe361a3-9cad-41ac-b31b-fc3eb4a8fc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3d0af03-02ef-45dc-b709-0e8afbaef0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecccbc6-5639-4fcd-87ac-5c5bdd6babad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b9f3c9d-6e76-4d73-83ce-7261973ad204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea7e211-6a5a-4aa6-8e97-98597e6566b8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7890c1b8-d827-4d80-a830-b00db48217ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7ec7b0-9602-4611-87ea-39ec10ad1151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d082f1e3-a3ec-48db-b7be-b91038d85b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6827cdd-5210-40ff-aaa2-471aa21f491e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f9baba-9c91-42e8-9d69-6f2d29946d02",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e139ac9d-a644-41ee-977e-039777d54c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff62e1f9-c156-41c7-9d92-8726bdd4c8f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb0ad27-8ac4-4b96-be40-e6b34714174c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b795bf9-4a70-4b39-ab51-e0a3ae630929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdb3499-ac0a-46da-bf74-272b0681c6c0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3724663c-826a-42de-b77b-78027815f212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cc625d-d203-448b-a5b0-7b569a1ba2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786f527c-975b-41fc-aae1-860849d267f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b7f9af-2a4f-4741-8785-6d06a52a6923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee4b761-fa08-44c5-b1b1-5b63add93764",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec21fc3-b392-4211-9ca6-c6942217bf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b73de7f-3843-44e9-bccf-67a753b40ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537ec605-dae2-4eca-bc6d-a45ddcd92d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e206dca8-c0e9-4088-8e63-1da1498c2cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d4ebfab-bc8e-4a08-b456-90e40245d7a3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a38ef69-8227-4981-9e85-646e3cbaa4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57fb40ca-f262-4ee3-b4ed-4746742c85a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64111e4a-aeaa-42b3-ad91-2774d985624a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "207dad6e-fee7-48a7-8a0c-24aad7d06c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7249f7f9-3b75-4f81-80ad-2d47d0762f17",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f0470e-02af-4ee3-9cea-36ec6e71b112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7d865e-8a97-42e3-8b96-93e4a3e2e1de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8608ef3-37d2-42f3-a435-5224de986b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31e9ced5-db99-4712-bc2b-050189b985c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487efee3-23b3-48f0-9e23-d677f7e8f7b1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eca8520-9ce7-48b5-976b-31e34623aa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac35d5c-7600-4b41-ad1e-07f0abd16c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afed23dd-aacc-4582-9f13-9dc279de4879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d560e7-2e2b-435c-ad90-494b31cf33c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7b1bbe2-f864-4a5a-9689-1c1f82f17e28",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c197ecf4-94df-4d25-a63b-525f0e21f985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75cb508d-314e-4da4-83bd-0f8c34f33962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4e0899-731b-4291-9036-ef5f502dd5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b59ab77-8938-437e-91a5-4ad24231d656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8112516-62b8-469f-a530-91b119fa310d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa0b470-192a-4555-a180-3c74d846dda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e8b86c-44c7-4297-9be3-802c66202999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ec45b0-cb6b-4cc4-95f2-23dd37cfc139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "98940525-56d4-427a-b1e2-ad7b2285ce63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c67c5d0-a340-440b-b5bd-3569ec4319ef",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897c364d-1d6e-401b-b5e1-6e5e2602d1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43dd55d5-e752-4c60-b1e9-6c61a28a59dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5e5ae0-4b64-4850-9e8d-8ea59e3b1540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ae3523-d96f-4e2d-9ae7-6543d35f1274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13126fc6-5033-4492-9b85-c25ad89ddfc8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f34be2b-2aed-4c2b-8db5-93e7a234257b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c5f56b-bbc4-4123-943f-9a2878df6103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8484a9e-5d86-4ee7-a076-64659c02e6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a56e6db-e5a1-4388-a136-02b49c8104e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5906b26-7f84-4edb-adfe-9f30b7dce6a3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d05e5b9-e512-4661-b49d-0d4b38f1266c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1292e04f-79c8-4b0d-884c-91d3435052be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70560a62-e2ae-431e-ba91-9b6c0c161c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1ea6dcf-3e8a-4822-8e83-ed9d9003c5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c522242b-f583-4db3-a9b2-1d39464864e3",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab84dc42-f849-4ea1-a0a8-4daf9a668e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43018d7-e25f-44d6-8e21-4598ab76258c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d202584-2672-4613-b226-4bfc77bd4092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9458824-b6e3-43ab-ae26-fb968dbaa6cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99e0e5d-8a16-4eb8-a6d1-92467a6fc729",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb09e81-1b47-46aa-b5a9-eea10f9323fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784920be-1384-4ff8-aa4c-69009ece3b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03fc7495-80ec-4ce7-a3da-2666d1fa4fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1d06d3b7-ef45-4a77-ac3b-99f5a2f11676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205b684f-9b05-45b2-b9ce-59691299c767",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba6f9503-1d8b-4745-a112-db7c990d4da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64b8b248-2fe3-4a19-8405-06c17055c212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb0ce7e-a6a6-4a90-8a61-3c7f573c42e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9643465a-97e0-49a8-a34c-262478b3e805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22b4a40-c235-49a5-88d7-07642b010524",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d377e0a3-99c5-4df5-9256-5a204a605e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2efd43-8e5f-4b93-a28c-019e9baf3c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "953b171c-4081-4372-8601-6fd76cda9556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9a3ccc-c92b-44bc-8b32-72c19f6f77e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb83655-bc21-424b-81f9-4ca9e9af9d0b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ce7100-1708-4cb4-a160-e17af0c4f39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76aa7c4b-12ed-4a03-9a03-34b774570c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779c9ce5-ac71-40cc-a510-5a309e0020bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "17cdd03a-5307-4895-802d-4fcfd9e12270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e677a4ae-87a5-4d0c-a5ca-70adb9c41255",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49371ef-ecd5-4ed9-b972-9d0525064d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ad9f6b-3944-46e0-a936-f0ebb70a2ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a680dee-adc2-495e-a7a2-089703cc07ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "11a6cf0c-a747-4c59-b27f-caa27a63ef05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b757d95f-2286-4a4d-8b26-4abfd07ef82e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfc1e99-8f25-433c-87af-6bba299c8dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256b543b-4597-4834-a730-77376826b0cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1591aea-61b5-41e5-8e3f-f1420f98be3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "be8e0bd9-c5cd-4c7b-9054-8aaf96c7819c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36b883b-9cb7-4eb9-baa4-441cb81b07ed",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afae4f0-ae35-4a17-9bcc-12f2efbf5478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc9ac50-4887-445b-9fe4-035ec2aee1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a2fce9-0ba0-4142-8c90-923cc641fc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a32ee0c-291e-4b7c-ae9a-d7f114bc925f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b31e543-133d-4729-a58f-198ad0ad9b30",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f01c9e-6573-4345-a93f-44a22cc62ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76dde5b3-8edd-44e2-8e24-a692366ae6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbd7ca8-e360-4c2a-afd7-72097e1bc2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4069597f-e1ce-4afb-bf99-469b76c31cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88638bd0-6380-44f2-a69f-531ae5d4ef5f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c427d794-8be6-49c6-b8d9-93e3cac0c84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af404f2-595c-4e58-b5c9-e055bdcc5e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f75b409-1d3c-4619-82c9-7e187338e824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0d77ec0-e2ac-41ec-bbde-145bebf2c5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb59039-234f-48c3-9052-06f8ca139699",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5792f9-7a1b-437c-8e60-9d321116f073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7adccf8b-c0fb-4956-b39c-c37f47bde590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56854270-4976-406f-b29c-772578dcb170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5d4044-f3b6-45b3-94c8-0fdb03b34518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc51d97a-52b6-427e-b352-ca789daff77a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bec7c30-7242-4888-bc34-3e512f6e1be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae6d0c4-53f0-403c-9bc9-5960c83d8c94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d490b1-7b2b-4424-be57-8acdbadfdc0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e6c4b0-6c21-45bb-b13f-2e73b21adaf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d46e3b1-1b66-4e79-ab5c-6a152a613523",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb7c60a-c0ff-41e8-8fc6-77ad380b9bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26b563f2-de5f-4ae4-913f-6dd32146ac8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5566412f-5573-416b-aed6-fd93a44419f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bba3c30-34da-46b0-975a-a5f2844115ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2d88c3-10f0-4c71-ba73-15ab845d16b4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4e0abd-ac80-4a98-abb8-b0b41d8f8b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd857d6-15c8-4976-a088-01d7e8d83a22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab12d700-7550-4f8a-9652-e0834042ea2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30cd1c9f-b137-4a31-b3e0-d48e4fe8b28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e759563d-fa6c-43c6-8d68-80dce9048d9a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5f89c0-bb61-49a9-ae5f-23f28ea7c075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd64745-59a6-42a8-b4b2-81a099aa2dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79acfa80-e990-4772-8ff6-d0a469b5aff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7dacd0f-4d62-4440-9d06-6f696464b6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e272ef-6285-4b25-8cfc-5e39bd1519ae",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44918ee7-8b73-4add-bcc5-70c883dada58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baeaa438-55f8-4a5a-89b6-19a4e6297c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4d2f87-bf3e-481e-a287-4fd7158e43ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c3dcfec-98a3-4af2-a190-62b6e959075b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1f53fd-53fd-418f-91f3-bad910bdfb99",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d09e054-f857-4a8f-93c8-a4cf66705974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5308c506-a1f1-40d0-ac98-7ac42af166b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98de7b3a-3afe-4f1c-adf8-9e11c10cbbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4550c081-b922-479a-aaec-18ca680cd2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f30054b3-94d9-494c-ae49-54df05a966d4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb810fa-eeb7-4880-81ab-ea6c2574d5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20deab36-f4d8-4137-b3fa-3a050bc71df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a888b6-6da1-412f-bf95-faab57a99420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb60393-bc4d-41cc-9244-35a35eb98662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a71d517-d2c9-4b38-8481-61064b48d29d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463e2524-12ac-4321-823b-542b3f7dd13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6f096b-c12b-41c3-b83d-10bee69e9dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b899085d-f9de-4e7e-8805-d6d396e664a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a1144d5-d180-410f-91e0-563d4bf23ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fff02c3-457a-4904-a50b-7477154d201a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e742d1b2-9e95-4597-8447-c7dabb0efa56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56c9da2-c18c-4bff-82da-98b2f04bb524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7466eded-5904-41a9-8b0d-40c0c109bb4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63230136-65b1-4294-971a-698d55255946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9d81b24-21ed-47c7-aafd-f4def35c7a60",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af566cef-0ef3-420e-b6ac-c4f407dac69f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4fc47c9-bb39-4d95-9172-442671935c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5745233-a635-4f4e-beab-ce3c6ecf1527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7395076-a9a9-4508-aabd-2c0958d38078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa1a02b-3cd6-4245-b974-46160c8e8e2f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a00234-0585-48cc-9026-5d9aa611391b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066875ad-3c13-4bb0-9ae4-35bba27608cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1aa0cd7-9557-4d3e-a8f5-834fe975bb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bbe4a2-8007-4118-a926-bad8430f8bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad3d743-4d0f-4651-98a9-6c12aa880509",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b051d37-2d1d-4039-b3b0-9878cb5a44d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc5dfae8-d7c8-446b-ac63-c000fdd7e3aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e15b52-8dc4-4d5a-a976-9f1d2e7f1d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "213d48b4-2e73-44b1-8a4a-1e0dc2c5dd62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb56a29-7dd2-4cd0-ad90-95a9bc84317d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd040a38-6c89-4ea9-b0b4-188bfae19153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395e52a5-1599-4257-906d-0ccea75a57e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e3de56-0a8b-4e04-9317-d34c3fbf5388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd254ac-8caa-4c50-ac8b-d562f054ffbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9873703-ee00-4c82-919e-341883c1228a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6343269f-1781-44f1-9c09-6692b989b339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27383d9-1c0a-4af1-b959-77402e5227e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b95e81b-b76a-4c2f-82c1-17ef7c18349f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebb8c87-ff0a-478f-9aff-fbe8d2444805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0727cce3-3dd3-4153-92ad-0874eac10974",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bfe6df-35b9-44b8-be89-c5f831ed0c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e88ad0-32c3-4ea7-9739-25ea9a45d895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fd8ed4-bf3e-4be3-92f3-4c697bea8bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c41d21-bf41-4cbf-8510-0064eee9048e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2f8ca6-ad8f-451f-bf9a-9b9399e7a23d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "004bdd6f-e7d8-421f-b67d-bcd58227897c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a443c528-a1bd-49e6-8662-d458ea4c67f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e859a83-e1ca-4dfd-afac-a5e9f7755011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "76d08e94-a20d-47dc-ba66-b987b6221285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d04c66a-f3e5-4acd-9096-d37eede46c10",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a507664-1697-4d47-8c38-0151d06ac5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c383d81-c673-44ad-b09a-53079c01c63e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2f5722-3d57-4807-8a36-ed8cc6760c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "081057e8-863a-4b41-9193-b965fe755d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665577a1-5406-4470-a29d-1c8169f6711e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb2c503-c6ec-4caa-851f-db2f71773032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10df41b8-dd12-4226-ab72-397811668dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c4263a-d7ee-4356-902d-5f20e63e8d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dedef382-dd31-44c1-bfce-52d10c7403c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08df459-3b46-4dec-a5bb-30a39863853b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0077067-7357-41ad-a74a-9ee4bb47cced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da91748-67ef-4722-8c47-2ce39541c2bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e42780-5684-4a3e-ab7b-510530a0a311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "be6bb2c7-b988-42c3-a63e-32d30e7b0b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b69dfac-322f-4d3f-8c05-8e72bc47414b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b526f424-9ee7-4fac-8c3a-e9c9c8051570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a664d2fc-754d-45ba-a0cf-a64eb2a1bbc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b477a38c-28a5-40b1-8db6-1d408f02cadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "519c21bf-6639-499f-a9ce-d47302ec4720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8550acdc-e848-4670-b890-a68c5f3efa2a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ad2fbe-5a3b-4723-967f-357f630e3e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c4f6e16-ebd3-4c54-b644-df21f39a5dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab51839d-8161-454c-b14a-7ba014878849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "019dc449-791f-4ce2-853a-8c6c84ec7757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e096b017-a12b-4ad9-8626-a2e428a7b0cf",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183291ea-349e-4941-8700-e04e45f7176c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a803916-62b4-48d8-b988-375770bbb469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd5f8d5-4547-4d21-b30f-4b4332a1b044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "93736845-4b26-4d28-9dd9-6fe609d0020b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07babccd-3303-486a-a20d-a9c0b2ec56b8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c571fb0e-f01b-4d75-a368-d0ffe7550f0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f094d34e-b45a-4c1f-9639-f01546af68ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97429723-790f-433d-b3df-bc736c4cda71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b7973f-3a80-4e22-97fd-1e8d91adf20f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f26aa5c-08d6-4214-b197-a27f686b99e2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18ed713-c22a-46a0-9faf-b45ccf3f4a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba1b07e-41a4-42d0-bcd6-df8219b6285d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b8cffd-9df6-468d-b082-1594827bf186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f407c5c-e39f-4dff-b658-a23ced0ed6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f8413a-9f00-4166-90a7-d9bb7271643b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb2308f-1706-4bd3-8567-606a5a49d350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fbca62-c4bf-4aaf-973f-404e364fa4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d860df3d-8c03-482d-b358-478a5096dfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9af5e5-3cae-4f7e-aa81-8307c36001be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd450edd-cbda-4f18-912b-ac26f2b9c4aa",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088751f3-f010-4987-bc17-be40dc5fcba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f2afa6-a093-4360-be01-115b657c24ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b51ac2-adc3-4790-a140-a3a857455c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "836ad049-5142-4727-891a-e3fe1bf0e566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b81c02f-6737-42eb-aa80-2d0fd44c42fa",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2be6532-b6d3-4cb9-848a-22fe63299d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058c260e-ffff-43b2-a28b-200ef5743ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66816a8-2ae6-42f1-91de-e0ec938f9b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec03334-e42a-49f7-8c27-8ffff0985110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a5e3b4-ecb2-4b59-98c8-00fa6f69a712",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e420e2b9-684c-4f0a-b360-c8d435ea1f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417b0512-4323-416e-9f07-a1506fb1ba07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01f54c2-752d-495c-bb9a-9a7952fd7864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce020039-5ecd-49d9-bb77-60bd19965c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78aa3e56-84ce-482d-b85f-09bb8e13636a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91dbc3c8-8515-4932-bdcd-b147769d34db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f786e6bd-e993-4e61-9f80-81633f171fb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50cfb7c-c1bd-43ad-964a-e92c6a4cd0a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d18a0d-fc4d-4272-bba9-851d7a9e6898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8237baeb-6445-4c39-949f-7c3f1e5274bb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d01d2e-cc34-4adc-a15f-0e29758a562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82594ed9-bf54-4858-9f3f-3bc92b2acbac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86936b4-9b55-442a-8ff7-1e493883a878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8114f1cb-5068-4d26-8c7d-2f8b5acefefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57c3ed2-42e7-4039-8326-953d0ce1ae26",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1597b49d-6706-4575-bb59-90d58a746c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9bebee-617e-41ea-8012-ff393878d2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df516a8d-d274-47b9-8eee-9c7cce0677c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f008e458-6fa6-4e6e-b3a9-55a3412ec5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbf19d4-167e-4cda-91c1-5eabc311215c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69000a82-8991-4c33-aa44-d5f49db248e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9029936d-ba19-4841-9049-662a4f5e531b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88fe919e-53fe-4903-8dfe-384562ee1739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5331602f-ecc1-45b1-92b2-4fae69fa175b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d37f500-c3d8-4f76-8ed8-6a6248a64fd1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982c4bf3-28ec-4581-b54c-3da212199cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe89c78a-d1f7-4e75-9a7d-c074550a183d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c30e10-bdba-4670-98df-4466b220dae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "555e5de1-0c6a-435b-b78a-609f0c85095d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e850021-7650-4adf-afd0-c662ccb2d85a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf86cb22-2373-4413-b6b3-75b55fa0c064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c15e80-dc21-4d90-9481-7e5de46bd9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ef5044-0961-4f71-8b0c-b4cb6d5a4a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d53cf2-39e5-48e6-a1fb-fdb1864a6399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9364ee1-6b29-4631-8048-e774f43faa83",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89eb794-7918-4c9f-bead-45716c47758d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83390928-8e16-4fe1-b638-3c3cde13205d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88038e06-f7b4-4149-8f0a-6784de75b4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8894da1-14d3-4ae4-ba4d-072302734dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040d0ffb-ff11-48cf-8539-b2db0f2d6157",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5565ff-61c1-4f04-8eed-4992851503b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902dac96-bc2e-4fdb-a24f-0b2f56b616b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62e5bbb2-8831-4cc1-b9ce-db749bdb6557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fea1acdf-8758-485b-97f6-384e2b71bff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c3342f-2f08-408f-95fb-65262154a3c9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4502ef97-f31f-4038-b212-7a275810e241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e127cb82-17e5-45d8-99bf-6397008e4a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4c4484-af9e-4148-aed1-27f6cd28a726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "693cb7cb-e785-4352-a138-43cf6e22ec2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b944e3-da8e-4d25-a665-b5cb5e958fd4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "784e870c-bc9f-4d68-9f3d-70063ed676d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bae248-5cdb-47f2-a981-443b9b09079b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e0f12e-eef4-44d0-ac6e-ea93fe7515cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6a14be-0251-465f-8253-6950054a09ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf6871b-b1bc-4a0a-8e29-de4b33b0c1d0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3295226c-b217-460e-aee1-7ab3751b9af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f86791-5845-424f-a089-6de346029136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf620ae1-9ea7-40cf-bebc-90b294b00c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a1b9fc3-9de5-44c5-937e-7027d69eca50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c7f37a-974c-41a8-9637-586f51347b1c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b73a31c-24fb-41a7-aa13-39e339df6470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bf5dc55-9a64-420c-a85a-a4eedb76acb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7966d535-2173-4cdc-88ac-f65e1b8e14a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "325d56f0-3b97-4b49-9ae2-eff44ab0ea1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d35e0c8-44b5-4aaa-b22c-7b61a0368cb3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a21190d-54e8-4b82-8b99-385e4ff19a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400d5166-0e60-482b-94ce-6bae7f1888eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a659898f-dde9-444a-91cd-1c1b50460ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5649a6-6a29-415f-a38c-1f3f4ed13d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d725ed7a-0e78-4cba-9f4e-707b6b2e1450",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f06e04-72aa-4b19-8fdc-7d13199a239f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77cf3170-2aa1-4cc0-967e-de20d7e075bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa17475-717b-4e1c-b40d-4ae2809692be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62fe379c-b4d9-4b7c-8e7c-8713cff6fc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c258ea35-c4d7-431c-a280-1770dad4c571",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54ae88c8-86ed-409a-8dd1-a8bf15d460e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ffef2d-dd69-4e6b-810e-48a4254a9554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d8b7b7-98ae-4d49-97f3-470bfe044f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d7f849-e763-4cee-89c3-773773276485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1509c4-0c22-4e19-a174-659decbc04a4",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89d85d3-f2ff-49c7-9652-acb5190d10e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee78671e-33f9-4497-a677-45688f818496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d13fdd-8b61-40fc-989d-b27bde6c6613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eea49c21-2cb0-4bb1-a564-d679b2cddb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97517f2f-2f84-48f2-a0e5-52980f86ee0e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81aae3da-dd0b-46f7-9318-eb1c530c5f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828e6a74-e944-4e52-9f95-41f7b0cf2f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d66c098-6823-4c9e-8c50-815330537e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c8fa5960-7b86-4363-944c-a20ae25ce562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1495eb72-c59c-4ba6-b658-d6de4a8f4e22",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "588741fe-73ad-40c0-bad9-44d7642cffdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869b0f71-80fe-4196-8669-c95c332b7765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5307327a-8822-460d-8029-89195858dd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fb40c2a-6335-4db2-a22a-58ced7e0008e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc6914e-6ee4-4525-bbc9-f8e8bedd302b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca04de7a-df1d-4f89-9f7a-f4f285208c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1db993-3175-4610-9d69-6939ec043006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2194a4-5467-4960-806d-5edc40f2f871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee24881-47e3-42e1-bdb6-abb51e0cff6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e1d7e0-f764-4948-b83f-31f29bd3cde7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa79b5b0-8208-4c7c-9ecf-d22527a2de61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "43f19d81-7d78-420a-aa87-3818860278cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b57990-e887-419c-9a2b-36c954f695e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "71c9f4ff-d5fa-47dc-bf48-898a49cd5ae7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "80ec600a-e2aa-4c3c-a4ed-648d928511bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3649e545-ac49-43ac-b28b-848c4d912e7d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0dff45-da23-42ee-8b4c-a5ef3185f1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8cacdb7-5f84-484b-b91d-4c94c29d2d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328959a6-1d1f-4012-a09a-28ae25b7638d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62a0fc49-acab-454b-ae33-4f3803f0acd1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97dce5d5-d9b4-4ed5-b85b-b0240eff343c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b77ab6d-f740-470e-b180-184f0e8daeb6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "81c89f62-036a-4288-a924-cd518f85f5e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f34c6b91-b328-41f6-897c-947c024696a6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4a94093b-c1a0-4158-96f3-86cde533282f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ef45d6a-e78e-4753-814a-efd1e821a96f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "59446443-415d-4b6e-8e05-706343dedbc6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72aab92a-6788-4e18-95ee-1adf7898c9f0"
                }
              }
            ]
          },
          {
            "id": "8005d93b-3e3b-4f43-80d7-0313ebea4e04",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ef1543f4-90b9-4851-accf-aad65ea34052",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9d76200c-2344-4b36-ad88-eea648b0b105",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d88ffc-01d8-4951-b9e4-745724907339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a5b4fb8e-4012-4e5c-8e38-711a25768d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1012e437-0edd-437c-be55-7cfd47d8294b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bdd9ec4-dd27-44ef-97f7-d037bbd0fd67"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2f648e6-c4ec-42fa-9971-a18c94dd9e30",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e92f2a0a-07bc-431a-8698-d3b793b8e213",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad2e5e7e-027e-4140-bc65-942213ca08a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eea4ad6c-6a50-494c-a83b-7755207ee435",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0aea58a7-7131-4f90-9048-1ce266c9169e"
                    }
                  }
                ]
              },
              {
                "id": "abe20a79-d9de-4c71-a330-af647e295838",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df67ca5a-dacc-497a-bebd-5bc5581ed457",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "acb93105-4075-4baf-97c6-b4f1aeeb92ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1ec07d2-d68c-4433-a9ba-94543c759383",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca54a2f4-c1d0-4724-b941-38b2ebb810af"
                    }
                  }
                ]
              },
              {
                "id": "dd0102ac-13a8-47c4-b7a6-bdb805f9e0d7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07509ac6-789e-4003-8ae8-6e1ac7717d0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a0ead48b-7fec-42d3-adf9-be1daa33bad3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40fa2003-819d-4954-832f-5fd572449edd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2b595872-3065-43e7-aa7d-68a8a372acf7"
                    }
                  }
                ]
              },
              {
                "id": "803790ab-30b9-42a4-91d9-c60e018e6c8e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab9dbd81-56a8-4914-a84f-d2e8adf0f860",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5be1fe6c-057f-4272-bb5b-36348821d7d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1be171b-73e0-4fe1-92c7-5c4003db59ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "bfabfb38-027a-4fc7-bbcf-fd944a09ef39"
                    }
                  }
                ]
              },
              {
                "id": "2b7c3c45-fd07-42a8-af2d-09038e786a20",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7827c56-23c8-4fe9-bdeb-248993f47306",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "febc068c-ee3d-445d-b21e-249347f63d3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e87f835-03d6-41ce-b972-8475843a2359",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ccac62f7-76af-42c4-b52b-812562c88cf7"
                    }
                  }
                ]
              },
              {
                "id": "eb6f5c63-d46d-46bd-b20f-340fb9e39f17",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab984a8e-460c-49ee-94cc-fe5174c68dfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc133a4a-b696-4942-8d3d-b791ba3d65a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ea16bcc-472a-4041-a416-6dfd32516e79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57e393d0-3670-4d49-b427-5382e73f5d71"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bcee6091-c783-4cfc-85d3-af066f926a3d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "975893f2-e407-4abc-9408-88cd08d8b82c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5481a04e-e4a1-4b4d-be09-a818f342d4a5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a6a6140-ec35-4ed5-b68a-a5a96a51c364"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "210861ec-5e9c-406f-8d99-95835dc4da14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3ab85eb9-8550-4610-b5ff-af7d05f8ab36"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ee194dc2-7f62-45a9-984a-333de5b67ccf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1903809f-53ef-41e0-ba94-9afc4aac9907"
            }
          }
        ]
      },
      {
        "id": "ca8bbc4d-7f48-4478-a1f9-cb29661b22b5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6e3f3740-f1a1-4af1-bb9b-97969ca2a226",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ac75076-8e2e-4b4f-8a9b-1b54a7e56b9c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "923c288c-4709-457c-89ae-88d9757671ec",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa45724-3b19-405d-a1d1-d374786e4cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a355e0bc-b890-42fb-8d49-65937ac3ff13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378064f3-52db-480f-b94b-54782eab2f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b79ed37-2de2-4412-a373-1e8260c7736e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ff9aa0-8f4e-4194-83f7-aae2803602c7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "808bbeed-ee55-473c-aa9f-8614e0c5a321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f1f35c-1449-4be5-9b49-1755ea2cce39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee93ed78-ad68-47c5-94e3-72c3973af6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c7f8425-244c-4eb9-9a05-ae713675f272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38154fe1-5ad6-41c0-9c8b-284e42ce59d1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1358954-1985-4ab5-80a1-e7d188ac8579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9889b4-2014-4604-8492-25c1f5c23e33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791b7256-4ef5-453c-b563-f89cf364d239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d641f40-c0e7-4e77-9de6-d968f19fa28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dae6a81-437b-42ec-b84e-3aa46ab1d9b0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cf1dd8-2a08-43e2-9eba-31d3e66f199c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a903426-7343-43ff-a59b-eadd29bf3654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e87ac49c-6308-4c09-bf2b-e42a3393fff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbcb92e1-950b-4ab6-871f-e9bf82cb2f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b60b4b-d7e6-4a2e-bd35-10ea36bd8810",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d1058b-7365-4d42-af67-6af1429cdd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f59465-2147-4414-a591-43aa66118497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6362dba-4e11-427d-842e-d369843e6bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b0057cf-d333-43b5-9a20-8490c5428440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b755865-e975-470b-98f7-35bc89aa1748",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af73d5cf-c1d1-46fc-be3b-60631b32baf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b950fbe-f4ed-49fc-94e8-08cd9de271d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd32710e-0148-49e4-806a-87a22abf197a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b3badf-59ec-45ee-885a-202b238a19c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b1fee9-bd56-4a53-8368-4180e1eb71a9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f33da31-826a-4df2-b60a-d6c4d332747b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b94d6d4-dc1b-43d9-9cc6-4c1b1758b877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc1e815-b424-4561-84ac-0c310350ba1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d382740-a45e-40c5-af56-51ced9812306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a1453c-c141-4911-a956-3e012bbadc92",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a889d9-f26f-4c32-9e43-d9c4ae387ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc2d0284-a6a5-4bb0-91c0-c538dc7ce0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e89064-c697-497c-8988-e6831c5eb186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb875903-2743-4486-9b46-5ed5ffc5f552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41e6df7-dcaf-4635-b48e-4aab6bf0fb11",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223fab01-8e76-4258-bc1d-75b9a19ea0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd17389-4dac-485b-b85c-8eb19d2d033d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf673471-964c-4d71-ae00-a6fdc1e7aa9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a584353e-4c1b-4e64-b7b0-94e48a9ddc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc766b6-d425-48fc-a876-d46b89c1edc2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6283aa-4b7f-4065-828b-435a3fa7da93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7828a293-ec49-4990-99f5-53e5eb219302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc018337-b1d0-4afa-99ef-74a43d9d7fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea96e22f-5f97-4035-93fe-78df36b218a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cf0269-a706-4580-ac74-d5a56882d787",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "785c24f6-a311-40c5-a6bb-2c5f3a6efa21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55821e65-97a8-4b40-bd51-556d6cafdeb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138a4dc9-5299-4774-9397-5d91ecc57abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "345988c2-cc77-4d3e-8afe-637c3abb9fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3582e98e-d1b8-449c-8218-c1f4202a0f75",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cce33d4-acc0-447a-93da-7170e079f963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0c72f3-a86c-4a0b-a48a-609eb698957e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe851b58-ee76-41e0-861c-316f1572f38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad295bec-888a-4b1d-8924-966c8c228b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a187c681-f6ca-4af7-abc6-a93403301841",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b6bc65-0468-4ef9-9f8d-5d1b686cbf80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adce4ba7-e368-4d4b-8581-abc97316c52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd33d521-a777-42d4-ab49-c88f2b713bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3880bfa4-52f6-44e3-b032-00a3b683de7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97db79eb-414a-4bb5-aee0-5618aba7b978",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ecdad2-10d2-49f6-8eea-6f8ef1a599d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc0f94a-d198-4101-8886-627773e9e4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4a2994-2725-4eec-84b0-dfea5e87a5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "578fb6fc-ce30-41f7-bd40-4ce6090857db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa6ba4f-fc28-4452-9bb5-9e33e1f0424f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433a21b2-925b-4f2c-9829-e66fee98c4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54746495-0b34-4c3c-a7a2-8df3eb79deea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da06961-0bfe-449c-bcef-eb96d2004799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "37dc0ec1-22eb-46ea-905b-04e768c2c6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b071707c-bb50-42b5-8a09-adfa3b691583",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65845e3-0f53-458b-b68e-b42e1796c656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b586a21-4207-47a0-9723-3b43c4e67ecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd15d635-b235-4cca-8494-9ae4c53619c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef6025f-049d-4ba7-beea-06695b6e3f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa3cad9-75fe-4a7e-9389-a1070482c3f9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1488c7-9c83-43be-b321-d871e5bc682a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64b7be53-0bd7-4cc0-95f5-6a6f72ab63ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4399621d-50d7-4e36-9513-908b7e22e9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf800c7-4dd1-46d6-9ea2-2466d75c53b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ae3a6d-6df7-4312-b20a-dd2394f02b57",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eded652-ffa1-458e-a41c-cd5e9901a910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c763ee-b7f5-4f76-be8f-8e54cedd9188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3f3fc5-86ac-4138-8a83-9feb28e8e07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ada3b9f3-06cd-4260-8a3e-78eb5352a56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202a9821-d1f8-4717-854f-dce61316f6fd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005f6c33-472f-42a2-a866-dda51eab8ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b57fde6-47f6-42ca-b690-8213126d5c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839d01cb-3964-4178-9b66-3a034ead4642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78d21afd-0798-42c2-9ce1-3136f533baab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17762d86-e64b-42db-b4d0-25ee1b84b68d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308b4b0b-5d21-4623-ac54-5d1159ead388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa4eb62-82fc-49f1-9681-243028b6dab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2147ac1d-cd5d-4968-b0e0-dbae9d78269d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b497611-9c2c-4836-8490-308513440361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454d5bbd-b936-441f-9e71-b0cbbd0d3fa8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6c4526-0e66-4e57-b022-58630b4e6429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b0a4cc-70e3-4326-b7b1-441139137027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f3bc2b-1fc8-47dd-9a87-78a9c6ada2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e605dcb3-e36d-4e97-aae0-ab45338b9c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3114b53-64f2-4456-aad7-4566862b3dfe",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8208b8ba-c961-4969-b475-909828277eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4c15c1-b58f-4d5c-8557-64503ceec821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d058c9e2-234e-4572-afb1-4dfac4597c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "748afa55-bef8-4528-ba3c-517df3c7c345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e949adaa-7cb7-4b8d-b7e0-b65119bc1e86",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d302d8c-ccca-43a1-a786-65b2ba4eb598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d9b8d6b-c1ae-457c-9010-14ef5b842aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa61873-7ad6-4c42-b668-70672e5513ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c62b0d3-4833-41d9-804e-5c4a6603da1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e3a244-1053-483a-be6b-e1cf4c77bd56",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40891230-7889-48c5-b220-ed564f73dfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84b7a4e-e143-4b21-bdc2-c44341ee8ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53f0b55-5259-4720-b771-fba222c41221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "816eb483-68d9-4630-a198-9f30046b307d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a91b50-14ac-4758-ba0c-01203f354be7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7e611b-b480-41bd-b238-ab19922941c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82586ddd-74ec-4ad6-83cd-4da51dca34a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c7cf21-e7f1-408d-98ad-7c9d02b3c481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6116d07-0db5-4ebb-ba10-3fbc6e84ba3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002351d1-308e-415d-9af0-91142e7ebdcb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08661c79-6e10-4955-a490-20941af79ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90c2e52-8d92-4f79-9a04-c111cf32dbf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea96e67f-680f-40bf-9815-8206f1c93f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7da916d5-7b9a-4497-bfd3-7b739dc4e659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01f85a5-d8cc-4f87-b2ff-00c389010e12",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16f6615-f14d-4cc2-8984-ce492a52fd63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66978440-02ab-4cbf-9a44-c321fe9c3751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b0153b-5d7b-4aec-92d0-d9f3173ecbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f406277d-a84f-48ce-b4ae-b9f44bdea754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a37bef5-64e7-4214-9f55-ec00309b1ae2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01989eb-bc0b-4e2d-8612-392cb97a5c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0beb789e-7fe4-42cc-a4a6-5ebec107360e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69a26ed-68ce-4f0d-9882-b5667f8cf9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3c00206-99c2-4337-bab1-c4070dd0bfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc15a86d-1ee5-44ec-bb76-28bba77022d5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6e8b87-e342-40b6-a186-6e0197163993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf9076d-c03b-485c-aecd-66c0fac1507b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023addb8-9bd9-4c26-a673-6dea39e4039f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db2b5a25-7e90-43d4-bc01-de27fd196ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27e501d-223f-4f48-8e0e-be9af065e695",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86bc48b4-16a8-47a5-b757-d4abd453139f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9550f3-22ab-4c9d-8ba2-9f2e880b97e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d83d754-2765-414c-9faf-7667be5c3c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "656719f6-772c-4ea2-91a1-e7bb20cba0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5e44be-d6ef-4fba-b23a-1a4eb59a9fcc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2d2663-fb6b-4310-af32-292648c37d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f470c7e-8ee1-4279-bb15-05362a14f653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83402eca-3a53-4c0c-9b4e-cd7f55e888bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bac90d5-da72-4cd7-91f7-db6381e9a648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf868eed-a55d-459b-84c4-804434fb5cf1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3691f1-fa30-49f0-afe0-b49af3c256b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48019739-f336-4352-8b5d-751394a67bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80e9c88-5df5-4a3b-872f-016746f02579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16fb3dc8-c597-475e-b2ca-08eaf2e53288"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "96508cb2-4c29-482a-b6f5-fa3ff280e7ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89668f59-22ea-424c-a9e3-a686a12a587b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158981ac-ec73-433e-b9d3-cb5f9bdcbbef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "50b999b3-9e89-439b-bbd2-d29e026e6a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f7e7be-da25-420a-9875-bf22b3c7de54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02a300d8-6cbb-47d9-bf06-d82bdfa15a6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc3e25ea-60f3-4dd7-bb0e-97e9c16c7de2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73e49ee1-72bd-4536-afd2-7f92c4f27b27"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "018225a6-ac6a-4356-a9db-19fab3e28d93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b8408a9-3956-4dbb-9030-7a199b1f71e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a679281-a014-4461-a456-c22cef563496",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e16474fc-3d79-45fa-b58b-b7208105ef79"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "77fc6803-bf24-4684-9d05-57ab4a87e6f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a2609f55-4d5a-41ba-a325-f888e5665564"
            }
          }
        ]
      },
      {
        "id": "4fb3609e-dc77-47e4-afd8-9e626b50de97",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7f0a92c4-bcef-4c43-9554-d39564e5710d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49ced8c2-ac43-483c-8784-ae29c71a7e1f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c4cfce42-a98a-4cea-8ef6-88a541b4b26a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99058455-7327-46da-99e9-fa3912e75bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fda8d8a-c0a0-42a4-843a-abc208e4f426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b26dbe-825c-4e7b-868d-41424780bef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed45908e-df03-4290-9ec4-dcca2442aa59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869a42e7-1387-4013-9c3d-19d11ea3e995",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30089df-f1f3-4952-bf63-13ad32ac55b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96671234-9126-448c-8769-3e806aa7cf86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b580d406-6b49-4d00-be2d-bf12be0c5243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a695e7f6-73b2-4bd6-9e20-8977277044c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05591514-d9f6-4697-9c3c-765f13b70a27",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3a9f04-6531-4dd9-8732-5766d2df3940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36743426-684f-414e-8947-9e17167109d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b264f9c1-aea8-44b6-8458-2b8e8dd4621d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8c7118-e85d-4b7d-adf8-3d2bd0b76703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fb5353-6811-4b90-a4f8-02b4312ff1df",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e60c12e0-8830-42b1-98fe-c81ddc5b09f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469e735c-11bd-49e3-903f-5dac4c13f969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5effa7-c067-4c2a-9d28-432e3eb4a357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c953d662-2056-4313-8505-d320a04b9aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb9fd14-04b5-4528-9db5-9080176ad57f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d43a7bd-d408-48ad-b03a-615f98e86528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c0870e-d550-48d2-9407-1ba0512f13a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c4cdce-f5c3-4692-a7f4-0b2adb5ed6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "362f295a-c1a8-4e94-9e08-cd4db12a58ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3813584-4f9e-4b85-9874-4ad582a96fe5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d07b21-32de-4f38-9e72-ef965b2549d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c2a4d1-2375-4180-8249-3b1ca96bf326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd4f068-80b3-4f21-bc48-2b58a0345f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1420c600-962c-4420-8cf7-fbcf63961ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe2d71f-d732-4a83-ab6c-ca600712132e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10876aff-c64e-4106-91f7-bcbfefbaa871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2bf31b0-ee8d-44cc-a4c3-8559cd6ae5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc04f20-3c9b-4dcf-9896-cd9cb16b8403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "155cb203-9fb2-45a7-9ce2-2fbfd2f6c20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879f21fc-425a-41de-a421-dbb39681b6fa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5950022-0a3f-4e27-84b3-14491a1a097a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb5d1235-a08d-4060-8354-368e65cacdda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdb965e-fc13-4e9c-bc77-fdbaf411feda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "baddc1d5-29c6-4cec-8837-f15072f4e6b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eaecdb3-9b59-4c70-b4bc-abcdb800e5d4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090488de-77c3-46ed-9b90-0ed04a2536ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5ab687-51a6-451f-8e23-87fd6a248349"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0732c749-f2af-4610-bcba-3513e3af5291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "585e29dc-753a-4086-8124-c0075839bc16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5240c42b-5dd5-44c2-ae10-af5cbaaf24c5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268f2542-5db6-4138-ad2a-d2a8ee303c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c772843-104d-4a92-8f37-df14313bb0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45731fd7-f6fc-40ee-9c2a-f98f493e580a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3822981-71dd-422a-95f0-a8b5a2a7aab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c083d57-b1a3-4d06-84cb-45a369cec765",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbd6840-f563-476b-940c-d37fb80b4ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57364d38-58c1-46e9-962a-6304d581f469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d20974-db31-4b14-816b-e70e4bae2981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b4e8ff-05e6-4189-850d-834bbdba5882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a864ed-d947-4f65-b5e5-02d7be92835a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d07ad3a-6cf8-45c5-ad66-7f850827ac5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c5f1d7-1068-4f6d-b8a1-235ea3abb9c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde75292-9e39-41b3-b477-a1c1850492ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8782521d-512a-4bc0-ab08-a8c57b7b65f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966deecd-c677-4e4b-98df-365bbe98bf7f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d983cf9-f7e7-4d27-ab1e-57f9aa7e6188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "041f5163-a374-4fa0-89e8-29450b8a22ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cbd365f-51bc-4994-8d21-12d1e6bfb42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e67bc904-ad81-4203-b1b3-f5fafbc994fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c43d1dd8-5865-449d-a524-da64cf296640",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9de00f4-e55c-4ae0-b45d-4de2369abfa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be05abe2-ef85-4422-a488-08707868a664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00a700b-00f7-40d0-b752-32b82e56b2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "61cd17d6-5346-4505-9aba-2b2ed5ae9010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f9a874-f456-4512-881d-2bebc8edb22e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51aea199-2740-4fef-8340-3a24fc3320eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2a9093-6786-4ac6-bbc2-538e54e0a1cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec5e800-1a39-4ff6-9d44-b3420d2f0636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e98629ef-3438-4b75-893f-6a5b083156f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53c2905-557b-4a15-a12c-64f141b6b585",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8eae02d-349d-4784-a481-76ff20cff523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3046bdf-e837-4d64-aa58-56ed09ef0f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0c9e63-bf6b-43cf-92e3-90bb2b520d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "921e26c4-bad5-4bad-a795-ad05cd71149c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445df4ec-cffd-4c24-affc-4d684367867c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88bb203-f235-4aee-a8ff-205f83525941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fa0f9b-2975-4024-a141-527f844b2c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e671414c-65e1-4088-9a64-f31a0b86d912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7bedc68-7564-459b-a58d-ededd7c4441e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b51e31-67cd-4729-90b5-aea011321d2e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dafc1f-0d8f-478d-bbca-c08abfb4a697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fa5d78-e331-415b-9f4b-f26dcc005df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e109755-186c-4392-b5e3-de0735d3a79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9adffb72-1a5b-4643-aba4-659464241f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28c57fc-61b1-4395-b526-3d771596c1f0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52687fc-37bf-4f21-9bed-33f91e87f3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e2bbde-c53f-4338-a79e-fce3c2a9c6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6b5e759-fa8a-45ab-b0ad-e7f41c7a58e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0dbcdad-a4b8-42af-abcd-ce4626625982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f960bb8-5e6e-4e94-b58f-ebb2748acf97",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c43b38-84ff-44e4-a8b1-d4653f5dff63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88de6c4c-cf51-4592-ba60-d8ae5266ed7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f284b36b-9caa-4b7c-8088-51da5eef215f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "819397e6-26e1-4ee5-88a1-e670dd99edc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de360ab-5bdd-43cd-9935-0e873953bef0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93417085-a894-438c-9a87-69a338349221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "875a53df-5f73-47d6-9b95-5b789716952b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f00450c-0978-417c-904a-f224c351e2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c76f9b-9d16-4d43-89b2-fbcb9889bf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e50e99-a431-4527-b5cc-59851f9f7ae5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a5dc96-c9c5-49ee-ae89-ca9317f7b628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304d0395-1093-4221-ba0a-e7c394d9a131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3086da24-30e6-4a80-ae35-bba433c2d195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dec1431d-c9ab-4c85-a80d-2303fc07f3e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bc76c1-30d9-473c-8542-2c3a7874c895",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb2fb1b-3aff-42cb-9237-ebd4089951e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6413fc4b-491d-4dd4-bc56-ced008cbb9b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0c9ac8-5756-4579-b5a6-04c546cc300b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c35c2da5-478e-46b1-bb13-d892b3dbf300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89943530-dc4e-443c-a9d5-bb78150b319f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9833425d-232a-44c1-81b2-73abfd93a269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e903c8-73bc-405f-8a5c-efd3f7150e80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ccf40e-1393-44c2-b761-1a7116224e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b884479a-bc3c-4757-bd33-f4ab0e24128d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aaa10b8-e464-4d8c-bfe5-fcd42d05845a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d439928-8f35-43d5-ad41-3f17cd98fc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2277dbf0-4701-4633-bda2-a7fd69d4cff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3816540e-7a73-4d34-986f-4657d5914c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48f5cabe-f908-4750-872f-3d8787de0bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619afabd-0a08-47f9-8112-13c496c2f8dc",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f565971-0eea-46f5-a585-c0fb7f97f4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab45ba71-2bfc-41a7-915c-dc068f7af20b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aace34c4-55de-4fa0-8f97-ec5a0a04f827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6955f0f7-9d0e-476d-8b74-7a68981a339e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d337c9-527a-4365-95d6-5f1932c4d65a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "159883ea-3f87-44e4-ad2e-1d54760324d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68bc2366-2d0a-423a-87c6-3ca621117a51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3167036-a663-41eb-b6dd-a61bcc8e4765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "503362ed-42f1-4403-bfa2-1d4aa511b269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b499f59e-277e-4892-9c48-06bebff70691",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c6a2ff-b68e-4b17-83c1-ee9c4cb5395b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94157c84-157f-4f2f-ae81-92f2c13e9771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f235a2-66c2-44f7-afe4-ae5ac1b93b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd27a05-548c-418a-a317-d7970ccd8d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c4b323-11c9-4abc-8a22-df91f5ea363d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a67872-237a-4c95-a0bc-a5608efedbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c4b73fc-178b-42e8-b92c-389626b72e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed60cfd-9649-4fdd-9b79-774579da34fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3430494-0c65-452c-b6e6-30bfd3de4004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ac0f52-68c7-405b-9e84-9d6cb5dd0fad",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc73faff-7f31-4b83-97e1-95f3bb154b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f287ff4-b16e-4dd5-9f10-e1b82b83f9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abc7b46-e410-4eca-a830-db8dfcac93d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e48335-675a-42bd-bbfd-96a69528416c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fb7c68-f5c0-40c7-82f0-ee26e61b2b75",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "899b9f19-a89c-431c-a73b-c947fdd2734d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa57ce3e-44aa-4086-8dc7-79d30211a063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2940366-c8ef-4406-a9a6-34383090c7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aa7b69a-10d3-4894-9e1b-72fa8872c587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7507f4-57a6-4a02-8f2f-23c56d788a0c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942ee4d7-d8b6-40a4-ab4d-37a2f0700849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0b2187-844f-4082-9b25-88fce3faff42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572743f2-99d0-41be-b379-c463e7c1ca47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebac7795-e130-4140-9152-004d1e801f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcba4e8-dbb3-4977-aa7c-9708ac91b89c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1133ddf2-0737-42fe-94ec-c4e04669f552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0790b9-8f33-45df-a9a4-db12e98d4927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ad1103-eeb4-46ea-8127-ccaad2a629d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d5381a8-5856-4914-b8d6-ec86cf356f5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7838e406-9da2-45aa-9276-122bfcaa90bc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f799eda-51be-4ddc-8f56-06100d6c1f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdb7bbf-2c3b-4c11-a84d-65cc418b2223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73575a2c-5625-4248-8c4d-c85964599bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65c543b2-ab3c-4732-b54d-afcabb1f2714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09184b1c-97fc-4466-a91a-caf59a93b8a4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea5b27f-0e56-4b1e-b146-3f4fb050e7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e93b4ccc-ea2f-425a-b721-ee6a5e247d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de372e07-0847-47dd-85c0-635ffe7c4244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4247ffb7-82fc-456d-981b-92b23e092425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef42bb36-46b6-4fb4-beeb-1b4fe3ae5c41",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c577a0e0-f9b0-4819-9986-36d2b1f12708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49c8530-0a03-4eed-8af2-2de83a5ecfe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd111d3-c7a7-4eea-9c89-6d4619c48066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a7678b7-b319-47be-b39d-71bbd40ab514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08297f6-21f5-45be-a554-61aeaea72533",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18f5375-b231-42c7-9784-ad62276fa16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c908835-878f-4a6e-ab82-1e063622ac49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd801a90-f8c2-4cc0-ad23-06c58e31e68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b13ea94-1b10-4dc1-ab9f-f2646d86e65e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dd796883-f5c2-48a8-848f-8ebb1a11511f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cc5531fc-a279-432c-bb9a-758950257a3e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe037a57-ff12-4ee5-8e18-c21e726a62b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "85c05c38-bf43-4bfb-92b9-1ba284d2556d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2b11b3-2bde-418a-8bde-6024bcdb7a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af8bbfb5-2927-4091-9416-9fefa8e93784"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ad1223b-49b1-4f41-8185-de525f9cda9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7931b3f-7444-4ae8-9f79-2f5cd1f5de50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5eb208ab-793b-47b1-a7e8-acd4362019ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d12fb9d-fba1-4375-82d8-f6a621c6c094"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c3108e6-2c62-488f-83b3-a81509676aed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "732b5131-0a56-4719-b528-af7ec1adc3ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c41e0a1f-60b5-42f1-a66d-f7a2c1b1138f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9ae0583-985d-45ec-be1a-1fc95b1408ab"
            }
          }
        ]
      },
      {
        "id": "c2d7f814-4050-4c85-9016-c4de3db5ea4b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c8711591-3ed1-4331-b740-bde00ca99639",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4223e23-35af-41c7-9233-c074d9d1373f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "319f2129-bc13-44e5-bc75-dce41cc9fa85",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ede5193-980f-48e9-9ca4-d268e9a26c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93893283-da40-4f7c-96f8-2c3bdd432b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e33634a-92b4-4014-b46f-b78afce4be3c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61096218-2fd8-45a0-95a8-e8cfbb5ee1cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6aabd3-710f-43bf-b328-8d57d7542b72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbff270d-2c5b-4a47-8859-62f810c7eb37",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847ed7bd-752d-4fa8-be1f-8215c21715b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15872db4-ef5a-4cb8-b1b3-181c119ffa36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd0850a-ff34-4acd-9a25-92338acee1da",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6a3a69-88e1-4afe-b56f-3497e8ea4e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f945ac5-febc-428a-b90c-ef9c9274b500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147cf58b-357c-44d4-a9b0-dc361ffa18ba",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b4aaab-ccb9-4b86-9351-bb26eee7d4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9571c75c-d07f-4162-ba33-69457a9b1b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792cbc97-6ded-4f70-ab93-5d32a168a11f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0741974-5cf2-4e19-80a4-3523cfac956a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9afaf74e-efcc-4b05-93f7-3fab82daeeb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e07b1f-7b1c-4e85-96a2-40baba8e1c35",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac22907b-2de8-406c-8978-30e041b8f66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066f8075-24a4-478e-9562-17708d0aa058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83afc8bb-112d-4c07-8ab9-1aeb035da9b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417b8ae7-b266-45a4-bd93-79a4e5e51630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7857cda-531f-4770-acba-f41f5a2f7cfe",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257665af-43de-4775-8847-304f37227a33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe4ff6fb-01b8-4022-ba4d-fe2090e426c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d831697-f741-4a02-a1a4-10caadd780e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11018f4-0aa7-4d44-aa27-d15492f9877a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a8dbf8-8734-4ff7-9d36-34108ab7d12c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0b4440-d5a3-4bbc-9eef-30585950fcbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90a4c4ec-2331-4c8c-be18-eb90f4695250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a680aed3-738d-454a-9a1a-72073fa3f9de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666af9d7-e03e-4797-b282-a9dc57b84fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4255d950-8f2f-4d09-b26c-3ebda20dfe45",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4c6183-f972-4d2f-8eaa-8d2b82346502",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62f3fe26-cb82-4c84-97c8-a8da1dcec4a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b870085-0a8c-4bb1-8f6c-5dab65053e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5920c6f-20d5-4d7b-b435-3724a19a340d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af3fd3f8-9fe4-4bac-8a8c-2ccb10e0e45f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd863ef-f604-4816-bcfd-28af9b28b8b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b8a119-9d03-4fd1-a2d9-bd4be4f3062a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6755e3a8-91ad-46f6-aece-7fa8e6bd23d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d7466b-5481-48f3-997c-d1efd206c30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f09800e-1ed0-47f8-b6f2-9d1d05a00ac9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf2f215-7c88-441a-9897-7162796b1618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3493624-5726-41f2-b425-1a871b6da93c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3354951a-b2ee-4705-8d22-ab21c3bd2baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3bb871-3a39-4488-8dbf-1ce349421e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76c6bed-7d12-4229-8927-52217c68de99",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db8c944-b6c2-4453-9dcb-5b1cb2bd1fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "772a02fc-5cd2-4605-9586-28f5ab25cb19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4be3817-574e-4a69-a85b-953e98558599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed97359-ae47-48be-a53f-676dc3fed9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86787bb-bd79-4663-a250-5df52916b18a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f79ae3-c672-4f0c-bb9b-c23abc345de5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "338a6621-0a4e-426f-8d3e-e73a94146561"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d990de89-71de-48ec-a8dc-3d683e1ee007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29a451d-a68f-4048-a609-2693b174e17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43307d5e-deb8-4839-bd13-2c6ad5578302",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193eaa03-4087-4512-9e7f-746a963a2f98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "295bab18-d4b2-415a-8ef4-26573f829dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c733ec16-5321-48e1-bda3-c586d31ed9d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6300b91-3aab-41c6-88f2-831275aa9a1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f0c87f-66b8-41b8-a42c-70cf811fd271",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870eff88-8119-4fca-bf6d-48b78e7be64b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8facde68-a3e3-4301-bc51-fb2f1f4b44a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1815492-6307-449e-bd9b-3824e356354a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f19081-3d4c-4ae0-80f7-15364d1a41b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1bfcd4-44ff-4c29-ba62-ef35c1a8f559",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b489a4fe-300b-403a-98f0-0b2b2d7f9fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42827ea3-b109-4c23-a73a-49ef023c732e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb01cf5d-cfb1-4083-9a34-f6b2ace019f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d09c509-65fe-43cc-8f87-b8dc890bf102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b3037f-7fef-4ab0-95f4-d6abc71ba1bc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7531271e-8638-48a2-a2bb-095ec1c84074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15240387-6c40-4af3-bb35-8bd60b17c092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2b84ff-3f6d-482f-807d-e655f0d76f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a5a7d2-1ab4-4768-b94a-9619c37fda19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729bf853-93ba-4a5f-b33a-496ca3caf245",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb69a50-31a3-448a-b17a-d8ca62d97c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4e2ed6-3834-44f4-a569-e4639a22fa6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60b79df-70de-47c8-88ba-334dbb2edab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dcd9528-2626-4b25-bfca-44b843ccc890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae75ac71-84f5-4d1a-b3e5-82cbf5e0f816",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ccd645-7124-4cab-90a6-0ba6987964db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e11535-707e-4a72-adcb-76a079d89595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe03599-c5eb-4c83-a41a-1b75965e5c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ce8db8-eed3-419d-95c5-4ac28ea2876b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28e0d87-477a-4a96-9904-9fb5ad7c62bb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e8c73a-d3e8-45cb-b5a7-0dddc38ccce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60f5f35-67fc-47c0-8892-8ddf17a351d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fca3f25-77b5-4ae0-944e-49285ffd4e6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6cabff2-04e7-46b5-a4e4-18a410df632e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ff883a-790b-4344-a330-7e48ddd14f10",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3626fbca-095e-4cee-8f23-1bab4cfc7ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f85f2b-a62c-4e8d-a299-3ee6115ffa8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da0a541-f2c5-4eb0-b1c8-2dd17f5a2363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055bf244-cb8f-4113-b2b9-b26506c95268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644ae2d2-9de7-4910-9724-57348577e799",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98c4d3c-6a4a-4235-97a9-35a6f73896d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3bc6f5f-c1c0-4ee3-ba21-fcf14574deb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6d707a-4751-4269-833d-56e21a6b5b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04db4613-f95e-4b5b-8049-20ba1236fa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e7a3c0-c709-4059-8a1f-feb1ed915ad9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a6fac8-1d96-4d62-a5dd-89e33266b979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2db19d4-a82c-423d-8951-640fe78d0f65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78d41d4-a682-4185-b50e-283015290a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e22020-cb82-49ec-80ee-ba49dafeb7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc89deb-3aee-4705-b423-b17787cc6a1e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2d51f8-6b0f-4e12-87f8-ef760b98c721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75246676-c4d3-42b5-8f40-448d815ab92e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce7b554-4dfc-4d29-b4d5-f6ba3c81908e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1002052-9e8c-496c-9dc1-17ce9d936e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04106c4-5f1f-4a80-aa91-54ac0292feb3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c954eef-083c-4d0a-b7ff-9757232390f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f57efab0-2b1e-44a7-8019-fda6cb0c3f40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b578b196-fcbb-4770-b909-64bd2b3d8e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9421f040-3de5-4dd1-88d5-2a8f46cd611a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c6f05d-d384-4f44-917f-00da70746abc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e084e63-ce38-427f-920f-e5ea475a3841",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55116518-39a4-41d9-854a-2d284736f62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03720f4f-7201-4502-a17f-d14deaa7a7ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6d8c86c-fac0-4fdd-8a4b-7464b2e31f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d34f3f9-2349-4ff2-8155-047d8de4e6c2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82104415-f52a-4304-aa02-ab8ce9822d66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87d5ae4b-c266-425a-9e91-84eb3ce62868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfb1eca-b9fc-4e25-b59c-4263b0872b82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e679e4-8744-4567-a1eb-94e06168d74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6fa64c-8f15-4f54-8dff-a9db0d77a16f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6917a347-a281-4127-8a8d-d1a3cc910f34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7430cd00-5110-44d0-90ae-2e755c27aec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8894881-6322-447c-a06a-ef2e71c7ac78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44593077-c2e7-4b5d-a168-cf81216a4fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0164abf-84b5-460d-bf90-ae8e846e0f89",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c29784-6b9f-4534-b45f-8c2054704221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1973f17-8b14-491f-9f30-afd4941f9373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2396d65-fe13-4976-9b72-85682333df70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb8eb21-08c7-44c8-95c9-e0a122c00fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80723a9-ca44-4646-9018-603f3cc0d47e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e8e65b8-08f5-4e03-a222-f934a48f3773",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19463975-1f5d-4b18-bc3e-fc88fe8385aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acaddd6e-16c0-4c26-8e21-990c0e9a08f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41fe2e9d-e840-46c7-a2c4-4d898d09b1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7df38bd-3f99-4f3a-a52f-adf69ba67d1c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b204d0d-735c-4211-becc-00a2205f796e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77b292a8-23bd-467a-9c94-30d2afef9aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "307cf33d-46e5-4da1-a005-20e93ad1e46f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b1d46d-0ef7-4caa-b48e-9a46478c399f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d5f4be-d633-46d7-80fc-4bb5bf9eb48c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e22c21-f2cd-4b30-838a-f36776ef87d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acfd06dc-bff1-4aaf-a77f-14bb57d8e5b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad9bca6-78c5-48bc-88e0-bf4c06d5c9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f1a700-b8e0-48b9-9616-1dc196bbea77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd58c24-65bd-48a6-ac75-cd1b6b5f415a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "579ef493-9018-43f7-8979-735d6b83725e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d1b0a4e-c856-47bc-b687-4b73b79d4f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c6d3d3-9718-41a8-acce-bdd87b05b86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69402083-e810-41b4-9d7d-fe54234a6000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efea2dc3-2496-4d8b-8490-485c43313361",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909f4ecd-6352-4bfa-83b7-f014b56611af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e27727-cd02-4b55-854e-7f540ac5e919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "441eb470-1469-4454-815d-7067e015109b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a99a4b2-a1b0-4233-b42c-10e196191edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea52c105-e10d-471d-bfd2-0fbe0ab72957",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffea5a89-3fdc-4f18-9dad-0fb35ca64024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "450c94c0-04df-434c-967d-ccd56417efea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a317fb-314c-4f92-ada0-620139dd1279",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2407a8-59f3-4f69-b5cf-d227ae7710e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f7c3f0-7c0c-4c9c-abf9-3ef1c0f697f7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c53c98-2bf1-4160-9cef-16bde7c83627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38c57b9-23fb-46fa-b0e0-3e7da718d9c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7ec705-2054-4f6f-9ff7-ebe19caf369e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dda215e-eef7-4248-a75d-d8ddcefde1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08a614e-7c54-435d-a710-a622d662dc48",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cb673e-625a-432f-9875-ceac66517b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47e4717d-0f79-483f-969a-dd12140e9cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1febd1b-d414-4013-88e0-466f9b152af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a170bcc-b953-41d9-ad87-8778cd0ad53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64895ce2-9a42-4506-9666-916f906da2f2",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4639b71-48e5-4a02-872f-fdbaca9d8b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1248ea8b-4c9c-40a4-aabb-8a71bc0ec078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d667260c-81a1-4c99-9e36-05ecc97391a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa1b1d1-1efc-4123-b260-26ed19c8cf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce1f3c2-00dc-4d52-8e9a-cc92e62b52dc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0462852d-991a-48e2-bbb7-94bf027bf69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad778f5d-e3de-4a08-be98-6fbc697c0db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8733dd13-b034-4cd3-9b9a-6d0476f4acf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf51ede1-dd67-48fe-810d-7f479b511a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dd1edf-798f-4931-8326-02de74e783e1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a514dba-0a0a-499b-b495-718814a32e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84f2f8b-cfdc-496b-a3c5-43ca97c5e85f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e9b042-0971-488b-b832-e0cea1f5a54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a640dd9-ccb3-4c71-81ad-54a2589ddce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5649ed4-3de0-4411-abba-bb9a958b7d00",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecdb04b-31be-49c5-994b-fd4450d3ed0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0635586-08d2-4e33-ad85-c7e1e34811c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a9881a-531b-4612-ac2a-06d1fb2a5b99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4e63a1-8a43-4867-8eba-b215cc430013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bc4e84-0a38-4756-8a58-0afbef3ef298",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2085f1-7ec7-400b-bebf-b42ed9fd489c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a853a46d-e774-4b31-b709-ab5dd3c04b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45702675-ef57-4d60-a010-ce9326cf8452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9aa8078-1058-4b2f-90cd-413086d92a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed0a4dc-2f08-47d5-a9de-feedaabca361",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17ebe57-2cb4-4541-a3dd-3640f4c5432b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b1329b-c02a-4a5c-941d-34838090e247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f6edc6-746c-4104-bbe7-72607c21fc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca7a0ac-b6b6-4e34-b4b7-2aeaff2588c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc33442a-1b2b-435c-be0b-6b6afe02bd69",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0f08cc-6457-4314-8ba7-de8e7abc8d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656359bc-67e5-45e7-beee-9f1593fdf622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7aa921-bb45-414a-bb20-7a6949ce500c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf834acd-3c61-4c02-87a6-a2abd6ea9a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8131472d-3c0e-4c1e-a059-d0e55ce3d033",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2b83ba-3b84-42bb-a55d-abdd47f13d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e28c7e04-ee19-43af-bb65-16c75055dcff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1354ba4b-563a-4121-a503-4d3f6e7d6f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4189a92-6a3a-4b88-b6c5-54d29f5df7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7249d07a-41d2-486b-8e08-23edce58f883",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ede1f99-22d5-4667-a605-f89810eb1f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e4145d1-4cb7-418d-9a71-df36cafdec5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed8b187-9ac8-4c48-8a48-4ad931f76a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5588d5-277d-43e6-a8f6-4d5db62b55fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adf7064-42b5-4c8f-9994-97c47c52f4d0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238434ac-488a-4310-91de-2dfaa3294f38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1da37471-0a1b-4ee7-af47-0b8af220f173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b093072-e659-4849-965e-a02478c3e1cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ea6596-8f92-4e66-94b9-525c483b458f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0ec6e2-80f2-46fc-8f3f-2111feaca17f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6527d2a-45af-4d33-9e2d-24b25776478d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62470722-465a-4486-be5c-89977381db0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c721498c-f1e5-478d-bd06-376f36e2d20c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b721abc-6578-4c7f-a9a0-b306d225c628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a47122-6ba4-4db4-934a-628969ed39ef",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c979f7a5-4814-40d3-9aa2-670b80254041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887b9530-5562-495d-89f2-5774f62d0f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64da22b7-b454-458d-ad17-65cda966189f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "046ae65e-193f-420b-acda-adae4468e7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b11a149-772a-4faa-9c57-ec6c158d553b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad060b7-d3d7-42e7-9b81-6c4af26213c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7813336d-6ce6-41bb-a42e-d41a8b6f12da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97252093-f2a5-4731-a03e-bd12df4938fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f83ea3-5744-42de-9d3d-eebd6e555e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757d12d1-9dad-4c3e-9570-8f9a7a1ee16a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86dba29-05ed-49c7-9d18-e7019c866915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b550598c-a538-44d2-b6e0-ca3b60b475cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df6bcf9-61e9-415c-84e5-876260651002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fdec40-5177-4c6f-88fc-755b57ee62d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f74ae6-d168-4a8c-afac-e0eca8174245",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de76e2a9-c535-4c2b-af08-f9fc02116e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411bccc9-50d9-483d-8df9-c96c9f7432dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb9e97e-6cc1-4c04-bac9-e7f6fcf216b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2bbe3f-28c3-4b7e-aaf8-10870898bc00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4ad8cb-6d34-461d-ba6f-8eb5a2ff05a0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "383f1af5-c506-4fd6-8803-e176e1ae9db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "658b23a1-2875-4963-8225-c6094f3dd9d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "479ca84b-f950-430b-a662-de8d32dd9b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe34a43-58a8-4038-b2d8-6624501af328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12921705-f319-4a56-bd63-4b67b51dfbc3",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad4d85e-f5b4-4a15-ba2d-c46536d1bc99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b6939e-28a8-4818-be6a-dd91166cff69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2824a87-91b2-4f02-83fa-7fcfe0a08ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128f3225-e978-4cd7-92cf-4bc1ad417dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4eaf0d-5cac-435a-a284-922cbb599fa7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20078a87-e13a-4302-b7f4-5b1053f40b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632ca04b-323c-4af4-afe2-b345eca007b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bcc109-e9ea-4eb0-8d99-64636a360173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c2268d7-c066-4e42-bc4c-7a579d445852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60da8ba2-a64a-49c4-8def-02e0e47689c8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f35c56c-e180-4d02-a62e-4303e417c2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385377f9-52f4-48b5-858b-1a13526f8c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1bd18fc-b3c2-4e8b-9173-eb75c55120d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d73706-edc9-41c1-9589-761b0196a2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060ab127-a5da-453c-a984-a291ad68fc5d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cb870b-caa9-435f-9817-4e78d9a0ca55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4139ff15-b02f-4534-bf3a-1b191ddb04e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e31326-3827-4f94-938c-7d1cfa56121f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112be2c0-4772-45be-9a01-570433cc7855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ee4eef-d4f0-495b-b155-e17d1f3f181a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "236548d1-7dec-4dc9-9555-e6ad3fee3d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a255c1-5937-46fc-886b-b09bfbc217a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0e954f-7fd6-4dab-a918-4b907186f4bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b7c6ce1-2e34-4b95-86e2-1e124f7b02c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48aaef7c-aa70-4755-a9b7-907cbbcac021",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac306d5-9ac6-4d5b-b6f8-43449a70691f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76785ce-e43c-4284-9de2-c8946eee5650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc023c9-740a-4536-a639-a593828567e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27cffb39-b280-4f08-a4d3-c2d604b9549c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5475f3-46e2-4360-b34e-5bc3f82084b3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b421fde-3d85-47e0-9cc4-b9149f0fd87a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cdd9c2-cc2f-4597-a01c-a29eca65fe10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb9a985-701c-43ae-b8ae-568b806c47f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "671a7eca-a193-4845-a748-bf465dc9032e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36997133-d6e1-41a5-9556-f0414b4798a8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384fcc13-1b21-4d5c-8c08-e2bea02388a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224fca97-411c-4972-9914-8f6e493dc0c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d40c395-68ff-4570-909c-0b15cea38537",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2125f0-44d0-40d9-9ef7-73014b96b829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8fbf82-d73a-42b9-8e9f-45597b180ae0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2564e815-03c7-4d4c-b305-985a0d77cc14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8686a549-20c1-4fc4-a7ce-0c1b28b6bb52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7805ca-c2eb-4dae-9727-098e1664c0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f5c411-ec63-4986-862f-92e7ef2ba264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aebb7775-a5d1-4d7e-98c3-90775dce2ac3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec63bb1b-6efb-41bd-8081-6bbc68d110bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "734c3b99-be3e-41d2-9481-11152bdf2e7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2db54d-3b30-427f-bc5e-31859848a31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d99433c-22f8-450a-b72a-28cd8a2d83ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d0cf101-875d-4622-84d8-b4c4a2deeac4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3852e514-369a-4f7b-a455-573302844d9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62f5684a-1262-45a1-a2a0-18b272ffaae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75faa1f7-b9c8-4d0f-adc3-2dd6575e3cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89610735-4db8-4506-9998-8b26daede6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "715373f6-b804-4bc4-8523-6fa3bd0890b8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f857657f-fe43-4cae-983b-9c0385487cbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3d09ed8-d04d-4b7e-8a89-bf70bc79ef5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74c83d5-5ebd-4279-b523-44268eb4083d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d200e15-f2f0-4ba3-bb22-3ff3185cf0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20c23f8-66bf-4d0c-a683-f010718f6443",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f06039e0-41cd-4377-8c0d-e7da67916e6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5deca783-5178-4062-a79f-1945f3ca6998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9846dcaa-827c-4ce5-a02a-b13b6849455f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda44f67-9399-430c-b79e-fbed7d7b674e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "806b09f1-3053-44a4-9070-c0c45b2ab2c0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95df1803-465c-44cf-a65e-baea6dc63f3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88b543b7-f5ce-460e-b6ad-353938e1b21e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35dabed4-2739-4194-974f-8d3dadc3f311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f565da-a1a8-403e-b9b4-14b1f2bb4e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d117fa7c-e95e-4ae0-87a5-7f08f2abace9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423fcffc-1ad6-4660-a101-7843eced215c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94aab7cc-b616-4e64-a21d-87edc431465b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cf280c-e73a-47cf-9ddf-d658efcd121c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84fa1753-92d7-4267-a844-e98c76c900ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ca70b5-2a72-470c-80f8-906c62e31416",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2c8b6f-9a1b-4894-9025-1107aa61894d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b5b70dc-f20e-4416-9e5a-fe7ee740861a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc80686-8647-4c1d-a21c-fb022495d2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4550bf31-5a64-4d65-9af6-bf52f09058f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7506f21e-c80f-4f5a-8a63-0f95e2861981",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b0d774-7034-4d65-a86f-281916e4e693",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "510d6ee8-6a0e-48d0-876e-c2002ed3df5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6316b227-29b1-490b-9ec7-c7afc3a1820e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a47d03-f2cd-40b9-966c-515d72f0583e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a84058c-c155-438b-879a-fc7bdbc00105",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e299091e-143b-4420-ada3-04ad80bbf475",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff946ffb-3e12-4c0e-b223-871518fe29ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c385ea-3468-406c-8d84-4466fec2df57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5e1de1-7ee2-4411-9c42-a32dcda5a796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9bbb27-0b94-426e-bed0-1be0046b37aa",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93c237a-dd7d-406b-ade8-b454c8f6bf9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41b0631b-19fc-41d7-893e-703d1b483b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682f4ab5-51ed-443b-bedb-da63c3bf95ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ec5fd0-d5e8-4dee-9d4f-cb7742ebeb33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5416bb0d-35ad-4419-ab7e-18dfd77b19e1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14efcbcc-8929-471f-9a3f-aeff1e622c24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0898681-e502-4062-aa81-62675a6b4899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "505f2bc0-6e1e-4bca-a46c-9dd3e64e6489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6335a4c-c56e-4ea7-9192-9f3167c06713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbaf20be-d39f-49c5-9e71-6ce6dad71d6e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8989d9f5-1a10-436c-ac57-bbb48da506ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b27a16f-cbba-4d14-85af-97233e5f6557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56efc536-e30f-462f-a5e3-d30192e7adcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd21c6f-ab54-4bdd-ae5f-ec3ed74331fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377a5030-264d-4766-969c-cd88626d3deb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "539b9e7a-71a9-4730-8732-7a7a6db9fabf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d734b9c1-6414-4b1a-8721-34f128f28cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea0e989-38aa-4714-ad40-bdb604b780d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f2f894-2e5d-482c-b6ef-9bf2c68778d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c487092-4d48-4531-b143-2be76f495dd5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea0c192-55bc-4bae-acdc-fb985c62598d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea353c1f-8a6d-43c8-8d53-eec85866d8ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "156fc862-c0a8-4412-b139-9ede558d592a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26145546-0c61-4f31-98d8-3ea9b154b178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d779cf8f-e05d-4a85-89d7-7dda9d3a68a2",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14d5588-cc33-4125-9943-8a41a20e141f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae5fa413-6cd7-4427-8bcc-12b4305622f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89ea6c3-69d2-4927-a382-0cb1052828cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2070d480-be3f-401e-9003-cc82197458b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73140c3-6c31-4f86-854e-f843e43575f3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd1acf2-2fa1-4404-aa33-f44f6b265a33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63e0c5f0-5a9a-4d42-89b1-8e6d18e58785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845c7ae6-9342-4a71-816c-9b82bdbece5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae110026-c355-4969-a370-41abef41d584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b28c87-2912-4d7d-8c40-6ee0eeebd22e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ce7a56-9aa6-4a71-b7e7-41952d0b88e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "730f8bdb-115b-42aa-9018-b545b4438138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2ec15d-b19a-4a13-94c1-368efc60d82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57aefe93-c75a-452e-88ce-c645f90c6585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc764227-1a81-4232-8cc6-56847542c0f2",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92235b25-fb6d-457a-bbc0-2880a676e300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d667eec-df1e-481f-819c-6d7d6f13b3f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1343d0c7-f193-4ecd-bfbe-f3ab3c7eafea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d44fc1b-1df4-4315-bfab-a2734e437544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4190da4c-3a18-4af6-b940-95957a9684cc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626a52b8-7331-4504-99cf-effa79da4555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0462df7f-d79b-48e2-be69-94cbc36263ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c174d3-a129-44c9-95ea-5b877216bc6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2c2781-c243-4731-8e6f-9d0cb08e561e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ea5cdf-6f84-4170-a9cf-ab0ab2919262",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08df3ce-cd81-4d10-a8df-81b390670bb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b018457b-82c6-4566-855b-e38d36de3f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a8dfb6-06e6-4372-914d-7486c9fafb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d6a34a2-a098-412d-b361-abea415aebd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc3f40f-e93d-4a79-a704-dac99fe1ce19",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22d2b80-10c2-4cb1-b088-3cc0f72dd002",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08c40657-0c92-42ac-93d3-7f2b43dff83f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8563918-2150-4340-b0f4-3831b87fd1e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61fd00f1-336e-47b9-83f6-fa00c9bea651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a624740a-b885-4e0e-a3d9-51f65266a142",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3ad8e8-7118-49b7-9b78-5b72b9f0c162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bc19ce5-4c33-424b-aef3-91c3da6e2cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7286dd3-2e8b-433c-be7f-16dd0a2eaf1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "482efaf1-8af7-4c4a-88f5-5770a8a45ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b04999d-838c-4875-8ce7-15e0cab923c3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c6df15-9db7-4e05-9243-71ab7d7377c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecea96d2-d5f3-4135-9eb6-2897f7d32e9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b6d53e-c87e-4821-a396-acd08413220f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7b31c11-6cc1-4371-bca5-8edbf0cdf9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd29fdc-c193-4ed0-9b3a-4ca6aac37ead",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b069bfab-2d0d-43d6-9b57-1b645c4ee619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0a1ec21-3cb4-4981-8336-1d0e464b3954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "474633c3-01ab-4fac-bf9a-9e4ccf0f2ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c8b9dc-e8aa-41de-84ff-41bc88093962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec3258e-6355-4cdc-a439-1d4144bf9097",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0710275d-23c5-40c0-b2e4-3cee2ab39151",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efe19576-5295-4344-9fea-c27fe636918d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0179225-37f8-486d-be86-4ff2d60b2a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281b16eb-8352-4b3f-a281-945cc2713ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd38b9c-4b72-445c-a044-14807b195d33",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870759a2-9561-4826-b51e-08f3fc07fb18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d6802d1-e711-4b2c-8315-03244dcf0347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "861b1020-aefe-41df-9eb6-c6d65bd5f936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8265ff17-71ae-44de-af36-ed76ea07bc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce4d97d-0226-4b1e-8f0d-583c54354c08",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0db22f8-923c-4db5-9f83-97bbe19e1d1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a58e884f-a73a-43e7-91f6-6583fc3c8d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d556a3cb-5a92-4ff1-8cc2-32913849efb5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0610e014-2c8f-4bd2-91bb-58820554c153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602c8826-af3b-4966-846a-91cb944173b4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54a0931-3040-459a-bae7-6302cb9a4f42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce657057-61d3-4e20-bb30-3a5ebb9062e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec6ce47-517b-49cf-8b37-7787ad7101d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f58431a-a373-4dfc-89f3-2249e27c77f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4639311-871d-4ce2-b6bf-8e7e7d41bfdc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be59f9f2-17b3-40b6-96fc-9a4d118ab47a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "005a28ee-0be1-4470-a6ec-eb78fc76301f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c65027b-371a-426f-affb-e7d28d5606e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb33d12-3bdc-4d86-8734-d6443903a5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4be63ee-3eb7-4503-bc6b-0ff2b38fdaf9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80805056-fd1c-43bb-afa1-b4e60fcb31fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76330ff5-2571-459f-8cb0-db139f2b73dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804de59d-5330-413d-a048-543404dd7621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af124dc-8451-4bed-9eb2-0cf67050890b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94180208-8646-4639-a483-44e414eb282b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6da7399-178b-4970-a53d-2150c4846bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9e77e4e-b2cb-46a0-bd82-ecb39815d77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43887982-02cb-41ef-b51d-85ea21f13e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada27a4f-f9b7-4de6-89cd-2983d07dd31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d414da9-03c1-48f0-8f92-ce4f1020b54b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea76906-d7c7-40d9-bcfe-37b4e3737166",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83dca5e8-cde6-468d-81a3-2d59742fb7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53c5a0a-e836-4801-8892-d9ae9df0c02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c955ca-d8fb-4457-ba92-43f9719defc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea258329-4c6c-47cc-8d44-e14273171cf9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d254bbc5-47fd-4a60-b239-3f793558f492",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7056b738-50fb-44e4-8896-6b8afde4b8eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "217ae0a2-d003-43c6-b64c-49c6de9a67cf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6682905-35b0-4fd3-ab41-f702cac1eb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5514d3-da6d-49cd-9b9e-066605fa76ba",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec74fb4-91e4-41b3-97c9-7dd88a30be71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87e60780-34d8-4944-8b22-d75cfbf17d26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f36e670-d02f-4f1d-9677-b60cf40f8493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707eac5e-9df2-44fc-9122-f4ea5faf8cf1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8527b53f-cf85-4ee8-99c7-4e12b8220c5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bfba424-7cb5-4894-9e1f-3bacb2d4b1ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06bb49d6-7778-41dd-9f3a-b69ab7c672db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d71c426-f044-40ea-9945-cac55bb309da"
                    }
                  }
                ]
              },
              {
                "id": "76f2556b-ea60-4724-a2a0-02ace8506fb1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74c20006-40dc-4041-9cad-626de7378c77",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e7ed9e-2973-4c82-9034-47aea72c82fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0d46a19a-aabf-43ac-a203-c78fa87ca226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a46b9be-43f6-46ac-a6dc-8d92502e0eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d549d57d-4c13-4eb1-b826-f2fa941130bf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c42889e9-5a91-4bca-bf14-1363c5d3e806",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63564079-160f-4aa5-8b88-53acb89d5250"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7887181-e21f-4db3-bb6b-c46d3fd59fc7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "630cf68e-e474-40d4-a11c-49397e110fc6"
                    }
                  }
                ]
              },
              {
                "id": "8b070472-d15b-478b-a27a-7705f6916c93",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b0c9b722-a0b0-4597-9e19-01c00c5e708f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f821f67f-7eea-4d40-b0fe-3bac05795706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7fcaeabc-35e4-44cd-85b4-65d3723fec51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16176d8-e647-41aa-82ba-691e4e3b361f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "736a34a6-52c8-43f9-b8b5-769edda33232"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0e856b17-5b09-402f-9cfe-0fa4cc3181f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "05b1210e-493e-4b8b-b67a-86c1d8d3d98b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26030a8e-9199-47c7-81ad-b9dcf8dc57eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f54e6669-f352-4504-82ac-04bf18513ca1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "27f3c092-2e93-40e0-af74-bfbae4891d91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cde07c69-2b1f-4363-936c-983c6fa013e0"
                    }
                  }
                ]
              },
              {
                "id": "0b4f2888-3273-46da-b3fc-4d78cbd3ac02",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0cf78ae6-eeb6-45db-bc74-8b7aa246198f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d882f7e2-4cdb-40d9-8a84-ad5f2471dd32"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43854182-e8a9-4249-994a-35534d310c57",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f746c973-7a64-46da-a13d-dd97a4e57c5e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50f449b1-07e9-4f82-bb8e-f871e5d05419",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2ab6f9bc-d8c7-492a-9b92-ad615b0b80d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81b66fb2-7d7d-4ed2-bd80-7271abce3240",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "538d1b68-3b0d-4ee4-a767-b60ccd927304"
            }
          }
        ]
      },
      {
        "id": "57a17415-2ea9-4004-920d-9218f98d2c1b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e3e3b596-8529-4961-b8f7-2623d22df41a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d0574129-8d4c-49b4-b672-5f1daba9b232",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c453277e-6896-4c86-a006-9fd7e01ea06e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a81ec1f-4686-4db9-aefd-23d703326abc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "48416bdb-8eda-4814-a008-72accf378118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cd4b4e-4628-44d2-894b-fe277247283e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2e2ec2c-9e95-4ce1-b344-d8f262e4bc43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "88b8fe30-9e62-4327-b5e5-b51b178d2a86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8b86713-3523-4c64-8fdb-7163d581f484"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "283c647c-fdff-4ea0-976f-1ce842a9b455",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef3cae37-f450-47c2-b255-be0345568096"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d3f58b96-372d-4b38-99ca-f3c5131b92ae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b0422127-7147-4b7c-be59-5275d967da84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "24cb3807-1473-4496-a05a-ea0441a11ca1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65375b90-a8d2-4ec9-8a40-af0a87604363"
            }
          }
        ]
      },
      {
        "id": "77685532-9517-41b0-ae2b-4f51d339101c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2c1757c6-4f3c-41de-b0f1-d88bee20852c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48c81d52-f8c3-4193-978c-7defed5af281",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9db22b9f-131d-4033-89c8-43766e45910c",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05642989-5c7b-4c5b-a923-ae0cfed4f5a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6268a2ba-4601-436e-a952-9836c147eaf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bd9ef9-dfed-48a0-8911-fc8694030dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9d7e2cf-f128-416b-87ff-b7b75da0fad2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0058740-930b-415c-8645-d451be1472f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "110628df-a891-40d5-ab8f-33c08b93d96c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bdd67e5-ac37-48f3-b3fa-1e3852c06b48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b01fd0f9-236c-4cbc-af79-9de484a5203e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0191273f-bab4-4da4-b094-81a39b64325c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f856af21-3709-456b-a40b-f8c5cd69d5a0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87e75bec-6ab6-45f0-a11b-538cb5b8f580",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "838d8f94-8036-42aa-8a83-c70b523ae74c"
            }
          }
        ]
      },
      {
        "id": "7f14c267-d1dc-4450-b904-17d57599c2bc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "83271ee5-3dcf-4622-a651-66a39e84bb3a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c78507d-e385-4be5-8a19-7e1cc86cc3df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4bb9e3fc-182b-4307-b856-c2f650ea4422",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7e4fb7-0c10-4eb6-b47a-781f4aae7411",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48f05054-3178-4ad9-8879-b03c370efbaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c348d0-6d66-4f81-8c11-715a76ca39b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d56f1731-4fd3-40cf-937c-9b5f380fbda9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8335e64-86d0-4e7a-8fa5-3dca8589b0d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9afbf7eb-47ed-4b9f-b713-2d5c8f1e56e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45230c17-ec60-43fb-9c18-21afad4cc058",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb0fe59e-5e26-43be-b23c-ec724a280cf3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5fdebadd-0170-4d7f-9d37-ddd3d7cad3dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "65909786-ed3e-454c-a863-940175a1ec73"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6c79bbe-f0d7-430b-97d3-1145e15dc336",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bf5b452e-08b8-431f-8113-7e3225fa85c6"
            }
          }
        ]
      },
      {
        "id": "158053e8-250a-4f96-8f15-c11942c8fa39",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "76948e9a-cb73-4e84-9e89-1b95ea2f11e4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "45815c0b-39e0-4cb6-9f74-b74bab0b7e42",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "57acf064-bc19-4f2d-8870-dbf5bc1c8180",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df84b023-ca7a-4d39-b8f0-209c0a769e0a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffc17214-b1cb-4274-b2ed-7afdc274bd1d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 31.60350877192984,
      "responseMin": 6,
      "responseMax": 281,
      "responseSd": 25.44027725844918,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708994021823,
      "completed": 1708994039740
    },
    "executions": [
      {
        "id": "b732b2e9-fae8-4522-8725-a021a2a6cb20",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c854d9eb-00ff-4762-bfd2-ea5d79c6a54c",
          "httpRequestId": "39e00cdf-ce17-4bb8-b77c-cbe7a5da7144"
        },
        "item": {
          "id": "b732b2e9-fae8-4522-8725-a021a2a6cb20",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "76887136-3754-49ad-ada3-f28c8b4e0aab",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 0
        }
      },
      {
        "id": "aad1c644-aab4-4feb-91b6-3f7e7c9dc265",
        "cursor": {
          "ref": "1451916c-73b1-4595-ab16-5794a6cdba11",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bf3a45bb-7bf8-46be-851f-13cb949bb423"
        },
        "item": {
          "id": "aad1c644-aab4-4feb-91b6-3f7e7c9dc265",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "76f7bc42-1e9f-43d2-9a9e-b362c5bb2cc2",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "8b3b04e3-ad3e-4b24-86ad-399f41347d77",
        "cursor": {
          "ref": "31cf55df-c074-4734-a937-59ac15e3f68b",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "36268e89-58df-44de-b01a-ce0bbc93e6bc"
        },
        "item": {
          "id": "8b3b04e3-ad3e-4b24-86ad-399f41347d77",
          "name": "did_json"
        },
        "response": {
          "id": "bff34b84-0464-4eb0-96c1-2af45320a931",
          "status": "OK",
          "code": 200,
          "responseTime": 227,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bb3682-7996-4751-a221-31dd7316347b",
        "cursor": {
          "ref": "76723a84-199e-4c05-aa28-20cd0c83f0dd",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5d208235-0e39-4a47-9af0-9100e8c3709b"
        },
        "item": {
          "id": "62bb3682-7996-4751-a221-31dd7316347b",
          "name": "did:invalid"
        },
        "response": {
          "id": "4e8d291e-322d-4229-868f-fd8602e3c863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bb3682-7996-4751-a221-31dd7316347b",
        "cursor": {
          "ref": "76723a84-199e-4c05-aa28-20cd0c83f0dd",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5d208235-0e39-4a47-9af0-9100e8c3709b"
        },
        "item": {
          "id": "62bb3682-7996-4751-a221-31dd7316347b",
          "name": "did:invalid"
        },
        "response": {
          "id": "4e8d291e-322d-4229-868f-fd8602e3c863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f6841b-4efb-4e23-8186-dbd693130dc2",
        "cursor": {
          "ref": "9a0cb8b8-518d-4457-9270-ecebd222259a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dfeda530-ab1e-4d8d-b3d5-4e91a64b43d0"
        },
        "item": {
          "id": "d1f6841b-4efb-4e23-8186-dbd693130dc2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6a6b0b9f-62e0-4d38-a421-670ee1059f4d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 71,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea1c374-6733-425c-93db-99ef75fa0086",
        "cursor": {
          "ref": "a99a6335-f3fa-4cd4-9000-a40a4f05b89c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "86f69a86-4300-467a-b794-4ee903ccb3cc"
        },
        "item": {
          "id": "8ea1c374-6733-425c-93db-99ef75fa0086",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "57ee96de-fc09-410a-8099-54468cfcd2ca",
          "status": "Not Found",
          "code": 404,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e485ca86-d4cf-4b99-a4b3-dd33a0011e1c",
        "cursor": {
          "ref": "8656fb45-d590-485e-afa7-af54630037c1",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "de74f682-cff5-46ec-8edd-1101c5f20bf9"
        },
        "item": {
          "id": "e485ca86-d4cf-4b99-a4b3-dd33a0011e1c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "306237fb-e7d4-4a16-9199-3d4e665a8ff3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507f175b-b7e8-4403-b5a8-9d58b97e4dcb",
        "cursor": {
          "ref": "5ada4bd9-e3e3-40f1-98ec-f8b34489371c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "72c8f069-7ccc-4d67-bc88-a2f97d810304"
        },
        "item": {
          "id": "507f175b-b7e8-4403-b5a8-9d58b97e4dcb",
          "name": "identifiers"
        },
        "response": {
          "id": "6a7e6e79-ba09-4af4-96f7-31084f8b7d3d",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa67b75-e1db-4637-9449-92f4e9774ef5",
        "cursor": {
          "ref": "b18a1acd-602d-4056-aaa2-4db23055ed41",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "866453c1-61db-48d0-ba12-03f8736088a9"
        },
        "item": {
          "id": "bfa67b75-e1db-4637-9449-92f4e9774ef5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "86b9bcfd-b514-4633-bc5d-e74e820b30ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30f34bc-fdd3-42e0-ad93-34ff760434f7",
        "cursor": {
          "ref": "27ee1548-455c-40b8-94c1-dbc9428b0188",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "06ea9c43-14be-4c29-83d0-15e26be0f26d"
        },
        "item": {
          "id": "a30f34bc-fdd3-42e0-ad93-34ff760434f7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "37bb86df-66f9-4cbf-9b7f-b08faecf4c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1d7ca4-c050-4576-9d30-92ed009a74e9",
        "cursor": {
          "ref": "ced96752-827d-4635-b66f-77e68577577c",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "66f1964c-5e83-499e-bcd5-2e6fad629608"
        },
        "item": {
          "id": "2f1d7ca4-c050-4576-9d30-92ed009a74e9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "58cba465-0421-4273-8d3b-8e3fe58a11f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d4f3cf-c368-4610-a03d-3795047894ea",
        "cursor": {
          "ref": "d2851d6b-19dd-4b65-914e-ca88256ee626",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c2e866b4-4620-4559-a868-6e7dbe1aef41"
        },
        "item": {
          "id": "26d4f3cf-c368-4610-a03d-3795047894ea",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "98496fbe-cb4b-4f45-a6a5-afa404c81ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6951e7c-d234-4886-b995-415761133cf1",
        "cursor": {
          "ref": "fa21f801-3f63-4348-a127-57b4ea91b06a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1ead07e4-f992-4007-a345-b04314102522"
        },
        "item": {
          "id": "a6951e7c-d234-4886-b995-415761133cf1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7b2caf76-a039-46d1-af27-9fc2e513361c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1435423-6425-4ef2-a86e-6669df9fa4da",
        "cursor": {
          "ref": "35bca7c9-335a-4a02-859f-4a52a996953c",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "89fde208-8990-48b0-820f-02074dd93961"
        },
        "item": {
          "id": "e1435423-6425-4ef2-a86e-6669df9fa4da",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4b241a10-10c0-42f3-9596-1851e5f5943b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71704177-09a8-4cce-9539-197b6fad201f",
        "cursor": {
          "ref": "46e6937e-263e-43b2-9068-0c80d676666b",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3ad76b6c-cb81-433e-9017-9174a8558fea"
        },
        "item": {
          "id": "71704177-09a8-4cce-9539-197b6fad201f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ae81d103-717b-48a2-9c1f-31fd1b1f332d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b418893-38e3-4ff2-bbd9-f9ae49a5967d",
        "cursor": {
          "ref": "4c59b2ce-f41b-4dbc-9fd2-29dd01a90778",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "75e1ea76-f5a4-43f2-92c4-392b8591be7f"
        },
        "item": {
          "id": "5b418893-38e3-4ff2-bbd9-f9ae49a5967d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "10e48447-6ffe-454e-9793-e522f136e35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84447e2-932e-4f4a-8e6f-c479faedacf7",
        "cursor": {
          "ref": "b93fd085-140a-43ba-b23c-4c90b19b507e",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cf12b40a-66e6-42b3-9c68-11965f3ea2e7"
        },
        "item": {
          "id": "c84447e2-932e-4f4a-8e6f-c479faedacf7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ebd51c46-7c17-4208-8e7b-3ccb534c9e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246b9f17-cb3b-4a8f-ab24-e4fa4d88c611",
        "cursor": {
          "ref": "80c29c43-897b-45c3-8a2b-a18f26ff2cd0",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8903cbd4-6dd0-494a-8d23-4239182f5dfa"
        },
        "item": {
          "id": "246b9f17-cb3b-4a8f-ab24-e4fa4d88c611",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fd5b3797-4fab-4696-836f-b8fef8cc2a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdba809-3e24-4285-8998-99600998acfe",
        "cursor": {
          "ref": "9e9da207-569e-4543-8701-b1d03619535c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5b59a57b-530d-47a7-a810-95505ef01ef0"
        },
        "item": {
          "id": "0fdba809-3e24-4285-8998-99600998acfe",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5d9686dd-2292-45c2-b03f-e1225567ad25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c163fc-13bd-4d7a-bfe8-b01d5f554241",
        "cursor": {
          "ref": "288c0562-8529-4d0c-af7e-bd6bc228e3c1",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c4cf1cb6-e117-4abb-b2c5-d0a489cd4315"
        },
        "item": {
          "id": "42c163fc-13bd-4d7a-bfe8-b01d5f554241",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a76e9105-e1fe-4e2b-b351-7c232894297f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef468a43-67f1-48e8-85da-eb5d34f33130",
        "cursor": {
          "ref": "5909729a-2d25-4304-b7ca-77e4c4bac1b7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d2d6cd14-ee97-41ef-9b83-f9550fa46abf"
        },
        "item": {
          "id": "ef468a43-67f1-48e8-85da-eb5d34f33130",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3dc81b7f-ed80-42be-b189-d7f9e9018d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b021b75-9157-483d-a1e6-4535cbe022a6",
        "cursor": {
          "ref": "20f5c608-96ea-4eb0-9580-955c51777f52",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e01e5d81-0c7d-4abb-862d-91f5a43d91f4"
        },
        "item": {
          "id": "6b021b75-9157-483d-a1e6-4535cbe022a6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ab381bd1-fbb5-453d-a6c3-6ba874e11cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5ea226-07b8-4e02-8f94-1ecea21e03dc",
        "cursor": {
          "ref": "d8d61bd4-4eb8-4cf6-841a-cc618ab9b359",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "820fee4f-3612-43f1-a870-4636db31b131"
        },
        "item": {
          "id": "7f5ea226-07b8-4e02-8f94-1ecea21e03dc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b6550365-854b-4f8a-a79f-7e570135ab8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2d4773-f821-4552-a8d6-9a247d99b5c0",
        "cursor": {
          "ref": "145e840c-792e-40c2-8510-804e2a3af940",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7321242d-794a-4eb7-b799-f051eeac5dbc"
        },
        "item": {
          "id": "6d2d4773-f821-4552-a8d6-9a247d99b5c0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "996c6113-dd12-4914-a8a8-977dfb1f653d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adef092f-ff97-4a5e-986f-3fd578dcabb6",
        "cursor": {
          "ref": "b7334d94-fc45-447e-97da-42dad11843a0",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7eb4d83d-648b-4fb6-8e68-2d5fd37bb107"
        },
        "item": {
          "id": "adef092f-ff97-4a5e-986f-3fd578dcabb6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "21f3ce61-eceb-4988-964c-51fc8fe84053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8204eb55-720d-4039-a2ae-aa675cfaa266",
        "cursor": {
          "ref": "08f1d935-6c98-4c4f-b6e0-7ebf30895ca0",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5ae051f1-85cb-4e03-a756-947fae03dcc1"
        },
        "item": {
          "id": "8204eb55-720d-4039-a2ae-aa675cfaa266",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e9f6340e-e6da-4659-a44b-cf54f846c692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c808f8a-aeec-4953-b6a8-48db57fa2edf",
        "cursor": {
          "ref": "a99ec1c2-128e-4e38-8074-5c8c59db6a20",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "bb373b31-6304-41f1-b5fb-1aec3f09a11a"
        },
        "item": {
          "id": "8c808f8a-aeec-4953-b6a8-48db57fa2edf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "83329fc1-1a4b-42ec-9f36-db237bd8e451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09989e0-aa35-43e6-ae82-69af845beb63",
        "cursor": {
          "ref": "64dc5049-96b4-48a2-b771-d8134462302e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "3536230b-eb9e-4388-a015-25c91d66b98b"
        },
        "item": {
          "id": "f09989e0-aa35-43e6-ae82-69af845beb63",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "83e4a207-2e4d-43cb-9290-8fdb95c95ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6198a6-0912-48bf-b73d-fa2d0094da50",
        "cursor": {
          "ref": "a0902880-5afc-4c10-a2d1-cae8f4df25ef",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "11f54858-278a-4466-b964-b05462143f1b"
        },
        "item": {
          "id": "bd6198a6-0912-48bf-b73d-fa2d0094da50",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2d1ba049-71cd-4b10-b294-da96152781b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea7e211-6a5a-4aa6-8e97-98597e6566b8",
        "cursor": {
          "ref": "298b2f54-2cfb-4d73-b090-0f1cc19fde4e",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2379a08e-ce1d-43ab-8017-cb41a13ec2c7"
        },
        "item": {
          "id": "6ea7e211-6a5a-4aa6-8e97-98597e6566b8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "abf159b3-d023-4e0d-93fc-2ada8ac37a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f9baba-9c91-42e8-9d69-6f2d29946d02",
        "cursor": {
          "ref": "9de3e876-e1fe-42cb-889c-5690f171911f",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ff92090f-6e24-4e96-b00f-97a8f10bf1b3"
        },
        "item": {
          "id": "95f9baba-9c91-42e8-9d69-6f2d29946d02",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5e0281d2-e32c-49f2-b733-d529c8c56aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdb3499-ac0a-46da-bf74-272b0681c6c0",
        "cursor": {
          "ref": "7d0deca3-eb8e-496b-9a5f-3ee465f24fd7",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "753035db-004c-4de7-9ccd-4b940d275922"
        },
        "item": {
          "id": "5fdb3499-ac0a-46da-bf74-272b0681c6c0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "18cac562-1bfb-4d9b-8b68-3d9bce5a4c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee4b761-fa08-44c5-b1b1-5b63add93764",
        "cursor": {
          "ref": "f9a71609-9a05-4ac4-942a-6bcc64044030",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1cfd80e8-880f-4da4-9b1e-200d3c3a59cb"
        },
        "item": {
          "id": "eee4b761-fa08-44c5-b1b1-5b63add93764",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "79da1d4f-42ac-45ca-8abb-05bbaab3b72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d4ebfab-bc8e-4a08-b456-90e40245d7a3",
        "cursor": {
          "ref": "b1ab31ea-d14b-46c3-bed5-f5da08e6d647",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "04c7f80a-5492-4472-8672-46644192382e"
        },
        "item": {
          "id": "7d4ebfab-bc8e-4a08-b456-90e40245d7a3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "34d19f0f-6c81-446c-9137-00246e2727ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7249f7f9-3b75-4f81-80ad-2d47d0762f17",
        "cursor": {
          "ref": "555999e4-b021-4ccb-b1d2-ff63e894e196",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d5d276c8-e417-4d0e-85a5-f9302b089db5"
        },
        "item": {
          "id": "7249f7f9-3b75-4f81-80ad-2d47d0762f17",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "af57dba8-0783-4c81-943e-ce0932d86092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487efee3-23b3-48f0-9e23-d677f7e8f7b1",
        "cursor": {
          "ref": "df5b1413-678d-434d-8039-749cf1393dc3",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "10f8f274-cd20-4135-8369-af5d568e8edd"
        },
        "item": {
          "id": "487efee3-23b3-48f0-9e23-d677f7e8f7b1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4f2c3d9d-de47-4367-91cf-e956032f6b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7b1bbe2-f864-4a5a-9689-1c1f82f17e28",
        "cursor": {
          "ref": "016181d0-49ae-4e40-b626-07f701d776b3",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5316abc9-4b0e-4c93-bb0d-5a051d415c66"
        },
        "item": {
          "id": "f7b1bbe2-f864-4a5a-9689-1c1f82f17e28",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5571cf96-f5d4-4106-810b-4f1be5f00adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8112516-62b8-469f-a530-91b119fa310d",
        "cursor": {
          "ref": "25821865-1baa-4919-a8a9-5fb38ff981a6",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c17482bd-2bbc-491d-9ce5-7958ab42f59b"
        },
        "item": {
          "id": "f8112516-62b8-469f-a530-91b119fa310d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3eb80dc7-1e62-4308-9405-f7fff9f94874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c67c5d0-a340-440b-b5bd-3569ec4319ef",
        "cursor": {
          "ref": "5dc266ca-f626-49dc-ad5a-6277c0821aa9",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b25ceb92-b468-4611-9dc9-99bcd5080175"
        },
        "item": {
          "id": "1c67c5d0-a340-440b-b5bd-3569ec4319ef",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ee88b5ea-cd4e-4588-aa51-47b16f1e7ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13126fc6-5033-4492-9b85-c25ad89ddfc8",
        "cursor": {
          "ref": "6b32cf7e-d372-45b9-a470-83b634e70e2d",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "489cb671-a666-44d0-b0c4-2717ab2bddfb"
        },
        "item": {
          "id": "13126fc6-5033-4492-9b85-c25ad89ddfc8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "71caa7c4-0535-4bc0-8821-fce28cb5b5f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5906b26-7f84-4edb-adfe-9f30b7dce6a3",
        "cursor": {
          "ref": "96d06f31-dd69-41d1-9a50-ae387c1b190a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "51330c34-509d-4d1c-b67e-75bca831a58b"
        },
        "item": {
          "id": "d5906b26-7f84-4edb-adfe-9f30b7dce6a3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d6efacbf-2f02-47a5-86bc-53dbe0874b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c522242b-f583-4db3-a9b2-1d39464864e3",
        "cursor": {
          "ref": "f104cb9c-0d81-4d2f-91e9-95cd467bcb5d",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4e69982f-6b48-4cad-a8c5-782c2f4f93c8"
        },
        "item": {
          "id": "c522242b-f583-4db3-a9b2-1d39464864e3",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3f257697-2869-4162-a5a5-afe75f3bc113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99e0e5d-8a16-4eb8-a6d1-92467a6fc729",
        "cursor": {
          "ref": "43fc5679-0ce4-478f-aa93-252f1159bfd5",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e804ad3b-f959-4819-bfa3-3af9361e2a50"
        },
        "item": {
          "id": "c99e0e5d-8a16-4eb8-a6d1-92467a6fc729",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "286da5be-b622-4916-a1c0-3dd0bf75c2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205b684f-9b05-45b2-b9ce-59691299c767",
        "cursor": {
          "ref": "23036e23-d0d4-40bf-a55d-9078038567b7",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "93c86d48-56e5-4593-bf54-050e98cd03aa"
        },
        "item": {
          "id": "205b684f-9b05-45b2-b9ce-59691299c767",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5a2c78e0-841d-4938-aee6-f4001b773326",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 52,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22b4a40-c235-49a5-88d7-07642b010524",
        "cursor": {
          "ref": "efe44cc7-9a96-4340-aa28-a19d49fe18bf",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "614e4065-e4aa-44c7-86bc-e59759e6fced"
        },
        "item": {
          "id": "b22b4a40-c235-49a5-88d7-07642b010524",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "476c1ae7-6a45-436a-8a50-f3180d4f5d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb83655-bc21-424b-81f9-4ca9e9af9d0b",
        "cursor": {
          "ref": "57d5d417-889f-4031-a993-c3a050c337da",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "07975bf5-18e2-403b-a30d-1f252d3199aa"
        },
        "item": {
          "id": "0eb83655-bc21-424b-81f9-4ca9e9af9d0b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "13bc4f1e-352f-4a88-a26f-e3a856da941f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e677a4ae-87a5-4d0c-a5ca-70adb9c41255",
        "cursor": {
          "ref": "09b22f34-a118-4cbf-9906-dc01b5d01b6b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1209d849-71f0-4ea9-8224-7aaf67230687"
        },
        "item": {
          "id": "e677a4ae-87a5-4d0c-a5ca-70adb9c41255",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "735dab57-2562-4b1f-9a47-72e430b4b485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b757d95f-2286-4a4d-8b26-4abfd07ef82e",
        "cursor": {
          "ref": "15dac5d6-605d-4820-b53d-57517597a285",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "93365d58-2d26-4fc9-a950-923ea148f033"
        },
        "item": {
          "id": "b757d95f-2286-4a4d-8b26-4abfd07ef82e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "13a6c479-54eb-4611-b2b4-5f3c5153d152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36b883b-9cb7-4eb9-baa4-441cb81b07ed",
        "cursor": {
          "ref": "8df059f0-fa86-48bb-af9e-5814844d4d8b",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "983a795f-0acf-4aa2-b246-9b58fcdc8883"
        },
        "item": {
          "id": "d36b883b-9cb7-4eb9-baa4-441cb81b07ed",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ce7ad8e6-a55d-4ce7-b969-3b89e1ce6d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b31e543-133d-4729-a58f-198ad0ad9b30",
        "cursor": {
          "ref": "3cab2be6-f28a-4fa8-a527-5ff2dd360e44",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7305a5ef-acb5-4b5d-b4fa-d28b7c3a8523"
        },
        "item": {
          "id": "0b31e543-133d-4729-a58f-198ad0ad9b30",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4528ad78-a78e-4923-a532-2948ab372ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88638bd0-6380-44f2-a69f-531ae5d4ef5f",
        "cursor": {
          "ref": "43db687c-01ea-4aa5-9626-eb6775642a00",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1907fd28-201f-40b2-9ca5-19b26fd77020"
        },
        "item": {
          "id": "88638bd0-6380-44f2-a69f-531ae5d4ef5f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "68f0db55-b71d-440d-848a-6825519a7219",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 40,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb59039-234f-48c3-9052-06f8ca139699",
        "cursor": {
          "ref": "3b15caef-2fd8-47e1-af2f-cacace7e503b",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f5888007-2e13-4b0d-9936-2c15073f45d2"
        },
        "item": {
          "id": "8fb59039-234f-48c3-9052-06f8ca139699",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "012ba156-2b57-4ac6-a2e6-c5aa2f22dd67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc51d97a-52b6-427e-b352-ca789daff77a",
        "cursor": {
          "ref": "0d590316-f64e-4a60-b36b-f85e47234228",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "44faa863-2a71-4d37-9a19-f479b7fd128c"
        },
        "item": {
          "id": "dc51d97a-52b6-427e-b352-ca789daff77a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8026e19a-0bfa-49b8-9535-bcd44e1f4e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d46e3b1-1b66-4e79-ab5c-6a152a613523",
        "cursor": {
          "ref": "45a8be99-2722-4c96-bb1b-87d27cfb5f82",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "58d5e73b-db54-44ec-b0cb-8de459ee4c00"
        },
        "item": {
          "id": "7d46e3b1-1b66-4e79-ab5c-6a152a613523",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c38ec508-bd6a-4843-ae61-8f5bf9796ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2d88c3-10f0-4c71-ba73-15ab845d16b4",
        "cursor": {
          "ref": "09724b32-5dc1-4156-b19d-453f7b067f01",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7c9e6198-2bba-4cf6-aa5a-fa2a14755aba"
        },
        "item": {
          "id": "eb2d88c3-10f0-4c71-ba73-15ab845d16b4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "583b962e-c2df-4f65-8117-a12ca7ded668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e759563d-fa6c-43c6-8d68-80dce9048d9a",
        "cursor": {
          "ref": "205ce48e-36eb-4ca3-9b06-5f2f27411a3e",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "145df5c9-7c2f-4882-84ec-3ed7613b3816"
        },
        "item": {
          "id": "e759563d-fa6c-43c6-8d68-80dce9048d9a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "97bed817-676d-4c2f-9b30-ff077165da86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e272ef-6285-4b25-8cfc-5e39bd1519ae",
        "cursor": {
          "ref": "3244d810-e0a0-4b2d-a754-2b346fdf515c",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "89d166a3-8e2f-466a-a26e-50112cb70f6c"
        },
        "item": {
          "id": "95e272ef-6285-4b25-8cfc-5e39bd1519ae",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5bac9acb-2451-48da-9777-4518b9ee01f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1f53fd-53fd-418f-91f3-bad910bdfb99",
        "cursor": {
          "ref": "ccb81630-62a2-4be6-96a9-242875c56bdd",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a2cb0bbf-51c3-446b-8ff8-2718521762e9"
        },
        "item": {
          "id": "8f1f53fd-53fd-418f-91f3-bad910bdfb99",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5eec0b50-8d70-4ff5-a338-c7a46bdea12a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f30054b3-94d9-494c-ae49-54df05a966d4",
        "cursor": {
          "ref": "3ba04192-0b9b-4122-9948-77a40936badd",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ad8dffff-8a8f-4860-a8f5-acd8f77dab63"
        },
        "item": {
          "id": "f30054b3-94d9-494c-ae49-54df05a966d4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8a26471f-8317-4ea9-b252-7e00ed2844fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a71d517-d2c9-4b38-8481-61064b48d29d",
        "cursor": {
          "ref": "a0e1383b-aea3-4b28-a16b-51184c369be8",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "08546d0f-84de-437b-9076-3a5296832639"
        },
        "item": {
          "id": "6a71d517-d2c9-4b38-8481-61064b48d29d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "23e61f22-7e9a-405b-a086-82da11adf3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fff02c3-457a-4904-a50b-7477154d201a",
        "cursor": {
          "ref": "53e96bfd-0b7d-45ed-97bc-5d8d701de0b5",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "63ad2a57-1ce0-45e6-86de-0a31e8c89552"
        },
        "item": {
          "id": "2fff02c3-457a-4904-a50b-7477154d201a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "08ff9230-fb0e-4588-9bd3-74a020bb12b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9d81b24-21ed-47c7-aafd-f4def35c7a60",
        "cursor": {
          "ref": "9c888eaf-eee2-4f2a-9d16-4de8e794b68c",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6b00b6f6-68b7-40b7-9685-31387cda7472"
        },
        "item": {
          "id": "b9d81b24-21ed-47c7-aafd-f4def35c7a60",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2a69a13d-026c-44fa-b111-c955e186ac43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa1a02b-3cd6-4245-b974-46160c8e8e2f",
        "cursor": {
          "ref": "99cdee95-9444-4e95-b478-bddc320bb2b7",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "6202cceb-4937-4974-9444-dc5c424c543c"
        },
        "item": {
          "id": "0fa1a02b-3cd6-4245-b974-46160c8e8e2f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "210e62a9-2796-4d5e-ab99-766bac06087f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad3d743-4d0f-4651-98a9-6c12aa880509",
        "cursor": {
          "ref": "a4b4037f-2a7f-470e-b14e-5f3540e5d7b1",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ae61fed3-c9df-48a3-b446-179688a5eab2"
        },
        "item": {
          "id": "7ad3d743-4d0f-4651-98a9-6c12aa880509",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a0664e95-263e-4499-b5d9-e9f46c377cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb56a29-7dd2-4cd0-ad90-95a9bc84317d",
        "cursor": {
          "ref": "22b17e3d-96bb-45b1-b86c-74a001409d6e",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "23f789d1-5124-46a4-970b-9e064441cf16"
        },
        "item": {
          "id": "ebb56a29-7dd2-4cd0-ad90-95a9bc84317d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f274a7a6-f359-4300-ad52-71717d2903df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9873703-ee00-4c82-919e-341883c1228a",
        "cursor": {
          "ref": "2157ef9d-602d-45ea-97e7-ff20f0aecd4d",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8a9a36bf-b065-4ec6-b694-17693d920861"
        },
        "item": {
          "id": "b9873703-ee00-4c82-919e-341883c1228a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6fa20801-7b70-44a7-825e-3e94414ae8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0727cce3-3dd3-4153-92ad-0874eac10974",
        "cursor": {
          "ref": "f6e8bc94-e783-4772-9bff-b09d6bbb8ced",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "be16d096-f152-4b6a-a64a-c33d28ee7a3f"
        },
        "item": {
          "id": "0727cce3-3dd3-4153-92ad-0874eac10974",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "70cc268f-90d5-4192-a9ba-a784204d9502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2f8ca6-ad8f-451f-bf9a-9b9399e7a23d",
        "cursor": {
          "ref": "7aeb6792-b187-408e-b223-4522084840ff",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "db56e651-01fd-44f5-a2ef-692f21119c2b"
        },
        "item": {
          "id": "ac2f8ca6-ad8f-451f-bf9a-9b9399e7a23d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "db9a6254-1dd0-43c8-a3e6-93ee620e4efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d04c66a-f3e5-4acd-9096-d37eede46c10",
        "cursor": {
          "ref": "ef3e3e5c-cd47-4b85-a110-1b2e87f09c97",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "36f41d1b-f106-4ae6-aec6-0b79d04baba6"
        },
        "item": {
          "id": "0d04c66a-f3e5-4acd-9096-d37eede46c10",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7cf66d3f-d390-458a-88d3-1a63763bc906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665577a1-5406-4470-a29d-1c8169f6711e",
        "cursor": {
          "ref": "5d7ff0c9-2859-4c18-97e4-38c3b3898a80",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ce7f31b2-fc67-4599-8c2b-b2ec1a2ff6e9"
        },
        "item": {
          "id": "665577a1-5406-4470-a29d-1c8169f6711e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "b5eef8ae-ed5e-4422-b690-07e65296dfbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08df459-3b46-4dec-a5bb-30a39863853b",
        "cursor": {
          "ref": "007bbd3c-dea7-4aab-b679-4096a3968a85",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5e4ab4f0-5e45-43fd-940b-e49c6283a4c1"
        },
        "item": {
          "id": "a08df459-3b46-4dec-a5bb-30a39863853b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ae88d3c0-3ea8-45e3-bdb4-06652367c136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b69dfac-322f-4d3f-8c05-8e72bc47414b",
        "cursor": {
          "ref": "dc61a371-89fb-4055-b9da-1a6cfb2ecf64",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "80387228-3d0b-46ff-884c-a8dd52c796c7"
        },
        "item": {
          "id": "1b69dfac-322f-4d3f-8c05-8e72bc47414b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "68665a9d-9117-4e22-8122-480474c583ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8550acdc-e848-4670-b890-a68c5f3efa2a",
        "cursor": {
          "ref": "b2f39533-a084-43c4-8fa9-be30ca849f93",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cf3857bb-fba2-4d76-97f0-f748a2a2f8ba"
        },
        "item": {
          "id": "8550acdc-e848-4670-b890-a68c5f3efa2a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "acd76978-f8c2-40f2-9828-cd346dbbc37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e096b017-a12b-4ad9-8626-a2e428a7b0cf",
        "cursor": {
          "ref": "90876f29-154f-46ee-a185-a4cb24ca5ec6",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "293213a8-51cd-43c7-b54d-9d1e2975e328"
        },
        "item": {
          "id": "e096b017-a12b-4ad9-8626-a2e428a7b0cf",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "74254401-9b1f-4ca9-aed5-dae09a6450e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07babccd-3303-486a-a20d-a9c0b2ec56b8",
        "cursor": {
          "ref": "a6283570-7546-4514-975a-387da3a95018",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6e001557-ff09-45f4-8e3b-f92b9397810e"
        },
        "item": {
          "id": "07babccd-3303-486a-a20d-a9c0b2ec56b8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8c923de7-04a1-4378-8539-e23c4ead0a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f26aa5c-08d6-4214-b197-a27f686b99e2",
        "cursor": {
          "ref": "97a2b816-2f31-41c4-8fab-91017a37c99b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9ae0affd-cc6a-4076-80a4-22ba1efe3b06"
        },
        "item": {
          "id": "2f26aa5c-08d6-4214-b197-a27f686b99e2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d2083335-b863-4819-91b8-0a073b44e970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f8413a-9f00-4166-90a7-d9bb7271643b",
        "cursor": {
          "ref": "2e1d74fb-954f-4bd8-8985-22215717620f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "52327f8d-f6bc-4da3-881a-0f6c0be0891e"
        },
        "item": {
          "id": "73f8413a-9f00-4166-90a7-d9bb7271643b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4a679378-5af5-49af-95b0-de273df86f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd450edd-cbda-4f18-912b-ac26f2b9c4aa",
        "cursor": {
          "ref": "66067ad2-2ce9-42e0-8aec-f59c18023082",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0d6df4e4-3976-46a6-99b4-809db460605c"
        },
        "item": {
          "id": "dd450edd-cbda-4f18-912b-ac26f2b9c4aa",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4cfac9f7-513e-42f6-981f-a691daa4c418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b81c02f-6737-42eb-aa80-2d0fd44c42fa",
        "cursor": {
          "ref": "7c7f6345-c917-439f-a9e9-ccde7f2a88f1",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "72106f2e-fdd6-4d4a-9f83-7618844639bb"
        },
        "item": {
          "id": "9b81c02f-6737-42eb-aa80-2d0fd44c42fa",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5bfb9876-321c-4031-8715-7232eeacc914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a5e3b4-ecb2-4b59-98c8-00fa6f69a712",
        "cursor": {
          "ref": "9582399f-110a-427f-ab1a-eea853085cf0",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bb9fb789-f097-4ef6-9c34-0603a1969070"
        },
        "item": {
          "id": "a3a5e3b4-ecb2-4b59-98c8-00fa6f69a712",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3083dae7-234c-40b1-9624-67a7cb4f4e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78aa3e56-84ce-482d-b85f-09bb8e13636a",
        "cursor": {
          "ref": "6a9e402b-242a-4ac9-ba9c-bd104acdd6fc",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c0d8e436-e96f-4d3f-9661-452e20cda6a4"
        },
        "item": {
          "id": "78aa3e56-84ce-482d-b85f-09bb8e13636a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "190376f8-7dd9-4103-b449-7f1ae04d170a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8237baeb-6445-4c39-949f-7c3f1e5274bb",
        "cursor": {
          "ref": "ae7cf1a5-ff7d-44c9-8d31-7d38b54bf717",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f3055e88-5e5d-4884-ae7e-fd38ccdc7f65"
        },
        "item": {
          "id": "8237baeb-6445-4c39-949f-7c3f1e5274bb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "cd295a3a-8f39-4d76-901f-90bdf1546b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57c3ed2-42e7-4039-8326-953d0ce1ae26",
        "cursor": {
          "ref": "341fbc57-851a-466f-8cb5-748c56ef4625",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "52e73646-5111-41bd-bb8c-d528612f27f4"
        },
        "item": {
          "id": "a57c3ed2-42e7-4039-8326-953d0ce1ae26",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "21614a23-fd0f-4d74-960e-da38e8b7f53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbf19d4-167e-4cda-91c1-5eabc311215c",
        "cursor": {
          "ref": "ddf39d90-304c-4f3d-9e8c-c13e2ee7e970",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "baf19595-7b43-4348-a760-75d766bee530"
        },
        "item": {
          "id": "4dbf19d4-167e-4cda-91c1-5eabc311215c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "99549ce1-1551-4f58-be3f-3a901813ac74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d37f500-c3d8-4f76-8ed8-6a6248a64fd1",
        "cursor": {
          "ref": "74a2acc7-da46-411d-8351-4c35e57bde1e",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b4cc9ae8-086e-4d96-8459-a4ce51f59abd"
        },
        "item": {
          "id": "4d37f500-c3d8-4f76-8ed8-6a6248a64fd1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "a8f462c5-e0b0-4a2b-978b-e3d497763f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e850021-7650-4adf-afd0-c662ccb2d85a",
        "cursor": {
          "ref": "1ac6f1f6-6247-43d9-a8f1-d9f02fb04cb6",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d06c8d34-0d7c-4b4f-b766-1db58ba504b2"
        },
        "item": {
          "id": "9e850021-7650-4adf-afd0-c662ccb2d85a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cf8dbd0f-a7de-434a-9ff4-cac2fd4a82bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9364ee1-6b29-4631-8048-e774f43faa83",
        "cursor": {
          "ref": "a2bc0a52-1c95-4fee-bca0-43fba75eaa1d",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "494f9a4f-77a6-4e62-bf2c-26d117ce11fb"
        },
        "item": {
          "id": "d9364ee1-6b29-4631-8048-e774f43faa83",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "3ed34f8f-916b-4e3d-93f8-160f7f21f70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040d0ffb-ff11-48cf-8539-b2db0f2d6157",
        "cursor": {
          "ref": "a6bf91a6-11ba-4aa1-b172-738dca8456fb",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3e0c3e44-f7e0-4045-90a1-a71acfd091b5"
        },
        "item": {
          "id": "040d0ffb-ff11-48cf-8539-b2db0f2d6157",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c396ae65-46d1-405c-b799-56d325840cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c3342f-2f08-408f-95fb-65262154a3c9",
        "cursor": {
          "ref": "6e283787-4fe3-40cb-8b12-bb5db2f21cde",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "33bec1b6-5803-4db1-9449-196f99d7e4b2"
        },
        "item": {
          "id": "08c3342f-2f08-408f-95fb-65262154a3c9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "738a7c41-aeb4-4c55-8b02-dccd00ffe53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b944e3-da8e-4d25-a665-b5cb5e958fd4",
        "cursor": {
          "ref": "30a46758-4c8d-4c78-85fa-d2e98778f3cb",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e6182818-acdf-4f14-ae08-1ca009e5a894"
        },
        "item": {
          "id": "c1b944e3-da8e-4d25-a665-b5cb5e958fd4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0c06d0e3-9fd4-4a07-9e53-c04180121983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf6871b-b1bc-4a0a-8e29-de4b33b0c1d0",
        "cursor": {
          "ref": "92431453-45e7-41e9-abd7-a4128861aba5",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "8425769f-78ab-435c-b7f7-110d7af2ff50"
        },
        "item": {
          "id": "aaf6871b-b1bc-4a0a-8e29-de4b33b0c1d0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a98c4d77-ac95-404e-a143-f28514a6065d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c7f37a-974c-41a8-9637-586f51347b1c",
        "cursor": {
          "ref": "552785ac-b02d-4ae5-a8e9-c2adf52876f3",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "8c51072a-94d5-440c-9595-f037400a71f8"
        },
        "item": {
          "id": "67c7f37a-974c-41a8-9637-586f51347b1c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0c03752f-356b-4193-ac7a-e8a10b714ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d35e0c8-44b5-4aaa-b22c-7b61a0368cb3",
        "cursor": {
          "ref": "71620440-4835-47f9-aa6e-f3f32654e784",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4cf3ed5f-3020-47b5-ae1e-ccd54a32b81b"
        },
        "item": {
          "id": "8d35e0c8-44b5-4aaa-b22c-7b61a0368cb3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2a74f25c-0837-48ee-9cce-73bd7daf41de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d725ed7a-0e78-4cba-9f4e-707b6b2e1450",
        "cursor": {
          "ref": "e581d9a5-9a0f-4a5e-ac00-678c5b433d47",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5ad8bdf9-cb82-447b-826c-3b4ed375593b"
        },
        "item": {
          "id": "d725ed7a-0e78-4cba-9f4e-707b6b2e1450",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c4ec39ac-83d4-4fc2-88ff-59c21e222037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c258ea35-c4d7-431c-a280-1770dad4c571",
        "cursor": {
          "ref": "b0002da7-aa31-4dc1-b3fc-7cba43a5cb0d",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9d0d8b32-fe56-4485-aee0-7be41eb42c57"
        },
        "item": {
          "id": "c258ea35-c4d7-431c-a280-1770dad4c571",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4086b40a-ccee-4591-9fd8-526136abef38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1509c4-0c22-4e19-a174-659decbc04a4",
        "cursor": {
          "ref": "4166a110-c7a5-49e3-9d9f-799333564dc0",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "07a9d963-393d-4b05-92ff-55c491c99048"
        },
        "item": {
          "id": "7b1509c4-0c22-4e19-a174-659decbc04a4",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "55cfea1a-6be6-4950-9311-6eb5f210564e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97517f2f-2f84-48f2-a0e5-52980f86ee0e",
        "cursor": {
          "ref": "6775fff2-8c0c-49a8-81e4-1e9e00a68467",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3ca59b9e-92f2-492b-9570-7df3c1c7330f"
        },
        "item": {
          "id": "97517f2f-2f84-48f2-a0e5-52980f86ee0e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ccc44223-e800-4e23-bb5e-79f7b0c3c7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1495eb72-c59c-4ba6-b658-d6de4a8f4e22",
        "cursor": {
          "ref": "7fbd81b2-fb6d-43bf-9b3d-47f1f92d52eb",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8b5f017d-bdba-48ab-b60a-26f559b2953a"
        },
        "item": {
          "id": "1495eb72-c59c-4ba6-b658-d6de4a8f4e22",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5c4834b1-a3fd-4185-a5ba-21ad292f6af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc6914e-6ee4-4525-bbc9-f8e8bedd302b",
        "cursor": {
          "ref": "9e8f8400-34b7-4f80-97f9-1abfc931cf17",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a2aa8d13-ca75-4029-b0dc-89ecbe695b21"
        },
        "item": {
          "id": "bdc6914e-6ee4-4525-bbc9-f8e8bedd302b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d695f53a-3bad-4009-9b19-bae0dfbb7fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e1d7e0-f764-4948-b83f-31f29bd3cde7",
        "cursor": {
          "ref": "c61b5add-8940-4cea-888e-ed14c736735a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4d353f7c-b196-449a-b8e4-127dbddd7d56"
        },
        "item": {
          "id": "53e1d7e0-f764-4948-b83f-31f29bd3cde7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1fdd4ff3-fdd0-47f0-bf09-9cbd2e6e7318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3649e545-ac49-43ac-b28b-848c4d912e7d",
        "cursor": {
          "ref": "780ef4fe-fd82-4b55-8727-3bd14d905b14",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d197fd27-7f07-402d-a579-c3f007540085"
        },
        "item": {
          "id": "3649e545-ac49-43ac-b28b-848c4d912e7d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b328408d-52e7-435b-ab20-36a8e86372d7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d76200c-2344-4b36-ad88-eea648b0b105",
        "cursor": {
          "ref": "efef5209-390d-4e4c-bcad-49bc6cb1509c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "218c9620-0ccc-4285-b990-4ca5f3c7f665"
        },
        "item": {
          "id": "9d76200c-2344-4b36-ad88-eea648b0b105",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4de2cddb-4e1f-4310-8716-e6f0a8a86825",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f648e6-c4ec-42fa-9971-a18c94dd9e30",
        "cursor": {
          "ref": "b211146d-9037-48ba-ad90-47bc34e3dd7b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f9046d78-f653-412f-a3ab-c9f32f6a7edb"
        },
        "item": {
          "id": "a2f648e6-c4ec-42fa-9971-a18c94dd9e30",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b27fe71c-8471-430d-8b43-c1b9c328a825",
          "status": "Created",
          "code": 201,
          "responseTime": 281,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe20a79-d9de-4c71-a330-af647e295838",
        "cursor": {
          "ref": "beb8684f-0274-463b-a191-e0f3f3144c18",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3579227a-7456-401b-9349-7fc8c53ebf48"
        },
        "item": {
          "id": "abe20a79-d9de-4c71-a330-af647e295838",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7d334a90-e40f-46fc-9ecb-9e6e3d93ab7c",
          "status": "Created",
          "code": 201,
          "responseTime": 148,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0102ac-13a8-47c4-b7a6-bdb805f9e0d7",
        "cursor": {
          "ref": "1ddaf2e9-3bc3-489e-85fe-6ff2cbf6939a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b03965c2-a621-4c3b-aced-39e2f59450f1"
        },
        "item": {
          "id": "dd0102ac-13a8-47c4-b7a6-bdb805f9e0d7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "58b3c1a5-27c8-4dd2-9191-ba53a3938beb",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "803790ab-30b9-42a4-91d9-c60e018e6c8e",
        "cursor": {
          "ref": "6ab0d603-07ff-4aff-9425-5f158526bb74",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6ae6be8d-49a8-4c50-876f-17927ed62088"
        },
        "item": {
          "id": "803790ab-30b9-42a4-91d9-c60e018e6c8e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2fd9debe-705a-4925-aaf2-f8c5aab7f40a",
          "status": "Created",
          "code": 201,
          "responseTime": 58,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7c3c45-fd07-42a8-af2d-09038e786a20",
        "cursor": {
          "ref": "e59dc265-81d9-41f7-ab24-3b4e1f7c0c3a",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9a5966a9-0163-4b41-9d4c-a1c03c5bcd5b"
        },
        "item": {
          "id": "2b7c3c45-fd07-42a8-af2d-09038e786a20",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "2a879527-f980-4221-9cca-47101e499acc",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb6f5c63-d46d-46bd-b20f-340fb9e39f17",
        "cursor": {
          "ref": "5ec6b1d9-1781-45a7-887c-f97fa4881054",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "14eb8aa5-7788-42d1-9a7b-a62fe49c7490"
        },
        "item": {
          "id": "eb6f5c63-d46d-46bd-b20f-340fb9e39f17",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "02bf3df4-b621-4791-b8ac-bf2f19705576",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923c288c-4709-457c-89ae-88d9757671ec",
        "cursor": {
          "ref": "7704bb42-8ae4-43c5-a1c4-d377666056fd",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e90bb572-0266-4f29-b3e7-bac597622021"
        },
        "item": {
          "id": "923c288c-4709-457c-89ae-88d9757671ec",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8b46a184-a39d-4d2b-aadb-d5f91ceca3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ff9aa0-8f4e-4194-83f7-aae2803602c7",
        "cursor": {
          "ref": "d7dc1c95-7a8f-4114-a533-3d99cd6423b1",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f386d97c-cca1-43db-98db-be38cb347d4d"
        },
        "item": {
          "id": "50ff9aa0-8f4e-4194-83f7-aae2803602c7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d51b9f30-e441-4f43-80db-20dbcc16a1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38154fe1-5ad6-41c0-9c8b-284e42ce59d1",
        "cursor": {
          "ref": "cda66313-e8c0-490e-aae5-ccb8ea631e47",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "826eae28-6f4f-4dc3-b9b9-37efc3af8d58"
        },
        "item": {
          "id": "38154fe1-5ad6-41c0-9c8b-284e42ce59d1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0e93288b-3308-47d9-adfb-67a6a6e2f108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dae6a81-437b-42ec-b84e-3aa46ab1d9b0",
        "cursor": {
          "ref": "262a8eb8-adff-4582-aa24-ba6e4bbc8e48",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "bde68f85-c715-4d08-9103-19bf70f0082c"
        },
        "item": {
          "id": "1dae6a81-437b-42ec-b84e-3aa46ab1d9b0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7de437ac-0cb1-4786-a678-68d37cc4604f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b60b4b-d7e6-4a2e-bd35-10ea36bd8810",
        "cursor": {
          "ref": "86f903fe-df94-4a45-a982-30cbda890342",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e072b262-f484-451e-b3f6-f37b5b862fc6"
        },
        "item": {
          "id": "95b60b4b-d7e6-4a2e-bd35-10ea36bd8810",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "09d5974f-edc0-4fae-979d-63ebe5e66b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b755865-e975-470b-98f7-35bc89aa1748",
        "cursor": {
          "ref": "c342bf91-5a2b-42c8-b89f-b9a9fff40786",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3ba053d4-f029-4f1f-85cc-a3555a6d209b"
        },
        "item": {
          "id": "5b755865-e975-470b-98f7-35bc89aa1748",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b1e581db-e9f5-4b0d-8e62-30ae154079b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b1fee9-bd56-4a53-8368-4180e1eb71a9",
        "cursor": {
          "ref": "96e64bc4-5688-4605-9587-c6f2ed4b0661",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f8faff21-c024-458a-893b-7f81af0f0107"
        },
        "item": {
          "id": "28b1fee9-bd56-4a53-8368-4180e1eb71a9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7fde1a45-5466-4b62-8e19-79e2700bd286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a1453c-c141-4911-a956-3e012bbadc92",
        "cursor": {
          "ref": "2fe449a3-eb49-4b4a-9352-34a56657a1bf",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "45141500-e89f-478a-aa26-36159c837a0d"
        },
        "item": {
          "id": "f4a1453c-c141-4911-a956-3e012bbadc92",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d8887986-3b93-4689-bd2f-a6245f438bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41e6df7-dcaf-4635-b48e-4aab6bf0fb11",
        "cursor": {
          "ref": "bcca0d05-d47f-42b8-9498-7fb39b4a9f8e",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "80e3e3b6-a5dc-48dc-961e-b4abbee0682c"
        },
        "item": {
          "id": "d41e6df7-dcaf-4635-b48e-4aab6bf0fb11",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a7a8fbbf-2a85-4b60-b4bc-3c87a7a3ed90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc766b6-d425-48fc-a876-d46b89c1edc2",
        "cursor": {
          "ref": "aa50c06f-e1c5-4e66-8332-84175827a95a",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "db5e7e42-33a6-44dc-9d8c-b804ec450e8d"
        },
        "item": {
          "id": "6dc766b6-d425-48fc-a876-d46b89c1edc2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b6495b1b-7e38-455f-a019-1530c9c2e96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cf0269-a706-4580-ac74-d5a56882d787",
        "cursor": {
          "ref": "1f53957b-7001-4efc-a4a9-5e40af02164b",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4bc8991b-63cd-4295-9164-04a18cb8531d"
        },
        "item": {
          "id": "62cf0269-a706-4580-ac74-d5a56882d787",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "25560829-b174-49e7-bb7f-8baed6e43a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3582e98e-d1b8-449c-8218-c1f4202a0f75",
        "cursor": {
          "ref": "d6154c0f-cec6-456b-aadc-37363442a52a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c819e804-45ca-477e-a599-2a44eb60c0ef"
        },
        "item": {
          "id": "3582e98e-d1b8-449c-8218-c1f4202a0f75",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "de8ab444-0c34-4e47-9625-371e1e46c129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a187c681-f6ca-4af7-abc6-a93403301841",
        "cursor": {
          "ref": "33706a12-4499-4f12-80be-6f30f2332dbd",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f2d5ab06-8afb-47da-875f-f7c0663f4cc6"
        },
        "item": {
          "id": "a187c681-f6ca-4af7-abc6-a93403301841",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fad0d7a2-1260-4d04-bb77-b77f4ec1c951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97db79eb-414a-4bb5-aee0-5618aba7b978",
        "cursor": {
          "ref": "89f7402a-f138-40ea-b2ab-31ae76345259",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "dc985524-5a13-4e64-8642-929cc70399c9"
        },
        "item": {
          "id": "97db79eb-414a-4bb5-aee0-5618aba7b978",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e7ef796e-12a8-4058-a48f-8b71ac5af788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa6ba4f-fc28-4452-9bb5-9e33e1f0424f",
        "cursor": {
          "ref": "13d15e15-f351-4684-848e-b6fef2b1f920",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0e8c726f-afa0-4d32-8c65-3c6a5048fccc"
        },
        "item": {
          "id": "2aa6ba4f-fc28-4452-9bb5-9e33e1f0424f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c9b8a11d-8fe2-4f1a-aebd-7a3ae4379c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b071707c-bb50-42b5-8a09-adfa3b691583",
        "cursor": {
          "ref": "23b55c6a-7f2d-467d-b47e-bbbf0a0d5e62",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "954b83bf-fcaa-4015-8c71-7c27500b3568"
        },
        "item": {
          "id": "b071707c-bb50-42b5-8a09-adfa3b691583",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "820e9166-cd56-429d-b128-1e4180650630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa3cad9-75fe-4a7e-9389-a1070482c3f9",
        "cursor": {
          "ref": "449df7f0-74ce-4b88-a795-b6e67b918247",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ecbf7248-3807-4cbe-b166-c6131039d423"
        },
        "item": {
          "id": "5aa3cad9-75fe-4a7e-9389-a1070482c3f9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "85e721ed-3026-4525-aae5-511967814abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ae3a6d-6df7-4312-b20a-dd2394f02b57",
        "cursor": {
          "ref": "c46730cd-b5d7-49bc-ac94-5dbc8655bc2c",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fcdf7696-9592-4309-98df-b7a208a8f1fa"
        },
        "item": {
          "id": "d4ae3a6d-6df7-4312-b20a-dd2394f02b57",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2d63d314-8c73-475c-b8be-54502b488712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202a9821-d1f8-4717-854f-dce61316f6fd",
        "cursor": {
          "ref": "53b6f95a-614e-401f-8d06-20baf0b8b1aa",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "01d8dd0c-6e2c-498f-a958-b701a9d4fdfb"
        },
        "item": {
          "id": "202a9821-d1f8-4717-854f-dce61316f6fd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "afd57c59-c87e-466a-8115-bd9152c3984c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17762d86-e64b-42db-b4d0-25ee1b84b68d",
        "cursor": {
          "ref": "b479ae7e-bfba-4794-a418-ccb6d8c00d1b",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1aac09a3-280b-4286-8bcf-e53d511f67f9"
        },
        "item": {
          "id": "17762d86-e64b-42db-b4d0-25ee1b84b68d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d65c9632-6703-4a76-ba49-c33b90975350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454d5bbd-b936-441f-9e71-b0cbbd0d3fa8",
        "cursor": {
          "ref": "33286f98-d434-45ba-a460-e320381b9d7a",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "55158850-caa5-4226-812e-52bed5859eaa"
        },
        "item": {
          "id": "454d5bbd-b936-441f-9e71-b0cbbd0d3fa8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fac8223c-599f-436f-ad86-84d2d345689f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3114b53-64f2-4456-aad7-4566862b3dfe",
        "cursor": {
          "ref": "01c603fa-3b25-4bfe-b748-5f869c9fef63",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "acc4b564-fa6a-449c-a2ac-eeaa76b60176"
        },
        "item": {
          "id": "b3114b53-64f2-4456-aad7-4566862b3dfe",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2a5bb1d4-2343-4757-9513-5e9bbae4fa4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e949adaa-7cb7-4b8d-b7e0-b65119bc1e86",
        "cursor": {
          "ref": "257968d6-f4bc-4517-ad35-6559e561af96",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "cac42381-7508-411a-87e3-5e57d2a3f345"
        },
        "item": {
          "id": "e949adaa-7cb7-4b8d-b7e0-b65119bc1e86",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "36539362-feed-4fd7-9582-b66f585b18a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e3a244-1053-483a-be6b-e1cf4c77bd56",
        "cursor": {
          "ref": "09c1d189-b16b-49ea-b2ae-36c65b9a48ff",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "55cc677d-2115-4855-8d77-bbbe4b97479a"
        },
        "item": {
          "id": "58e3a244-1053-483a-be6b-e1cf4c77bd56",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6eb5b60e-4efc-4cbd-8db4-c2366c336ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a91b50-14ac-4758-ba0c-01203f354be7",
        "cursor": {
          "ref": "ac1a3583-0b6c-4353-a97a-8041a7ad7a72",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6db905be-c2a4-4607-af5e-28c9e9b29313"
        },
        "item": {
          "id": "29a91b50-14ac-4758-ba0c-01203f354be7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fee0c2f0-3bf7-4862-8eb1-aec0f8e327ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002351d1-308e-415d-9af0-91142e7ebdcb",
        "cursor": {
          "ref": "84a65485-b4a6-4c27-828a-8871d1f724df",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0dd05398-de69-4167-bad0-7bceab3b49cd"
        },
        "item": {
          "id": "002351d1-308e-415d-9af0-91142e7ebdcb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "42981bd5-6073-4a5a-b8f9-f7b3a6d15976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01f85a5-d8cc-4f87-b2ff-00c389010e12",
        "cursor": {
          "ref": "2574ef19-6f4f-4dd8-bc14-af592c97cc8b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ff4423a5-122f-46c0-93b0-48b440e85fe9"
        },
        "item": {
          "id": "a01f85a5-d8cc-4f87-b2ff-00c389010e12",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fdd7d69b-22ec-4df0-9a90-ec630517e76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a37bef5-64e7-4214-9f55-ec00309b1ae2",
        "cursor": {
          "ref": "452386b8-5e61-43c1-94db-9b0c1b3ab34e",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "76b6679a-872c-40d7-9240-af086908c694"
        },
        "item": {
          "id": "0a37bef5-64e7-4214-9f55-ec00309b1ae2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3fc5b019-660d-4af5-a394-920283c248fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc15a86d-1ee5-44ec-bb76-28bba77022d5",
        "cursor": {
          "ref": "c1f5e0f3-a33e-4fd8-83b2-78a062428cf2",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0778d757-65ab-4fdc-8db6-1bfc172f9188"
        },
        "item": {
          "id": "bc15a86d-1ee5-44ec-bb76-28bba77022d5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "57f2fd1f-e120-410d-a9cb-141b6c9c82f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27e501d-223f-4f48-8e0e-be9af065e695",
        "cursor": {
          "ref": "abd86816-008a-45bf-8bcf-44954fff604a",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e6b47e37-02ea-4b23-ab9c-a18474f7a06d"
        },
        "item": {
          "id": "d27e501d-223f-4f48-8e0e-be9af065e695",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c444a33a-85dd-4c25-bed3-3c713e4419e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5e44be-d6ef-4fba-b23a-1a4eb59a9fcc",
        "cursor": {
          "ref": "d5172d14-1313-4ee7-8259-c4ffdd540573",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6d812c10-b725-4dce-a51a-342b29460674"
        },
        "item": {
          "id": "ce5e44be-d6ef-4fba-b23a-1a4eb59a9fcc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "99b3757c-2ee9-4032-b95c-ac32406e2525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf868eed-a55d-459b-84c4-804434fb5cf1",
        "cursor": {
          "ref": "0fe56b75-db33-477c-bfc8-1667a1a860a9",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "98aa7e6a-16bb-4bcb-b1cc-b26da977148e"
        },
        "item": {
          "id": "bf868eed-a55d-459b-84c4-804434fb5cf1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "21e59e2f-b74f-4854-9a94-19058bd0af9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89668f59-22ea-424c-a9e3-a686a12a587b",
        "cursor": {
          "ref": "44296f2d-08dc-481b-bbc7-71c3b205457c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "fdfecd8c-53d1-4226-9968-5cb6e7f58651"
        },
        "item": {
          "id": "89668f59-22ea-424c-a9e3-a686a12a587b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "75876307-8ce8-4b08-809e-a07f4fb602ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cfce42-a98a-4cea-8ef6-88a541b4b26a",
        "cursor": {
          "ref": "56ca6fd2-6114-4b8d-a7b8-b8206966d97f",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "489547fb-bab0-4ca8-b6a9-9a61408eb35e"
        },
        "item": {
          "id": "c4cfce42-a98a-4cea-8ef6-88a541b4b26a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "29a9d8fc-194b-410a-8174-b28cb30c4c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869a42e7-1387-4013-9c3d-19d11ea3e995",
        "cursor": {
          "ref": "d8707e59-5e9a-45ef-a1e6-6837b66536d7",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "779067da-5d08-4ab4-861a-0d36105df4cf"
        },
        "item": {
          "id": "869a42e7-1387-4013-9c3d-19d11ea3e995",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f3ef2cdc-6c6d-4f98-afda-eb881416bf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05591514-d9f6-4697-9c3c-765f13b70a27",
        "cursor": {
          "ref": "46e3998f-f8e1-46d0-9e77-4b06e44949c6",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f8242b7c-0213-45be-baf3-86f4ed91116a"
        },
        "item": {
          "id": "05591514-d9f6-4697-9c3c-765f13b70a27",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "11c34b03-c785-4a92-b044-1728920badff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fb5353-6811-4b90-a4f8-02b4312ff1df",
        "cursor": {
          "ref": "ca6d9109-eeea-4e03-9d11-3a5ec3027179",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e7a11474-a764-4682-ac43-b594ccbb3902"
        },
        "item": {
          "id": "09fb5353-6811-4b90-a4f8-02b4312ff1df",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8560a4d7-031a-4372-a5bd-97b8d93a3742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb9fd14-04b5-4528-9db5-9080176ad57f",
        "cursor": {
          "ref": "1dfa2afa-e946-4d24-807f-b308a3c17423",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cae0fea7-1a24-45bc-952c-14933dfe1c3f"
        },
        "item": {
          "id": "4cb9fd14-04b5-4528-9db5-9080176ad57f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "65ab53b6-0f85-4b80-981a-72701b7ab073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3813584-4f9e-4b85-9874-4ad582a96fe5",
        "cursor": {
          "ref": "ab59f707-9021-4c21-bdfa-7c5a2bbd9cad",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b200a561-8d0e-4f3c-8004-10ef87dc95b5"
        },
        "item": {
          "id": "a3813584-4f9e-4b85-9874-4ad582a96fe5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "074d84d3-35fc-4598-a23a-706b2b95a171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe2d71f-d732-4a83-ab6c-ca600712132e",
        "cursor": {
          "ref": "d6a287bd-36a7-44d5-90d2-fe1d41695cd1",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "239fbf8c-1425-40da-91bc-07ddf2988a63"
        },
        "item": {
          "id": "abe2d71f-d732-4a83-ab6c-ca600712132e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9e2f458e-0ad5-4cc2-bef6-23ccaf28bae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879f21fc-425a-41de-a421-dbb39681b6fa",
        "cursor": {
          "ref": "c3da36a0-08d1-45b5-875c-ad7086da1a3e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5f4329dc-bda8-492c-93ec-0f03ad37d91a"
        },
        "item": {
          "id": "879f21fc-425a-41de-a421-dbb39681b6fa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8b5efe24-571d-4e8b-9eab-ac1ed57a4a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eaecdb3-9b59-4c70-b4bc-abcdb800e5d4",
        "cursor": {
          "ref": "aac42918-7d0d-47d2-a704-7288338451a3",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "de4f1151-fb73-44fa-92de-a1585b7585cd"
        },
        "item": {
          "id": "7eaecdb3-9b59-4c70-b4bc-abcdb800e5d4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fa9e9df3-8452-410c-8ac3-6f82bd660d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5240c42b-5dd5-44c2-ae10-af5cbaaf24c5",
        "cursor": {
          "ref": "d33008b7-c2ac-4bb9-b691-2921a959f00e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0958e34d-31a7-4311-b336-ab8cf6110949"
        },
        "item": {
          "id": "5240c42b-5dd5-44c2-ae10-af5cbaaf24c5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fd690add-4c50-4126-b1e3-3128bd902ee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c083d57-b1a3-4d06-84cb-45a369cec765",
        "cursor": {
          "ref": "6213afa5-9240-49aa-aa50-f4afa3781cdd",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8f30ca39-6972-4e87-b6b3-2e18b0854d81"
        },
        "item": {
          "id": "4c083d57-b1a3-4d06-84cb-45a369cec765",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4d41d250-a779-4971-9eb9-246236b91247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a864ed-d947-4f65-b5e5-02d7be92835a",
        "cursor": {
          "ref": "a9ca27a6-3790-4356-8e9d-c78a7cfca375",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6f1058b1-4730-43d4-804e-0cdff95b9250"
        },
        "item": {
          "id": "48a864ed-d947-4f65-b5e5-02d7be92835a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "20b796cd-9903-4fca-9633-eb7ed6a4a852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966deecd-c677-4e4b-98df-365bbe98bf7f",
        "cursor": {
          "ref": "6d9693e8-c0a2-4adb-bd45-f883a0896b59",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c4096e52-b786-4e38-a722-33df1c74a8c0"
        },
        "item": {
          "id": "966deecd-c677-4e4b-98df-365bbe98bf7f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ba0cdf58-8b27-47b0-bf90-13aa5ece409f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c43d1dd8-5865-449d-a524-da64cf296640",
        "cursor": {
          "ref": "f0d46875-e954-44e7-964a-b7ffdd22fb34",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "42f74f08-cd14-4f5d-a3c8-30ec9fada5d3"
        },
        "item": {
          "id": "c43d1dd8-5865-449d-a524-da64cf296640",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9d2553a2-1645-4c16-803d-99b582a48715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f9a874-f456-4512-881d-2bebc8edb22e",
        "cursor": {
          "ref": "cdbdc232-e61e-4d4f-a49f-48cf8e1a2c08",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "81f61968-9495-4bb0-8a72-a27c3d7da05e"
        },
        "item": {
          "id": "65f9a874-f456-4512-881d-2bebc8edb22e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8b239169-625d-4660-ba6e-9e5d3f7ec5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53c2905-557b-4a15-a12c-64f141b6b585",
        "cursor": {
          "ref": "4cbb34f4-79a5-43b5-86a2-0d0cc0f7a52b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d17a7412-0501-46be-97e3-9e61d991376b"
        },
        "item": {
          "id": "b53c2905-557b-4a15-a12c-64f141b6b585",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ccdde998-24dc-4fd6-9ee2-ca6958cc373a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445df4ec-cffd-4c24-affc-4d684367867c",
        "cursor": {
          "ref": "fb177008-e0a8-44ba-9bfe-f741eb87291d",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "30985891-e3fe-4bb3-b2b2-84f947fe70ee"
        },
        "item": {
          "id": "445df4ec-cffd-4c24-affc-4d684367867c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8ba87516-3a92-4a92-a097-68fe9388a7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b51e31-67cd-4729-90b5-aea011321d2e",
        "cursor": {
          "ref": "c22e71e0-16a8-4803-a6ff-a30c69834669",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d8ff0f2e-e4c7-4c81-87a5-4408a8da7c72"
        },
        "item": {
          "id": "12b51e31-67cd-4729-90b5-aea011321d2e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6464fbc7-c658-480e-82e1-f1644ed81826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28c57fc-61b1-4395-b526-3d771596c1f0",
        "cursor": {
          "ref": "767f3c1b-1c80-4961-80f6-4621ca7c968c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e89c1556-35c0-4b22-a655-ae00271513a6"
        },
        "item": {
          "id": "a28c57fc-61b1-4395-b526-3d771596c1f0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "19394c00-e7f0-4693-8519-90046fdb572f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f960bb8-5e6e-4e94-b58f-ebb2748acf97",
        "cursor": {
          "ref": "11073894-03d9-4d6c-aac1-10134b307130",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f29dcab7-9591-44cb-89c7-f29a9639ed5c"
        },
        "item": {
          "id": "3f960bb8-5e6e-4e94-b58f-ebb2748acf97",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2672d19a-a393-43ca-995a-26607c001996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de360ab-5bdd-43cd-9935-0e873953bef0",
        "cursor": {
          "ref": "f0052627-337a-450c-b8fa-2a06ac7cc7a1",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e136766e-072d-426e-afec-3c8776753b27"
        },
        "item": {
          "id": "8de360ab-5bdd-43cd-9935-0e873953bef0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4ba91794-0a2a-4b17-811b-8a7f9d33a9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e50e99-a431-4527-b5cc-59851f9f7ae5",
        "cursor": {
          "ref": "c57056ab-71e3-4f83-985c-f77545b3db2b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "301a55b4-0990-40ab-804d-72539e7a566b"
        },
        "item": {
          "id": "49e50e99-a431-4527-b5cc-59851f9f7ae5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "98c8396b-e715-4590-8564-7f0fc0c48a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bc76c1-30d9-473c-8542-2c3a7874c895",
        "cursor": {
          "ref": "50454ee3-9a04-478b-bc30-d816aa15aa24",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5505d68d-e972-43c2-acfc-2d7cd13eb095"
        },
        "item": {
          "id": "d0bc76c1-30d9-473c-8542-2c3a7874c895",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0cb90876-e028-43d7-91fd-81c960674c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89943530-dc4e-443c-a9d5-bb78150b319f",
        "cursor": {
          "ref": "07299ae0-06a3-46f2-b662-c98e9965e7a1",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "718e3659-3250-44e8-8aa9-92257010e84e"
        },
        "item": {
          "id": "89943530-dc4e-443c-a9d5-bb78150b319f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fc7c242b-249b-4b8f-9765-fae45c2954eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aaa10b8-e464-4d8c-bfe5-fcd42d05845a",
        "cursor": {
          "ref": "bd45a909-3f95-40a6-8e89-534c8e509619",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7c0df2da-6e09-4aec-8470-4c7d3dbab820"
        },
        "item": {
          "id": "7aaa10b8-e464-4d8c-bfe5-fcd42d05845a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e8db53c8-c3c2-42ba-9889-e5658ce4a7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619afabd-0a08-47f9-8112-13c496c2f8dc",
        "cursor": {
          "ref": "57fe4a11-382d-41d4-8026-77012bd3fbef",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "05ec0dc7-c8b6-46cd-bd12-e6b3f43119b2"
        },
        "item": {
          "id": "619afabd-0a08-47f9-8112-13c496c2f8dc",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3664c22d-978c-4170-aa68-0ccdf689b567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d337c9-527a-4365-95d6-5f1932c4d65a",
        "cursor": {
          "ref": "ef9b9c60-a005-49cc-aa9b-aaaf7a6b0ef0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c15814ef-e29c-4ec9-bccb-89f0c11ed00b"
        },
        "item": {
          "id": "55d337c9-527a-4365-95d6-5f1932c4d65a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7cc018f9-2a01-4991-a276-94edca1fbf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b499f59e-277e-4892-9c48-06bebff70691",
        "cursor": {
          "ref": "2e75e45c-8d82-4215-849e-13c6006c387a",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "56c13f46-46a3-4f3f-bebf-1bcd704690bf"
        },
        "item": {
          "id": "b499f59e-277e-4892-9c48-06bebff70691",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9242ab63-b062-4ebc-a1db-41da8608f034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c4b323-11c9-4abc-8a22-df91f5ea363d",
        "cursor": {
          "ref": "1b057f69-fb01-40e4-b272-14278e865514",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "830e5ddc-99c7-4d96-ad14-7e29a6616c32"
        },
        "item": {
          "id": "84c4b323-11c9-4abc-8a22-df91f5ea363d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7ca2bbc3-dfaa-49e9-ad1e-ede1a2f94a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ac0f52-68c7-405b-9e84-9d6cb5dd0fad",
        "cursor": {
          "ref": "0c38cc5a-04ff-47a9-953b-c06f150fc781",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1f23f4f8-f9cd-4399-a67b-94d5bfc47c74"
        },
        "item": {
          "id": "49ac0f52-68c7-405b-9e84-9d6cb5dd0fad",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3357cc69-22a2-4046-b59b-3390160ba6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fb7c68-f5c0-40c7-82f0-ee26e61b2b75",
        "cursor": {
          "ref": "fbf82d0f-b709-4c37-8542-8b30fc977dd3",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fe4466c6-5447-475c-8bdb-f6d5d95e0813"
        },
        "item": {
          "id": "88fb7c68-f5c0-40c7-82f0-ee26e61b2b75",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3434407a-917b-4347-9998-544ddd4f24b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7507f4-57a6-4a02-8f2f-23c56d788a0c",
        "cursor": {
          "ref": "7d6700b7-6c85-43fe-a805-27ce4ef2eaad",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "94298334-2ffd-41a1-9c33-13e1979390cb"
        },
        "item": {
          "id": "3b7507f4-57a6-4a02-8f2f-23c56d788a0c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8812fe3e-7b50-4ea5-8c73-b8785b9fbbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcba4e8-dbb3-4977-aa7c-9708ac91b89c",
        "cursor": {
          "ref": "cfc8745f-be39-4d73-890a-f134d0750d57",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b6b970ea-77fc-4f01-9b23-599467fc9f9e"
        },
        "item": {
          "id": "dfcba4e8-dbb3-4977-aa7c-9708ac91b89c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "02536ca4-112a-4517-a740-92619e8bf027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7838e406-9da2-45aa-9276-122bfcaa90bc",
        "cursor": {
          "ref": "9bdccb98-f9fe-46d8-b75e-7c137aa136e9",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ab634ca0-5ba0-49de-877d-956fe8e02fe7"
        },
        "item": {
          "id": "7838e406-9da2-45aa-9276-122bfcaa90bc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "103c6caa-40d2-4b2d-bbd0-887ed05fcaac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09184b1c-97fc-4466-a91a-caf59a93b8a4",
        "cursor": {
          "ref": "05adc1c5-9784-40a9-bf10-c38cdf163610",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a50b5e92-77a2-4798-9211-e7e41ca5c727"
        },
        "item": {
          "id": "09184b1c-97fc-4466-a91a-caf59a93b8a4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2eb5154f-7a83-4b02-a082-ff7ae5a01c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef42bb36-46b6-4fb4-beeb-1b4fe3ae5c41",
        "cursor": {
          "ref": "a948bbb6-adcc-4dc8-b204-2a9e7c8ce655",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "11f85f8a-c234-49be-9ef9-7939d107edd6"
        },
        "item": {
          "id": "ef42bb36-46b6-4fb4-beeb-1b4fe3ae5c41",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6ae3b7f3-da99-4fe8-9be2-c9079a62bac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08297f6-21f5-45be-a554-61aeaea72533",
        "cursor": {
          "ref": "ffb59112-d4a7-47c3-a621-69430fd9f454",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4563cac0-7dd6-4c33-9dbe-b0f3da125956"
        },
        "item": {
          "id": "a08297f6-21f5-45be-a554-61aeaea72533",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cb56f490-2169-4715-8498-044dfd98060b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc5531fc-a279-432c-bb9a-758950257a3e",
        "cursor": {
          "ref": "4987f26d-0ad4-44ad-8b42-75692262aede",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7033296a-04b4-4ed8-a8cd-abc6a4c0ba4f"
        },
        "item": {
          "id": "cc5531fc-a279-432c-bb9a-758950257a3e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "390239a2-221f-4bfc-a94f-f96f174f8841",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319f2129-bc13-44e5-bc75-dce41cc9fa85",
        "cursor": {
          "ref": "1f34eb44-2e8b-47b6-abcf-4315289151dd",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a268ae6f-b3d7-42f7-9f58-3238904c488c"
        },
        "item": {
          "id": "319f2129-bc13-44e5-bc75-dce41cc9fa85",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "adb75c56-471e-474b-8e58-43cf1f00bb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e33634a-92b4-4014-b46f-b78afce4be3c",
        "cursor": {
          "ref": "0c0b43a6-44ba-4a8b-83af-f4a0c8500af8",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3db87b79-7af3-445f-b58a-133c3d3a9828"
        },
        "item": {
          "id": "7e33634a-92b4-4014-b46f-b78afce4be3c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6f92fc81-defc-4932-9a3a-3d832071f291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbff270d-2c5b-4a47-8859-62f810c7eb37",
        "cursor": {
          "ref": "f4c24bd0-e4a5-4997-81d1-e8698fc8559c",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b92ed05d-3fea-4f0f-882b-585f11dfe052"
        },
        "item": {
          "id": "dbff270d-2c5b-4a47-8859-62f810c7eb37",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3aa0ed14-7c29-438f-87c1-9a2a574ef859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd0850a-ff34-4acd-9a25-92338acee1da",
        "cursor": {
          "ref": "e11e597d-4a9b-48ee-8159-2fd3458dd5a7",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a6fa1263-7bd7-47a9-8efe-e13192b5f314"
        },
        "item": {
          "id": "1fd0850a-ff34-4acd-9a25-92338acee1da",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b9047a26-c883-4fa9-8250-41cb634f051e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147cf58b-357c-44d4-a9b0-dc361ffa18ba",
        "cursor": {
          "ref": "408c9d83-a90d-49d3-8905-242dad3f21d3",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ec34cc83-403d-4ec7-a491-646fee728cd8"
        },
        "item": {
          "id": "147cf58b-357c-44d4-a9b0-dc361ffa18ba",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1efc3fd7-fb9d-4685-8283-7027978d2f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792cbc97-6ded-4f70-ab93-5d32a168a11f",
        "cursor": {
          "ref": "e6488baa-276e-4d59-91ef-130b95221486",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fe4f34aa-a32e-46d7-919b-26acedb70a99"
        },
        "item": {
          "id": "792cbc97-6ded-4f70-ab93-5d32a168a11f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "dc8482bd-8f16-4a01-a41e-6c0ca94813b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e07b1f-7b1c-4e85-96a2-40baba8e1c35",
        "cursor": {
          "ref": "5ecad182-1da2-4216-b323-34556f1da130",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "76c4f388-a5f0-434a-8034-adf9b6b37bb9"
        },
        "item": {
          "id": "b3e07b1f-7b1c-4e85-96a2-40baba8e1c35",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9e52fefb-7207-4ef1-952f-879b3116f7da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7857cda-531f-4770-acba-f41f5a2f7cfe",
        "cursor": {
          "ref": "e04f6b13-03b6-4c90-9ec0-da0d19557c70",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3306bfce-2b44-4194-8035-44f8cbe82e74"
        },
        "item": {
          "id": "e7857cda-531f-4770-acba-f41f5a2f7cfe",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "659aa747-ed8b-4865-830e-3511d27ed771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a8dbf8-8734-4ff7-9d36-34108ab7d12c",
        "cursor": {
          "ref": "282dd677-8be1-4e4f-a3df-5c19c8dcca0f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0544a6f0-b661-4ff0-a99c-9ae978ac90af"
        },
        "item": {
          "id": "b2a8dbf8-8734-4ff7-9d36-34108ab7d12c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3c1908f4-ea35-4dad-8ef2-8c63a307adef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4255d950-8f2f-4d09-b26c-3ebda20dfe45",
        "cursor": {
          "ref": "908067aa-4c5d-45d1-8c71-0d537ac0cdfa",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2b4e3883-2128-47b8-b12d-25e53e069fb4"
        },
        "item": {
          "id": "4255d950-8f2f-4d09-b26c-3ebda20dfe45",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ec5f975b-2db4-4754-b2d3-36c4663eb896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af3fd3f8-9fe4-4bac-8a8c-2ccb10e0e45f",
        "cursor": {
          "ref": "89bceb76-6574-4c4e-9304-2529a4acf46f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3334f25b-b0d6-4602-94ac-4adc6cb57dbe"
        },
        "item": {
          "id": "af3fd3f8-9fe4-4bac-8a8c-2ccb10e0e45f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5731ab51-2fac-491b-afa2-4ad5e4c2b018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f09800e-1ed0-47f8-b6f2-9d1d05a00ac9",
        "cursor": {
          "ref": "0322a50e-e5d7-4189-a857-093552f8f705",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2bef1861-3c3f-4ed8-8e7c-3070619b7b1e"
        },
        "item": {
          "id": "0f09800e-1ed0-47f8-b6f2-9d1d05a00ac9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d39cea6c-2f3f-4e8b-909f-51ce66369176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76c6bed-7d12-4229-8927-52217c68de99",
        "cursor": {
          "ref": "3387e21e-93d6-4f77-8613-110b6e66244e",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9b7ba5ff-4a99-479a-b1f4-313339ddac15"
        },
        "item": {
          "id": "d76c6bed-7d12-4229-8927-52217c68de99",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "66576306-f2ae-4a88-bc4e-168396b55aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86787bb-bd79-4663-a250-5df52916b18a",
        "cursor": {
          "ref": "8a2d8d45-ddff-4f7f-94b7-74f1dfd4fe5c",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d416dc6d-c011-492d-88e0-c10ca309fcf6"
        },
        "item": {
          "id": "c86787bb-bd79-4663-a250-5df52916b18a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7a5f4904-56c5-4026-b77f-d0230aacec98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43307d5e-deb8-4839-bd13-2c6ad5578302",
        "cursor": {
          "ref": "5f96ebc1-d784-4bdd-9a37-6bc3ff309f25",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "65b522ee-3140-45fd-9812-bf78f70c1149"
        },
        "item": {
          "id": "43307d5e-deb8-4839-bd13-2c6ad5578302",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d9aa4e7b-9e5e-4a74-9107-2f77a17e72f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f0c87f-66b8-41b8-a42c-70cf811fd271",
        "cursor": {
          "ref": "2c69d298-7dd5-4b6e-916d-4ef000611508",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3d27bcdf-cb25-4496-8462-948cace4e3ec"
        },
        "item": {
          "id": "b7f0c87f-66b8-41b8-a42c-70cf811fd271",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dd881a16-f2ce-472a-b8ae-ac6cc3411707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1bfcd4-44ff-4c29-ba62-ef35c1a8f559",
        "cursor": {
          "ref": "0f9ecfad-c063-45c9-9e3e-137768321fb3",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cf97e31d-ace3-4a59-b4bb-db23572279cb"
        },
        "item": {
          "id": "1b1bfcd4-44ff-4c29-ba62-ef35c1a8f559",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "205b36c8-1b0f-418a-92cc-620394af82b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b3037f-7fef-4ab0-95f4-d6abc71ba1bc",
        "cursor": {
          "ref": "52a5cd3f-85cd-46eb-b89c-b97aa5c5c6fa",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0227625e-3b9d-411b-84c2-5dbac900b6c7"
        },
        "item": {
          "id": "30b3037f-7fef-4ab0-95f4-d6abc71ba1bc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1fa10903-8560-494c-a032-030d7c70379e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729bf853-93ba-4a5f-b33a-496ca3caf245",
        "cursor": {
          "ref": "89d2a4a6-c2ea-48a4-8c62-b974966771a2",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c36c45c6-a1c2-48f9-a70a-ed31e1b8c622"
        },
        "item": {
          "id": "729bf853-93ba-4a5f-b33a-496ca3caf245",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fd3b04f8-b061-4736-9d4b-d11a81c8d143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae75ac71-84f5-4d1a-b3e5-82cbf5e0f816",
        "cursor": {
          "ref": "d4d4ca6c-1ce9-495b-803c-2e436080a124",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b9b55dd4-a4ee-49b9-b4eb-cb1fb1eeb9d1"
        },
        "item": {
          "id": "ae75ac71-84f5-4d1a-b3e5-82cbf5e0f816",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d3874bb3-16c2-441d-b95d-174cbf72e5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28e0d87-477a-4a96-9904-9fb5ad7c62bb",
        "cursor": {
          "ref": "762d368e-c371-4260-8faf-f117fd2be90b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6667fd6d-0be0-4cfd-9d01-7c7a72238488"
        },
        "item": {
          "id": "f28e0d87-477a-4a96-9904-9fb5ad7c62bb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "59b5b800-75f9-468e-80dd-28105885f0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ff883a-790b-4344-a330-7e48ddd14f10",
        "cursor": {
          "ref": "e8e557c8-9bff-47c0-87da-3318de7d3fea",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1070c6d5-521c-4344-84a7-dfc0faba3b99"
        },
        "item": {
          "id": "13ff883a-790b-4344-a330-7e48ddd14f10",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4f9c101f-308a-4960-baaa-1c3ada38a0cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644ae2d2-9de7-4910-9724-57348577e799",
        "cursor": {
          "ref": "1a8d2394-528e-4f36-b78e-7285fa866cb0",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6c699d17-3d85-4cb4-bd8c-b6d32aad7694"
        },
        "item": {
          "id": "644ae2d2-9de7-4910-9724-57348577e799",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4098d840-8a17-4efa-8ed2-0c3bf6948c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e7a3c0-c709-4059-8a1f-feb1ed915ad9",
        "cursor": {
          "ref": "673a8e01-302f-4e2a-97f2-175bcee52d81",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0514a3b7-685c-4b22-980d-53505a14830b"
        },
        "item": {
          "id": "11e7a3c0-c709-4059-8a1f-feb1ed915ad9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "9425d9d4-72fa-4e35-a401-cbd31c3e37db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc89deb-3aee-4705-b423-b17787cc6a1e",
        "cursor": {
          "ref": "20f1996d-6869-4ef8-95e7-3e5cc49229b0",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "2f0641f7-35c9-430b-b8da-653f9df08226"
        },
        "item": {
          "id": "1fc89deb-3aee-4705-b423-b17787cc6a1e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "17600093-1f2d-4eb0-946a-a8745fb734b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04106c4-5f1f-4a80-aa91-54ac0292feb3",
        "cursor": {
          "ref": "649f5145-6f13-456f-a265-724fbf95e91d",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fd4aa379-0542-475b-a71c-c08d7c1bba98"
        },
        "item": {
          "id": "f04106c4-5f1f-4a80-aa91-54ac0292feb3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f26bb267-6ebd-42ba-97af-322a2c3ad7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c6f05d-d384-4f44-917f-00da70746abc",
        "cursor": {
          "ref": "ea5e58e8-29be-4430-b816-c7a857d00b72",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f7c06684-1b73-47df-a7ab-42ee72d3fef4"
        },
        "item": {
          "id": "97c6f05d-d384-4f44-917f-00da70746abc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2b2fc7b7-28d8-41c4-84ff-4eb65d60ac4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d34f3f9-2349-4ff2-8155-047d8de4e6c2",
        "cursor": {
          "ref": "34e5ba2f-dcb4-405e-a762-225e40bcfaae",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "470f3799-bc71-4e5f-bda6-66995f62ec20"
        },
        "item": {
          "id": "0d34f3f9-2349-4ff2-8155-047d8de4e6c2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8c564a26-7b43-4104-ab5f-43c1a6d39b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6fa64c-8f15-4f54-8dff-a9db0d77a16f",
        "cursor": {
          "ref": "6372ce12-c513-455b-ba60-78a82781ee83",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2194004d-d5a8-4475-a75c-4aee45b4a4f8"
        },
        "item": {
          "id": "7e6fa64c-8f15-4f54-8dff-a9db0d77a16f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9676ae1c-8d8f-496b-bca2-4be8646b2263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0164abf-84b5-460d-bf90-ae8e846e0f89",
        "cursor": {
          "ref": "64437b7a-dc00-4aa2-b418-60e9ad4ceda4",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bf1211ac-b87f-4556-98f0-3b0cdd2d0e7f"
        },
        "item": {
          "id": "d0164abf-84b5-460d-bf90-ae8e846e0f89",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "03842b24-553e-474b-8d5f-61aad98bf9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80723a9-ca44-4646-9018-603f3cc0d47e",
        "cursor": {
          "ref": "119fbd8e-e148-4b0b-b17a-d88b841b44be",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bb95a645-3dec-4d9c-96db-204d18865b36"
        },
        "item": {
          "id": "a80723a9-ca44-4646-9018-603f3cc0d47e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "880ce2bc-a60a-4705-b8e9-eafd64b11c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7df38bd-3f99-4f3a-a52f-adf69ba67d1c",
        "cursor": {
          "ref": "4c950d2a-b7b8-4073-a903-3086620caf5a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1876c896-9d72-4193-ab17-521107a83fc7"
        },
        "item": {
          "id": "d7df38bd-3f99-4f3a-a52f-adf69ba67d1c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "619bf738-c93b-4bb4-97ce-99b7d0f15552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d5f4be-d633-46d7-80fc-4bb5bf9eb48c",
        "cursor": {
          "ref": "25920334-e31b-4205-8cf4-94f4947cddf8",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f92d1d30-b54a-4085-b87c-8e6c52183d05"
        },
        "item": {
          "id": "d6d5f4be-d633-46d7-80fc-4bb5bf9eb48c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9cf07480-3255-4a40-8639-6a93667ce099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd58c24-65bd-48a6-ac75-cd1b6b5f415a",
        "cursor": {
          "ref": "7cfa5eee-51cd-42c3-8f53-66cfec78ebb0",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d32ef771-a895-409a-b500-58c3af099e2f"
        },
        "item": {
          "id": "8dd58c24-65bd-48a6-ac75-cd1b6b5f415a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8cacd2b5-5050-43b0-ad02-5f01fee2352a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efea2dc3-2496-4d8b-8490-485c43313361",
        "cursor": {
          "ref": "457e41ff-bcc3-4a7f-a62b-2a365fb78019",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f4b698d4-a764-4b85-bafd-4fb896a5ec5b"
        },
        "item": {
          "id": "efea2dc3-2496-4d8b-8490-485c43313361",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "18d78ad5-9241-4905-befe-39d68ae1e80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea52c105-e10d-471d-bfd2-0fbe0ab72957",
        "cursor": {
          "ref": "304e244d-6eaf-487a-85e7-0655c5f22baf",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8c1c6422-3457-4252-9ff2-635405eb43f6"
        },
        "item": {
          "id": "ea52c105-e10d-471d-bfd2-0fbe0ab72957",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "444b5df3-142a-431b-9fef-d28e929cc52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f7c3f0-7c0c-4c9c-abf9-3ef1c0f697f7",
        "cursor": {
          "ref": "09882326-4b26-42ab-a852-c766f1910024",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e2a015f1-0db0-40b0-b4c9-8aa9729fcad9"
        },
        "item": {
          "id": "80f7c3f0-7c0c-4c9c-abf9-3ef1c0f697f7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8ce2934c-2db4-4f2b-9cb0-4d10eae560d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08a614e-7c54-435d-a710-a622d662dc48",
        "cursor": {
          "ref": "a51952d4-2566-4b35-9a52-1a0ec1c8af62",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0875ecc8-e23b-4f41-aa2d-27ab57fddf5b"
        },
        "item": {
          "id": "b08a614e-7c54-435d-a710-a622d662dc48",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bc910eef-c881-4824-9b53-8cabb7956bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64895ce2-9a42-4506-9666-916f906da2f2",
        "cursor": {
          "ref": "a3610359-f2db-4590-bc6d-3120932a35f1",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8719dbaf-2eea-45ba-9576-6fa5b406b123"
        },
        "item": {
          "id": "64895ce2-9a42-4506-9666-916f906da2f2",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "283dd00d-8fe4-4418-867c-03b1128ca827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce1f3c2-00dc-4d52-8e9a-cc92e62b52dc",
        "cursor": {
          "ref": "0be2900f-12be-44ee-b61e-c018ded4503e",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7ad4437f-ddea-4903-8577-2ec5aaf5d73a"
        },
        "item": {
          "id": "8ce1f3c2-00dc-4d52-8e9a-cc92e62b52dc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a3d7e153-2efe-4cbb-8422-b4889a725f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dd1edf-798f-4931-8326-02de74e783e1",
        "cursor": {
          "ref": "6aa85cbd-581d-416a-9df8-1155f5e52764",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4bb499e0-f447-49e6-ae4f-ac94f88094d8"
        },
        "item": {
          "id": "29dd1edf-798f-4931-8326-02de74e783e1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "37d5ddfa-7ca8-41bc-9426-f4960ae39bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5649ed4-3de0-4411-abba-bb9a958b7d00",
        "cursor": {
          "ref": "6c926c65-f5e5-435b-a891-fc74425a24ce",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8d762cb3-52d4-4233-9877-c60ca43bf068"
        },
        "item": {
          "id": "d5649ed4-3de0-4411-abba-bb9a958b7d00",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bff2b5b0-6b36-4e58-9eb2-cb2b774df87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bc4e84-0a38-4756-8a58-0afbef3ef298",
        "cursor": {
          "ref": "e4795583-cb96-4070-97f5-58894259bc98",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c989934a-9396-4232-a52c-d92b096fc836"
        },
        "item": {
          "id": "e2bc4e84-0a38-4756-8a58-0afbef3ef298",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1a82b9eb-f513-48b9-8028-2ea3268962a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed0a4dc-2f08-47d5-a9de-feedaabca361",
        "cursor": {
          "ref": "d3192eac-ac4b-46bb-84c1-72f2e81f29a7",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7a3e3945-9eda-49e9-8fb5-4951b057edc5"
        },
        "item": {
          "id": "bed0a4dc-2f08-47d5-a9de-feedaabca361",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "1a0ecfe4-c8e5-4357-b557-bdce8336b76f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc33442a-1b2b-435c-be0b-6b6afe02bd69",
        "cursor": {
          "ref": "ae11090f-0ccf-4fa3-9abc-354d6848b720",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7018c4fe-ec27-42bc-95b1-cf5c613b330f"
        },
        "item": {
          "id": "bc33442a-1b2b-435c-be0b-6b6afe02bd69",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e2f7159e-0814-4cb7-9ebf-ee66f14e40db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8131472d-3c0e-4c1e-a059-d0e55ce3d033",
        "cursor": {
          "ref": "6fa7e3e3-8642-40d7-8b03-e1c7198337fa",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fd30411f-e3d7-42e8-b9b6-abdbc34c77a2"
        },
        "item": {
          "id": "8131472d-3c0e-4c1e-a059-d0e55ce3d033",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2adcb573-a8a4-4650-8cda-b0154ffff62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7249d07a-41d2-486b-8e08-23edce58f883",
        "cursor": {
          "ref": "a021e572-728f-427f-84ab-17fad0aeaa5f",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7d01e830-b975-4d4e-a50c-283eabfb54c4"
        },
        "item": {
          "id": "7249d07a-41d2-486b-8e08-23edce58f883",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4cdaeed4-25d0-466c-8e63-07331a0a556c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adf7064-42b5-4c8f-9994-97c47c52f4d0",
        "cursor": {
          "ref": "51a61902-d219-4a9e-ba4e-6fe19a3e2c55",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "119e8090-17b8-460c-a539-40216cc17a2e"
        },
        "item": {
          "id": "4adf7064-42b5-4c8f-9994-97c47c52f4d0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d7cd9881-5ce1-4d18-989b-fda5f8964ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0ec6e2-80f2-46fc-8f3f-2111feaca17f",
        "cursor": {
          "ref": "eda52631-d750-45b9-84d3-94adc647cfe2",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "52003189-3812-4e77-bf1f-4bbddd82d932"
        },
        "item": {
          "id": "4b0ec6e2-80f2-46fc-8f3f-2111feaca17f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "39db50e3-cd26-474b-972e-585683a22e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a47122-6ba4-4db4-934a-628969ed39ef",
        "cursor": {
          "ref": "7a920f9a-de96-40c7-9c13-4f96a1aee91a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "59b2b953-db98-484c-b907-28f5647a6751"
        },
        "item": {
          "id": "89a47122-6ba4-4db4-934a-628969ed39ef",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0d26a423-c4da-4e88-aa1e-4355471d59bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b11a149-772a-4faa-9c57-ec6c158d553b",
        "cursor": {
          "ref": "54cce6d2-d77f-472b-ab9b-a2719280ceb3",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "69f8ccf9-8fe5-45bf-97eb-c2bfaf880ed0"
        },
        "item": {
          "id": "4b11a149-772a-4faa-9c57-ec6c158d553b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a0d23559-2ae1-4b2b-ba11-57350e4cb142",
          "status": "OK",
          "code": 200,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "757d12d1-9dad-4c3e-9570-8f9a7a1ee16a",
        "cursor": {
          "ref": "2535aeff-55b9-42f3-8704-a7c6e9dedb83",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "bd3f6cc5-46e0-4f2b-bf36-b2f9291cf455"
        },
        "item": {
          "id": "757d12d1-9dad-4c3e-9570-8f9a7a1ee16a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4cd6c84f-357f-4493-9274-e9196dd38120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f74ae6-d168-4a8c-afac-e0eca8174245",
        "cursor": {
          "ref": "2445b2a2-b563-4a72-882e-d4ec381ff30e",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "84a10968-e8dc-45cc-b6ab-199f66bed8a0"
        },
        "item": {
          "id": "00f74ae6-d168-4a8c-afac-e0eca8174245",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fb97f065-eaa8-4fc9-a16a-6e6f791daa47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4ad8cb-6d34-461d-ba6f-8eb5a2ff05a0",
        "cursor": {
          "ref": "07c036d8-7046-4476-87c7-cf239c94663b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "586e9c4b-45c4-41ca-ae0d-edbe22e65c42"
        },
        "item": {
          "id": "2c4ad8cb-6d34-461d-ba6f-8eb5a2ff05a0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "5dba8460-3eb2-4c7d-b2f2-365dc4f6eec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12921705-f319-4a56-bd63-4b67b51dfbc3",
        "cursor": {
          "ref": "d8a72967-8edd-489c-b7e8-34f4f218986a",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f3103cb3-59ca-44d1-8487-964aa80c711d"
        },
        "item": {
          "id": "12921705-f319-4a56-bd63-4b67b51dfbc3",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8847ceb8-db62-48f8-b937-2bf545840261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4eaf0d-5cac-435a-a284-922cbb599fa7",
        "cursor": {
          "ref": "ebc71a9c-77bd-4f28-8010-34855f803992",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "411b2824-fe01-4c40-b499-cc24e2363839"
        },
        "item": {
          "id": "1c4eaf0d-5cac-435a-a284-922cbb599fa7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b0623554-70b0-4b22-9763-6754585ce179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60da8ba2-a64a-49c4-8def-02e0e47689c8",
        "cursor": {
          "ref": "d9dcd47e-1b53-4a9b-ac1f-caced96ee352",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bf0038df-0c90-4307-91d4-522dabb9fd4d"
        },
        "item": {
          "id": "60da8ba2-a64a-49c4-8def-02e0e47689c8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "108e8126-e3fd-49e4-8037-5c400a2723e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060ab127-a5da-453c-a984-a291ad68fc5d",
        "cursor": {
          "ref": "22fe7247-202c-4c1d-b26e-a3d7a181cab1",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ad2dae84-666d-4c2d-aea4-b20de86511cc"
        },
        "item": {
          "id": "060ab127-a5da-453c-a984-a291ad68fc5d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "29d02203-764b-4074-8d60-c5690868ad71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ee4eef-d4f0-495b-b155-e17d1f3f181a",
        "cursor": {
          "ref": "81d58cf6-5bd6-44a1-a7fb-a24aa4686119",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "880f3e5a-6508-4353-b436-fe4fb75b82a6"
        },
        "item": {
          "id": "17ee4eef-d4f0-495b-b155-e17d1f3f181a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "87ba96df-a125-49e0-9921-6020cc25ba78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48aaef7c-aa70-4755-a9b7-907cbbcac021",
        "cursor": {
          "ref": "269a6292-4269-4e3d-a01b-fa8e2d42c5cb",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1c2ecaf0-95a0-43af-95f0-48640fafdde7"
        },
        "item": {
          "id": "48aaef7c-aa70-4755-a9b7-907cbbcac021",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "4f6b205b-131c-4d52-935d-0bdfd428c179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5475f3-46e2-4360-b34e-5bc3f82084b3",
        "cursor": {
          "ref": "9e56eaf6-4470-448a-89e0-6b011f808273",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "71f3b48e-9c5c-445f-a5f1-af83b09456f8"
        },
        "item": {
          "id": "af5475f3-46e2-4360-b34e-5bc3f82084b3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e1dd1ca1-40b5-4df3-b9b5-c0671a2224e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36997133-d6e1-41a5-9556-f0414b4798a8",
        "cursor": {
          "ref": "7dcc628e-4fef-460e-b760-d2daeb5a1e1c",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bdb9c83b-a1ab-4e32-8d71-6f6296a08510"
        },
        "item": {
          "id": "36997133-d6e1-41a5-9556-f0414b4798a8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a5ae0f85-24c0-4072-9f5f-5677e31fa426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8fbf82-d73a-42b9-8e9f-45597b180ae0",
        "cursor": {
          "ref": "6716b55b-5ed8-47f0-b4eb-61663ee38127",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "eb552531-caa3-4476-b94c-a619370ba55e"
        },
        "item": {
          "id": "0c8fbf82-d73a-42b9-8e9f-45597b180ae0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2c54caec-cffb-4f83-a974-a64babb84450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aebb7775-a5d1-4d7e-98c3-90775dce2ac3",
        "cursor": {
          "ref": "56e46ed6-ec7e-4ab3-a3f2-d49652759f2a",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2177cc40-3cff-457e-a3fe-6ac273347e87"
        },
        "item": {
          "id": "aebb7775-a5d1-4d7e-98c3-90775dce2ac3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "299ab3f0-9c0c-4b56-bbe0-8b2e864c862e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0cf101-875d-4622-84d8-b4c4a2deeac4",
        "cursor": {
          "ref": "a2597128-bd67-4464-9662-a226c18c21a9",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2333c4c1-e090-465a-9b98-a81e2b922925"
        },
        "item": {
          "id": "2d0cf101-875d-4622-84d8-b4c4a2deeac4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ddcbd938-538a-46c1-be71-ab59040e10fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "715373f6-b804-4bc4-8523-6fa3bd0890b8",
        "cursor": {
          "ref": "21eb809c-b031-4e91-944d-687975a517d2",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9564d003-aada-4c45-88a4-f096ab0c16d3"
        },
        "item": {
          "id": "715373f6-b804-4bc4-8523-6fa3bd0890b8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d908ffac-5420-423a-ac64-4844b2ef3628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20c23f8-66bf-4d0c-a683-f010718f6443",
        "cursor": {
          "ref": "94f25d83-5e39-4deb-92bb-4ec788859d74",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "13526cb3-f524-40b9-97b5-89da8967f6f1"
        },
        "item": {
          "id": "d20c23f8-66bf-4d0c-a683-f010718f6443",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f5a6ddb5-07c5-4e72-b498-6e54c1170681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806b09f1-3053-44a4-9070-c0c45b2ab2c0",
        "cursor": {
          "ref": "76741aa6-a743-4182-af96-968600c7f46b",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "bc5688e5-1b62-415f-a1cf-14bb690407e4"
        },
        "item": {
          "id": "806b09f1-3053-44a4-9070-c0c45b2ab2c0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5faeda57-bd26-4590-ae14-9c82e7e43704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d117fa7c-e95e-4ae0-87a5-7f08f2abace9",
        "cursor": {
          "ref": "87f4143b-30b5-492a-85fd-7b44f2994edf",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b633d12c-1adf-4ce8-ad5b-c81f5f708ac2"
        },
        "item": {
          "id": "d117fa7c-e95e-4ae0-87a5-7f08f2abace9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "114e808d-26e4-4366-a74d-73d701857807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ca70b5-2a72-470c-80f8-906c62e31416",
        "cursor": {
          "ref": "efc4538c-5cba-4881-ac4b-305c7a62b728",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "be80c075-ad64-4d74-aae4-419727d62244"
        },
        "item": {
          "id": "20ca70b5-2a72-470c-80f8-906c62e31416",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "97615016-f67a-4cb4-a327-a4abe59bd5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7506f21e-c80f-4f5a-8a63-0f95e2861981",
        "cursor": {
          "ref": "33d6d692-bb08-4816-80ca-369939beb0dc",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7e4ebfa9-f6c0-48c0-8918-4ab5e0a651fd"
        },
        "item": {
          "id": "7506f21e-c80f-4f5a-8a63-0f95e2861981",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ca55fa6d-de98-4824-bc69-7c3b66953d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a84058c-c155-438b-879a-fc7bdbc00105",
        "cursor": {
          "ref": "8e472776-dca0-4619-bf4f-bba20673d862",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c70b9267-bb14-4fd6-8dfa-a705d91936df"
        },
        "item": {
          "id": "5a84058c-c155-438b-879a-fc7bdbc00105",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d3f9e6c8-919e-4690-9943-dd841875b50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9bbb27-0b94-426e-bed0-1be0046b37aa",
        "cursor": {
          "ref": "3a47558d-bd83-44a6-b271-f2b6e47fa534",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7d2cfeb7-5d89-4e67-811b-148c1ba3ea0d"
        },
        "item": {
          "id": "ae9bbb27-0b94-426e-bed0-1be0046b37aa",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e0075374-0d7c-40f5-a8e8-c6ad7e48ed6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5416bb0d-35ad-4419-ab7e-18dfd77b19e1",
        "cursor": {
          "ref": "8f854b6d-0b03-47c1-84fe-7a9814571af2",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9242d03f-e9d7-46b2-b5f6-f25c88f3824e"
        },
        "item": {
          "id": "5416bb0d-35ad-4419-ab7e-18dfd77b19e1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "693adda7-ba31-46a1-8834-d248e56a4839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbaf20be-d39f-49c5-9e71-6ce6dad71d6e",
        "cursor": {
          "ref": "45b482a8-6c8c-448b-8e01-ec3b33e72614",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "6e71ff22-1695-42e9-a79c-66f016f110e3"
        },
        "item": {
          "id": "bbaf20be-d39f-49c5-9e71-6ce6dad71d6e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "de7e69ef-50b0-4075-a322-e07ec347b23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377a5030-264d-4766-969c-cd88626d3deb",
        "cursor": {
          "ref": "b964d56b-b8e9-449a-845a-376f121724f0",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b9a6a4dc-4b2e-4970-be59-46502d5c2a47"
        },
        "item": {
          "id": "377a5030-264d-4766-969c-cd88626d3deb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7cb6364b-1124-486d-9f4c-76a135572e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c487092-4d48-4531-b143-2be76f495dd5",
        "cursor": {
          "ref": "005dd46e-3a7f-4644-80bb-e46ad138bf39",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "489af8d8-4285-4698-a13d-f7f87c3d7776"
        },
        "item": {
          "id": "1c487092-4d48-4531-b143-2be76f495dd5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6d42748b-86fc-430c-bf1f-2e433b0c142e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d779cf8f-e05d-4a85-89d7-7dda9d3a68a2",
        "cursor": {
          "ref": "9817715e-d981-46ea-bacb-b2a88f2c366e",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "eab02125-f76f-49fa-a47e-85011123b45f"
        },
        "item": {
          "id": "d779cf8f-e05d-4a85-89d7-7dda9d3a68a2",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e6493905-1b99-4150-b89a-cf4edd404587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73140c3-6c31-4f86-854e-f843e43575f3",
        "cursor": {
          "ref": "2870f2cc-b1e4-4eff-aff5-798b96d1a12d",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f24e40bc-ce1b-4e6e-892e-74c35ef5b73a"
        },
        "item": {
          "id": "f73140c3-6c31-4f86-854e-f843e43575f3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "daa3b72a-bc78-4b5d-87d8-59f8b6df37de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b28c87-2912-4d7d-8c40-6ee0eeebd22e",
        "cursor": {
          "ref": "4e5b25df-7791-45d9-aa5f-5fca7626a6eb",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3f906a19-5bd9-4c8c-b4dc-8e9248261e60"
        },
        "item": {
          "id": "96b28c87-2912-4d7d-8c40-6ee0eeebd22e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6633d112-e5e5-4858-80ee-8c8233116207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc764227-1a81-4232-8cc6-56847542c0f2",
        "cursor": {
          "ref": "0d6f3f5f-ef98-427d-861f-146275c3fc47",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "53c3000a-2a86-4772-b4bf-918a3fdfee8b"
        },
        "item": {
          "id": "fc764227-1a81-4232-8cc6-56847542c0f2",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4f16d793-1fc7-4ce2-9310-a4209780c977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4190da4c-3a18-4af6-b940-95957a9684cc",
        "cursor": {
          "ref": "24fe3164-7ce3-4beb-99fe-f7e9e780f4b3",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "5a3c67d4-8d80-4aa2-8723-05e090575b89"
        },
        "item": {
          "id": "4190da4c-3a18-4af6-b940-95957a9684cc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "792698c0-eb12-46e7-a3f2-9596dadb8fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ea5cdf-6f84-4170-a9cf-ab0ab2919262",
        "cursor": {
          "ref": "7e7f1342-62b6-4687-b249-fc9fefda0963",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e1c0638d-71d3-4676-8a68-1a2032cac98c"
        },
        "item": {
          "id": "b8ea5cdf-6f84-4170-a9cf-ab0ab2919262",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "75fb2150-2ec5-4f92-bddf-c44cea25e3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc3f40f-e93d-4a79-a704-dac99fe1ce19",
        "cursor": {
          "ref": "d9de9c96-9dca-4577-84da-631188c41c6a",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a4379e8d-becb-428d-a529-5c0211a90bdb"
        },
        "item": {
          "id": "6bc3f40f-e93d-4a79-a704-dac99fe1ce19",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2431686e-60c0-44c2-8fa8-5ba5937dd810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a624740a-b885-4e0e-a3d9-51f65266a142",
        "cursor": {
          "ref": "14aceb7f-437e-4098-b5e5-ccfdbf86781e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bca58675-93b9-4c4b-956e-f9590c86ad06"
        },
        "item": {
          "id": "a624740a-b885-4e0e-a3d9-51f65266a142",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ca0b178a-228c-492b-93ff-9bd717d005c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b04999d-838c-4875-8ce7-15e0cab923c3",
        "cursor": {
          "ref": "d0381cfc-5f1b-45d0-8269-d8f3c99c307d",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7241853a-783a-4ddb-9292-1b3bc78b99b3"
        },
        "item": {
          "id": "1b04999d-838c-4875-8ce7-15e0cab923c3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a65a5eff-9404-4273-b5ea-0be53651825e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd29fdc-c193-4ed0-9b3a-4ca6aac37ead",
        "cursor": {
          "ref": "19fdf13c-5572-40b9-9439-fd4adc4143bb",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0242a845-ef8f-4db0-a3b4-8fd094870c1f"
        },
        "item": {
          "id": "9cd29fdc-c193-4ed0-9b3a-4ca6aac37ead",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f619edf3-c581-4ad5-b32d-06dc07697f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec3258e-6355-4cdc-a439-1d4144bf9097",
        "cursor": {
          "ref": "1b8f51c0-ac28-4c6c-8a22-332a032cae63",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "07949a39-84b2-47e6-b738-f75f00dd2647"
        },
        "item": {
          "id": "8ec3258e-6355-4cdc-a439-1d4144bf9097",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4bb2fa10-124b-4f76-9d74-1a464bf5f242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd38b9c-4b72-445c-a044-14807b195d33",
        "cursor": {
          "ref": "dd0b43b7-7dfc-4adf-8a7d-e46acc64a9c6",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5d8fe83b-d0ff-4fb2-8922-05ff5bf91313"
        },
        "item": {
          "id": "bcd38b9c-4b72-445c-a044-14807b195d33",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "89f637b5-8c35-420f-9fef-85a2cbbf0c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce4d97d-0226-4b1e-8f0d-583c54354c08",
        "cursor": {
          "ref": "ec5388a5-eefc-43b5-a261-ecdedde9e11a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c1b3d36e-7047-4fc6-b7e2-487fc926ba05"
        },
        "item": {
          "id": "5ce4d97d-0226-4b1e-8f0d-583c54354c08",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0668c2ee-785c-4ccf-be0a-561301fc5f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602c8826-af3b-4966-846a-91cb944173b4",
        "cursor": {
          "ref": "1a898e3b-e74c-428e-8e52-0d678058fab8",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "47a89aa0-171e-4768-b0b6-31463a3a3f51"
        },
        "item": {
          "id": "602c8826-af3b-4966-846a-91cb944173b4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c715843c-b6a4-4a24-83e7-185d9b32ca44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4639311-871d-4ce2-b6bf-8e7e7d41bfdc",
        "cursor": {
          "ref": "68a62607-da27-4978-83b7-1408e26a6cb4",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "d60fa76a-03eb-4259-92ab-4b90886bdb00"
        },
        "item": {
          "id": "c4639311-871d-4ce2-b6bf-8e7e7d41bfdc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ba443ec3-67b5-48cc-aa10-58c71bc65c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4be63ee-3eb7-4503-bc6b-0ff2b38fdaf9",
        "cursor": {
          "ref": "cf4088cb-6026-4dd5-8080-73ec00fb3a1e",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "794fe6a6-4412-4081-b8ee-d5b4be885a31"
        },
        "item": {
          "id": "f4be63ee-3eb7-4503-bc6b-0ff2b38fdaf9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "986eb8cb-0b43-4f97-948c-deae2cbf416d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94180208-8646-4639-a483-44e414eb282b",
        "cursor": {
          "ref": "41cf802e-1857-4125-85a8-cb286b523c9a",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a3c2185d-8a63-4a17-a757-81e391fb8bb4"
        },
        "item": {
          "id": "94180208-8646-4639-a483-44e414eb282b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e0e68007-fa63-4530-b6c4-778f9d1e404f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d414da9-03c1-48f0-8f92-ce4f1020b54b",
        "cursor": {
          "ref": "77829393-8160-464d-9764-4c323f2789a3",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "e2f46a57-3b3b-4b06-94f8-87390f54691f"
        },
        "item": {
          "id": "4d414da9-03c1-48f0-8f92-ce4f1020b54b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1e9521b4-80f9-4ed4-b81e-2e7a57db8a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea258329-4c6c-47cc-8d44-e14273171cf9",
        "cursor": {
          "ref": "ea9e3ed7-2b51-41e2-aff0-93217eb10537",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b589c837-9baf-4659-bb38-1943ecbece73"
        },
        "item": {
          "id": "ea258329-4c6c-47cc-8d44-e14273171cf9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "ce951c86-dad8-4b16-bc84-c2becb179a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5514d3-da6d-49cd-9b9e-066605fa76ba",
        "cursor": {
          "ref": "9a2e4c90-c031-4d67-81f8-501a55e3bde4",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "460f4f2d-0942-4d78-a7d1-19efac99b622"
        },
        "item": {
          "id": "cb5514d3-da6d-49cd-9b9e-066605fa76ba",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "294d4f30-5e1c-4b23-8e3b-7d7f5672f1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c20006-40dc-4041-9cad-626de7378c77",
        "cursor": {
          "ref": "05e6ee0b-7762-4188-a071-e3c004b81dc1",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c44e73d8-440c-4f46-a632-cabf373936d0"
        },
        "item": {
          "id": "74c20006-40dc-4041-9cad-626de7378c77",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8f88e4dc-cd2a-4104-88b6-2a48027bdb49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c9b722-a0b0-4597-9e19-01c00c5e708f",
        "cursor": {
          "ref": "af7a5863-8548-4b6a-bafe-c7d8065067c1",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "984febcf-1008-4ec8-9de6-78d499d86573"
        },
        "item": {
          "id": "b0c9b722-a0b0-4597-9e19-01c00c5e708f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2416af4e-624a-45df-8f00-a5a1d867d464",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b1210e-493e-4b8b-b67a-86c1d8d3d98b",
        "cursor": {
          "ref": "3685aabe-8e94-434b-a4b5-dafabb46766c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "855dc57f-4cea-4756-b9a5-fd128b708a68"
        },
        "item": {
          "id": "05b1210e-493e-4b8b-b67a-86c1d8d3d98b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "75a8a2d2-1c87-4401-8801-74f99bf1917f",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4f2888-3273-46da-b3fc-4d78cbd3ac02",
        "cursor": {
          "ref": "757af183-cc56-477d-b77e-b591a2a74a29",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "27075f31-e068-4de6-aa8b-fc3123f67155"
        },
        "item": {
          "id": "0b4f2888-3273-46da-b3fc-4d78cbd3ac02",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f782919a-f45a-4867-9ccd-12028133b6b9",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c453277e-6896-4c86-a006-9fd7e01ea06e",
        "cursor": {
          "ref": "85fe5ba3-764a-4aeb-b1f3-f13c36f23579",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4b6cdb66-db25-4863-a6d2-67f81122fe03"
        },
        "item": {
          "id": "c453277e-6896-4c86-a006-9fd7e01ea06e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b08f9054-47b8-46e8-9a6b-6cef90412c5a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c453277e-6896-4c86-a006-9fd7e01ea06e",
        "cursor": {
          "ref": "85fe5ba3-764a-4aeb-b1f3-f13c36f23579",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4b6cdb66-db25-4863-a6d2-67f81122fe03"
        },
        "item": {
          "id": "c453277e-6896-4c86-a006-9fd7e01ea06e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b08f9054-47b8-46e8-9a6b-6cef90412c5a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db22b9f-131d-4033-89c8-43766e45910c",
        "cursor": {
          "ref": "5265853c-ac1b-4d3e-81cb-d8321069336c",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "6685fae6-9974-47ac-a4a0-d1e7a616f06b"
        },
        "item": {
          "id": "9db22b9f-131d-4033-89c8-43766e45910c",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "638055d3-9452-40fc-ae1d-283b6cf1e9b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb9e3fc-182b-4307-b856-c2f650ea4422",
        "cursor": {
          "ref": "6a67abdc-65dc-4446-bf4e-7d8ccebc5785",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "76ecd48f-b85a-4a8f-9a7e-0512b187ac0b"
        },
        "item": {
          "id": "4bb9e3fc-182b-4307-b856-c2f650ea4422",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "307d99c3-62fc-40e0-bf50-70881c93d4ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}