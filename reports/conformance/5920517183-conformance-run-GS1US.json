{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "43696a7b-8719-4c58-b8bc-2fcdc0eb9285",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e681ffec-3c35-4094-893c-8f9b86cd4e32",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1248cc86-49f3-43e1-a388-db7ac8f3f37c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "095d4224-48d0-4987-8b40-0c91d5adb10c"
                }
              }
            ]
          },
          {
            "id": "7fb23673-e558-4b75-b5e0-0ef3192f9806",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "81b73bdd-3b21-4a66-bdac-361bd33d93bd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4eb29f84-3d36-4f94-b0b7-2bceca47338a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2845d4c7-201d-406f-bfff-ce8688e5e28f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9e4895e8-b093-4eab-914a-3eb7cab1edee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6074698d-986a-47c8-bfe8-2f56e6130113",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "273429de-6b08-4edf-91d4-284de5d14d05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4645613-7488-4f3e-b504-cb30fca2a384"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cdbfe1b8-adbe-4fc9-a34f-9cf6d1a1f746",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "40c7a909-cbef-4cc6-b10b-5134dd571ec4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ecfeaa67-7365-4b91-8c1d-3d934037a963",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d7df47e6-1e6e-49f6-9236-fccbafc19264"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eff74509-86d1-4909-8b54-211c279d221c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "55e01d3c-17a6-4a63-870a-ca7b0081da2f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d759370d-f839-48c8-a5f6-6f10806ff4f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57ab5645-720b-4aa8-ad02-4623109279e8"
            }
          }
        ]
      },
      {
        "id": "982807ad-a556-42ac-8b68-d8a2594ac67b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "693f1a6e-c737-45de-b629-27415c667e20",
            "name": "Negative Testing",
            "item": [
              {
                "id": "369cab4f-6f5f-4626-8544-4a11d4259082",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "09a602a9-3539-46ab-a538-5e00e8ef5843",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fcfe13-95b9-4973-9d73-96efccbe9211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67726ce5-a518-4330-b372-529c2fcd8c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1994b3d-c54d-4f89-a928-7dae718d05bf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ccbef5-264b-47d1-b114-ae29b1056ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc4a5f26-04be-4c8e-9bc4-41db6318c612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19570f2d-af27-40fb-a3de-95b0d4f25a93",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad3c8d3-895b-4d13-9249-6790218a1985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41a4e847-32d0-4df0-9c57-58c91a7d61aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef26a8ce-77d1-4c34-b7ef-b26112d9795b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3195f736-db83-4453-aed7-d5217661a88d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33cb76f-262d-4d63-885a-e8ec6cac6682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1c5967d1-a652-400d-98a4-26e95963cf7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff29c160-0e97-4d91-9baa-f676ba1e05bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e6fbfb-ecd5-40e0-911f-023756309055"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4866a5ad-b431-4077-9a81-d2c39d9e576d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d9ac0414-cfe6-4ad6-b464-626fb21f9225",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c46c4b0-91b9-4a0e-b47c-3b1d5ec7f504",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "71d73357-905e-4c91-9083-4bd9d64130c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "11e08eab-c025-4f28-940a-07f28633378c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b3dfe14c-bd15-4836-aba6-321ada1c8459"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e40f1529-2fef-4c60-ad3c-2eeb7cbb5c04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b25b71f-8bbd-4cc5-bbd9-4df22bea5ea9"
            }
          }
        ]
      },
      {
        "id": "035ae193-b47b-4268-ac70-688ebb72f063",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4eda53b3-7588-4b84-8926-480df280dc87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7041854b-d832-464e-b9e4-b606377437f4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e9dc7b6f-7c75-41ba-a753-bda5c6635ef1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ada09c9-7dd7-4e35-b442-0a615a82345b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c40ec6-a394-4c2a-9089-f630680aaeb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b20e666-df41-44e0-8f74-30265f143082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b95c7ed7-219b-4115-959d-fe48a908ef9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287eda33-1dac-4c6e-bcc2-a6d8829d5b0b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5723f668-c1f6-4b12-b30e-405b74292913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52a4c73-94f4-4580-8f31-b83aeefa9b0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e71279-868e-4962-91b5-aa22e4a4a6ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93ba293c-5ed8-4787-b445-12e9551fc748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae7dcdb-09a5-43e6-921d-fca1da95f01d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a2f7e6-e589-4a2c-a604-fba117f12186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81ad1d17-5989-4fce-939d-eb64b5f5f16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcbcaa0c-7437-48be-ab10-6cbb1b1c4ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4e53a9a-3c95-406a-a247-23f21ae36be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca7418b-74f6-45ff-9432-2ed1e0504d90",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46dab18-e935-4523-bd81-fb13c72bb72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff7208c-645e-4e22-bec7-4b5d2ccb56fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619fc891-7fda-4881-8f7d-62cbcf429083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0652602-a6fc-4508-8569-80cc39458079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23895d1c-20cb-4238-b1b6-7cb2ac677a74",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee8f7bd-981c-4259-b79b-fb925951f30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a408ba0e-0c38-4b4e-8cb5-82b36191c53a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f00b6e1-8e29-4f84-969b-193810215357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee40ddee-1cbd-4a68-95d5-7fc2c2f37602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe33421-1019-4cba-8c7c-08b9798f17f8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b979707-7e04-48b9-bfc0-0f45ae3d5d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aa452b2-52a7-4baf-b5fe-981773557b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0a9700-e9a0-444d-a8a9-5f7fe2705a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "197b896d-ed50-4f3d-9123-37abc075971e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe649351-c701-43f4-8f94-10ecb8b552bf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a53970-43fa-4bf7-8ae9-0eb912376e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836bd8ff-b2c0-4d32-b0a1-d181a2a96e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c257dfba-f7ac-4c1b-b5ab-d99be077e75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "374add6c-70b5-4925-a419-20ffbc8395da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef1de04-8528-4d7b-b12a-b7d88e4c79ca",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8d91ab-f9ea-4523-adc2-3e3c6543f737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a628c64-a103-4669-a67a-8b60a8978a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71aa72af-1d72-476a-823a-f47026a15ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9226bf1-cf3b-4aee-97a1-fd47db6df97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a582e6-68d5-4674-acb5-887377b2f3e0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d50c62-6b3d-4188-a23c-ceed3e62846c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13ca44c0-7521-4db3-8721-e08c2934bfd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260932b2-d793-4b2d-9f3f-cce3022a6906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4920c9b5-d628-4eb4-858e-1e1328b0ce98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96485706-ebb8-4feb-9dd8-0139589c5f60",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb5ae00-ca50-4b4f-ba41-bc17376c1ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e03bf936-c4d0-418c-803c-1ace15a4d50f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54031ca1-5862-4a5d-a482-aeb5eb768c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "035050c1-880a-4ae4-8f96-f37bbb6d5bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1177b3c2-4e1f-4670-9439-9ffcefb0a34b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84666974-3672-4d6d-82b6-3204093d6045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8537f71c-7238-4211-9c57-365d3ad6a696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ddf936-78c0-48f1-988b-6a04b734930e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8895d771-6d06-4511-8f5e-0e0c84471104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc783385-fb9e-452d-8fcc-86a2826ce2c4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61610a3b-c39b-4aec-b719-8fbc021dd8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c982cff-cf90-4aac-9f1b-64b496cc45e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176f3714-b782-4ef5-adc6-9a570ffad1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96c64dc3-3f41-4671-ab3f-47f77c2f78af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2995bfde-ad29-4936-9988-f6f5d6ad6e63",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3d8a41-d7f3-41ee-b229-747d90c21802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd0d9c4-807e-4f7b-948b-1bef7c3f08cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3263deec-08f6-4811-bf27-a638af3a719c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bd1622f-6ddd-4002-a5b2-9f8332064268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13716cf9-02dc-46a6-b20d-59248c3906cc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8aaf74-6f01-4477-b724-1d7f9085e237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2a0e4d-fec4-4931-8b62-3247760975e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4330c211-131e-489e-9954-bd52125d2bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8f75201-90f8-4710-8809-951132c84c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e461cd42-4eab-4394-a421-852de05553c5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9c8639-deb6-449c-9170-b22f43226019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c69765-8c41-4e28-bf71-6f7839ed2b3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6280befb-a8a0-428e-875c-8a58f8edfa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18489572-4677-492f-8300-f3121d1c6a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdfacfc-b7ec-44ce-a1ae-b348d3238e0f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8f7c1f-5c6b-4711-a01e-57006a9769c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f842fa-5d80-41f6-96f2-59af1fc6f166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c4f853-93ff-4790-9a3f-c74eb9b3b743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b089478f-9e17-4cc7-b76c-d19454fc7d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f41f9a8-d2d0-4363-b712-6cf2c4871450",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "016c69ef-8b0f-4cab-ad9b-da5b77d04149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf0b05e-8edf-408b-9944-ff3fce561f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2382e5e-fbd6-4b58-ab27-988265518362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d23ebc2-cd4f-466f-a7cc-c079bcfff78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36dcdf9b-c578-48da-bda9-8f2d396a1f08",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b19c5b1-2473-4b30-ab8d-8d6bc0412b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288715be-b797-4673-b944-59c727c7e753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b795408-293c-4536-89cf-c8a610f4a8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9a323d-8df1-4fa5-9fac-db2452eb56a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2260ca3-f814-4545-b938-0d1e6a415f1d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3618a9-646c-42f3-87bb-464327818335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef197a15-33a3-4ce7-a38d-ccb0bd50085c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba556b27-352f-48d8-8ff4-c59c5f24d323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96823b9e-19b6-45ab-b95c-01e945f8fd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cd7b10-f1e4-4e87-8c24-e001c099fbb1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e057d4d5-4614-4eb6-87e4-8933329cdb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63db8708-58e5-4cd0-8eb7-697a14285f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48e20af-3729-4088-b433-69d0dbb3ce01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95def350-f046-435b-bd2f-94bda3ef3a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7ff9b9-ea8d-4d11-8e2f-103085294bdf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad8a154-eab6-4634-85c2-f238ee8d2a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab27d5c-8b56-4936-8277-bc0c5f30cddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7e664e-6326-4d8e-9429-d5aae96bee60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eefd3b8-e88f-41c7-b4c6-d88e718d5714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ccbfb1-65c5-41c3-b8d1-d7ddaf411297",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256bded6-3ff2-4bbb-9d43-430bc422a4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1841a30-0029-4617-a79a-1c0406560ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dce31c6-c35d-415e-9231-a48769b103eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "860d82c2-5c72-4d48-9250-1171a720f428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4da5eb-eb69-4446-9e51-5ae798e75662",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91eddfa4-f943-4b7a-94b2-fed64b843e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b048c1-1a72-49cd-8110-6308f30062a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84950fdb-6476-4294-b608-8d0b15c0f648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b76337c-72cb-402b-b271-4692006c4822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bb67d3-0993-4441-b290-4f3e1d84025b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f6a8cc-6bc5-4b14-a60d-f2ac41d77ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc89597b-8b19-4889-9aeb-2994309d620d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8756290-0bdd-451f-84a4-58698536d4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "10177d99-b937-4863-b6e7-0589ed9290e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7852919-bf0e-4ab1-93be-30b5c33f635a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b114ae60-a25d-499b-905d-ef8a3e8b4e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3bbaac-5ae2-4fea-a614-a87da7a81b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db95b78f-56e3-4868-af3f-86caa4f85fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "894663a4-a526-4e0a-80a2-7dc40af60df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4aba79c-d129-4981-aa0c-510c6086669b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c0bd2b-221a-4419-8408-153d2ed13142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8cbc8b-25ab-4a7b-8754-107f8fe88bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d98750a-5552-4153-8920-bae6fa21dbaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f78c7d68-0b32-433c-b4ec-7c3477aa22c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca9f815-ad5e-405b-90f1-de24b3020461",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb588398-3362-4335-9aa2-a8a4800bfe1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1011b5-facf-4be1-80b1-9595d5620632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c82f49-6d7f-4e48-b092-0bf841515b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b19e148-b88e-48f4-9dc4-80893c810b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa19b84-df4a-4310-9f29-759d7359e23d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d752776-1382-4668-af9b-7fa0a77206f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c02800d-2b64-4cec-8033-657c8496f4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74a9b44-83d9-477a-b742-a85577e4189a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d52170a-955a-443f-a2e3-fe54c29366ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a970df-f786-4652-8ad3-9a12bc68a405",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0328daf2-9a65-4dd3-bf67-a5ce040ab0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198bf012-4cbe-4683-a429-db2edf9ce5bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1fe17c-cab0-4af2-a441-bf4ec97ec830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d08c5fa0-c920-40fc-892f-519f009b64ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc773afe-db59-495f-b868-9207ac0922c3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f6a966-9cd4-49eb-9287-17b38ada0eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1145fc99-6814-419f-add8-b4fe78231685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43053aa7-c1a7-4c8d-b85b-517e6bf0ea48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8c315f-a68e-4728-be22-b35c91d8f212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449cf1d3-db38-4878-a508-ef777c9187cb",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87097188-0b12-4c46-88c1-0d388f7ded78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0533ad75-021a-4e33-9eac-24ed39e0405c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb24bde2-d850-40a8-86b4-67e905f6cfcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3480b35-5698-4d1c-8186-b43cefc6c9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d637ef5b-5e72-4133-b40b-62460e88b8f7",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5295378-0304-4f58-a638-c7247d5e7bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b651e276-a40c-4e80-8e99-07d1136098b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2349aa-eede-4a80-816a-ddcbd015d1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d613eb4c-ff56-4435-bac6-f8ffb1627530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c77a97-fcda-478c-8def-e98e17f5fe22",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "761de1e5-ecda-4bfc-86c4-9b56554055d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92252e6c-5061-475a-93d2-e0375b7ffb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9034674-62bc-4c09-a99c-a9dd0d807866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "87f6af04-af5b-46d7-bb80-1346042634a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe83e57-6ea4-4ab4-b74e-e90e6b0c7740",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711ec1c2-931c-45da-b5ba-2ed173b5a0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe192d4c-cb2d-4a5e-86b8-5553f2acbfcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7f7bcf-fc2e-4dea-b284-f9d2cf2192db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db6668a4-020c-4965-9dda-85bf83a85aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68976397-7e31-433a-b51f-6cb770ff8070",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a254b7a3-d3cf-433e-bca9-d37282093aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be7cd2d-d8dc-4465-b1db-f7a51b8cbf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c146972-8d1e-40b5-8acb-abfe39c86226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ea6fa208-3138-47a5-ab6c-36006eb4ed61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc11a327-a49a-473f-82be-fee8ce5141d9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc73e4b4-9b38-4eca-b0f2-be8d22ee6474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cb384fd-2490-4df9-8f04-6418f7ba3c63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef3fa838-a60c-4b75-a624-77a5a3be555b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6db7ebab-3343-4ac0-9208-0569f48ee9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2563568f-ba5b-4f75-8f3e-2c15de382e98",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fb06d4-c99c-4716-9a95-b5cd6a3d34d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c657af-fc38-4229-9987-9ac0a867b6b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "556a1d3f-d821-494e-b46b-ae1bb5276e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12c5776d-ce58-4d78-8377-979dd579409f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89b7989-29b8-45bd-a3cb-8fc6b04607d1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1e2769-516b-478b-9194-2529ad9c26b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197a1159-2f49-45d8-935a-48b9073ae7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216d23b0-a829-4d08-ae88-dae1c7933253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6138b4b2-047a-436e-8714-399deed6eb0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8771ecc8-a6d8-47ef-a4fa-cfa89851137c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146638b1-7a74-4df1-9343-21adf65f96de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ab1787-57b6-448b-b67c-06a3182e6e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b45858-5679-4cb5-aa83-0ad68dece73b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bcaf366-7513-4ec4-930e-673625345c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d38fc8-0a3d-4eb6-93e3-6c90658dcac2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268bdf8f-3e36-417c-8ffb-2b66aba57886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5ba07d-d9c3-4ac5-b268-d3bd727eeaa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3497c6d6-4028-4456-9bc4-3c9d591837b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe84bf1-6c4e-47a4-ad5a-696486e4c9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3279ee4-a3af-4318-a3ff-96cfaf2889a2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe8c673-68cb-473b-afad-60f2c0975803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760b2308-339d-4bab-a9c4-5ac3a794177f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c63bb86-0e3b-4904-b860-737261ff1966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfb035a-e021-45d8-ac7c-379f907d3b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f342c14-3e76-45fb-ab69-b359f1ac5c6f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ab5c87-3f52-4e3a-a418-7945a85b3f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ff2962-6761-4fe9-8ac8-ad691dd0aeb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01be300-af43-4c3c-82c3-8381cfbe3a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec2bdb1-357f-4d15-a154-6b000fe281b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdb3642-a1c2-42ec-9db2-efc0ba7365bc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8351cb5b-6844-41d5-b54e-91bcce211a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3174d76-a6a0-4f50-bdc2-55c69cb03cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea242df-417b-443c-b8bd-96a87b9f952b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf0a953-4946-458e-8be8-845b777600b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a56b217-3697-4065-b904-5439d8431564",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abaa825c-adb3-4283-b058-4bc3ebf83c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392c182b-3070-4570-8f08-2ac1db91e5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a3adef-a643-482b-8edf-fb28d26f4fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "806aebca-6511-47ff-87b9-02f689aabde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61cb1c05-8d80-4829-9f82-27e4c8adc4cb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cff7a11-74a8-45b4-a659-5321c7261dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf57cdd-ffb7-43f9-aec5-54f39236d235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d22006b-9aa1-4781-ab70-528a14d31e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf042202-e1a1-41c9-b2a9-9ce01582f4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83e3100-d3a7-4dae-8029-b06a8ae4ece2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0c86ef-1e6d-4950-88b5-af06d02a5b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01b06740-e465-4d80-972b-ffed3d66306c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b72c69-1d49-4204-bc69-b4d05ed0249c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1af74272-90b9-4ba1-afda-fde043b587db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645ce723-3a30-4ec8-8e9f-366988e28693",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a679b84-43b1-425f-821a-73188ec0de61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15aedb1-e8c5-4d60-a039-c9feb6d0a7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f82f33-b5b2-41c3-84a4-ed76c29fab9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "edf814dd-5ee0-4210-88dd-e8960cbd9e51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f365254-f03e-4497-bd40-64a68a3d1eeb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa4b5e7-b45c-492e-bdb3-67db70078af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2acb081a-79b9-4235-9c3a-71e5edb60287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76266db-d24d-445d-ab39-ced8f25ef538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a290a917-cb90-4c92-86d9-1ebaf8682547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743b22b4-2ead-4c31-86d9-aaf6adb7f3b3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d6199a-0be3-4c33-baf1-a93bb0174528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a800095-22ae-4d12-93c7-5138796c3b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338db99c-e1cc-4d18-916d-28ddee79e1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af8e7562-08b0-4451-a84c-751d3be7bf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7065a85-6afc-4f61-a60b-79059c29566b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192ed19b-4b89-476d-b8b8-9bce2424bba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60bcf6a-0032-4827-9108-e3ef53044ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1138259-9879-40a4-beca-247a4bcbc418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3218857-1a3f-4e67-99d4-3bff1fc1d05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8454623-6aa7-4003-89cd-fd5cf55fef88",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b782d21-f465-4cba-bfc4-e74788e74fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae369fb-9640-499d-bdda-5bbbbbc80b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce96b0a-b759-43ec-a984-e476cdc8f2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a73cc26d-7269-4657-8380-9fe4c2927adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59643fc0-52de-4bb2-a8a9-cb383a174952",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7477132-57c3-4032-b622-e8514b36bc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1765a3-f9e4-42a4-81be-55e34459fd81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4385ea-89db-41ad-99eb-58bddf1656ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dac2e936-a4ae-4374-9d2e-577a818e5465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47132af-af45-4ccc-a237-a6776878059c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69035b2-5140-4e82-b539-22ea4cd80261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d1844f-337a-4fe5-8328-6b15730907c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e074c1cf-de25-4b14-84df-81bd32115099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb46a309-d08b-4889-9776-c4d236c2137b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe9e282-a51a-49c0-a406-58fc5aaec198",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465ac385-f2d3-4cfd-b955-3ad1050eab6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa08ad9-02b8-4d50-9c9c-3f4e47df35e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ced894-d714-443b-b3ee-ba29d3a331f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9217fe-d594-4943-8afb-fc2aaeb28e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc27978b-db46-472b-9695-c8c166354464",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8c0bbe-bc34-4739-b78f-dcc6be0cdb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6499743-a0d3-47d2-a7af-146807698298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83f0624b-1280-405e-b92c-f8d9b4a146fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ad5698-530a-4746-8ee6-45cd5d2fa093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d204e1-edce-4149-8719-3805f5cbef1c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76808baf-2e83-4f4a-81b0-08575617b543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3c72bd4-5698-4df3-b8c3-ed0a910e77ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fb561e-ac1e-48bb-b173-0b9fae1a03e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "597a65dd-76f0-4aa2-91c4-aa00d7f60052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc93a966-5ada-4247-b903-0990136136f7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1c5c38-46fc-4b62-ae38-b662eedc58ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af094d5-653f-4383-94c6-5f3dcda26019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc1e0ec-11a4-4589-8f1d-862c3be24d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "273f32a1-3723-43c6-b446-086e75cef2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a8628f-4c7e-404e-9bd8-c02930f45710",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39576e32-01c8-461b-9fc8-a2623b07ad52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e40c614-8e82-46fd-bb18-5c23d60c68ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b93e1c-b46a-4eef-8a4e-274d142f97c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "97269341-faa6-4d98-94d4-10e77a7b5b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5827c00e-869b-4506-b6a4-aa07780cf110",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658f11c8-e9b4-4604-b0d0-94a19346798e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cdd9e4d-73c3-4aa4-ae27-4861cd970e36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a011b2-7eb0-494b-8151-f284aca5d69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0d1773-d735-4545-a65f-080ee1564bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603c0318-23e4-4c18-95ba-68bb0720065f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b1204e-b4ae-49ef-903b-6ef076f98057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8654a76-7596-4fc0-9d3a-6d89f99ed75a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40f00c1-2e16-45a1-88dd-f10fa0d288c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb589c5-7082-43e4-a8dd-8cbd2ef43f13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f996d914-7a2a-4cd1-af09-2a25449b9350",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b52828-7896-4aa9-bc8e-4987457f3b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41c4336-2a13-4f24-bc96-11b4da33472f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f808ddd-8c17-4d21-8ae3-d42a38d99d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1572dc00-bf5e-4313-aa40-53e9adcee55a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89f34dab-0624-4eff-8ceb-1de3b9b66ab7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8f89213-26e9-4403-9438-65c3bf018dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38f94de-504a-4a1a-808b-2470eaeaf705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae1ee3f-50df-4375-b928-5a12b3476ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "62feaa43-b209-4c57-a2db-5bbbcb2c7a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751216e8-ce2d-40ea-a7cf-6bdbbac7cde7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc23bfa-7ff0-40fe-8939-4b57366f7f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e596c8-b475-439f-84e5-65d48261f591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be70701-79fc-466b-8e46-344a5f49d654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c562398f-e584-4622-9367-b93898bcabb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6977362e-4b78-43d9-967e-cbb01b01f878",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13441a79-0a40-4edb-bdec-48aad5de3394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d2a5057-0567-48e8-abb3-9fe497600f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a5ef13-4de9-432b-a11c-382b9b291efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93803ed1-d439-441c-9816-2fcf2af359b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9759bc3e-6c15-4830-a8f4-369a00fa8e0b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d08f94-c6cd-4f31-9fa8-c264c6eeaaed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3e98034-ed86-459f-9f27-75bf158875f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05f8f4a-70d5-461a-ba52-94ad68d2b0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34d75d1c-331c-4d9d-af6a-4580bda3176d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0b4987-a02a-48c0-b5dd-f75a20d64cc9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fd2d04-b339-4c60-abcb-c6bb3436b196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a84299f-e2b3-4d73-8ed6-48a8f7b19fd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d485d92a-0b1b-4379-aa70-6bb73cf8028e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac58474-f781-4350-95b8-4e8b73a4bd9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973ed1ce-6f6b-4e36-9753-99e3f6b1d10b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccfe662-9c29-4d43-91df-6345ce6f43de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952d1b15-1f21-4ea1-b14b-b869dcc91198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85fe13e6-e745-4904-9cb9-024c73652ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ba57c2-f219-4ab4-811f-9b58fca55000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cc523f-9131-4c20-b585-f4663584ccfb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ba72e1-0839-434f-bc9c-c5f03bd26218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52fb7c7-675b-4a95-b9a2-6ea450c32baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da31dad-a57a-4d2f-bf93-36f07c958811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "051ca86e-c1ec-4c9a-bdbb-bd9c75fd9508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b95872-669a-4baf-8caa-245a824b0fb3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f5a681-4ae5-4842-b371-79bda3d530c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6088780d-ea20-45d0-935e-f9666c9fffad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5c8bf0-fbb1-4c41-83ca-57850bd1f133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8afa3a-28b1-4c6d-b1f8-13696de4c529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e15d11-c65c-4974-a413-ca3911c4dec2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67c9b4a-7bd5-4510-8561-94b6f17c75d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ccab5fd-a2f1-4c95-9017-02a68216c1ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbb18fa-bb47-4fe0-9aac-5f14a311f13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6988c863-2f35-4385-a4a1-142bb1e1ead8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c01fbf8-68be-4987-b1dc-7b23903e9161",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b95ba58-5328-458d-b0a2-0bc7b70977d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a788e6-2403-408c-843e-57f5c2c9bb6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c208b99-102a-476a-b991-51e76b204b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "914ebeb4-d2d4-419c-8ea7-6be95143e97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0074ce26-1b8d-41c5-a010-d6e09fc3f956",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f47bbe-9bce-4635-b5ff-d0e23478ee0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e133fbe6-1ded-43ec-9633-c0bb4fd4ae85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dea907-d4b2-467e-b40c-b06f2dec8a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "488b035b-970d-4ef0-b053-1a956ca8c91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e311d339-f523-4103-87cc-2753af699cad",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "966f592c-1d93-4ffc-bfc1-f250159509df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec338be-3fea-4f02-9a02-6a9318f13525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2eae216-2ae2-4d77-afe2-e73eb4928210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d066b69-1fff-448d-aec1-80a9d6013258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b636abbc-3601-4563-a99d-73ebad3501d9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ec5916-f69b-4f26-b018-96f0ff67d301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74debb3a-f03a-4998-9cf4-ea4072cc1f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4504d437-e4ec-4c2e-b9cf-39242252aa93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38d4100f-1a73-4b0d-bc00-904253326985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f2c480-118f-4f77-981f-3559a3cb059f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74acccf-0bcf-4ce7-a84f-452e5441316e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbac007-60e3-49de-985b-2e373fbe1cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e587f16-63fd-4884-a287-2411d0abeeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bc6ad1-7380-4ad1-afab-106df1619a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21998805-56f0-4374-bc74-421a0cd99666",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0c842c-6e7f-4183-8365-f16f37191bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d6e80e-47d8-4e8a-9260-d2a562556925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70765fc1-1718-43ff-adc5-98685fd7ed3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cea5fbff-cbc1-4702-9cbd-6f1b44397046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe5e95d-c214-48b1-aa32-decdc34abcab",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb1ca6b-eb44-4073-b5c1-ad84e77f9b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21786ef3-f3b6-41eb-97ea-13ad23eacbd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e51d457-6c55-4364-b007-86855f207249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d28f7ddc-8012-416d-972f-13781c520412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4857b6-c49d-4cfe-a2e0-ef4428cff6e9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d5260d2-8e41-45af-9797-12a5231bddb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f0db3e-63dd-4447-98c8-fdb5c0391e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46084f3e-d517-495d-bdbc-629ccb7baf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2daaafd2-a216-4174-889a-7f7da1d0986f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af45fc0-d307-4031-adb7-304dfbbabf3a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc563fa3-d704-4e4b-8ef2-f4e81e5f70cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dbb1839-d462-4264-b249-09728090dc75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d7c996-0286-4545-a62e-71dc5de4d190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f91804-4ce1-4e44-a0ac-24d95284234a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519ca302-64d1-4137-ba2c-ecb25673da21",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7672764e-70f6-41e1-bf63-2f2b3756f35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8297573d-5a52-491a-8580-970c84c8f0f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4876577d-1398-444c-971d-f2000a3b90d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3fde08c2-4515-492a-a266-46b2ab027628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a9917b-e79d-4ba2-b39a-8dfaf996b1f9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641d2596-eae4-4939-94bb-5226884fcae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09adbbfe-3168-4916-9384-a156fa6a3e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bc874a-e796-4e78-8e74-9fb70b94df69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "63ae9f7f-99bd-41b9-a2b7-23d6001c416a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b586d20-6e60-4e3a-8fc4-0d1f2ac16730",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d376b39-1e0f-4738-b5fe-b28b15d63bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4005681c-2498-4ce3-a108-63b5f736c3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c36c37-822d-472c-b958-032eba555055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c3d7ab5-6ee6-4961-abf1-96fa91c03a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "542dc9c6-7730-4779-8995-160400b2aaca",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c54e663-1f66-4cb2-87a8-8f8a8ede80d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627c85da-16d1-4e41-86c6-938de11f74c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ff3070-a633-4560-baab-dc36f8e11e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4157d70-60d2-4b73-9fb5-f1dc5d7633a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd0e02b-7fa7-4fb4-b2e6-f451814db55f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dcca95-0bb8-4ed5-8d3e-9e1eaf1e9249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e2f525-f5db-4390-9cec-355e6e7b0896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b930941-6b13-430b-8612-3358b4c92a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0292e32-cdd5-4a85-8043-09ceb45c2ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d84ad39-fd87-42e1-bc81-96d5b4cead87",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1100dc8d-47e9-4650-a6d8-f1f383391fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b23cc3f3-ebd8-4aea-a588-aebfb327256e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c91892-fb81-4e01-a618-1d3ee1b1ecfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39f81a74-5e6d-40de-a1a5-dc07aaac4ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e7d767-fe8f-4dec-abb2-ac28080332ce",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32457436-781c-4c08-beab-e7921f672a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d62d650-d403-4dff-bd83-7467142868a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6797d96-afde-48da-a0c3-7bdf1b54508c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54bd4485-8660-4fb5-aeb3-ba253e287b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8609eb7e-f7de-4feb-addb-776b0823f26d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9748757-3392-45a1-9685-64993a9ffe5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4cfde1d-58bb-4095-9ebf-855a3096f650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d2100c-8c94-47a7-92cf-660866dacfba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e2d305-8b5e-4ddf-90ff-39658dc36b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5409b5c-16d3-4991-9351-d130def54201",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a065c4-8180-4826-8780-53c1ad60d110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5604aff4-65b2-4531-8980-4b07455efea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb36587-12b4-4679-8fb1-fd34ebc61959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f06c4a26-1026-431a-8234-eb1ca1f23d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9c6ffb-4752-4734-9ef0-ac37977f4613",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7c23a2-f51c-4bdc-ba58-02b7f05aaf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57bac369-e5be-4b46-9477-1e251961998a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bd0cb2-5c6a-4abc-b183-c303ba7538ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba63e6d4-64c9-450d-a629-92270263b399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398ba9cc-db61-4b36-a2f0-54084496234a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934ca00d-d18c-423d-8948-156077fbd7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24075b25-d281-443e-bae7-4e2c4154bba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9263dc18-50ee-419b-8469-657165766c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fdcfcf1-1ada-4770-9781-dafd244dc201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c04cbe-891f-4c5b-a99e-fdb73aaa8af9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ec5892-92dc-481a-b442-1c1f402e8a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50474830-9a66-4b7b-b075-a841baf45013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006a837e-c3a1-4fbf-b289-2fcd26ed71b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "44239405-ee30-4614-aaf4-c46d6c133905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0a8fad-6535-4a0c-acb1-925c038273c6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09193fc6-5d43-4be7-8b28-54d1c706adf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2b0f1aac-b313-48c7-a960-e6be9eb04eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5b579f-c5be-4eca-b9b3-2508efd906bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d6e1cb6-68d1-4170-b4c6-00b5d4d1bd18"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "358b1264-6ce4-4739-970c-4bc689c85110",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6160149d-96db-4492-9219-243302310606",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9804e7da-2357-4b82-a577-30905520b9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46255ac3-cde9-4cab-b204-ed91667f91b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fc7972-aeaa-481b-8ee5-4cb426604730",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9197a961-cc54-46ea-9c12-828404bc9657"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5112aa59-aa01-4d37-837b-6d0c583775dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "798d1fc7-9323-47cf-bf84-4415fb6e0d2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49fc7fcf-9809-4aff-9313-9417d85307a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf9571ca-b4c2-4fc3-bd24-1897d8216706"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d680a45d-e704-4333-98cd-abc46633d664",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8500b60b-ae64-484c-bc79-9f05c6bfc1a9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "eb88bb53-ee0d-4e45-ba31-28e544894ebe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "850e4a5d-c837-4ca2-b181-4c9631abec55"
                }
              }
            ]
          },
          {
            "id": "f034a1c4-aabb-4ac1-a78e-bccc2f2093c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "66e01376-40db-43ac-a548-086891d6a057",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8774be7c-c37c-4433-af0e-2af24472a5f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bcd109a7-7f60-4d02-8476-41a15c7ea8b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36438a2f-bd4c-45e7-8bf1-d81e5f5d60a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e0a7b200-107c-4709-9387-ad55c4516786"
                    }
                  }
                ]
              },
              {
                "id": "bd38c028-9efd-45b7-855c-37ccdfb2e409",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db8ab35e-0a47-4433-a9da-0d0f59536537",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "853b4b34-8d78-49f5-a7b2-f2f449f3c4de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f64c572-342f-4fa5-978f-e0f105da9e10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "78d4939c-f6b1-4b2e-9a75-6bf26ad1a612"
                    }
                  }
                ]
              },
              {
                "id": "b35c8830-e746-45d1-a513-6f98d9399a1d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3a50bf5-7285-42ea-bf0f-d4c785df4907",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fc77ccb6-1471-451f-918d-ccc3f143a53f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6543803-d0e6-4dea-8d2b-ecfcb39bd9c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "579d3a77-7297-4541-8d8e-b9e61703a19e"
                    }
                  }
                ]
              },
              {
                "id": "cc416f13-3d3b-4e6e-a72b-00dcaa3f16c4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a2ebe58-b298-491b-b5ef-45eec289cdd2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "43e2c0ed-dafb-4188-ae4e-c723bb915888"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e8b8c00-c233-4ed2-bfe0-523dee102be9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c311b229-002f-4fe8-8427-c793ea2798f0"
                    }
                  }
                ]
              },
              {
                "id": "b1c1e514-557c-4bbf-8e42-9866a14049e5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdeceb11-d821-4ff2-8a3d-83d2682f18f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0369ed30-d452-4b3c-b4e5-61763ae0b98a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec94306c-923f-4861-acb3-d2e49170fcee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8a784659-6a73-4088-a57d-3f74fbe0537d"
                    }
                  }
                ]
              },
              {
                "id": "b6245ed9-eb9b-413b-a994-5e198794a97b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb7feb0d-b358-44a2-b200-46602973efea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa959188-97fb-425c-aa56-024e2b205007"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad0ac094-e138-4f05-961c-a7c66a6e9c12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5f89198b-2252-42fc-b37b-3991776ee4a2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "79ce52ac-efb8-49e3-9cbd-a952cb66633f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ac84c6c-79fa-4af7-9b32-09007022d65d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bc5b8d8d-5df5-4c89-b56d-7b55454c1ff8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "489b97c1-c884-4f0c-a302-0e422a8e2c56"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d12ef26-0a6d-4ff9-8539-6a93813f8c21",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "75fdf9f8-87d9-4689-ac17-f86cb94100c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "720b6caa-1823-470a-850b-a2ef3c745a5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "644ef874-bcae-4495-b88d-9f784d1452bd"
            }
          }
        ]
      },
      {
        "id": "92cf967b-017e-4f59-affd-4b2a941d6fce",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bd63a582-81a5-43f3-ba5a-43f31cea8616",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c132b586-8c1f-40db-a0d2-0f4874c27508",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b77d85e7-f654-4e6b-a746-e8e53ac0e1b0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a5bc1d-9f8e-4c20-bef7-ceaf1e710ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "090bc33b-13cb-461a-a2c2-89287b7d7dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2cb351-495b-4a3b-b7e1-69aa35bae423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "199d1088-6a03-4046-a30f-89b769ae3e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1993088-fb66-476e-a8bb-6031292f058c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd26fdbc-850a-43f6-894e-f9fad9bb8736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76335a29-e926-448d-b576-e8be4310173d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9cf4bfd-08b6-4d0b-a7d2-3ea2cdcf553e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5a3e58-e3e4-4766-91e8-f85df17cdcf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af251b65-fbce-4719-9892-15d0e7ce406f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b675327-7086-451a-a48b-7988057bba12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbfa0cd-132f-456d-8e89-e682ca8ab9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2552905e-4f5e-4b77-8335-c16533fb8f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73ca6d7a-8a36-4690-84d6-e445f428472b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6749a1e-03a0-4b9e-babb-49d705a77ce3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ee577d-adbb-4fc6-b956-c98d0285ac88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810063d0-b0a3-4f9f-aeb6-86ce8596c90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd044362-d082-4397-bae2-bbfa1ea3bd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b145498-6971-45a1-ad8e-78a6b462f3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4a9027-9e65-4ce4-8cfa-364410e600a6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a1ad1a-2a76-440f-aedf-38a4a958fa56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0037cdd2-0f82-4529-bd5d-a200033bb7a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb060ca-763c-4f06-adc8-24e66e503fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "544eaf4a-0cdc-4f31-9b83-ba3acf3ef146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bbcd45-bb62-43b3-95c6-631e1b33159f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd9c136-625a-4de9-95a6-f6fcdf3e7118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6e7d2a2-5698-40e8-ba2b-6df6324687c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae207f27-a109-4154-807f-e5486006ac18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b0df76-c132-4168-8618-6d947552ca49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c68d2f-11db-4c4a-b70f-8bbc32fc3d77",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90bbc92-0a74-4b66-ba1b-76c11aaf3ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d98a7d-5404-4e04-87b5-a47b221e44aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba39648-27ca-42c4-8558-aff7206a69d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "79baa596-4653-486b-8f39-81f5647824f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168d677c-3761-41da-9d82-1780301daa55",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7603e47d-df11-4913-a85a-75ae8c00bb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc230f9a-663d-4991-8a2b-e8b0bd1b5256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9d032b-229a-4f1c-9aee-61de3468f5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0216a210-142c-4e7d-9113-7763ef5f482d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2adf9946-1846-41ff-b14d-dbf1cbbd3187",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d66b3a-b4ab-4b7c-bc04-925f1a6bf244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad99398-1d59-4934-87f1-9080e087d1a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba7faee-0b88-427b-883e-ee1f3391c641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1e4797-7539-4d88-9220-17007535035f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3947c2ca-14cc-485d-9e86-085dd39b0344",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb0802d-a62b-45a0-99f1-5aa180a0bb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1f9c8a-174b-47ab-9e27-4b0df1a5030c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aeae52f-8048-4616-af42-1f00041547fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6af6897-6118-4a5f-86a0-b4eaf444bc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d6bd35-6d4e-46ed-b647-ea5e11844723",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f905ba-4538-40d1-b46b-aaa7d62fd256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a88a42c-fa37-4518-ba89-b72b52ec4397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f7109a-119e-466b-a0fd-f940aa3baa25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bc2b1a63-cb55-4b06-94f8-43c89d496489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea11fab-c363-47eb-bd87-4fb4ce8fa782",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1919da31-8698-4e0a-954e-fc588f25080c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceadd582-c17b-4567-9be2-40dbb90abad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61ec161-b685-4fee-b1b6-539997bf4cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd25aa6-da52-4000-a371-a5f3430ffe27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f9cef6-e2b8-4aeb-8f4d-917352a28932",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e37d1b-0e5d-43ed-b5d9-ae154d88fd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfd9e68-fc41-4d8c-ac6b-a99bafb40cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b137d888-c1d7-4d28-a01d-11ea73d0880f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3090ee0-ec5d-4ce8-b57d-3ac5c683b478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71fc89f5-a7b4-4f0c-bc42-980da46fdf22",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ffe84a-dc2d-4c70-8869-e4428fa2cf94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78d6e94-1594-4c17-b734-b40480fe84c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d760d1cd-93dc-485e-bde3-0334992f9e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "796da75c-cff7-4942-99f0-d940453ec9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c96fe65-8e0c-4e13-b403-66d18de73812",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5b26d2-35e2-4e3d-905f-fea3a2323746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c4e76d2-d51a-4cd5-b97b-ce067a2c75ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2484d0-e606-44bd-a8ba-e815003f4169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ef188a-b9a0-46cd-8891-0493e872ff9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5997fe0e-6a80-4cf0-b63e-5405651c8cbe",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1d481b-7ef1-4eb0-bdee-720858ead45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b106722-158f-4713-877e-78ecf86758a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c97899-596c-44aa-bc50-1a00f212d826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "81ccd56a-eb10-45bb-b993-ea347fcfb228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd4d100-8363-40b8-89cc-ee97a6f501da",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d9149a-2529-4f3b-80a9-9833ba03578d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e9ae16-05af-4773-884a-9b6ce21e8f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1688788f-a9db-40ec-b793-ec244032e9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd453a8b-0453-479b-ad7c-0dd15afbe768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916bfcb7-593e-4465-9a59-f98678362fa7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27644a85-ac06-4bab-a605-07cc35027cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f39ef63-7a50-4da3-87ab-efaf59574466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd564e0c-4f41-4d1d-8e28-02ad60c894b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "58ac4687-2f04-40a9-94d0-77c57d574433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75044d21-cb64-4a6b-9903-a2be1313d58c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d5e838-93e8-4c32-80be-f538e0990676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6e85d9-2d8b-45c8-a492-5cfed4024d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3680c6-0fc9-4f90-815c-0b2873bc0e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3491fba3-9c7f-45fc-a550-535a60457d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "944d318d-e39f-4a73-ab34-23b9f915627c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6684c8b7-ab4c-4b1b-8974-02fea4fb77c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1586e49b-a6f8-4813-bd2c-d07783aed3ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b7906e-2e4f-4a9e-ba7d-5cfcb84c1a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1a26aa-7e91-4f35-bacd-7f826c320011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead4f63d-633a-47c4-a16d-2fb56ca3e10f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e7c095-578b-491b-9122-6c69cfc81f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b33f8a-7f39-44fa-ad0c-940f82d0c857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ed1757-6230-4f34-a804-233226962a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bdf05e8-c54d-44af-8de3-bcd29cbbfbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6fa720-abef-4074-8859-f9fab501e0f0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6ecaa6-fb44-4865-9f66-75a4a5ff41ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b36ee876-ad40-469c-bc54-b3696754f945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0717dbc0-7a55-4a1e-86f6-d0d49a213aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee690bad-22e2-474b-8922-0a6904fb16a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d7b028-e658-47b4-8857-df90d6289e46",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec19f5e-8b80-457f-b1e4-d992922ce6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e52d7b3-3860-4ed8-9b56-2152d4927710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04055a9e-633a-4471-9da7-c809a71662a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa05a5bf-a958-408e-b39a-e0815c100b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70485247-e8fd-4d94-bd65-f3be3261df15",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a737834-3692-47d9-a871-efbef26debea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8520645-13e4-43b2-b2e0-60c67f632af4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f2159f-a1b2-4d73-b27d-cc9dacd14e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0837307e-6d61-4940-9cd5-010632db4a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9049240-9406-48c3-ac18-d4fe2f3d54b6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954c932a-1332-4876-a6d8-fa0d201e2f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccc61e03-8f1e-42a7-94b0-7b3b4361f19b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9919a838-ba4a-4b57-869b-238731b9d247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31dbcc50-1da2-4362-aa1f-b0101e2fdfa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2b27af-e798-4ce5-aa04-3e1c6b82c52d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e9d6c5-1ba2-4aa2-978d-c896910da3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995094e3-6176-4ec1-9faf-0b632afbbebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9a8a1a-9c51-47be-bcae-9a47952824bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5edc0fc-5cad-468e-b967-5204bbb4afa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7776d9d4-869f-42c3-831b-22f827e308ba",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c9706b-4b53-4fd8-8634-4ba8db42e8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fe2ccee-903c-4244-adf3-6b467ea42f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e1793e-2b17-4cf0-bb69-c85c6c1d9a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8a394e7-8138-4a00-b67d-fead41368ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7282a0e0-91e1-43fd-8464-5a48ea940753",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf29d6e-a841-4a22-9734-e7e90ce35ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f42b7da9-f7b3-43af-8503-b50b8fbc30da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b69834-f637-4c97-a535-85372a8e6ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f0ffe5-3fbd-43c5-8d1d-6cbfc867af6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b4afee-0cf5-4adc-bcae-6119e84ce602",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32571de9-06ee-4492-9929-b184bdb40e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db556bf-1ea9-449e-a70c-481fac2c0133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b512d54c-4a6a-4356-9167-cc0d7218e66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4a5059-6271-4c69-8ef8-5a49a3a1e610"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceca077a-cd4b-4014-9384-c25a9967b826",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb40b54-a7c9-4873-bc6d-7fdcd10b512b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a03f4be-b01b-48ed-bc4b-fd0a90b8fb1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53b9646-7dd4-4ad5-a1a8-7651994614d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "011ede25-e0b4-453f-8ee0-977843ee7b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756fae17-7a27-4720-b190-4cef4050fa4f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a864db-d6ed-4d69-aa99-ce81d733db05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e5a84c-788b-44a8-815c-f9b55adce923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9607da9d-3b2c-499a-be99-2d1dffdb980e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed164fb-f659-49a0-a211-0fcd7c9fe7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5d9b08-1006-4be0-b6e1-d5306ee87b12",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70fdf377-9612-4bee-9564-5d202ac4c1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fff5e9a-1cd5-4681-9b43-d4f237daf1dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e591e9f5-6c79-423b-afdc-263d95d096da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5784fb7-496e-4562-9498-475503362435"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "adf0a127-56ee-46cc-9abb-5db2824ede07",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c8a8a830-96fc-4b7b-a7bf-306d1b8b31b7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cde956f-2fac-4e8a-a13f-eb0b56ff06f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3a77e2a6-a5ef-4193-9d47-4a3eaf177dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1d824d-ad69-42d0-b9dc-3c7bbc7cd4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cc4da49-f882-4af7-adb8-0bc669eb1687"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b742bf4-c0a0-4bee-ab9a-0af711cfe3f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c00468c8-0c81-4149-8778-9b4c19cd6de1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e944c837-6a04-4233-8836-56889e88fed8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbecd191-e244-4a16-bc60-c3de320e3b00"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2037b9aa-ada0-4707-9118-8122bb906aa6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4e4425d1-96b1-4f82-91c0-8ed622763b65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e0732ad-666b-47f8-90c6-cd8bd9107ede",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8893eb7f-4eb5-4e57-9a93-330ee75bb450"
            }
          }
        ]
      },
      {
        "id": "72d25d07-86c8-46b7-858c-35dd1069e082",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "753aae07-7db9-4896-9cff-e621339ec200",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0486f208-8382-4e39-ae4d-70bc10fdafbe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb1c411b-a269-468e-b103-922bf7d1b175",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f0c4e9b-f83f-48eb-9562-724036a7ab90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e58c53-517f-4681-b232-afbedeae321c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d4e9d6-0bfd-442e-8eb4-26a999e809a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e673a18-cf41-46cb-bd3d-74f3824daa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99a8262-804c-40ae-8228-9cfb9fb9ada6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600a8a6b-665e-4bca-8d2f-bc20263d720d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ffd9db-50ee-4ac0-b1b9-305bac67a3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4688b596-35c4-4be1-b50f-1df7ad645f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87808313-4835-4fed-a576-9dbbf2cd6c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa582a14-7d9b-47c8-a13e-2dbedb21a180",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15963c97-f79f-4e2f-ab01-ad6c2965bf54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc22ae74-777f-4d3a-9ec9-97e45819698f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104a5ef9-d162-4f15-8fd4-8d4e65da9d03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3844f8-5a98-449a-abd5-d7c26e762ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18a0707d-8252-4f12-aeb2-c49b4ac3a62f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4fb2632-78e5-480d-bf66-e6c61a67c95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8754dc45-d2c6-4099-824f-e5b7f4946844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277dbf2d-c732-4146-929d-c97d23302644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38aec1be-8842-4fe7-8716-f689198c0b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6befdb42-fd28-4c25-ba3c-0bec0e370050",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438099b0-7739-4c67-8a68-bf3da6350a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15d63ee5-f88c-4a73-8c89-d4b9478bd25d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c73cf7f-a3a0-4ca1-95c9-71bc0a0f6fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6816b93a-72bf-4350-9107-ef430a7c1155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259d5492-2eeb-4b49-8432-09c1e3c0f6d7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00c1552-3db9-4b0c-acc4-63d706f3a959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2492e2e5-7cb4-4806-9440-4233126b2392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6d2284-e62e-47b2-b5c5-e48dbd012c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9438e37-d229-4104-9a41-e0328f0574df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bf18568-239e-48bb-bb6a-3c8bfd6da14d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0f3d18-d24c-4d31-8765-f1b8becfff6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be82cfe-e91f-4d75-ba85-c1a2eb720d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2132e9-76c2-4a0c-8f80-5cb57da93c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "814b28e3-b5eb-46c6-b043-dd7681627609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0c8fc5-8611-4d0a-a762-c7293dc48cce",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3050ddcd-f91e-4ca0-905d-b8cf1eff90fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61a25aa-3d3e-4628-a82d-8c9a880d41e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c2abe-77f3-4aac-b362-a8cf0bce4977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5f69aa0-b2ab-4ec7-8f73-d66c56af8011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a36ba38-e406-4157-909d-c4af34942796",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd9bf58-8dfa-4fc4-a8ac-672b3474d255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39e68a80-3cc2-4085-ad77-15505549192c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8908afc1-ea10-46c8-8b3b-9da9e875bd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a09ccaa-7a56-424c-8a07-57609313732b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f792960e-a4ee-4123-a605-d23599f7b4a3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a4783d-6058-4050-b642-c474272ce3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f337e5-4fa8-4b85-b502-24e04276cc2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b45842f-3b98-4816-add7-01d7ea7cc3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fda46b60-7d7c-4423-bc92-54a0447aacb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1e7bb2-2797-4448-ba9e-2c11c3bcfab2",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737e783f-1e26-486e-867e-2de76b72c938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f316ec-028b-4d89-b118-a03f719d7f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1279cb42-a6d1-48f8-8666-bb9e733b89a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2683af-af89-4ac7-ae7d-40f8104976c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb2bd13-0933-4d66-b0b6-bd5f7ce1f643",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76a87e2-cce9-4312-9728-f2e3511069b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5032577-f7fb-4019-9c04-ae74f81663dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b38614-c56f-4e60-bfdc-a9ee96048aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf7973c1-c372-4cca-b0f7-751a4b950ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7181cc7-a79f-47d0-9876-953465b24067",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d22f33-2aca-482a-bdda-1440a07e6453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b569f0-a2d1-4472-9013-b64f8ec33434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a631b0-e50c-4847-a8aa-5690bf09976e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f77ad3c-5959-444a-a478-619eed3feab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8c25fa-6cb5-43e3-9e8e-101e72e2d371",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991fc9e4-754b-4eb5-839f-575b470f0917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76937edf-c8f3-47e5-8ed8-655c0da5b4ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6e9696-df4b-4018-bed4-6d2986410e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "03732717-b3b6-4af5-b043-bbdfdd3541b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c234ca91-5108-4821-9f5a-8b526890cebc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b7f17eb-3751-448c-a012-2c7fb35f57e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62833672-44dd-4a9c-88aa-6965fae4be55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589042b8-d202-403a-a6f4-2a6f4aa53493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "55eec608-8e97-4d4e-9c1c-f78f07175e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9490f610-0e10-45b6-b72d-3c76afd2b933",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ef43ea-afb3-4c27-93a2-fefe9d184d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d57e9a-002a-49fe-9b4d-527936f600a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828170f6-7dd0-4768-b9bb-eead17d4e000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "65638f01-839b-442b-b555-262f9bbb140c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4269b0e-2879-4d43-adc5-20a9b074504c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f491a68b-ff33-4c3c-9e9b-604cab4bf1bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b50337c9-f678-43bb-a065-2693d025deb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5722a1-c197-4c26-8db8-77c5a5e7c3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "feb86df2-a847-47e9-bc4b-d3a69c86d2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558a1dac-860b-4eff-b598-9d0377701e73",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4651d89-683b-40dd-be7d-08860ba0c65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c066d06e-383b-4569-882b-0af9c481bd4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2465756c-d1d4-4fba-b4e1-9b1340c9be60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be6299eb-0765-4a77-bb4b-e2e056860d0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e102afe-f118-4a14-8efc-73b5cff092c0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac21932-d13a-421c-a1d7-d8507cdc55b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025ccd18-5174-4f70-a0dd-a067b0ccf3d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a0216b-4663-4ae0-8d8a-51ff061dd282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a645ac50-b5cb-4f17-a7d6-4841e44d54a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74a8752-9d64-4f56-ac3d-f792ee94895a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e202103b-125b-4e1f-9180-1ecfdf180dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc25272-87ac-4615-8648-71c3887f84a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c69685-8e44-4c19-adcb-6b397655eafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de5e6b52-6619-438c-a2e0-4e3632e36109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541633e4-145e-43c7-9332-d36078e9b5b8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b57179-033d-4b88-88e2-09b472e5c371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5742a8e2-9388-49d1-b505-bf410432414d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bebe7fa-13fc-45be-a7b3-d737187bc54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7eddf02-896b-4742-96e7-445de122bbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcb8f88e-b2e7-4911-8264-e7f08fedcad8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bdaa89e-479c-4d89-9906-929a21290b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c31619-e71e-4a94-a037-b822619fb68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb430af-55ea-4217-9f69-88ca8bfe7153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eed218ad-f5e3-4046-af46-a146488b56f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edce5a9e-1c4e-4f89-9417-3e3f83ae4c00",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e943df6-14c8-4d2b-908b-00c31b732a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6fa10d1-deed-4beb-bb5a-7ac3a0349854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2913970-f59a-4899-83fc-8e85c3854284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c214539-5b63-4c35-a108-da961a39ca11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac0ea28-fa74-43b9-ba04-b4a0d1a2e1b2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8edcf932-540d-4556-9e74-1d94d5be41b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210c8638-c79a-4d7f-8131-434bfe0e7280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89dd67b-c5e5-4bad-9365-1d33528adadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ee4532-77c5-465d-97fc-fc5933784fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4a9461-b573-461f-87aa-6f06646f7b62",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8c3582-4be3-4278-92ad-733f4821d1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc62a1df-d283-4035-a8ba-c7b4abd08808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ecffcd-fb0e-467b-9a81-515707e1f605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aed776f-fa97-42c1-aa90-dcab8c0ef2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe056dba-a3fc-4658-8b7b-2b9ad92bf2ca",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d126251-65c3-4b42-9443-abb77910f67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17fa139a-4c90-4b13-b6d1-039bd599ffec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44eef92-70bb-4bdf-abb5-bbd405ebf5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adf375f5-6053-41b5-b66f-cca966dbaa55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e692f5d0-2425-4b45-8512-2fa8a80ffc12",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "565ac8a7-bfcb-4802-84b4-daf4265d0b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3f55ed1-0eeb-4f40-a181-e27cbf53f2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709d39e0-d4e1-4323-b658-1493b03cf5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "642134ae-5b0a-470d-9459-6deed4459d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b0f967-b9e0-4cd8-8cde-8b9cd5e75798",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90af8f45-29c1-4dde-88bd-fdc6836e79a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d846be06-ce15-487a-8b42-1f807489fed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b4b702-a99d-4e79-a469-a9941647aae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec40ab72-6234-4786-9250-81c477131877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b6eb78-178e-4f7e-bf5d-495e964603a2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ce4865-52c8-42f7-9c82-16b1273c9e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217ecab6-371a-41a8-a402-785299da795b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1fed1f4-66cf-45c4-a6a9-929f28c5c0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92b915c6-71db-4ce2-8099-07eed6683d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c3a478-8a1e-40cd-915a-8496d5681cf8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdb7766-4a3a-4068-9e90-cf1d1f7c1a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "defa200c-3608-4f26-ad1c-20089e7b9117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff717874-0779-4b5e-80c9-a36fadea451a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec960f9-975a-4b99-971f-a4a6ec1a4ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49df125-22a2-4afa-8915-2daf2c16252f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c2e909-e192-460a-b200-43872adae9bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "191d9ca3-d09f-4aaa-b573-5c2ddaad2535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8f0747-ddbc-4219-b0b1-7c1fd3b8fa0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "281762a6-fdb7-4c46-a647-29780d0264d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1fde75-f39f-4ff2-877b-ec66a29919f5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa4cd40-9c11-4e62-b4c0-8ede86e451b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91125ad1-04bc-43f2-8462-685c14c44378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e84609-bf08-494c-8214-de764b7aed10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df60775c-a774-4898-a34e-7fef4d621c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee8a16a-2db4-4b16-9efb-7b25748df4fc",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a296e917-927b-4e81-9b87-2c69971d2f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93eb44d9-2846-4da0-93eb-56fc31a63205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be2859e-cb7d-4ec6-aa08-cf22b605db4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5a0a5c-99ee-4502-9578-ac0250d99da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac991b8-a5ad-4529-a964-a9885eb8aaae",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee703db-27df-4ee3-9cbc-f896a04e9609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144a6d48-9d05-40af-8354-7c35d6e364b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9096af-2ba0-4cc7-99fd-95943101999f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "969d3e7e-da4b-46cc-b609-997c5732e442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e8a81b-45d6-4af7-8783-7748102fb413",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fe3466-4c6d-47f2-8b7f-3d8865193d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d23a8b-176f-44b8-a046-3b73564e9f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f119c2e2-2217-43ed-94b7-fd0906a00e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88c78bb5-bbbf-4cab-ac86-1f228bdcefbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e9f256-c3b2-4acb-87a9-1c1330a4cdef",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df90cd8c-b444-45fd-9f9c-6943dde08ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b415c2e5-3e22-4c0b-9020-1ad76936d153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476f0349-4ff7-4a2b-8c00-d6b3b4a169f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15d7f6d4-1fe2-48f7-bbac-56c2a4493e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4bbdfc-0ff2-4641-8980-2fa49e25cc8a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452c9aa9-c9f5-45b0-9bd9-41007f2cd694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42525f3-e991-4c17-83b0-e9f2c7e10c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269151b7-a7d8-4dad-997f-b5d6b2957620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fee6c6b5-ea06-4203-bd35-d1c90b82e534"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c1e31702-9beb-48b3-a224-1892949e03e3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3f51f5e-179c-4ba1-a051-075d6d3d5fb3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb5b969-53f6-4cc2-ac24-cd5a5aaff64b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c541c308-f15a-472e-b54a-8c096d9d623b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42943593-2281-45a2-914f-8c386f3d8bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46997c4c-8e4b-4329-ac37-38bf85dfcda1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04eeb27d-2b4d-48f4-aeb6-b250eec17368",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a82c6018-9be9-4a5b-907c-1a9275008948"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec3ea51a-d21a-4afa-af6a-da2e419445e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf0442af-0e80-4db2-adb2-e54264886bf0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45752f13-6f8b-419e-9d5b-9cfd30ec8fcb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4791c25a-6f9e-475f-b407-36bda949384d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2b10e70-e111-465e-aca6-3ba8ba4c4829",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "980f7239-afb3-4923-92d6-45585c53c153"
            }
          }
        ]
      },
      {
        "id": "14e6824d-7664-4a45-b744-51a9313f0088",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6f9a5420-ea1b-4d0f-bed6-81c55d5a2b5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11464e22-431a-4562-a95a-b0fa33668788",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3de8eef1-26ea-445a-9fd2-1efb68fa6ab5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb0258b-16ae-4fdc-b24d-9d5fcb0bcf6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0886318-d703-4532-8d36-684168de3e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b6614b-2abd-4fb4-91ef-220679492ae0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebba9872-c3f8-4d98-9512-f7005222eb8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5510cd4c-cce1-40a5-b5db-58334a9e00ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a03de4e-55a7-4f8a-95b5-32c983b1e4d0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5452ac3-cb4f-47b3-a842-20e563423c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0ead78-3bdc-45f3-92fa-4db5fcad6d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d698e676-ee30-4c83-bb82-114aa78a16f1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ab8033-f1c8-4560-b7a4-56aeac4f9ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce75ec9-aa8b-47d6-8a61-5133fee89c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2f68ce-bc34-419b-b353-362082199321",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d9f65d-4f4e-4cb8-8c33-95fbf8c35ada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69b99f5-2a7b-4a2e-ad8d-e2138c1801e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0ac679-6e0f-4d4c-9f48-c7ce677699fc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b31a9db-0911-4853-a756-39ab43e590fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09cd37a1-affc-4dce-82ff-cdb123d9c6c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25177676-1e3c-415c-a839-f4f5409d74b0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd28eef9-4b78-4eaa-b423-e7c102e9f7c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce48a22c-8400-48f0-af85-28ba3af066ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda93558-2d85-42c6-8c8f-c7c49e2f77fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3caeb58-4b65-4f1f-9cc4-04cb297b69f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712dba21-787c-4635-8fd6-26fb38165591",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba926ed-4bdb-45e7-b07a-476e0a8cf17b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f1987f7-8ded-4e33-9a7a-dd446019481b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffbb3b5-2c3a-4b79-8eca-082996d152e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "548a7aa8-4a62-4e3a-91ae-524ea7245770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75e3929-6e43-4cb5-9d58-77dc3ef1af76",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1fb833-f654-46f5-b228-5fc9526e164b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b257430-fa26-40e1-9f8a-8659e39ba719"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e768492e-36ce-464b-9a09-f96454a13d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6c7859-af59-490c-805e-99762338e1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc2f0fc-1c59-4e77-a2e6-2233a215108b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2861d521-e5cc-4c1a-8fa1-f65bdb315d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d37da6f-dcd8-46fc-8211-02f35d28873b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd74ffe8-0d70-401c-8d55-f309aa3f90dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af80b911-231a-40a3-b805-2f28a44a3c8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a5d05e-2f04-4d0c-9b68-e9ef48d64218",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae58117-4874-45fc-8a94-0a9e0bbb05e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3e92ef-54c5-4d1a-ae61-a5ac8bec143e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0e1721-aade-40a7-918f-0292a299c8cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38ebb2f-0b55-4dd1-824a-0f28c0d8fd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcdd53a-fc45-437d-ab82-2897ec2b8a9c",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f0cb46-e0b9-48b9-a050-893789ef3fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a7e14ed-a39e-4b6d-84f2-48d62301af3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94ae0a6-9e73-4a5a-a1be-0330836abc93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52b3192-18ab-4ed4-9936-5f40d716bb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ddc2cb-1de4-4efc-9a35-8cae7eb5bf83",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3dd2ea-e75c-4308-a559-aa7f1666acb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8095283-e3b4-4d2b-aa6a-8de9e3253a30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2fbbcf7-a6f9-48c5-ad9a-ea64ce3f0980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d68dbe-fcc7-4777-96f9-063ac3692c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe039213-803c-4d0c-a329-81c7072b7417",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac6e44b-2fd0-4a0a-9aea-2c031808e4f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b0ed24d-4dfb-44de-adc5-2867263c8bbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0259b6-88ed-4c82-ab89-9c7cc67b7974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba47d51-c862-45a8-ab7c-72541b4b3ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e5dd77-6da6-4845-a4ee-2b01e1019a05",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06d2717-0b2c-487d-b0cd-fa0fca43530c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf6f63f6-1dd0-4312-acdc-e2e7b4a529c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6267e02d-969f-4b1c-895d-b5a83c603011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f71cc25-233a-4d27-9b47-98cb141a2643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1150ae2a-2513-423d-bc48-65d7202594e0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2583355d-9734-4a3c-b785-134c6657334a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d45988e6-c4bd-4370-aa0c-bdf9db2f97aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f71233a-3c3a-434b-9c1c-1df8a88e0c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520c03fb-0176-4759-a70e-c8a6a20f57b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12804391-6bb6-4913-bb9f-e231a49cb597",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66f8dda-2256-4b67-b4f2-e30e72a0fa0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "248cb59d-d81f-49e7-8f36-8958fea0cd51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91bbceb-b7d3-4f05-aa4d-3affdf69738d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47bf2800-5437-4de7-93bb-378e06c68c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde26615-3844-441f-b0b1-5255ef0105f1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cd94a1-69da-4333-bed7-9fc3eb421ddc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91ce4f3-f78f-4b36-8bea-3bed9f9f8f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "560e5902-5578-44da-b1ce-104f7a1c72b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e792225b-78f6-4bf3-a41a-ba5b05475db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ddabed-d852-4d3c-b9fe-92748a4ec1a2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8772e3-fa83-46f7-bc02-d808c47d4add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe87ff9-71f6-4eae-b3b0-3db63bb2f12c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b905a2-6422-4087-ae39-bfcf8e5067b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc32023-ca01-4bc3-afea-32ece3cc7e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef287dea-9c0a-4c1d-beff-f5399009c50e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02135a07-a1b0-461b-902e-7edaa34b9d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7653400b-57f0-4c20-936b-016fbbfd9477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c0a5ff-126b-4711-8e2a-ae91d1a4d6ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74429046-9f40-47d7-a142-89b488af1e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d6a3b1-5c02-4591-a214-2533ffad4ad0",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32da6c97-02a7-407e-9781-f20913b3ab26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a91475e-e9f3-4039-aaf0-2acedfd55254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12049ed9-655e-40df-8d86-017ff4fea1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab725e1b-2d68-40ff-928e-d3be2e36273e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4fba19-19a0-481d-8fc7-caed0f72e7ec",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4ffeac-50e4-4c61-ab13-99c5ed6c4b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa81317-b809-4df7-8eeb-f387ed7577db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ce0f8f-72ec-419f-988e-a246e4a0e49a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e93e15-d400-4e59-a4b5-565ee5274af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4239d94f-2cbe-4b2c-87c2-7f0ba8d9b291",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085c35a9-6d83-477e-b8de-495d5ef36440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a94f412-eaa2-4213-950c-7290ad141c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f9c0e6-3592-436d-be87-b8043b0aa30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f6e8db-bfa0-48bc-b86b-14b5113702fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a1f8b2-248b-4a6c-9c64-aa16c0192a4d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb3c977-ad5a-4ce3-8661-62cc832933aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b746de84-83f8-4030-b52c-2f113042e006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a663ae33-c15d-4cac-bc26-e5ca31bde119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee39bc87-a4e1-499b-a83c-afd2cd0f0111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6aebb9-a8b5-46de-ace2-66ab0cdf64fe",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330064e4-5a45-4597-998c-7ce1c4f18e7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5b2b310-5366-4f73-a7cb-7f1142284492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1157b866-a34c-4560-9d65-05108bb6acce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beede4ed-b599-4076-996c-0410be6b9c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d440892b-973b-46a9-ae8e-33f108edab72",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2944cc5-bb95-4b89-ae2d-1eec382be9dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63620d7a-7bb5-4914-a0fb-4179aea094a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e277dd8-5cf0-445c-b9a0-42047bb2393c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e26c0a-7794-4b5c-8e6d-72bc075a506d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d960f5cb-f869-4063-9dda-acedfd5c7a92",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8b165e-dff1-4b84-bfaf-9794ab262fbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df32fa07-1cda-4c17-a2e3-f440b44cd91e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff993c36-e3f6-4f7b-80cc-141bb74bb5de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888ba9b9-a9ea-4bcd-8ee9-8081feafba05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124bdb37-058f-478b-8738-ad59e79e06b8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19f511b-114b-407e-b6a1-4b644cff7130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c279813c-6813-47f0-8e9d-d7285759e39e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80108fc4-0646-4527-8b6b-5b687fc99406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d772004-944c-4c30-8a31-8d142181626e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c83f44c-aab7-4279-aa0f-38eaeab200e5",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62644e0-8a87-4589-bb07-6349f17435ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dac0fa98-d9bd-4764-85a8-8e9bf245e546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4ad773-a3ef-4c15-8a89-00cde93d6a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d0a597-0870-49b6-a236-cd045aa88a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99eceee5-9fc8-44a9-a779-049f8db2f736",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d8756b-941b-49cf-a602-132790c6055f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87151bd0-a916-4725-aabe-2298c36add88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d9339b-4f81-41c0-93a0-fa8e0c3536f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2abc417-b116-4a11-abf3-6383547ddcd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc2170b-a932-4c69-86fe-02b1f58655a3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d1df82-04a9-4b3f-ad2e-0a8f401cf0bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34e5ac40-b368-499b-b9ac-ae2e5561cb10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873eadcc-006c-47b0-b7b7-427880528c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542a16c4-f2a6-4cd9-b538-a44dc999f8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e555fb7e-b8a1-4c55-8d50-8d186d6b1978",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c02852c-1bd1-4c0f-bbf0-a1fb232a84b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a914ce5-21a3-431c-bf03-42de2aba91df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e30dcb6-2e62-4cb3-afa0-3b380ec5a77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084e883c-8248-42ce-8976-25d173065a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd12784-900c-4b77-8c02-5d85471e1ad8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d8f3b3-a94a-48a9-b166-021e6bf0e7f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "944d200d-e06c-4cc0-be01-2745d14700f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506fdd51-3d85-40b4-9d0b-57f67ec01659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a74ef904-a732-4914-b2d8-1505ded3df58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde9e90b-f9a3-4ab1-835c-6f36644b42b7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6891349-ca4f-42e1-aed9-66575430ef2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7210322-ca4d-42e6-bf52-1610e754d6ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e85d0ef-1884-4ebb-80bd-006b6c2e7b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab3011b-c7aa-48fb-9654-a862cf60e7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a67cdee-4530-4068-bf97-995f6da6b2a6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c0f35f-3030-435d-98bd-afc50f60ef99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b749b678-7610-44d6-b39c-ec5432957e75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19c90d0-7e0d-4db2-ac8b-90b4436a2fa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d4e432-bc79-4484-b70e-f7799e2ae0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447cc7ae-56fa-43b5-b497-34ae394f82f8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "359dee68-a4be-4dc7-a007-1f8e7a69e47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7aef43d-3001-4bbf-8d4e-5e29dd176492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f19e561-6d2b-44d5-8273-2defb623e870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b3b2b85-7045-4d28-ae9f-3d9328593987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9486d34-3309-479a-880c-c65943c7ee7c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62953838-2559-4b1d-bc19-bc154d0a7c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afca1b82-6844-4fc4-ab9e-cb6b2eee20a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40447519-2c2e-4a38-af83-db0d2a576eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fd71628-3bbf-4fed-aa9b-1f5edee152ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8427608e-aa5b-45b1-8a4f-527b2ff23fdd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5142c9f-dc38-4405-9a12-7d9113bb634d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed85c196-1982-433a-8e8a-55733bc39b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea47b401-9451-4826-970d-26269d8c7dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162ee4de-54dd-4afe-b11a-91c3aae7d8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b5d5e7-31d1-40e9-bb83-ad34ae6fa8cc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "919247fe-8c30-4f54-b23b-192ba3316e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f433666a-3464-41b2-8c5c-5d142c45edef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f218b303-34c5-45eb-954b-3d520965af97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db27c8e2-d508-446c-b63d-e25e0243507d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d338e098-d0e5-4823-bb76-0641fbaabbe5",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2e1e8a-13c9-4642-89d1-c06720ddc493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a91f3035-1ce2-41f4-bdc4-650ec46c65ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b68d4ac-3294-473c-abff-ffe521fb947a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b3dfde-c511-4f0b-9e63-0533dcaa22e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0e80a3-848a-4ba2-82fc-911923247025",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62ad511-9e37-47bb-a850-a9822c712a3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cafc80b-cb0c-4ea7-9393-43b65adc42ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996f2735-e7c6-44ce-b728-a721de454216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7559c3-5a92-4b5a-99a1-211278490073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446f08b1-c8e2-452a-8927-5a4586e23b8d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a6d3b2-f7c1-4c5e-be4e-37b16d16c371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75914ea6-684a-4b56-a01b-36e953565c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a8036e-ccb1-414d-bc20-16cb31a76618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c491f5cd-66e7-4ef6-9f5d-31b17a2afde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb62390a-82ee-48c7-91d8-2a236d050909",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba14374e-371f-417a-ae05-ef7cfc05bc62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d391697-7a35-4d6e-956f-69eee09d9ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9c4f86-90e8-4e7e-9ee5-bf061da58907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c638c7e-12fa-45d9-b136-b86b9fe4ecc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4bd68c-5d77-4b4e-ae84-ea9b85da5f74",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9946ccc2-a7a1-466f-82ec-1a3270f10c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69124658-b8ec-4293-a78d-29975e567f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "558128c8-2e27-4cbe-b15d-d1cb9b389393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfd6ccb7-4d3b-4428-b109-778a948de08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e457646-b7f7-4a96-b823-993733684995",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bbaefa-c8dc-4465-b1d9-e89e71574488",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75027a4-5e32-41c1-bcf7-6cbfdce2702e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9731e2f-603b-427e-8246-7d8d63e33e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de9bbb66-a11c-41ef-a9be-f5b955c038c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377ae6ff-9f47-4afd-874d-5c41303a377f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c0f6e6-e88f-40a0-9fc4-4ace794a9684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19ef8967-c00b-4730-b6a4-4418cfa42b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e22392-8eb2-4f21-ae74-9fdf27dde803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfd7ed9-83de-4a33-9898-820baa86c310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d7b4e6-d135-4e65-84c7-902bb9a816a0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc552be-c6b0-42aa-9aad-cc726fbd73ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10568c3f-8eb2-402a-9b94-e57ab6786ea8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b80d8b4-79c7-4168-b39e-5e478ef579b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587c4b26-2508-47b0-8868-c3d3656829ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a24e71-9401-4e23-9a4f-2def4e04eb41",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cf09d4-0a00-4168-87fe-c81375773ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4767b48d-5b72-4439-9d77-2a2432d3f37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cfefe1-e9f5-468c-8616-f9b0696d9bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1956c49c-8f4d-43ea-b586-a9b391071bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a2a7b0-d9ea-4009-ae10-dc0d06262ab5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9601d5a1-bd49-4a71-a1a3-4bbc8a35e46c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78742c74-b76b-4c24-bedb-ee668bae32af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2373595b-fa39-4a0d-a9a3-d0ee9c130e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d4db7a7-6211-4c08-b3fa-00c690d21a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df40660c-0749-43cc-b6b8-60c762ae0812",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9556f880-084d-4029-9abb-4a79a3d62ff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1e0be78-0d2b-455f-aed9-422289b0268a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a967496-5c03-44d1-bcc9-363694fd66d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fce350ec-f84e-45df-a818-6c7bd0db41a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f2faab-6d48-42e2-8087-7c1b6f5fc008",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d21547-ba52-4119-9626-0b0d768c3857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5511cc0-71fe-40d3-9c90-2a3034c80979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2a9803-b592-413f-9737-af360f11ba0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4caae3cf-6e21-4740-94e5-f78da8586ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42bb9fb3-f1a7-442a-a20b-cdc46e4fbf36",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c414ccb-de4f-4223-a801-56ffac86a98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b3e9d9-328f-4161-ac12-0565f831a0be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f083d7-cba8-43ff-8dfe-0fea338b70d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad232ffa-163a-44e0-99c8-f8d2acc5a806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a654253-286a-4eaa-bfa3-fca26f088ae7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5de02b-568b-4e6c-b027-a28314459a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dedcee3-cefe-4da9-95ce-f71231c94ccb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1bb03a-6eed-4941-bd16-0ec5ebe65eeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28f8c73-6c86-48d7-a4de-0623fb3104d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b2133c-d860-47e7-a46c-81cc1686f5f9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c44655-f744-49fd-a0d8-19381607a2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0de89b-b522-4fd3-bd16-1a8bb8783151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a9f0ab-e9ee-40c4-996d-cedafb71e90c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f085da7e-372f-46e9-90af-12ecc7615c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab8975f-3c39-44da-8e05-661571e0da45",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecab851e-ff97-46af-9e50-6cb3f1dac6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d41c078-893c-4515-b5df-c11af0d73048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e88d97-3579-411a-bdb5-2a567aa4dde9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45032ad4-4474-47b8-b0cf-49d15d52a4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8111127c-e86d-4af9-a47d-28faa1d10ee1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba70444-0a2d-481e-b434-0d3e71c971e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64acd674-d5df-4709-8020-f2e1c0d164b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62a1bc1-5c94-401e-b0aa-a74f674c9466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35e3831-e214-4b72-bc7e-74302ff573ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98dc9855-4020-407d-b994-948098fcb52d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f2bbe5-35ef-49fc-8092-8a3474e6caf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676522bc-d866-40e7-b633-c3faf0efd312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa55bb96-d574-4cda-8fcb-4165a82228ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a43d05-9b43-4f76-960a-0bb39c604e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faeb3a3b-32cd-4ac0-983d-68cb52622797",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ecc72b9-2c10-49d3-93f5-075b2fad6d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a20af8e-f007-4620-bf56-ea626d3d6e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73dc5dd7-88a7-466b-b1ff-51bdd3b5ba88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d22b2db-f82c-44bf-a548-7f8c69b838ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0674a387-88f6-469a-8ecd-6790022376e3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7643178a-096e-4380-925a-33b4754e61f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7336ba46-f996-47d5-b675-5d50eabc73f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2510759-905d-4903-8d14-57e7c00076cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a481d0-66d6-4db6-9ba6-69546294e83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbf4659-5a3f-42c5-8647-4e1389bd00cc",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f847d90-cd74-4010-8e20-71f7cfa17ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f40b294-1b1e-4460-86bb-54914e327350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047c2254-f6df-4dc0-81eb-0542f230487c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b41abed-d54d-4f9e-81f0-b541edbb55ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e574a8c0-3652-4ea1-9add-da065831dc95",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bc31ab-0c36-496f-b71b-9c79215a9652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc135dbc-50c5-4cd2-b0a5-50d81ce2fd87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230b6eb8-2b48-4078-9d9a-d6e7175bc335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2224eddc-ed92-4e31-938a-09721ef62985"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edd255d-d58b-4463-bd37-54c521a8a4f8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc34ff3-2bcb-4f8e-9c59-f343dd605088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda4eaf9-b242-4907-b739-1866d747ac38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114730d3-bd6f-4718-b162-45467cc60adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e71144-838d-40ca-a5c2-34fd956f8dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01515b13-7352-4b67-bf50-0be2ef427626",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effde0b0-8d6e-423f-816e-2da23f5db3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f93001-598e-4c96-b6c7-4c5006e9d978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4ad286-c6d6-42d1-966b-451e03e473d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be69a39-c85f-4ad6-aeae-d84dee481b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4ad889-51ef-45ec-9f9e-92797be498b8",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141f04db-d477-4567-b19d-f4bcb88158fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6d518a6-150d-42f0-bf4b-d76472c4683b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06870d30-f6ce-44bf-a304-b1354df4d578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ed5831e-21ae-44af-a54d-fc709748ef61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e0341b-7a03-4f2d-91de-10e09b55ac2a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6214d87f-523b-43fc-84b0-74f588f58e7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71792953-df26-420e-a7d4-13ae836934dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc30db4f-9e32-49cc-b5d0-a42e001f794b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb3dde62-5166-40e0-b422-0b4e708b9cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f515c49-eb9b-41fd-9772-4e47ce3d3303",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a3f0a6-a981-4479-8fa6-2e52301ea323",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50dd063b-f5e5-409e-a4ee-6c97b11f6c2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7f03e1-7bc1-4a00-9328-59fc293175a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d1a32d-7581-46a8-8734-0f9cb83ae940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3866a8-5019-498d-a21f-8685b085ca4c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718993f5-8842-4920-a5f9-4fdebddc7bf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f1352cc-c6d4-4393-9836-5842bd9c46e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2453793c-9bf8-4bec-9eb8-af4de755bdbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a78ee8e-f592-4042-8950-2f51dc8c5e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a274fe-44d8-481f-8449-051c912d7662",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541655ea-394d-433e-8ff2-bcbea2ebb411",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "859c5ad9-34da-4906-8f11-ed10fbc7b8f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b643a9-a356-4aa4-b3bb-ed4ecac3802b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd08213-ea9c-4e03-8e6c-87709461f75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13be0df-7536-43ab-a1d2-8c1d2b74c7d0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1811f5-08cc-4022-a10f-e0738db06b30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe373f4-1aba-4463-9c0c-33faac7cb85b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445c3331-c7b7-4413-8da9-b04c9508ad8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e13d75-8b2a-4ae1-bc20-7bebbb1a2af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86a53c8-a604-4329-920f-1ed9a855fb53",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76f2446-6acc-4e72-96e7-151d4f50371b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "739a3da8-795e-429a-8fd0-1b2653cdf0bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b169cca-b811-4249-9185-31d6acdf88a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eb992ea-0985-416b-ba96-2c5b182e5c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54561b02-df7b-4fa9-9cf0-48fcdec240cc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3906a9fb-5740-43c8-892d-5b13846e819c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9531c9f-a3e3-4d51-83a2-298b4f6df109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5197ba52-463f-4169-88e0-d3b7b83e3b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd592bd9-ce84-4af1-a961-95e165145f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d2bc8e-e1fd-4c92-a77e-d3ebbeae44dc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8fd49d8-8aab-4e7f-a86e-3df8f0991a54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b88dda1d-0d12-4ea5-bc32-4c9cb8dbb738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92b8856-c24f-4019-8c59-9afc9bae0df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "debd0726-3ff5-4e7b-a3ed-09f27fb03e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc0b2d9-d04e-44cb-8676-5195c360164e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da550f26-7e31-46c7-ac7c-e3c99a9123d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f34f32a8-101d-4852-915f-c15cd93c0be9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d557420a-8771-42df-a511-84c23a519111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c43d14-8ea7-486d-91fe-1a90aac03fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c86c1c9-47bb-4ce8-8bf2-0600f2823232",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e803198-0190-441e-b6a6-32e3aeb43387",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7efdcb6-512a-4af0-bec3-eb813bf54642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e18767d-34fc-4f2c-8aa4-307b3cd42e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92747917-3a4b-445d-b428-7bc2edd740b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1a0df1-ff45-4e9c-9371-d732e6f2be2b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7d073b-86bb-41ef-af2a-a493cf45630e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0cab1a6-91fb-4824-8b5e-6724170143fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e35beaa-6100-4551-a31c-c9db6a2c8b9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb6170c-26c8-48ee-bc0d-8853494a40de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba33899-4150-4e92-b806-1012a39f4f66",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19bfd81-bd37-4f8c-bb44-360e894526e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "545d1368-c864-4e49-8805-aded5edb475b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76abc802-f106-43eb-8752-0b2a579de563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d06849-eb81-44c5-a179-0f18c5ebacdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a82a50-f71c-41e3-ae3b-654eadd50292",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d40c78b-dcdf-406e-baa5-c08150d2c13a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cbc1c0c-b852-4fc1-b2d2-f7f78af93618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abceb983-74d0-42a9-a974-726315711b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706c0133-05fd-421f-ad29-80b25f4d05b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ab77f9-1861-4695-b43d-c4902f8a7216",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5d7c4c-d656-4bae-9de9-add2eeae2e0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd4800f4-3e19-442d-82d6-9256f803aa90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20037777-d3fb-4dc6-9e9e-30ee1fd459b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d43273-555e-4c6c-9144-397e22423c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30596b70-cb5f-41cc-982b-6ef6d4870229",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf6805f-27e3-4e4e-a3fe-8fd8eab026d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a62c4d54-3d47-4f5f-8376-e1b5dd2a44c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82303eec-c478-4d9d-8efe-251b2c021bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf54236-a6e8-43bb-b41e-c7af46d06a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b4ca12-0490-4166-9e60-dafcde72ea54",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b14985-d237-4e18-999f-d8410b024941",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65a32a48-2c55-4a04-a973-1880fbbada79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced73388-ee45-4a94-9182-2b5e0de0d448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef4fe95-8bbc-4bb8-b8e0-c520ea113e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c37f86-f435-44ff-9385-4cfd2737a492",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c8f817-dca3-4c5c-aaeb-a9f10fc460fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fc26c2a-b852-4751-8d8c-4c3173f9338f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d89ce85-a1d3-47ec-bd39-0c4d84b6facb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c3af70-1e89-48cf-9d51-97a770a0cdf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b983206-4ba7-43d7-9dc9-185cd48d07d6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9997ef87-10eb-429b-88f1-878f69bfb681",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74fe2d2c-ba17-4a05-9e24-904ccb64b0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce1fa57-914d-4456-be36-8bfec85a155f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e78d4d5-1878-421f-b49d-8d8927de6634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78feee67-7b21-4888-881d-307dda4c0f1c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e89aa87-3588-47b7-b957-b1720e504311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df8c9fd4-cc4e-407f-ac44-78ccc1b1e8ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a37684-4b74-4c24-9c1f-b1fa1d4cfe26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31c1fee-d60f-4b32-8562-a98a3a8ddfa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac04a55c-8d7e-4695-9646-76eea74e085c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa65fad-afe2-4b9d-a846-91c721d513b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39e93144-7c52-4f3b-a04e-8e0853e63ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a13da57-7718-4f89-a38d-be66fc9e0e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59e7f4a-32e4-4c34-8954-d3310053cb05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af096c0f-608b-453f-99e4-f01ed12d9ed3",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4013d71e-a632-448f-9ada-5f9460c43717",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64a055dc-af3d-487f-beb2-2eef0c1d9d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd192ce5-bbeb-4da1-8e2e-fb747769b669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1945290d-3a8d-41e0-9083-25bfdbbb5397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02f37438-39a6-4dc9-ab86-ccc1aaed3a6c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b7a67c-a866-4640-973b-fecad06ed870",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69547799-c89a-4b68-a95c-7bf692feff21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b527f977-458d-47ff-90d8-f8a108d9fd9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba31f6b-a6af-49f4-93e6-3b5e423d2fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70ae5da-1649-42a8-a49d-5d06b544ff37",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "820cee20-e291-4373-91c0-c378b15951c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3be652a4-a355-4b61-9c25-07727cc95ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "339510d5-d3f3-412e-a64d-7142dac0d445",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b96c1b3e-40dd-4d0d-b690-e24386b5271c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae88bfa-f762-408e-8007-2ffa053941b4",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6251d657-b135-46fe-adcf-522d96743f74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf76729-fb40-4a32-8d75-145d1cbbada9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7afccfa-d4c3-44bd-bb9e-8e23a6e09a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ca7072-0fdf-48bf-a72e-da487c93a205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f50a27-b80d-49e2-8145-aa1f4ae61263",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d72bf5-f155-40c3-b194-b61aa7d508b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a6556f5-d6ee-4192-91a5-ee9be37774b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64755885-c199-4060-b976-17ea1ad1bdcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877599fc-2b13-485b-a626-e46f92af4a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901a914d-8256-4656-9c2c-4e1ba25f52b1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76bfb7a-bfa9-40e1-aad3-43ac4820fd82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e7d6888-617a-43e3-b870-8becbb07214f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c370b5ea-1355-4efb-93d9-6ab18f1de872",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5d1fe4-a04e-4f2f-b5ff-82f051ad801f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145c2023-7a3e-481a-a5b5-3da3aa8523b6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0afeba7-b313-4a8b-83ff-32989c248d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b548919-f3d6-47a8-8dd3-e285b89aa46b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e834f3b-c13a-4cbc-9faf-ed776e3eb225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8312635a-9e1b-4e70-b3c1-bb4334e9ae76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a042da20-d199-48a9-a5bd-37814fd37226",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ab7cfb-f901-4c25-9503-5444d5d68667",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "566bd547-b274-4849-b4cd-df28d5111577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "122d5c19-7da0-4266-a9bc-c54623442242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fbfccd8-2062-44d2-a1bd-69706948c5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e5ec12-fd31-4243-a658-f8cdf077b9ce",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ebf2c6a-3953-4e50-b84a-c71cb08fc861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03b24ed0-3115-4aac-8eaf-173c57cbb7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d0eb56-b00f-46be-8032-bfbc91547e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41de5d3a-8670-43b6-879e-d958f8f1a77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a026ac3-523a-42c0-894f-329cb7d9b474",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88b8b3b-37aa-4fe2-9b27-54dd600b8741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a2e25b-dd96-47f1-b1fa-de75dabcc425"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab682307-fc81-47de-8bcc-4509230a250d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307f7faf-4542-492c-8aaa-dfcee5d98cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f6a77d-d88b-4b7d-bc3e-950f144b8a6c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966186b3-3e67-4f3d-94e8-23655bd2617a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29bc7e99-1167-4210-9dbc-734bc081553f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a560866c-9dd5-411c-88de-dfa6311b8fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2e63c4-ade2-4127-862c-1d30950b84b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6983c2b4-62c7-4767-87d5-94535367995c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8b8773-f2ff-4d8d-b75a-8a9144362f79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e373de8-4a65-4687-89a2-623b8de2be79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5260e3-249c-4528-925a-9ca3d09d497b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a6fc43-632b-47ed-8556-b318db1c397a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9fb381-8719-47f4-8f20-73ffdca28b5d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22ee2d7-3688-4d69-9228-ab51bbec4183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e02face-bb8e-417f-92e4-0fbc5f88e505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44813ca-ee5d-40dc-ba91-210631a10973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa96e9d-8a3f-4dea-bf04-366e1be3d9dd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "489dacb6-8bf1-4cfc-8289-cf58e901dc3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7a0dbed-a7f8-4971-a6d0-a402e9f2708e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "710c8553-0a01-406d-bb4a-ba5d519c3d6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "219836a8-2523-4935-88b6-173ee29099bb"
                    }
                  }
                ]
              },
              {
                "id": "cab35091-a59e-45a8-92e3-b489d3415a06",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7b6fc1a-a719-4bc2-8d36-b6b58a3724c5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1037f13e-7d5e-4316-99f1-6eb7360dad76",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4922ec48-4331-47f2-9b4c-0cf818f7b621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7980fe84-74d5-468c-b11a-9e390a8f000d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd1f0150-094a-4be8-8373-78ae85b79044"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d379ddb5-21ad-4c97-bd3f-f4d11c2144e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c1fc5f5-d7cd-4ad3-be88-163f6c8a6191"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "86a815c0-b557-45dc-9f9b-b146c2120fd7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e3b2900-4451-4bee-aa7e-55d2640d7581"
                    }
                  }
                ]
              },
              {
                "id": "7049ed94-4174-482f-960d-62582a998965",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "a6711575-4cff-45f4-9a99-f0922d9cb157",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5623d25d-ba1b-4dba-8f3e-00c6a3e311b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b6d4c896-db52-4c80-96cb-aa3a93d00a4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7ebd9c8-820a-4afd-97ca-9ff61dd009df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac9c95c-a6b0-423a-95e2-5499ed16645c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ad289737-690f-4308-b33a-a3570db09cf9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1912e53b-fe41-4383-afde-47167a403919",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "54a3b3f2-c254-4b4d-b2a9-ef96aed0f190",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bcd9ebdc-f786-476f-95f7-03c053ae3052"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9503b07b-4c3e-4d5b-9a06-3ef79aaa0d6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "215902ed-5274-41af-8223-f5de9279930e"
                    }
                  }
                ]
              },
              {
                "id": "49fdfed0-f3d3-4018-af27-9eed86f743f8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "589711b3-c513-447f-8970-273e9024b77b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1ec60b98-6219-47c8-8346-b6deddd88d73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2a4f247-2010-4776-ba7f-cf7264fb7f69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca67024d-9567-4333-816d-0e39b365fee7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "562468f9-1b37-46b0-94f3-19018a8fc542",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "78b83fb5-a7d6-44f5-8b7f-52d846cc0f6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92954fb6-67ee-4a3b-ab8b-817efae6a786",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97b71550-6006-45f4-ab39-57b2c21c3958"
            }
          }
        ]
      },
      {
        "id": "27136966-bfa3-48f2-ac19-7015cbe6d721",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "52a09df1-658e-4f03-8145-3e8e54df3ddc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa2b913c-c31f-44fe-9fb6-9dd6fc488689",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fed7100-79fe-4792-8cc5-b576229122da",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc6bb00-c8c8-44e1-a664-336f86cdd0ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d293a612-858a-4051-8930-94a790b8ea69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d09a7c1-f349-4593-82c4-f4604b62639c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d5491eb-a656-43ea-8c81-08f44583899c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "459a9ee7-7af5-43dc-b768-2bf397434641",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5782e0d-a12f-43ae-be70-6aaa0c400250"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e63c2e15-8e11-44f2-a1de-a35ac36c7966",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b5197be-154c-4c1c-8734-1b2dd18ff884"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9cf75b41-a098-4fff-a9f5-4ab46928c71a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "897d3b33-971f-491a-8c00-862604b3cfa8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86b509b6-cb9d-497d-8bb9-0ba51b441daa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c229ceb-b4e3-4567-9e92-fd90f8b2f6a9"
            }
          }
        ]
      },
      {
        "id": "a4d95cad-4904-4d83-8c00-6242cf6535c0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "25b71f8b-964c-48d1-97ac-b5d8d0d71ebd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5cd2d318-74fa-43fb-abaa-049516f14708",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b321ee2f-47be-4c17-af63-ef6aabac9fbb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2757bd-8e1a-4d7a-ac1a-30f620106f19",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4bee3f4-b8df-438a-bec0-6dc764f9d0da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9993353d-4c5c-4e0a-a7ea-95351bbafc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0c8c086-1318-4648-9d3b-cf7d0895793a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61abb66e-c44c-466e-b5e6-192f0fe62877",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a3df022-ccac-4ebb-ad60-e4f90ffdcb1d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a696393-d91e-4f81-a0ce-18d5709dfa73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87c06c84-3cc0-4a10-a322-c33b61fa5982"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7db8cf6c-5a3d-4761-aa46-cc6133bdf909",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1e0890af-0f4b-489d-83ec-dab74311ac9f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "adfa588f-659b-4466-b82d-07c361a6fc5d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "588ba199-2140-457a-a1ca-9702398fe92a"
            }
          }
        ]
      },
      {
        "id": "d56a00e3-afae-4f04-95e9-a18f6ab2fb69",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b479d47c-4a52-4d54-8ef1-43243d552595",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f25c9bf2-a562-45df-a45e-ffa0131f9059",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dee71c33-3b6a-4c58-b0dc-1c3882638c05",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cd688d-c307-4186-b777-3a5224447521",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "577a96c4-5a90-4c7a-9c9d-dffb9f62ab67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f50e41-c0b7-499d-983f-7a93e4562570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c846638f-5621-4eb7-8fa6-c95325b112b7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c02bffc4-a1c7-4c3c-9ca8-77e7bf70f324",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d2a8bcd-312e-4767-8dac-4212489c57e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd49912c-85e7-4b2c-a6b9-e8d45362ecd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2781df31-981c-4d60-96fa-da4c4a5a4a66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90c29aca-98ca-4f09-ab02-94d8a6e8dad5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "149277b0-f420-491c-8140-65d19fe2c021"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b31d1485-e886-4fcc-bcd4-89227606fdd4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc777fb9-9564-42f7-a9c0-fdc5bba0387d"
            }
          }
        ]
      },
      {
        "id": "3d47d3af-b2a8-4365-a935-7ebac77939f0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3a8d42dd-9c2d-4551-b191-eda4e896afe0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7902ee0-df17-4881-aba1-7777a4913166",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b9b0da17-385b-4c8c-b79a-800faaadf3d8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55829299-d68b-41f2-b62c-5534ba1698f1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25e5d43c-2b6d-4bce-a14d-034679e75770",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.07746478873239,
      "responseMin": 13,
      "responseMax": 4870,
      "responseSd": 391.27717156144195,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1692577924971,
      "completed": 1692577972265
    },
    "executions": [
      {
        "id": "e681ffec-3c35-4094-893c-8f9b86cd4e32",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0ad65257-5c42-4ef2-80c3-c66d973ac9d8",
          "httpRequestId": "f0e56f48-6728-484f-90e8-d85efb00263c"
        },
        "item": {
          "id": "e681ffec-3c35-4094-893c-8f9b86cd4e32",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6862d48d-1273-4c54-a4e2-f7dc6c4f29ab",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 0
        }
      },
      {
        "id": "7fb23673-e558-4b75-b5e0-0ef3192f9806",
        "cursor": {
          "ref": "2073d784-92ba-40e6-8b07-89e20c358598",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "10fed674-eafd-4ba7-8236-1f5127b43511"
        },
        "item": {
          "id": "7fb23673-e558-4b75-b5e0-0ef3192f9806",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "601a6d06-4036-4b00-aaf9-dc49f1d3ca12",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "6074698d-986a-47c8-bfe8-2f56e6130113",
        "cursor": {
          "ref": "48eb2c38-dd5c-43e4-89bb-feb6855ffbd5",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "63811231-8137-4ade-8b3f-d7e87d05e546"
        },
        "item": {
          "id": "6074698d-986a-47c8-bfe8-2f56e6130113",
          "name": "did_json"
        },
        "response": {
          "id": "76759df0-dea1-4d55-994d-040e9ff86c5b",
          "status": "OK",
          "code": 200,
          "responseTime": 347,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a602a9-3539-46ab-a538-5e00e8ef5843",
        "cursor": {
          "ref": "457685cb-b09f-465f-988a-be43249432bb",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "51beb42c-35cb-4b07-af06-1cea7f53eda8"
        },
        "item": {
          "id": "09a602a9-3539-46ab-a538-5e00e8ef5843",
          "name": "did:invalid"
        },
        "response": {
          "id": "31023b74-b915-4471-bd2c-5ec96a34ee46",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1084,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a602a9-3539-46ab-a538-5e00e8ef5843",
        "cursor": {
          "ref": "457685cb-b09f-465f-988a-be43249432bb",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "51beb42c-35cb-4b07-af06-1cea7f53eda8"
        },
        "item": {
          "id": "09a602a9-3539-46ab-a538-5e00e8ef5843",
          "name": "did:invalid"
        },
        "response": {
          "id": "31023b74-b915-4471-bd2c-5ec96a34ee46",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1084,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1994b3d-c54d-4f89-a928-7dae718d05bf",
        "cursor": {
          "ref": "d963c6ea-cf23-49b2-979f-b5fbda1168dc",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a0e60199-1e17-4712-ae1f-54f301942b86"
        },
        "item": {
          "id": "e1994b3d-c54d-4f89-a928-7dae718d05bf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7488e3fc-3153-45c4-ad96-69359361478e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19570f2d-af27-40fb-a3de-95b0d4f25a93",
        "cursor": {
          "ref": "053ee955-5ad3-45a1-bd51-4c826d73534d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "09a7e3c2-1642-4d9f-9c62-e93de829cb90"
        },
        "item": {
          "id": "19570f2d-af27-40fb-a3de-95b0d4f25a93",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b33917d7-3804-47cf-aba4-5d396cef7e8d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 49,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3195f736-db83-4453-aed7-d5217661a88d",
        "cursor": {
          "ref": "a5b02ece-ecdc-41ba-9df0-f400d5a7201f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f0a5ba02-0a00-42ee-b0de-31c53dbf7eaf"
        },
        "item": {
          "id": "3195f736-db83-4453-aed7-d5217661a88d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3f3d361b-e6c9-4608-b0c5-6c33466252c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ac0414-cfe6-4ad6-b464-626fb21f9225",
        "cursor": {
          "ref": "1837927b-eed3-4c1b-b5f9-3cc0635f9e34",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f662c6b7-da13-40d0-84c4-adf14600ed4a"
        },
        "item": {
          "id": "d9ac0414-cfe6-4ad6-b464-626fb21f9225",
          "name": "identifiers"
        },
        "response": {
          "id": "c53b899f-9c10-407d-a9a8-beffbb4bcd4f",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9dc7b6f-7c75-41ba-a753-bda5c6635ef1",
        "cursor": {
          "ref": "b8eb3977-3e76-4535-b38e-57adad88acfc",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2d412640-7332-4639-8e29-ae32baaa9a5e"
        },
        "item": {
          "id": "e9dc7b6f-7c75-41ba-a753-bda5c6635ef1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d9b6be02-3d2a-48e9-be06-c68d84cd6734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287eda33-1dac-4c6e-bcc2-a6d8829d5b0b",
        "cursor": {
          "ref": "49090100-9d34-47e0-b786-25912423c66e",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "94760719-075c-43f8-892b-c379617851ec"
        },
        "item": {
          "id": "287eda33-1dac-4c6e-bcc2-a6d8829d5b0b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "218044ba-011a-4c06-9d5d-0ee0db94925d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae7dcdb-09a5-43e6-921d-fca1da95f01d",
        "cursor": {
          "ref": "a00da33c-cc3a-478f-99d1-fb6019736d6d",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f97cdcb0-90c7-48a6-a519-a1aa583a3fd6"
        },
        "item": {
          "id": "9ae7dcdb-09a5-43e6-921d-fca1da95f01d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4f09d00c-fcdb-4f88-968a-cb8940b71978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca7418b-74f6-45ff-9432-2ed1e0504d90",
        "cursor": {
          "ref": "1657fb8a-0297-48cd-aa89-456801d240c9",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7b8a2fcf-0e00-445c-ab5c-c807edfbee44"
        },
        "item": {
          "id": "2ca7418b-74f6-45ff-9432-2ed1e0504d90",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5eb14140-1f73-461a-a4d3-75b9838eaef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23895d1c-20cb-4238-b1b6-7cb2ac677a74",
        "cursor": {
          "ref": "91578bc6-7e1e-4874-975a-a5191ef27a29",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "581432e7-e653-4df6-b4c8-110c4e1b2d27"
        },
        "item": {
          "id": "23895d1c-20cb-4238-b1b6-7cb2ac677a74",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8cea973d-c933-4023-bd07-44dc677f962a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe33421-1019-4cba-8c7c-08b9798f17f8",
        "cursor": {
          "ref": "7cdca7f7-018b-443a-b9ba-994a8a575424",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "20572697-ea4b-44dd-afbe-5ec036d947f8"
        },
        "item": {
          "id": "4fe33421-1019-4cba-8c7c-08b9798f17f8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6cb0f43f-4a69-458c-8d85-92189acf0c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe649351-c701-43f4-8f94-10ecb8b552bf",
        "cursor": {
          "ref": "ac7dc9b3-dde0-4d24-a119-5475c9cb8377",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "17ac041b-0702-45a2-9032-2c33f5f84c0f"
        },
        "item": {
          "id": "fe649351-c701-43f4-8f94-10ecb8b552bf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d2b2d75c-abdb-40ab-8165-b9624e937128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef1de04-8528-4d7b-b12a-b7d88e4c79ca",
        "cursor": {
          "ref": "e9f76ccc-9ca6-4cea-8d8e-a77452504e10",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6ec23529-7531-40f8-a508-61f02b0b661b"
        },
        "item": {
          "id": "6ef1de04-8528-4d7b-b12a-b7d88e4c79ca",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "27521198-efe2-4349-b811-efcc038006f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a582e6-68d5-4674-acb5-887377b2f3e0",
        "cursor": {
          "ref": "81792525-b149-4ed0-8eaa-fe31f7aed5e5",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "b99156b7-5cb1-4ef8-988d-de7deeee3338"
        },
        "item": {
          "id": "31a582e6-68d5-4674-acb5-887377b2f3e0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4efc9234-a50c-4889-bf5c-849d3ed28e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96485706-ebb8-4feb-9dd8-0139589c5f60",
        "cursor": {
          "ref": "e6de27ee-a9fc-43bd-ac15-c82f5bb2fbdb",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "00928b33-9195-4ab7-a87e-f4b3c3fbf131"
        },
        "item": {
          "id": "96485706-ebb8-4feb-9dd8-0139589c5f60",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d10dd43f-5f5d-4ab4-a73c-483c79b4fb1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1177b3c2-4e1f-4670-9439-9ffcefb0a34b",
        "cursor": {
          "ref": "8856e829-f6c3-4253-a275-58e220e96bd1",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f5e88baf-38ca-43be-b03b-53cbc9dff757"
        },
        "item": {
          "id": "1177b3c2-4e1f-4670-9439-9ffcefb0a34b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "510f8089-1f70-40f9-8260-98de24aeb377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc783385-fb9e-452d-8fcc-86a2826ce2c4",
        "cursor": {
          "ref": "4562919d-2761-4fed-8e76-b51a619ea1cf",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a3a9ec73-cbc9-46bd-b9f3-667a2c105628"
        },
        "item": {
          "id": "cc783385-fb9e-452d-8fcc-86a2826ce2c4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0dc279f0-8f64-4ea7-9402-8ae9edc057f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2995bfde-ad29-4936-9988-f6f5d6ad6e63",
        "cursor": {
          "ref": "e8bf9e14-a8a3-41e0-8c79-ff3b865b69d4",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ad3038dc-1e2c-48c6-9ec5-96a1b026bb60"
        },
        "item": {
          "id": "2995bfde-ad29-4936-9988-f6f5d6ad6e63",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "973cd093-406d-4f6a-8e58-ee76d5948d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13716cf9-02dc-46a6-b20d-59248c3906cc",
        "cursor": {
          "ref": "4be43783-98c2-45d3-86b4-b346dc807d00",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "268f3df1-223d-432e-a5b3-25b9a0189f7b"
        },
        "item": {
          "id": "13716cf9-02dc-46a6-b20d-59248c3906cc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "37c9937b-5ea3-492b-b73f-5fc0bd11a71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e461cd42-4eab-4394-a421-852de05553c5",
        "cursor": {
          "ref": "fb95bfe8-ac76-4e1b-b155-34597451b818",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2f93a89c-f686-4127-8915-ff87dc979ee3"
        },
        "item": {
          "id": "e461cd42-4eab-4394-a421-852de05553c5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "362ffebe-69c8-451e-88fb-ecc7882ba2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 178,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdfacfc-b7ec-44ce-a1ae-b348d3238e0f",
        "cursor": {
          "ref": "af9173d2-0eb6-427e-a6b8-554fb7db3dfb",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a9b03a20-6054-4cb6-8258-779dbfaf2563"
        },
        "item": {
          "id": "dbdfacfc-b7ec-44ce-a1ae-b348d3238e0f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f8bcc326-dd17-48ec-9fca-18b5d5db6dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f41f9a8-d2d0-4363-b712-6cf2c4871450",
        "cursor": {
          "ref": "d2aa9227-566c-40ed-a31d-9d67b89dafa5",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b1ec1d15-dae1-471d-918e-0089983d63f7"
        },
        "item": {
          "id": "6f41f9a8-d2d0-4363-b712-6cf2c4871450",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "85a4e1b1-c83c-4c6d-aca9-069ef6a03793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36dcdf9b-c578-48da-bda9-8f2d396a1f08",
        "cursor": {
          "ref": "79a0caa9-6b6f-4ba2-8172-2938c75a48a8",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1871a8e9-696f-4ad0-be8c-b20210236190"
        },
        "item": {
          "id": "36dcdf9b-c578-48da-bda9-8f2d396a1f08",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dcd146e7-c844-416c-834b-6adb6c75952c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2260ca3-f814-4545-b938-0d1e6a415f1d",
        "cursor": {
          "ref": "7c97ade9-c582-4669-a76b-1b0f8b0ef997",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5a54a27c-418a-4084-8c20-4f2e7484160a"
        },
        "item": {
          "id": "c2260ca3-f814-4545-b938-0d1e6a415f1d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "46904c97-8634-447d-8de2-9e01a8e5b58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cd7b10-f1e4-4e87-8c24-e001c099fbb1",
        "cursor": {
          "ref": "34cd6d07-af73-44bf-a192-cfad26c4e877",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "302fc73a-01bb-4716-a7f2-dcb0775c38e7"
        },
        "item": {
          "id": "01cd7b10-f1e4-4e87-8c24-e001c099fbb1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7394bc5b-4cb9-4e70-9afd-820ccf5f5280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7ff9b9-ea8d-4d11-8e2f-103085294bdf",
        "cursor": {
          "ref": "00b7b5e0-7fe4-418a-8b9f-f15be2fbab50",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "bc84c1bb-ede2-49c7-9eb4-ef2866cd7d22"
        },
        "item": {
          "id": "dd7ff9b9-ea8d-4d11-8e2f-103085294bdf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4ac183de-8092-4c39-8327-20dcd422d8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ccbfb1-65c5-41c3-b8d1-d7ddaf411297",
        "cursor": {
          "ref": "009590b9-cd7b-4c3e-a9bd-9807eb5c6b2f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bb7e534f-2b54-47f3-a7e9-dda6a83c41f9"
        },
        "item": {
          "id": "89ccbfb1-65c5-41c3-b8d1-d7ddaf411297",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b17d6cd7-3846-469f-810c-56b0a6158109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4da5eb-eb69-4446-9e51-5ae798e75662",
        "cursor": {
          "ref": "ecba1abd-0045-47dc-a93e-f27a16908721",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e7c47ae8-86b1-4335-aba9-a9355a6b5312"
        },
        "item": {
          "id": "8d4da5eb-eb69-4446-9e51-5ae798e75662",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "85c63f1c-b291-41cb-90a1-9b0c1d3d7178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bb67d3-0993-4441-b290-4f3e1d84025b",
        "cursor": {
          "ref": "ccbb3608-554f-45b1-b67f-17be23173ebe",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ad6cbcb6-dcc0-46ff-bbe7-67e8559f1830"
        },
        "item": {
          "id": "f6bb67d3-0993-4441-b290-4f3e1d84025b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b5f587a5-5fa9-4a76-9b43-36cb7102e467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7852919-bf0e-4ab1-93be-30b5c33f635a",
        "cursor": {
          "ref": "05ef1a2c-c60e-4a99-81fb-10634b5824d4",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b14f9633-66a2-43ae-843a-83bc11967041"
        },
        "item": {
          "id": "e7852919-bf0e-4ab1-93be-30b5c33f635a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d28cc0f3-2371-44fb-a5df-52ac2ae6adc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4aba79c-d129-4981-aa0c-510c6086669b",
        "cursor": {
          "ref": "99033e0b-5cbb-4ec6-a7c5-72f8d442a884",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ad2a6c1a-e853-4241-9cbd-eee1d0115e82"
        },
        "item": {
          "id": "b4aba79c-d129-4981-aa0c-510c6086669b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5491b71f-84fd-40c1-974c-22a3b76986fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca9f815-ad5e-405b-90f1-de24b3020461",
        "cursor": {
          "ref": "70411755-f741-4da2-9f22-2038afd038ec",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "60b25999-e7d1-4a5e-83f3-e5262c672714"
        },
        "item": {
          "id": "aca9f815-ad5e-405b-90f1-de24b3020461",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2fd4790c-d86c-4ef7-ae1a-9739290b16d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa19b84-df4a-4310-9f29-759d7359e23d",
        "cursor": {
          "ref": "1897655d-cedf-4967-b9fb-58da5063fb02",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8e08ae4b-46a9-47b2-9ebb-018aee232fca"
        },
        "item": {
          "id": "0fa19b84-df4a-4310-9f29-759d7359e23d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3a7495fc-dbdf-4767-b5bc-2b6510bf61af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a970df-f786-4652-8ad3-9a12bc68a405",
        "cursor": {
          "ref": "940bfa5f-ddf9-4138-bbb9-b20d4dece2fb",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "873faa30-4cd2-4737-8f57-5997dcb8c024"
        },
        "item": {
          "id": "c4a970df-f786-4652-8ad3-9a12bc68a405",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c700789d-2de6-4e14-9764-757ce0c1f2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc773afe-db59-495f-b868-9207ac0922c3",
        "cursor": {
          "ref": "e5536bb5-124b-453e-a0e1-b97ae7111b18",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8004d18c-d875-4abd-ac94-6626b1ce51d0"
        },
        "item": {
          "id": "bc773afe-db59-495f-b868-9207ac0922c3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e8cc53cd-e10d-4a48-a627-b4b27c02aaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449cf1d3-db38-4878-a508-ef777c9187cb",
        "cursor": {
          "ref": "94da88ac-dd35-4785-b844-d04a2a202413",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c1a9ad9a-319e-48a8-8721-244034a82393"
        },
        "item": {
          "id": "449cf1d3-db38-4878-a508-ef777c9187cb",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e416869f-b1c3-40b8-8d58-a42fc2121553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d637ef5b-5e72-4133-b40b-62460e88b8f7",
        "cursor": {
          "ref": "48113767-295d-42fc-acae-b8ed0b96e1a2",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f53d0ff7-15c6-417a-82d1-cee8da2ec5a0"
        },
        "item": {
          "id": "d637ef5b-5e72-4133-b40b-62460e88b8f7",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "07253510-d704-4d23-be15-a57ca44dcd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c77a97-fcda-478c-8def-e98e17f5fe22",
        "cursor": {
          "ref": "5646cfee-f62e-444b-bd85-842f6a41fa9b",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a139eec8-65c1-4a90-83d3-e448a032dc1c"
        },
        "item": {
          "id": "d6c77a97-fcda-478c-8def-e98e17f5fe22",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fd7e2933-5929-41e5-88a0-3274a0dec8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe83e57-6ea4-4ab4-b74e-e90e6b0c7740",
        "cursor": {
          "ref": "b83f7c4d-cf44-4879-9157-98123de70723",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b7d99707-3a1c-438d-aef2-927d2373d9f0"
        },
        "item": {
          "id": "dfe83e57-6ea4-4ab4-b74e-e90e6b0c7740",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "49d4ce5e-931b-4e31-b044-a023dc81f079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68976397-7e31-433a-b51f-6cb770ff8070",
        "cursor": {
          "ref": "be7fc0b2-eb71-474d-99ee-2fe32ec5eae8",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "591a75d3-917f-49bd-8e22-108038994f4d"
        },
        "item": {
          "id": "68976397-7e31-433a-b51f-6cb770ff8070",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "29cc908d-3ed5-4cd2-a7ee-df918444d3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc11a327-a49a-473f-82be-fee8ce5141d9",
        "cursor": {
          "ref": "02dcd1c8-471c-4ed3-86e3-75db9e86f135",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "fa787576-e8a2-433f-a1b1-fa1de961d6e6"
        },
        "item": {
          "id": "cc11a327-a49a-473f-82be-fee8ce5141d9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0bf72167-edd1-43e9-b93b-df7a2ea2841c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2563568f-ba5b-4f75-8f3e-2c15de382e98",
        "cursor": {
          "ref": "e48a0afc-6d55-43d0-a72c-618984d671e4",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0e73bf5a-c255-4bce-86f8-ca6bce99ee9c"
        },
        "item": {
          "id": "2563568f-ba5b-4f75-8f3e-2c15de382e98",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "2da01970-0cc3-4488-8f2c-848334ad8e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89b7989-29b8-45bd-a3cb-8fc6b04607d1",
        "cursor": {
          "ref": "b40aebea-2130-4da9-8a73-032610130482",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ce2008d8-99a8-4407-97fb-c9d0d16e0767"
        },
        "item": {
          "id": "e89b7989-29b8-45bd-a3cb-8fc6b04607d1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2a47daba-d8ef-4759-aeeb-780db70768c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8771ecc8-a6d8-47ef-a4fa-cfa89851137c",
        "cursor": {
          "ref": "ff8c8092-cd38-4a1f-83c0-589133d41d7c",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4fcb6054-833f-4a06-9bae-96a2c246987d"
        },
        "item": {
          "id": "8771ecc8-a6d8-47ef-a4fa-cfa89851137c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "36843ed4-7ef3-45e7-83e9-d318d1c396e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d38fc8-0a3d-4eb6-93e3-6c90658dcac2",
        "cursor": {
          "ref": "0542b0ab-499f-4948-9588-ec6e6acadafe",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "dbdaf409-ae2b-4deb-9f15-d1d0e0c12e34"
        },
        "item": {
          "id": "76d38fc8-0a3d-4eb6-93e3-6c90658dcac2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a4ad4a7c-ed71-4cfc-ae9a-c6bc0345ec93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3279ee4-a3af-4318-a3ff-96cfaf2889a2",
        "cursor": {
          "ref": "4eca94de-edaf-40a7-a25d-ad622ec13b7b",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f0356e85-6727-4814-bae2-26ad830efc71"
        },
        "item": {
          "id": "b3279ee4-a3af-4318-a3ff-96cfaf2889a2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f055a091-656e-4c06-b625-1193abf1b816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 146,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f342c14-3e76-45fb-ab69-b359f1ac5c6f",
        "cursor": {
          "ref": "7c799b7d-02cb-4bcb-a73d-8eb6525aeaca",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cb1b74ae-a272-45a7-aa5f-41cf0c55356c"
        },
        "item": {
          "id": "3f342c14-3e76-45fb-ab69-b359f1ac5c6f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "c8cfbb2d-9c7c-432e-8cf8-3a03ddc7b12b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdb3642-a1c2-42ec-9db2-efc0ba7365bc",
        "cursor": {
          "ref": "84f82e94-920a-4a6d-a8d9-ad5521cec22d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b6e1f5b7-d31e-4abd-970a-6d40a1e79e34"
        },
        "item": {
          "id": "4cdb3642-a1c2-42ec-9db2-efc0ba7365bc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d2473279-a824-4022-9637-73ac6fd35a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a56b217-3697-4065-b904-5439d8431564",
        "cursor": {
          "ref": "5c31767a-9297-4ba2-8182-37196795079e",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5eeb4a12-f673-47a0-83bf-419995c706eb"
        },
        "item": {
          "id": "3a56b217-3697-4065-b904-5439d8431564",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f194a304-4fb9-492c-8ba5-684018568333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61cb1c05-8d80-4829-9f82-27e4c8adc4cb",
        "cursor": {
          "ref": "ecfa44e5-23bc-4997-9799-a22dc85b2dbe",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5b7a797e-1626-406e-bfe6-42cdd601dad3"
        },
        "item": {
          "id": "61cb1c05-8d80-4829-9f82-27e4c8adc4cb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d4324acd-5c68-4e09-adf3-baa1eff2012c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 209,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83e3100-d3a7-4dae-8029-b06a8ae4ece2",
        "cursor": {
          "ref": "46f39099-eabc-4422-85da-c0cad152b4c7",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "29698251-8728-4f2a-b216-23a187c83b37"
        },
        "item": {
          "id": "a83e3100-d3a7-4dae-8029-b06a8ae4ece2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1c3ab631-6cd6-46ba-986f-e260ed7003ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645ce723-3a30-4ec8-8e9f-366988e28693",
        "cursor": {
          "ref": "53cdee7a-c573-4b7c-9ade-0a67c02f9ee4",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ae678b26-e2e6-451d-9207-2dab664ebddc"
        },
        "item": {
          "id": "645ce723-3a30-4ec8-8e9f-366988e28693",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f9711358-1f81-4ec8-b4fe-a3bcdf030e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f365254-f03e-4497-bd40-64a68a3d1eeb",
        "cursor": {
          "ref": "94722db1-862f-4244-b854-af885e734f22",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f9268989-fe5d-4f22-a9c4-016ba10ef0ea"
        },
        "item": {
          "id": "6f365254-f03e-4497-bd40-64a68a3d1eeb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0ae789b8-b530-451f-b1d8-58b7e1d08cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743b22b4-2ead-4c31-86d9-aaf6adb7f3b3",
        "cursor": {
          "ref": "93b626bc-c13f-4ae6-81dc-226e4b26b2b2",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d9da7126-521b-4f20-ab6a-23d982a5b998"
        },
        "item": {
          "id": "743b22b4-2ead-4c31-86d9-aaf6adb7f3b3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7cfdf065-8a22-4d21-b11a-473acf700651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7065a85-6afc-4f61-a60b-79059c29566b",
        "cursor": {
          "ref": "d61a8bd5-efc9-4343-bda1-21712d7ea576",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ad697fa7-a117-40af-a4a6-3e13bfbf9d0b"
        },
        "item": {
          "id": "c7065a85-6afc-4f61-a60b-79059c29566b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d2f3e230-7d63-4c8f-9939-bf032962ca38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8454623-6aa7-4003-89cd-fd5cf55fef88",
        "cursor": {
          "ref": "4bbfb56a-2ffd-4ca3-a985-42d7e615b2c9",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4a09315f-5175-4e4e-bc9c-35788a764d4c"
        },
        "item": {
          "id": "b8454623-6aa7-4003-89cd-fd5cf55fef88",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5146cd17-627a-4b23-9118-81c7181e9985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59643fc0-52de-4bb2-a8a9-cb383a174952",
        "cursor": {
          "ref": "d5c6ca58-4c7e-496a-af7f-6759d8325e0b",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "092d7491-72f6-4f4d-ab94-e437fb2e13eb"
        },
        "item": {
          "id": "59643fc0-52de-4bb2-a8a9-cb383a174952",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "61b6577f-70ba-4be4-a5ff-4f04101ac458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47132af-af45-4ccc-a237-a6776878059c",
        "cursor": {
          "ref": "361c267e-0895-4276-a6a9-8ce4676bf042",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "14342c22-a162-4245-8f88-9ac66196a232"
        },
        "item": {
          "id": "a47132af-af45-4ccc-a237-a6776878059c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2cc78482-60ee-4ae7-8f9b-e6beff011765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe9e282-a51a-49c0-a406-58fc5aaec198",
        "cursor": {
          "ref": "61834cb1-aa96-48e7-8bbc-c10ab75097ee",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4b1b3d15-c009-4429-8098-82e82bdb4ceb"
        },
        "item": {
          "id": "2fe9e282-a51a-49c0-a406-58fc5aaec198",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "34134d5c-ff6a-4fbf-8afd-496391f09259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc27978b-db46-472b-9695-c8c166354464",
        "cursor": {
          "ref": "dc584d8c-0d1f-4264-b467-4e87207d9d21",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "95aed810-1da7-4d80-89cb-85e65e7fa684"
        },
        "item": {
          "id": "fc27978b-db46-472b-9695-c8c166354464",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9e9fcd91-a416-43a7-9938-7fd68442ad49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d204e1-edce-4149-8719-3805f5cbef1c",
        "cursor": {
          "ref": "f3bcfc9d-c3d2-433c-8b19-30af5d93a2eb",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d18be25d-b515-43b1-8bba-f4542fc3cdb9"
        },
        "item": {
          "id": "d9d204e1-edce-4149-8719-3805f5cbef1c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "726692cb-3780-494f-920c-08a0053a67f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc93a966-5ada-4247-b903-0990136136f7",
        "cursor": {
          "ref": "e7133cff-0a14-44ac-89b6-e55e89c5273c",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4cacc41d-7554-47d2-9279-6f1ac3b4de9d"
        },
        "item": {
          "id": "fc93a966-5ada-4247-b903-0990136136f7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d261a264-1d2f-4a2b-a07d-f8b6fc112a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a8628f-4c7e-404e-9bd8-c02930f45710",
        "cursor": {
          "ref": "b7a754f2-b149-4f3e-a728-4338963153e5",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c2a922e4-eb9e-474b-9d5f-0b330fc1b311"
        },
        "item": {
          "id": "05a8628f-4c7e-404e-9bd8-c02930f45710",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6b33db46-88a0-476c-89ea-248823825f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5827c00e-869b-4506-b6a4-aa07780cf110",
        "cursor": {
          "ref": "e8fe54d1-6e5f-4388-8095-604f1ea417f0",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a9194790-15b1-479e-a280-a14b606052f8"
        },
        "item": {
          "id": "5827c00e-869b-4506-b6a4-aa07780cf110",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "7178a2e6-8877-43d3-a398-fa4a3e64ebe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603c0318-23e4-4c18-95ba-68bb0720065f",
        "cursor": {
          "ref": "562155ed-7b5c-4b79-a369-252ecdcabfcf",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "27bc623a-39c9-41df-b455-cb03dda0fe60"
        },
        "item": {
          "id": "603c0318-23e4-4c18-95ba-68bb0720065f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e0ef92a2-d588-47ce-b8e1-d9fe94ae2688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f996d914-7a2a-4cd1-af09-2a25449b9350",
        "cursor": {
          "ref": "b8a2a0c3-5887-4392-9b63-2b153f577e65",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "80942ae6-a0e6-4e9f-91b6-6c9bb4794362"
        },
        "item": {
          "id": "f996d914-7a2a-4cd1-af09-2a25449b9350",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "89e74990-cc46-47ce-b28b-4de0a5f878f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f34dab-0624-4eff-8ceb-1de3b9b66ab7",
        "cursor": {
          "ref": "a832cff8-0c3d-4c2f-9477-930cbe12bd98",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4f540f45-7037-4da7-b2fa-d91685d759cf"
        },
        "item": {
          "id": "89f34dab-0624-4eff-8ceb-1de3b9b66ab7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c581986a-4759-44ae-83d9-f796e87e0f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751216e8-ce2d-40ea-a7cf-6bdbbac7cde7",
        "cursor": {
          "ref": "9e41c0ed-a1c9-4deb-84ac-73017b65b688",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a31f8bae-e3cf-4718-ba33-8059db9a6bf1"
        },
        "item": {
          "id": "751216e8-ce2d-40ea-a7cf-6bdbbac7cde7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "92090942-4a1b-46ed-90f4-4310abc02af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6977362e-4b78-43d9-967e-cbb01b01f878",
        "cursor": {
          "ref": "f8bf8106-8652-415f-9130-11929ca4cd6b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "07c5cae6-a51e-4f61-bf06-8a69897254d1"
        },
        "item": {
          "id": "6977362e-4b78-43d9-967e-cbb01b01f878",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "42a268d3-dc9b-4c8a-95b8-d77cf3377edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9759bc3e-6c15-4830-a8f4-369a00fa8e0b",
        "cursor": {
          "ref": "8cee280a-893d-4624-96f6-f221916545c6",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "462a0149-c08d-4ef4-a5ae-c6a86319f094"
        },
        "item": {
          "id": "9759bc3e-6c15-4830-a8f4-369a00fa8e0b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c29ecd05-9d16-4a5c-a833-9ea7d43c8c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0b4987-a02a-48c0-b5dd-f75a20d64cc9",
        "cursor": {
          "ref": "bb9630f0-2a66-4d66-adff-57812ec481f7",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "118e66f1-13e2-4401-a246-4c57a11c1bf9"
        },
        "item": {
          "id": "1f0b4987-a02a-48c0-b5dd-f75a20d64cc9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "857ebd98-efef-429b-a8cf-e1139b1ea8d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973ed1ce-6f6b-4e36-9753-99e3f6b1d10b",
        "cursor": {
          "ref": "7c216c29-8a05-4fda-9da4-646bbee58baa",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c6e7d071-85a6-463f-9532-c69e4b49602b"
        },
        "item": {
          "id": "973ed1ce-6f6b-4e36-9753-99e3f6b1d10b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e7d13c95-1abd-4825-a310-13f82249610d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cc523f-9131-4c20-b585-f4663584ccfb",
        "cursor": {
          "ref": "e9b97be8-2f27-410b-ba36-bd3b9827b03a",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0ee9d5f8-3c02-409e-b29d-c6a6e94ef641"
        },
        "item": {
          "id": "e6cc523f-9131-4c20-b585-f4663584ccfb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "200e9496-e24c-4237-99ce-63f7a06822b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b95872-669a-4baf-8caa-245a824b0fb3",
        "cursor": {
          "ref": "c03ef204-7c15-40b8-a1fb-4f8da7c601f3",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7546b5e9-6fb8-4dcb-ad5c-0650eb40963c"
        },
        "item": {
          "id": "25b95872-669a-4baf-8caa-245a824b0fb3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2300d696-87b6-4b66-abdd-b5bc5deb0a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e15d11-c65c-4974-a413-ca3911c4dec2",
        "cursor": {
          "ref": "d34974d4-9eb8-476d-8d43-bc8515ca8f94",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1ab2d9ac-86c8-4fa6-a3ee-2608fbec996a"
        },
        "item": {
          "id": "28e15d11-c65c-4974-a413-ca3911c4dec2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4bbc27a4-6492-4a1e-869e-87a02e7e64ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 155,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c01fbf8-68be-4987-b1dc-7b23903e9161",
        "cursor": {
          "ref": "729bbcf5-7f7d-4a61-b18f-9c43473bb53e",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "47c7e63b-9903-4a97-bcb9-17010bbf763a"
        },
        "item": {
          "id": "9c01fbf8-68be-4987-b1dc-7b23903e9161",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7bd56bdf-fc4f-48a6-bed1-3c75a5ecf3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0074ce26-1b8d-41c5-a010-d6e09fc3f956",
        "cursor": {
          "ref": "a87a4b4e-7f7d-4245-9f47-ec46bc652127",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0f7b88e7-9588-4d8a-a0ed-d76e564235c4"
        },
        "item": {
          "id": "0074ce26-1b8d-41c5-a010-d6e09fc3f956",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a076ced7-30e3-468c-b832-59d1e64bbc2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e311d339-f523-4103-87cc-2753af699cad",
        "cursor": {
          "ref": "cefec9ad-7a78-414d-956d-ad9fa0004ded",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ac4ee2bf-05d3-4579-8070-9174c1520feb"
        },
        "item": {
          "id": "e311d339-f523-4103-87cc-2753af699cad",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ea74bc4d-9934-4917-ae49-fea2d4039149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b636abbc-3601-4563-a99d-73ebad3501d9",
        "cursor": {
          "ref": "dfe7702a-96d8-4bbb-a482-154a49925e39",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4f173ff6-d674-4a57-b6d2-aa938f398744"
        },
        "item": {
          "id": "b636abbc-3601-4563-a99d-73ebad3501d9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "00b3777e-4279-4707-aee7-871bc10e26a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f2c480-118f-4f77-981f-3559a3cb059f",
        "cursor": {
          "ref": "708a1a91-0b6f-4e4a-80ba-a4d7da05cea1",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fabc37e6-a9de-46a6-aaca-a5bdaa87d1ff"
        },
        "item": {
          "id": "c5f2c480-118f-4f77-981f-3559a3cb059f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d55aa123-7e07-42df-8ad9-f9b483df2ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21998805-56f0-4374-bc74-421a0cd99666",
        "cursor": {
          "ref": "2b7d3039-b97a-4d25-abaf-076319a518c7",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "cde1e841-70a0-4fe5-80e5-41626eab5474"
        },
        "item": {
          "id": "21998805-56f0-4374-bc74-421a0cd99666",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "588d344b-c710-43b0-a5d0-3fab2fb0fd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 232,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe5e95d-c214-48b1-aa32-decdc34abcab",
        "cursor": {
          "ref": "bec2d9a0-e151-4a9f-a256-bf6a6366fd58",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8f8f33f4-d52d-417c-8d71-530500ea76d5"
        },
        "item": {
          "id": "ebe5e95d-c214-48b1-aa32-decdc34abcab",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4545ca87-9f6b-4d2f-af4e-768803c692bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4857b6-c49d-4cfe-a2e0-ef4428cff6e9",
        "cursor": {
          "ref": "e5f72493-18dd-47aa-ad2c-bde0f13e80ee",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ebe631b6-8c43-47ec-bd21-2d40744a60ec"
        },
        "item": {
          "id": "3a4857b6-c49d-4cfe-a2e0-ef4428cff6e9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "032fe2fe-4fef-42cb-90b8-7f2e353c220e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af45fc0-d307-4031-adb7-304dfbbabf3a",
        "cursor": {
          "ref": "aaee3eb0-100e-4bda-adc3-f6bc40c77078",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "249212c4-39f2-4a21-9976-a275f5f32d72"
        },
        "item": {
          "id": "8af45fc0-d307-4031-adb7-304dfbbabf3a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b42b69ef-c4f7-4927-a1f9-5767d4ff8044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519ca302-64d1-4137-ba2c-ecb25673da21",
        "cursor": {
          "ref": "79b687ea-de17-4816-b934-c3c4debdc0de",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cab116d7-07d9-4d72-8d4a-15a47bf64cfe"
        },
        "item": {
          "id": "519ca302-64d1-4137-ba2c-ecb25673da21",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d709cefd-eb8e-46c8-98a6-71539a95d05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a9917b-e79d-4ba2-b39a-8dfaf996b1f9",
        "cursor": {
          "ref": "0cc07bf4-1469-47de-b1ab-f8e704ae13ca",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6f7d9a85-09e7-4671-9d87-a5da5e71a010"
        },
        "item": {
          "id": "c9a9917b-e79d-4ba2-b39a-8dfaf996b1f9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6766eb2c-a2da-437b-8014-6b17c70212d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b586d20-6e60-4e3a-8fc4-0d1f2ac16730",
        "cursor": {
          "ref": "37dca6ff-f2f3-4f78-bf2d-ffe28400180d",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6b0b2809-d396-494f-a64a-5b36981b4960"
        },
        "item": {
          "id": "5b586d20-6e60-4e3a-8fc4-0d1f2ac16730",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "aedca9de-d70e-41c4-adbd-04d940670310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542dc9c6-7730-4779-8995-160400b2aaca",
        "cursor": {
          "ref": "53a8bb4f-9e76-43b9-ba1a-b24316acfb57",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5fdbc29d-481a-47fd-ad2d-18cbe3e2f440"
        },
        "item": {
          "id": "542dc9c6-7730-4779-8995-160400b2aaca",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a0a83745-9dba-4c24-a3ab-e181ec5fcc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd0e02b-7fa7-4fb4-b2e6-f451814db55f",
        "cursor": {
          "ref": "d39eb0e7-6bcb-4997-b3b9-48838aa0295c",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "817e9890-31a6-44be-9025-12058b5fc24f"
        },
        "item": {
          "id": "fdd0e02b-7fa7-4fb4-b2e6-f451814db55f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2319240b-f03b-46d8-bd2d-9161479e4eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 130,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d84ad39-fd87-42e1-bc81-96d5b4cead87",
        "cursor": {
          "ref": "9fc2b31e-2f01-4247-bede-9ba193d64f4a",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f21fa880-dd16-4c85-8ac6-610c5cc99983"
        },
        "item": {
          "id": "4d84ad39-fd87-42e1-bc81-96d5b4cead87",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "80073b4f-190a-4e87-81d7-5dfb831ef520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e7d767-fe8f-4dec-abb2-ac28080332ce",
        "cursor": {
          "ref": "43e50f0b-8b23-4819-a524-6578ae796554",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7fd89b3c-ef9e-48a1-9bdc-5287a4a54344"
        },
        "item": {
          "id": "34e7d767-fe8f-4dec-abb2-ac28080332ce",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2d1e750f-3c9e-4f71-b6a6-54f024a71875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8609eb7e-f7de-4feb-addb-776b0823f26d",
        "cursor": {
          "ref": "3fc958d8-7dcf-4464-9c92-928d640ebc49",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f8eb9279-1a64-4f75-af6e-6dcab37dfafb"
        },
        "item": {
          "id": "8609eb7e-f7de-4feb-addb-776b0823f26d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "69129335-372b-40ab-b0d9-2bfab1dfcf91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5409b5c-16d3-4991-9351-d130def54201",
        "cursor": {
          "ref": "c17cfd46-07f1-4626-b331-17bfce1cf9b3",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3fb4b4ab-017a-4f0d-9817-ff2f5f85ae46"
        },
        "item": {
          "id": "d5409b5c-16d3-4991-9351-d130def54201",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0b71cabb-0df7-4abd-9dea-86d26c562acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9c6ffb-4752-4734-9ef0-ac37977f4613",
        "cursor": {
          "ref": "f915d52b-481d-4dd4-8a51-10406e256025",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "23d67748-c6f2-4288-ad2c-56d430310268"
        },
        "item": {
          "id": "7c9c6ffb-4752-4734-9ef0-ac37977f4613",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "40904955-519e-4167-bc8d-8246075ac290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398ba9cc-db61-4b36-a2f0-54084496234a",
        "cursor": {
          "ref": "661132af-7331-43e5-b71c-fb56dec24f20",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0535e646-6c84-47ee-98c0-043119f5aa93"
        },
        "item": {
          "id": "398ba9cc-db61-4b36-a2f0-54084496234a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0b918ffa-f271-4c47-921b-f3cb504175ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c04cbe-891f-4c5b-a99e-fdb73aaa8af9",
        "cursor": {
          "ref": "bb1b3d35-33d8-4497-a4ec-298c4bc24713",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "6ef87961-82e7-47cd-9c4b-20f65658cdbd"
        },
        "item": {
          "id": "f8c04cbe-891f-4c5b-a99e-fdb73aaa8af9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d3409186-9536-4c9a-866c-ac8b7b3e51b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0a8fad-6535-4a0c-acb1-925c038273c6",
        "cursor": {
          "ref": "239db241-7a55-426a-ad8d-d7c071951bf1",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "dc2560fe-319e-4f85-881e-d18f4829dc80"
        },
        "item": {
          "id": "3b0a8fad-6535-4a0c-acb1-925c038273c6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6c3b9c76-040b-4bac-94eb-692260dcfc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6160149d-96db-4492-9219-243302310606",
        "cursor": {
          "ref": "52f9fb4a-71e2-4476-8b33-6ade93be5b18",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3f0c23b6-3fe4-4fdb-931d-aee066dcce26"
        },
        "item": {
          "id": "6160149d-96db-4492-9219-243302310606",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "84ae51c6-a890-4094-b186-d3213464f9e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e01376-40db-43ac-a548-086891d6a057",
        "cursor": {
          "ref": "be892b50-6d92-46dc-8678-513ce65015e5",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4f7f6bd6-d489-44a0-90f9-672a203998ce"
        },
        "item": {
          "id": "66e01376-40db-43ac-a548-086891d6a057",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b3121fdf-46a6-46d5-a0eb-3930e6c71252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "bd38c028-9efd-45b7-855c-37ccdfb2e409",
        "cursor": {
          "ref": "5c670efe-acff-4a25-8519-b77021755641",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "50e9bd95-3751-4523-8cae-238dcf7723af"
        },
        "item": {
          "id": "bd38c028-9efd-45b7-855c-37ccdfb2e409",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6ec52e4a-5a04-493e-8a0c-16b33c742937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "b35c8830-e746-45d1-a513-6f98d9399a1d",
        "cursor": {
          "ref": "35eec587-b8ee-4af8-bf06-ec50447477bc",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b3bb3103-f024-4afd-9fe3-0d7c6e0fe65c"
        },
        "item": {
          "id": "b35c8830-e746-45d1-a513-6f98d9399a1d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ae00bfba-9833-4f04-99aa-52b1153809c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "cc416f13-3d3b-4e6e-a72b-00dcaa3f16c4",
        "cursor": {
          "ref": "1bda64bb-5177-4537-8f49-12f943c1705f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "78234d55-26dc-4e13-a76f-86e2e43e3cda"
        },
        "item": {
          "id": "cc416f13-3d3b-4e6e-a72b-00dcaa3f16c4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fd8182ea-c16d-4078-afcd-679fb9d30cbe",
          "status": "Created",
          "code": 201,
          "responseTime": 4870,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c1e514-557c-4bbf-8e42-9866a14049e5",
        "cursor": {
          "ref": "06cdcf3e-d48b-49d9-ac77-7d7254555580",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "89ce57ef-0b63-4b90-b43f-04fa2c91d881"
        },
        "item": {
          "id": "b1c1e514-557c-4bbf-8e42-9866a14049e5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "173ff77b-63ba-48a8-8195-4d96ba793259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "b6245ed9-eb9b-413b-a994-5e198794a97b",
        "cursor": {
          "ref": "2b346c67-0bf8-421a-8935-16e08a54fc37",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d034956b-8595-4d93-af65-6971852ac51f"
        },
        "item": {
          "id": "b6245ed9-eb9b-413b-a994-5e198794a97b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "02d9309d-6d2e-459b-9e6d-fcdf080e330a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "b77d85e7-f654-4e6b-a746-e8e53ac0e1b0",
        "cursor": {
          "ref": "58c4dac6-7495-4aca-b3e8-337201def3ab",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "df1eabef-e526-417c-9e7f-8190ea6abe9c"
        },
        "item": {
          "id": "b77d85e7-f654-4e6b-a746-e8e53ac0e1b0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bbff6a5e-42dd-43b7-bea5-15fa840fd691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1993088-fb66-476e-a8bb-6031292f058c",
        "cursor": {
          "ref": "8dfd275a-2530-4651-afda-6adecb35868d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "050cd9e1-b554-4ac7-825e-23ab7ae2092e"
        },
        "item": {
          "id": "b1993088-fb66-476e-a8bb-6031292f058c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "988b2d4d-d1c9-4385-9143-c9fe78d12b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af251b65-fbce-4719-9892-15d0e7ce406f",
        "cursor": {
          "ref": "3fb8a87d-20e5-4af2-9888-4aebb49d65c6",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e71dbbbf-2d9f-41a8-b149-6643aa545a78"
        },
        "item": {
          "id": "af251b65-fbce-4719-9892-15d0e7ce406f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6d0192e5-e9f4-46bd-81ca-5993e8ff3b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6749a1e-03a0-4b9e-babb-49d705a77ce3",
        "cursor": {
          "ref": "f82641fb-feba-47d2-90d3-909da2398ebc",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "fe84d21d-4d2e-4ef1-a698-cf70850b828a"
        },
        "item": {
          "id": "d6749a1e-03a0-4b9e-babb-49d705a77ce3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8cea945d-dfe3-4cfd-adcf-bfeda2d200a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4a9027-9e65-4ce4-8cfa-364410e600a6",
        "cursor": {
          "ref": "f2805fdb-716d-4338-ad63-dae157cdca53",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7a01e0d0-0da1-4e01-93eb-4b7bd9ccdabe"
        },
        "item": {
          "id": "0f4a9027-9e65-4ce4-8cfa-364410e600a6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "171dcf40-f9e0-4626-bf4d-5320fc1c9d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bbcd45-bb62-43b3-95c6-631e1b33159f",
        "cursor": {
          "ref": "23a707bc-f53f-4f0b-9f17-eb665196bd65",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5714c70a-2110-4e48-a943-5e0b082d728b"
        },
        "item": {
          "id": "b2bbcd45-bb62-43b3-95c6-631e1b33159f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7e34bd1b-cd62-4dcd-8547-876026e08b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c68d2f-11db-4c4a-b70f-8bbc32fc3d77",
        "cursor": {
          "ref": "19851aba-4cba-4cab-b4df-9b5bcd983bcf",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "80eb35dd-2664-45b7-b3fd-5e79d7469dac"
        },
        "item": {
          "id": "98c68d2f-11db-4c4a-b70f-8bbc32fc3d77",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c6fcd95b-5392-423a-be8b-831cb90f7235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168d677c-3761-41da-9d82-1780301daa55",
        "cursor": {
          "ref": "bbdbafd3-0f1e-4811-9f42-f05a06a573ce",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c3cc7726-6e4e-46af-bd0a-3669217b1753"
        },
        "item": {
          "id": "168d677c-3761-41da-9d82-1780301daa55",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f45a1122-cb5f-496e-ab28-b0fef859bdd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2adf9946-1846-41ff-b14d-dbf1cbbd3187",
        "cursor": {
          "ref": "b82c2c55-1c02-42dd-80ff-fd1733142e8e",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f205e4a6-657e-4460-86a3-8ec3625a5cad"
        },
        "item": {
          "id": "2adf9946-1846-41ff-b14d-dbf1cbbd3187",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0caf2a06-b63e-401e-817f-84737759e9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3947c2ca-14cc-485d-9e86-085dd39b0344",
        "cursor": {
          "ref": "409394cd-53d2-4bbe-ae08-a713e41216bc",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "56d1cb44-e1d6-49f6-9b9a-6e79918ad141"
        },
        "item": {
          "id": "3947c2ca-14cc-485d-9e86-085dd39b0344",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "123a0ca2-bb19-497e-b5ed-83e5d19806d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d6bd35-6d4e-46ed-b647-ea5e11844723",
        "cursor": {
          "ref": "3bd94e52-47b7-4c5c-928c-ef841533d9ba",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "817f4d97-51a2-40e2-b5c3-06a4717b90ac"
        },
        "item": {
          "id": "20d6bd35-6d4e-46ed-b647-ea5e11844723",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1080d760-b28b-419c-9325-206d3a5c8593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea11fab-c363-47eb-bd87-4fb4ce8fa782",
        "cursor": {
          "ref": "41f40318-0025-42e4-a5d7-37fe2ccdcf89",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0ad34542-010e-4758-8586-e6780c761b6c"
        },
        "item": {
          "id": "aea11fab-c363-47eb-bd87-4fb4ce8fa782",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ef9c64a6-1333-4ac0-94f1-59cb5ca96ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f9cef6-e2b8-4aeb-8f4d-917352a28932",
        "cursor": {
          "ref": "e2ae7bc1-af55-4a1a-bfca-43a8afb11092",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6ce9858b-2926-4251-aab5-06aeb65effdc"
        },
        "item": {
          "id": "64f9cef6-e2b8-4aeb-8f4d-917352a28932",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9ad7ad02-3c9c-4ea3-89dd-0fb4b326d607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71fc89f5-a7b4-4f0c-bc42-980da46fdf22",
        "cursor": {
          "ref": "b2a3c4de-fb2c-4e83-bc45-d3c0d6d12dd5",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b7c13626-9f91-4551-bc0b-7ffaecc4a1f8"
        },
        "item": {
          "id": "71fc89f5-a7b4-4f0c-bc42-980da46fdf22",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f4a0a603-37e4-47ae-aa91-93d46b91c328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c96fe65-8e0c-4e13-b403-66d18de73812",
        "cursor": {
          "ref": "b4effa7d-0956-4fc9-b644-129a0c1d3a34",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ddc11602-7a60-4681-9a05-ebe3b68ad745"
        },
        "item": {
          "id": "9c96fe65-8e0c-4e13-b403-66d18de73812",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0b303f9d-7b0c-441f-b7b4-68fe639082af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5997fe0e-6a80-4cf0-b63e-5405651c8cbe",
        "cursor": {
          "ref": "a3e3435f-e452-4511-875d-a6b93c9ee0f7",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4a248a07-821a-4a6b-8ea0-bb4d7033dbc2"
        },
        "item": {
          "id": "5997fe0e-6a80-4cf0-b63e-5405651c8cbe",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "864370fa-922a-4070-b7ce-5f059fbfe5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd4d100-8363-40b8-89cc-ee97a6f501da",
        "cursor": {
          "ref": "ac200362-e682-48b5-9bf9-e06968cc7777",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cb941ce3-aaf1-40c3-a805-7ab2ccf4beec"
        },
        "item": {
          "id": "dcd4d100-8363-40b8-89cc-ee97a6f501da",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a4688fbc-bbba-4bc6-985b-65ad2c9b4793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916bfcb7-593e-4465-9a59-f98678362fa7",
        "cursor": {
          "ref": "ec5e2f14-f226-4806-a3a1-1a2379209f53",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cc85f476-697b-4df4-a9f2-7b210288e778"
        },
        "item": {
          "id": "916bfcb7-593e-4465-9a59-f98678362fa7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "662a7e2c-217d-46fd-8309-2c900433973d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75044d21-cb64-4a6b-9903-a2be1313d58c",
        "cursor": {
          "ref": "da6f7ae1-5908-41e1-aeb5-62b9291b0165",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a47b59e9-a82c-4f96-97c8-c61c7ef91335"
        },
        "item": {
          "id": "75044d21-cb64-4a6b-9903-a2be1313d58c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "593ec1b4-53b1-4269-902d-5f84c8228d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944d318d-e39f-4a73-ab34-23b9f915627c",
        "cursor": {
          "ref": "0d786851-69c3-41e7-b0b1-67f9b66e4bfc",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7f8e0e03-d2ae-4779-992d-e93730d7e57f"
        },
        "item": {
          "id": "944d318d-e39f-4a73-ab34-23b9f915627c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "178c5d21-ca6f-4342-b109-fc70abf1402b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead4f63d-633a-47c4-a16d-2fb56ca3e10f",
        "cursor": {
          "ref": "f26cbc8a-b898-45ce-ae73-d6c3b9920755",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5494e57a-7219-4c19-b564-4b3642b86376"
        },
        "item": {
          "id": "ead4f63d-633a-47c4-a16d-2fb56ca3e10f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "766d684d-3a77-4b29-826b-8c014f4d1b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6fa720-abef-4074-8859-f9fab501e0f0",
        "cursor": {
          "ref": "ca9453a4-6e5b-4a34-99ad-88000c2eba86",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4a5f2aa1-2c1a-4c91-a9ec-198ab8251d3b"
        },
        "item": {
          "id": "db6fa720-abef-4074-8859-f9fab501e0f0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5c27f646-ecc0-4ddc-ad12-0e457f30b1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d7b028-e658-47b4-8857-df90d6289e46",
        "cursor": {
          "ref": "a1931c2f-483b-49f0-bb6e-13b4e0934d9e",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2bdb3a6d-4da8-41e7-8610-e96a630a5012"
        },
        "item": {
          "id": "79d7b028-e658-47b4-8857-df90d6289e46",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6a096eef-44ae-419a-a9d4-2f3465f2a8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70485247-e8fd-4d94-bd65-f3be3261df15",
        "cursor": {
          "ref": "5276f118-c142-43b1-9b3f-8aac60c40d37",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "32e588dd-c61d-42db-b9ad-b898eeef4c3d"
        },
        "item": {
          "id": "70485247-e8fd-4d94-bd65-f3be3261df15",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fb2b2b63-6791-471e-917a-340002ad6746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9049240-9406-48c3-ac18-d4fe2f3d54b6",
        "cursor": {
          "ref": "b31ba7a8-4906-4744-809a-d90b8b5df1d1",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "805f81dc-114d-42ad-8f26-1dbc624e329e"
        },
        "item": {
          "id": "f9049240-9406-48c3-ac18-d4fe2f3d54b6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "655e8cbc-4c59-4aef-81d0-026d4f95b2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2b27af-e798-4ce5-aa04-3e1c6b82c52d",
        "cursor": {
          "ref": "b1f2eeba-e3dc-4f19-a345-0fdb8b70d835",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "27f5dd0b-bc67-4faa-be3d-e34a1ed9e5fb"
        },
        "item": {
          "id": "7e2b27af-e798-4ce5-aa04-3e1c6b82c52d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "796b6f45-c67c-406c-bd51-a1b0ed930070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7776d9d4-869f-42c3-831b-22f827e308ba",
        "cursor": {
          "ref": "c31a6f30-1157-469d-b7f8-3102acf17014",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dbc7e10a-88e5-4b90-b3ac-636f774f4cfc"
        },
        "item": {
          "id": "7776d9d4-869f-42c3-831b-22f827e308ba",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ac0dfae8-a84b-4441-b20c-c723df3fcd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7282a0e0-91e1-43fd-8464-5a48ea940753",
        "cursor": {
          "ref": "5eeecbe2-b999-4f87-bf9b-c3cc861c2ca1",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a3c6ee8c-63ff-42c2-be33-916bfd1a686c"
        },
        "item": {
          "id": "7282a0e0-91e1-43fd-8464-5a48ea940753",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "83a95d72-a223-4ceb-8c30-3a39ec7070a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b4afee-0cf5-4adc-bcae-6119e84ce602",
        "cursor": {
          "ref": "77e6e5ab-dd31-4359-93e0-51057721ed89",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4536cd6f-cb8f-4548-8b0c-1ead0067d0a1"
        },
        "item": {
          "id": "d4b4afee-0cf5-4adc-bcae-6119e84ce602",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "12fc6791-7d8f-4ffd-ab2b-86769e99e668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceca077a-cd4b-4014-9384-c25a9967b826",
        "cursor": {
          "ref": "dc202333-02c0-473c-b803-6a68bf1ccc2d",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0c712fb7-d110-4910-ae3d-07d8b789eaec"
        },
        "item": {
          "id": "ceca077a-cd4b-4014-9384-c25a9967b826",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "fbcd31d7-af7d-4403-97ee-e5b6056b58d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756fae17-7a27-4720-b190-4cef4050fa4f",
        "cursor": {
          "ref": "254c0f3e-068e-47f9-a630-7cf46e690023",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "48bfc98c-f12b-42ff-a8ee-637e11b46029"
        },
        "item": {
          "id": "756fae17-7a27-4720-b190-4cef4050fa4f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c4d4cfce-f7cb-4446-a93e-000ab3595e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5d9b08-1006-4be0-b6e1-d5306ee87b12",
        "cursor": {
          "ref": "f726acb5-0aea-41f1-bd31-5968340ab1b5",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5c64e280-1955-40c9-8250-9650ffacc0f5"
        },
        "item": {
          "id": "bf5d9b08-1006-4be0-b6e1-d5306ee87b12",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2af3166c-e1f7-4e92-9f69-06cf20c27df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a8a830-96fc-4b7b-a7bf-306d1b8b31b7",
        "cursor": {
          "ref": "a84b1be9-2095-428b-868d-34bc14cd5cb5",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "29e46528-1108-4cb8-a76c-346c15b0a87e"
        },
        "item": {
          "id": "c8a8a830-96fc-4b7b-a7bf-306d1b8b31b7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ed31e23c-e2e4-406d-8a83-838f12d39b06",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1c411b-a269-468e-b103-922bf7d1b175",
        "cursor": {
          "ref": "f0f651bf-233f-4bdf-be1d-f212332a7dcf",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8c1c0da9-a79f-430c-8e03-5f98d9392b8f"
        },
        "item": {
          "id": "bb1c411b-a269-468e-b103-922bf7d1b175",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c7945e0f-b1a2-43f1-8c15-8905e7f134d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99a8262-804c-40ae-8228-9cfb9fb9ada6",
        "cursor": {
          "ref": "8d80f2ab-9122-4488-a85b-8fd9efb98b8d",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "8890a76d-579a-437b-9f8c-82b1b2351cf7"
        },
        "item": {
          "id": "c99a8262-804c-40ae-8228-9cfb9fb9ada6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d0dd6f0e-22ae-422e-aa88-cbd8831aa92f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa582a14-7d9b-47c8-a13e-2dbedb21a180",
        "cursor": {
          "ref": "aeb88be7-28aa-4e28-99f3-270b5e57507f",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3c172294-6f6f-406f-ac18-c9f9c01998ce"
        },
        "item": {
          "id": "aa582a14-7d9b-47c8-a13e-2dbedb21a180",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cddb6def-337f-43a9-8fd4-56921aa64d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18a0707d-8252-4f12-aeb2-c49b4ac3a62f",
        "cursor": {
          "ref": "aebd89c6-9eaa-400b-badc-c04f76f90a36",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "03b419c9-0bba-430f-bf5b-d5be1d0a5e4c"
        },
        "item": {
          "id": "18a0707d-8252-4f12-aeb2-c49b4ac3a62f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ee5b3111-e32a-4778-a484-4660dd9bc7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6befdb42-fd28-4c25-ba3c-0bec0e370050",
        "cursor": {
          "ref": "5b6cb838-6ac0-4df0-9b7e-7a2e724cee33",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b990ec9c-fe76-4973-8587-0dc00e94ec1b"
        },
        "item": {
          "id": "6befdb42-fd28-4c25-ba3c-0bec0e370050",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b60f8435-462c-445c-aad2-a9ee6e7062d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259d5492-2eeb-4b49-8432-09c1e3c0f6d7",
        "cursor": {
          "ref": "80f5fe78-530c-4f8e-b95d-f23689e43fa5",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f7289619-6760-4cc8-989c-ef1407c0337b"
        },
        "item": {
          "id": "259d5492-2eeb-4b49-8432-09c1e3c0f6d7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4ef357f1-f0a8-40b8-ab8d-6964209e85e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf18568-239e-48bb-bb6a-3c8bfd6da14d",
        "cursor": {
          "ref": "dc5d8176-9675-43f1-8ed1-fbb8cbd50e8a",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a345b638-d1ca-45cd-8ca4-e70e3060431d"
        },
        "item": {
          "id": "6bf18568-239e-48bb-bb6a-3c8bfd6da14d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "51585402-d721-404f-8aca-d9c7930edb0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0c8fc5-8611-4d0a-a762-c7293dc48cce",
        "cursor": {
          "ref": "4738bc85-fb54-4d83-a334-c16795619cba",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "85e84889-4ae2-4fc6-9fad-329721a01bad"
        },
        "item": {
          "id": "cb0c8fc5-8611-4d0a-a762-c7293dc48cce",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5e016cca-3c8e-4faf-8cb8-fa986b5e6ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a36ba38-e406-4157-909d-c4af34942796",
        "cursor": {
          "ref": "2b1a46f8-41f3-4154-b91f-25d95ac07236",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f4190c14-da27-4865-8c5c-f6774531655b"
        },
        "item": {
          "id": "3a36ba38-e406-4157-909d-c4af34942796",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "263c7a0f-426b-4c0a-8174-a42542a2f75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f792960e-a4ee-4123-a605-d23599f7b4a3",
        "cursor": {
          "ref": "dfa79923-8b38-4dd8-a241-c5ca02a828f1",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9067fce4-d40a-4f66-bdea-52e4f8daaaf5"
        },
        "item": {
          "id": "f792960e-a4ee-4123-a605-d23599f7b4a3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9dfa8ba4-988f-49cc-b488-f86bf4d23f49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1e7bb2-2797-4448-ba9e-2c11c3bcfab2",
        "cursor": {
          "ref": "9b7350ba-4ecc-497e-8c98-0fe0d7b2b612",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a19349cd-691e-4e41-b9e2-19afb8b60d8b"
        },
        "item": {
          "id": "6c1e7bb2-2797-4448-ba9e-2c11c3bcfab2",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b4027855-aff5-4364-a44d-8332851ca27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb2bd13-0933-4d66-b0b6-bd5f7ce1f643",
        "cursor": {
          "ref": "aa1f8fc5-e94e-4d27-a598-b94cac9fe40b",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9283bbf1-c4d1-4ee6-833e-39ed0f2a048d"
        },
        "item": {
          "id": "8cb2bd13-0933-4d66-b0b6-bd5f7ce1f643",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c7d962be-2f2d-413f-a1ac-6486846238a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7181cc7-a79f-47d0-9876-953465b24067",
        "cursor": {
          "ref": "a9350cf4-53a9-4825-8569-43d5b388dd87",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a157d8ad-e8d8-4be4-b93d-57f9235964e6"
        },
        "item": {
          "id": "a7181cc7-a79f-47d0-9876-953465b24067",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3c731fbf-d588-49c9-becd-5789bec33c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8c25fa-6cb5-43e3-9e8e-101e72e2d371",
        "cursor": {
          "ref": "9b854bf6-f324-4776-bf59-f30b612dd45f",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7fc38390-b888-43f3-88ed-08dd95d58154"
        },
        "item": {
          "id": "ad8c25fa-6cb5-43e3-9e8e-101e72e2d371",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bc22058a-1c72-480a-8562-4fea984ac18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c234ca91-5108-4821-9f5a-8b526890cebc",
        "cursor": {
          "ref": "4a6bbe3d-c549-4b21-8e65-76fb9af00185",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3ec4d3e3-db9d-44fc-a47a-50583c1c4045"
        },
        "item": {
          "id": "c234ca91-5108-4821-9f5a-8b526890cebc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "062c6d50-065e-45ce-8acb-9b9a3661e181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9490f610-0e10-45b6-b72d-3c76afd2b933",
        "cursor": {
          "ref": "7ace28f7-3c70-4864-85f6-06da78df53e5",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2cfa03fe-8ed9-4601-bea8-1b8af3b9ec44"
        },
        "item": {
          "id": "9490f610-0e10-45b6-b72d-3c76afd2b933",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "42a48788-34cc-4f9f-b961-3b07156f4fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4269b0e-2879-4d43-adc5-20a9b074504c",
        "cursor": {
          "ref": "8d3aa1e4-f4c8-44fb-ac9e-10c4bddc2058",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1dbca50e-c7da-4f20-8698-e3cbf6206d8b"
        },
        "item": {
          "id": "a4269b0e-2879-4d43-adc5-20a9b074504c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5965645a-9b29-439c-9f69-0cb63aaa361b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558a1dac-860b-4eff-b598-9d0377701e73",
        "cursor": {
          "ref": "78761bd1-c8cf-4976-912a-56e21ecf319d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "906abcec-4cec-4fc4-a347-4036cac34115"
        },
        "item": {
          "id": "558a1dac-860b-4eff-b598-9d0377701e73",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "df889ace-88b1-4397-b9c5-d348dbd989d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e102afe-f118-4a14-8efc-73b5cff092c0",
        "cursor": {
          "ref": "4997ec15-77a6-43d7-b4f0-286d3b0515e1",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "99c01cfb-5990-4315-878e-3f8611e7e25c"
        },
        "item": {
          "id": "6e102afe-f118-4a14-8efc-73b5cff092c0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "49a1e4e9-3c2e-4ae3-987f-e60a74b642a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74a8752-9d64-4f56-ac3d-f792ee94895a",
        "cursor": {
          "ref": "ab39573d-5e9d-42fd-99d0-267ee3d50261",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f6c46394-b462-4605-a004-50df7e2c1af1"
        },
        "item": {
          "id": "c74a8752-9d64-4f56-ac3d-f792ee94895a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3e8c1e8b-f6ec-4e6e-920e-c0e2d1be689b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541633e4-145e-43c7-9332-d36078e9b5b8",
        "cursor": {
          "ref": "82ebce7c-633f-4734-a7a3-48d38577c16f",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a481acb4-b024-4f44-b79b-f7d1d756dcd3"
        },
        "item": {
          "id": "541633e4-145e-43c7-9332-d36078e9b5b8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3e14c95a-fd0d-4ff6-a710-43d9618359c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcb8f88e-b2e7-4911-8264-e7f08fedcad8",
        "cursor": {
          "ref": "2cc5672b-9b9e-46cd-9120-7fb42ba4b5d1",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "66f19c1c-db1d-42d1-bc85-3776e3dc613c"
        },
        "item": {
          "id": "fcb8f88e-b2e7-4911-8264-e7f08fedcad8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "256c9f06-1054-4d2b-aeba-ff94104e43ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edce5a9e-1c4e-4f89-9417-3e3f83ae4c00",
        "cursor": {
          "ref": "76d7d0ba-a795-412c-a59d-9dad18291582",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ec3df0a2-3628-4f02-b1d5-802d69327a2d"
        },
        "item": {
          "id": "edce5a9e-1c4e-4f89-9417-3e3f83ae4c00",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "585977a3-e260-446d-9888-587be03103d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac0ea28-fa74-43b9-ba04-b4a0d1a2e1b2",
        "cursor": {
          "ref": "bb42423c-47b3-43f8-aca1-981428e16148",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b8cca2ce-6a3c-4b3a-b30d-84d45bf89d87"
        },
        "item": {
          "id": "fac0ea28-fa74-43b9-ba04-b4a0d1a2e1b2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4f46fb04-79df-4fc4-953c-509e19ec357d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4a9461-b573-461f-87aa-6f06646f7b62",
        "cursor": {
          "ref": "ec5973fa-7834-43b2-af73-64d72dc0060a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a83c2303-88a7-41f3-80d6-99f61dc1452b"
        },
        "item": {
          "id": "1c4a9461-b573-461f-87aa-6f06646f7b62",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7bb203a2-e632-4b9b-ae9b-e9aea56b2614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe056dba-a3fc-4658-8b7b-2b9ad92bf2ca",
        "cursor": {
          "ref": "9ef74cd5-88f6-49dd-9ed4-5f4692367e52",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ff76f0ac-c870-48f1-8c55-451daaa235cc"
        },
        "item": {
          "id": "fe056dba-a3fc-4658-8b7b-2b9ad92bf2ca",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "039df90d-4311-46f4-a712-e5bfb67b0691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e692f5d0-2425-4b45-8512-2fa8a80ffc12",
        "cursor": {
          "ref": "1c74ccba-cb7b-4169-850c-1d836e2ecd32",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "482d0015-3ced-4090-914e-52968fd96562"
        },
        "item": {
          "id": "e692f5d0-2425-4b45-8512-2fa8a80ffc12",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "310e3e59-555b-4407-b457-9a75b7144561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b0f967-b9e0-4cd8-8cde-8b9cd5e75798",
        "cursor": {
          "ref": "daeabfdb-6854-48fd-8e7a-829ef5ad307f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d9f87fca-9394-4c82-9652-854c1901770b"
        },
        "item": {
          "id": "91b0f967-b9e0-4cd8-8cde-8b9cd5e75798",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "285d8994-17f8-43f9-829b-2dfa9e52f0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b6eb78-178e-4f7e-bf5d-495e964603a2",
        "cursor": {
          "ref": "d6045e9d-7089-4574-ad26-bfbd87455f87",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e0e5fef7-9006-42dd-ae02-bde9cd3b51e2"
        },
        "item": {
          "id": "59b6eb78-178e-4f7e-bf5d-495e964603a2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "efcd91a1-5a5c-4a6d-80a6-e10581b4bbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c3a478-8a1e-40cd-915a-8496d5681cf8",
        "cursor": {
          "ref": "df304680-bf7a-40e8-8b80-0380c5569eaf",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c6ff01a7-f420-4a5d-9d6c-fe4be83d1263"
        },
        "item": {
          "id": "b1c3a478-8a1e-40cd-915a-8496d5681cf8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "da876ca1-721b-482d-8bf3-de46b0372c8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49df125-22a2-4afa-8915-2daf2c16252f",
        "cursor": {
          "ref": "e81822f0-e9e1-4d36-aee2-b75f4b1a1b85",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b49c222e-64a0-43af-b1db-ef4bedbfe3ff"
        },
        "item": {
          "id": "e49df125-22a2-4afa-8915-2daf2c16252f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7bc2e5a3-1271-40ab-8ad5-aa50a49f11dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1fde75-f39f-4ff2-877b-ec66a29919f5",
        "cursor": {
          "ref": "c0739d5d-7a0d-4eb1-9e2e-a5df5ffb920a",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2cc9be01-1d60-46a5-b119-11106137fc11"
        },
        "item": {
          "id": "0c1fde75-f39f-4ff2-877b-ec66a29919f5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "4d99fc3f-52e8-4761-a39b-b07b3f7b7e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee8a16a-2db4-4b16-9efb-7b25748df4fc",
        "cursor": {
          "ref": "463b688d-2901-4f52-82cb-e306c7cfe0fb",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "795453b9-0fe0-4838-9c17-00a6915f2a78"
        },
        "item": {
          "id": "dee8a16a-2db4-4b16-9efb-7b25748df4fc",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "0be2d956-ee6e-4c19-83e6-03af1fee85e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac991b8-a5ad-4529-a964-a9885eb8aaae",
        "cursor": {
          "ref": "db2ab332-7575-436f-bd32-cef7ab062fb3",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c2fb25eb-a81f-48a8-bdf2-963f63ab9d22"
        },
        "item": {
          "id": "3ac991b8-a5ad-4529-a964-a9885eb8aaae",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c9bf48fe-ec60-4ace-a257-988d77100e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e8a81b-45d6-4af7-8783-7748102fb413",
        "cursor": {
          "ref": "deaf84f7-a870-4ef6-ae60-969726e69ddc",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e550594b-203e-4279-afcb-bc0011f5b39a"
        },
        "item": {
          "id": "e5e8a81b-45d6-4af7-8783-7748102fb413",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0f02a1ce-dbfc-48bb-80c0-946d23cf27b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e9f256-c3b2-4acb-87a9-1c1330a4cdef",
        "cursor": {
          "ref": "cb2d9a84-e9be-4fc9-91ad-6d6641dba1bf",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "29faa494-7b65-4a2a-a738-a9d2a276a977"
        },
        "item": {
          "id": "a2e9f256-c3b2-4acb-87a9-1c1330a4cdef",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "98beac54-c446-42c8-b0d1-b4b13c3b3ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4bbdfc-0ff2-4641-8980-2fa49e25cc8a",
        "cursor": {
          "ref": "e5af655e-8547-45a3-924b-4197fca7cb5d",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0d8c62ec-2748-4ea2-86e9-d518ea38a028"
        },
        "item": {
          "id": "8e4bbdfc-0ff2-4641-8980-2fa49e25cc8a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "dc652f2a-df89-42e5-9112-f6ca088a49c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f51f5e-179c-4ba1-a051-075d6d3d5fb3",
        "cursor": {
          "ref": "c3df663a-3804-49bd-b873-a724dfa7c6df",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cc5b5ab6-2be9-42a3-bc23-7242c27087a4"
        },
        "item": {
          "id": "a3f51f5e-179c-4ba1-a051-075d6d3d5fb3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8949de3c-8f11-4d42-824b-d900b010f182",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de8eef1-26ea-445a-9fd2-1efb68fa6ab5",
        "cursor": {
          "ref": "c0bc11ed-d8cb-4fe9-bb2a-cd0be882e43a",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2196aafb-e385-4040-a6fa-ceb5d5861762"
        },
        "item": {
          "id": "3de8eef1-26ea-445a-9fd2-1efb68fa6ab5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "65bd2c75-34cf-412f-aa42-3d1f9a929f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b6614b-2abd-4fb4-91ef-220679492ae0",
        "cursor": {
          "ref": "3f1e301a-7b0d-4346-9b86-b6a12b14f3b5",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2a97874d-ac9b-4d3f-a9a9-ac9db15808e7"
        },
        "item": {
          "id": "f9b6614b-2abd-4fb4-91ef-220679492ae0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "beba9285-d2c6-4130-9e3c-6e03c0d1979c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a03de4e-55a7-4f8a-95b5-32c983b1e4d0",
        "cursor": {
          "ref": "6825949e-d690-491e-aaef-b8b806190ec5",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dacc635e-7e87-4b92-ad20-65f3dd12cdce"
        },
        "item": {
          "id": "2a03de4e-55a7-4f8a-95b5-32c983b1e4d0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "01a41e9e-922b-43e3-8cd0-830d70344c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d698e676-ee30-4c83-bb82-114aa78a16f1",
        "cursor": {
          "ref": "e3bb54ce-47fd-40e6-a120-7d4752441f28",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "8b19223c-7850-4d6b-9ac4-e5368b0533a3"
        },
        "item": {
          "id": "d698e676-ee30-4c83-bb82-114aa78a16f1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e628e2fc-4502-4d02-93e6-066fd1aa5afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2f68ce-bc34-419b-b353-362082199321",
        "cursor": {
          "ref": "735018cc-7f93-487d-89d3-4db7f3b4b142",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "01f70d8e-f742-421e-9d64-49ced5ce4c29"
        },
        "item": {
          "id": "aa2f68ce-bc34-419b-b353-362082199321",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f669cffc-2ed4-4941-902c-b37d6fdd422f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0ac679-6e0f-4d4c-9f48-c7ce677699fc",
        "cursor": {
          "ref": "8c2b5e65-0ea1-4d29-9f61-4460a4dfc874",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "083d1f2b-a682-4708-9833-b03202170c53"
        },
        "item": {
          "id": "3d0ac679-6e0f-4d4c-9f48-c7ce677699fc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c2055538-4ccc-4bee-9f54-1e973f5cfe6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25177676-1e3c-415c-a839-f4f5409d74b0",
        "cursor": {
          "ref": "a1f6c05e-cb01-4bf0-b43b-6b009197ad33",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0c00907c-0353-4687-87a7-8244a4468e8f"
        },
        "item": {
          "id": "25177676-1e3c-415c-a839-f4f5409d74b0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d11c6048-5318-4532-a6a1-09a5b9ce2405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712dba21-787c-4635-8fd6-26fb38165591",
        "cursor": {
          "ref": "5161e8b3-81ba-4ec9-9bf1-7e9bc73e5a94",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2db9a0b1-2fbc-4eea-8788-555789cacff9"
        },
        "item": {
          "id": "712dba21-787c-4635-8fd6-26fb38165591",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "af61b3dc-9d82-4302-b48c-8ac09c9fb045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75e3929-6e43-4cb5-9d58-77dc3ef1af76",
        "cursor": {
          "ref": "f8020251-21c8-4857-bcc3-fe82b6560689",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b7b42b94-3f07-4d18-aea9-1f7c10f38446"
        },
        "item": {
          "id": "c75e3929-6e43-4cb5-9d58-77dc3ef1af76",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "897d24c4-05ce-4ca0-a59c-48e80fea3cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc2f0fc-1c59-4e77-a2e6-2233a215108b",
        "cursor": {
          "ref": "8490e464-54a1-49da-a10b-dfc3f8131adc",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ea0afc57-57d0-4e2f-a92f-e2790c36234e"
        },
        "item": {
          "id": "3cc2f0fc-1c59-4e77-a2e6-2233a215108b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e44b7291-b2dd-4fa6-8b88-d9d481e35d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a5d05e-2f04-4d0c-9b68-e9ef48d64218",
        "cursor": {
          "ref": "e7d50383-fe1d-4cb9-b823-323e5b2b84b8",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a6d8b043-e4fb-4281-85f7-391a027f69a7"
        },
        "item": {
          "id": "78a5d05e-2f04-4d0c-9b68-e9ef48d64218",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "737958c7-5665-4a95-af09-cdfb486f3d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcdd53a-fc45-437d-ab82-2897ec2b8a9c",
        "cursor": {
          "ref": "68269080-7c5e-4049-995c-634158ea67c2",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d4bdc1fd-f24f-4aaa-b616-c803c464257d"
        },
        "item": {
          "id": "abcdd53a-fc45-437d-ab82-2897ec2b8a9c",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "19b3611f-9b6e-4abd-a6e1-dd04ae0b5738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ddc2cb-1de4-4efc-9a35-8cae7eb5bf83",
        "cursor": {
          "ref": "573dd51f-c6ed-4a7e-b20a-90fa3701ebfc",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f6eefa92-2e4c-4298-b3f5-6fab8f86ef18"
        },
        "item": {
          "id": "c7ddc2cb-1de4-4efc-9a35-8cae7eb5bf83",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "113257d6-9baf-4de9-aafd-a4da959bd81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe039213-803c-4d0c-a329-81c7072b7417",
        "cursor": {
          "ref": "33ec0872-c0d5-426b-b58a-008ae6fedb17",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "eefa9af4-32b5-4f45-8af7-b4cd8f11bca5"
        },
        "item": {
          "id": "fe039213-803c-4d0c-a329-81c7072b7417",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "64ba5af0-149d-47fa-98b2-9b62ce826b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e5dd77-6da6-4845-a4ee-2b01e1019a05",
        "cursor": {
          "ref": "f975169b-66d4-4c49-8389-2d9f50334300",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4f205ff5-892d-411b-acd6-e80c2f5dce39"
        },
        "item": {
          "id": "a6e5dd77-6da6-4845-a4ee-2b01e1019a05",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c4b6b813-fc55-4ed2-a44d-ad928d46bc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1150ae2a-2513-423d-bc48-65d7202594e0",
        "cursor": {
          "ref": "e6114c97-3e1e-4417-bd3d-ebb4b3da9f9a",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f81b5008-430d-4302-8377-95d9e31af616"
        },
        "item": {
          "id": "1150ae2a-2513-423d-bc48-65d7202594e0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c2f23d99-c9fa-4ea2-a830-233d12b0e119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12804391-6bb6-4913-bb9f-e231a49cb597",
        "cursor": {
          "ref": "e5293254-20e7-4996-a26a-a6f6039ff1c7",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e49fb40a-f661-4d84-bd97-44e92bf9010d"
        },
        "item": {
          "id": "12804391-6bb6-4913-bb9f-e231a49cb597",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9bff5c89-3dbc-49de-b8fe-48396187c92e",
          "status": "OK",
          "code": 200,
          "responseTime": 165,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "fde26615-3844-441f-b0b1-5255ef0105f1",
        "cursor": {
          "ref": "1dabc502-4af2-4b94-8021-ea0b2270489d",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a7826831-02ea-4daa-93a4-ebd96ad368d8"
        },
        "item": {
          "id": "fde26615-3844-441f-b0b1-5255ef0105f1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ed0574fa-4e7b-4e4d-acb4-9b1da39bfdf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ddabed-d852-4d3c-b9fe-92748a4ec1a2",
        "cursor": {
          "ref": "68fefb2d-5f4d-4b55-a329-556b44eead37",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "12128d50-e389-4427-b62b-067edea72716"
        },
        "item": {
          "id": "e2ddabed-d852-4d3c-b9fe-92748a4ec1a2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5563c09f-5460-46e5-b594-11ac98a5a42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef287dea-9c0a-4c1d-beff-f5399009c50e",
        "cursor": {
          "ref": "f5934beb-aef6-47e1-8324-00fe1b9a8c0e",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2695e936-2573-4d1b-965b-f9e54ea96726"
        },
        "item": {
          "id": "ef287dea-9c0a-4c1d-beff-f5399009c50e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "59ac56ef-09c3-4819-9cb6-e39ef43eb61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d6a3b1-5c02-4591-a214-2533ffad4ad0",
        "cursor": {
          "ref": "d22123b5-fa60-41cf-88bc-785e7f3472ed",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "03ee5735-8f6c-461f-8178-c0b6c6ed96df"
        },
        "item": {
          "id": "f6d6a3b1-5c02-4591-a214-2533ffad4ad0",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "612c7a32-e6c6-4717-8583-2d82057870c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4fba19-19a0-481d-8fc7-caed0f72e7ec",
        "cursor": {
          "ref": "9ccdee4e-644f-4a39-aceb-2e0a09dadfb5",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c50e6c7a-6a05-4903-b6f5-8401f400e841"
        },
        "item": {
          "id": "8a4fba19-19a0-481d-8fc7-caed0f72e7ec",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8d1fba8a-6760-4039-98bf-8f875bbe4cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4239d94f-2cbe-4b2c-87c2-7f0ba8d9b291",
        "cursor": {
          "ref": "ab7d29de-56bd-4a7b-b87a-c6f7bd9d59b3",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "5125113d-3271-4312-b752-01e4beea41bd"
        },
        "item": {
          "id": "4239d94f-2cbe-4b2c-87c2-7f0ba8d9b291",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5f31ed80-0acb-4db6-95e3-3144e9927762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a1f8b2-248b-4a6c-9c64-aa16c0192a4d",
        "cursor": {
          "ref": "a2afd963-3d89-46bb-9cfd-843c0e67c99f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7a15e45d-04e1-43c9-8be6-0642c34c172d"
        },
        "item": {
          "id": "c4a1f8b2-248b-4a6c-9c64-aa16c0192a4d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2786b491-acb2-4801-99ef-bc8ee9b954d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6aebb9-a8b5-46de-ace2-66ab0cdf64fe",
        "cursor": {
          "ref": "89b3440e-93ff-4299-8d83-774449692d0d",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a7a4fe33-167d-4334-b892-37989beedb78"
        },
        "item": {
          "id": "af6aebb9-a8b5-46de-ace2-66ab0cdf64fe",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9eb39a5a-9af5-400b-ab24-ce636e69e0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d440892b-973b-46a9-ae8e-33f108edab72",
        "cursor": {
          "ref": "2a085d11-faa6-4f05-a4f1-19ba54a72b63",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9d6c3f16-cf9b-40d0-ba0a-3d3464fba44c"
        },
        "item": {
          "id": "d440892b-973b-46a9-ae8e-33f108edab72",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7fd2cf3e-3d2c-429b-8bd1-87392a0f9594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d960f5cb-f869-4063-9dda-acedfd5c7a92",
        "cursor": {
          "ref": "39e2a934-96b4-4aa1-901b-60ad98558b71",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7d267abf-7068-4045-a0f8-2d5ef5e329d2"
        },
        "item": {
          "id": "d960f5cb-f869-4063-9dda-acedfd5c7a92",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2ac2429e-f359-4201-bd88-3dcdaff76f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124bdb37-058f-478b-8738-ad59e79e06b8",
        "cursor": {
          "ref": "11e40188-4642-4007-8dfa-3eab5c937abe",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6db4bfb9-bc3b-4358-8ade-55472929c1fd"
        },
        "item": {
          "id": "124bdb37-058f-478b-8738-ad59e79e06b8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1340f36f-3bd0-4486-bc99-38e6b1089d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c83f44c-aab7-4279-aa0f-38eaeab200e5",
        "cursor": {
          "ref": "c9000844-bb1d-416c-8b1a-20513c33b7f1",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cf10124c-719e-42b4-878a-8f618009a6cd"
        },
        "item": {
          "id": "5c83f44c-aab7-4279-aa0f-38eaeab200e5",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "418c3752-008a-4446-b7a3-a95a619cbde2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99eceee5-9fc8-44a9-a779-049f8db2f736",
        "cursor": {
          "ref": "a294b857-1553-417a-9564-5c57ddf8da05",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9939dbf4-2c43-43b9-82c2-6cf74efb792c"
        },
        "item": {
          "id": "99eceee5-9fc8-44a9-a779-049f8db2f736",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1304aa98-f2c2-441a-abd5-9fbb9d23ffe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc2170b-a932-4c69-86fe-02b1f58655a3",
        "cursor": {
          "ref": "5f5c8f5e-d39b-49ce-a6ef-1fc64dd5e7a5",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "64065159-688c-4e2a-96ef-2556116e902a"
        },
        "item": {
          "id": "bfc2170b-a932-4c69-86fe-02b1f58655a3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "62014334-9345-47c8-a654-04b07d700ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e555fb7e-b8a1-4c55-8d50-8d186d6b1978",
        "cursor": {
          "ref": "a3981927-e8c0-4a74-a06f-5c5143f22afa",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5a0a5776-ee79-4184-8a59-45c8375a70f3"
        },
        "item": {
          "id": "e555fb7e-b8a1-4c55-8d50-8d186d6b1978",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ce1c0143-10dc-4086-8256-614dcb577861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd12784-900c-4b77-8c02-5d85471e1ad8",
        "cursor": {
          "ref": "7e608beb-fc22-4470-8463-51dfe3677cd6",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "55f6c3c1-35dc-4a96-8218-e7567c3558ab"
        },
        "item": {
          "id": "1fd12784-900c-4b77-8c02-5d85471e1ad8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7726a1f1-9c6d-48be-a362-92a7b54ea2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde9e90b-f9a3-4ab1-835c-6f36644b42b7",
        "cursor": {
          "ref": "0300a47f-bf6c-41fe-b3df-a6e42a4c5a5d",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d88b71c4-9016-49ef-a1c5-b8276f270a3c"
        },
        "item": {
          "id": "dde9e90b-f9a3-4ab1-835c-6f36644b42b7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3b7e0dc3-e3a2-4a17-8c3f-42500a377a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a67cdee-4530-4068-bf97-995f6da6b2a6",
        "cursor": {
          "ref": "25c96932-c670-4a16-b8ab-48ab033d3a59",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "410b28dd-bfab-44b3-8d25-2bfa73b80b64"
        },
        "item": {
          "id": "4a67cdee-4530-4068-bf97-995f6da6b2a6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "91999f86-dce5-428a-ae01-bf268ad4b797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447cc7ae-56fa-43b5-b497-34ae394f82f8",
        "cursor": {
          "ref": "59a05586-f4da-4c54-abdc-048a9403dc7e",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8263ae6a-e9a2-4072-b673-810035f73e38"
        },
        "item": {
          "id": "447cc7ae-56fa-43b5-b497-34ae394f82f8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6d24c65d-b64e-4ba6-881b-a5449956b6a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9486d34-3309-479a-880c-c65943c7ee7c",
        "cursor": {
          "ref": "a939993d-ab9b-4e65-9027-83a9254656e4",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "834f41df-deca-443a-8f6e-596e466c1564"
        },
        "item": {
          "id": "d9486d34-3309-479a-880c-c65943c7ee7c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "79a3c7cd-8973-48a5-994c-4c830e076bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8427608e-aa5b-45b1-8a4f-527b2ff23fdd",
        "cursor": {
          "ref": "e7568451-91d9-481c-b77e-10f7b7ef22ed",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ec7d8fc4-5f3b-4c3d-9bf4-b79f79fdaf9f"
        },
        "item": {
          "id": "8427608e-aa5b-45b1-8a4f-527b2ff23fdd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2df92bfc-7f69-47dc-a84b-4a3883872db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b5d5e7-31d1-40e9-bb83-ad34ae6fa8cc",
        "cursor": {
          "ref": "97a9217a-a614-4bc3-98a4-aa759e18031b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3e95fa99-9e69-4e69-9fa3-57aa100d6795"
        },
        "item": {
          "id": "e7b5d5e7-31d1-40e9-bb83-ad34ae6fa8cc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "22425d3d-f1d5-41af-b898-e22408560f29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d338e098-d0e5-4823-bb76-0641fbaabbe5",
        "cursor": {
          "ref": "cdcd39c7-34e7-4310-a272-c4748624d061",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c0e89875-d696-453b-9bbb-4003fc566abf"
        },
        "item": {
          "id": "d338e098-d0e5-4823-bb76-0641fbaabbe5",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cb99eab6-738e-4ef0-87f9-d513a46c7b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0e80a3-848a-4ba2-82fc-911923247025",
        "cursor": {
          "ref": "2cfe0806-a8e9-4d59-acb0-004ade868915",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ff5ef1e0-7f8d-471d-a120-117b89b5fb0e"
        },
        "item": {
          "id": "0a0e80a3-848a-4ba2-82fc-911923247025",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3b224b81-4c2d-455a-8a77-fe25926e8057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446f08b1-c8e2-452a-8927-5a4586e23b8d",
        "cursor": {
          "ref": "f8bf38e5-1b2e-48fa-984e-7564923d301d",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8408100c-3ea0-46d5-9a58-0a37122668d7"
        },
        "item": {
          "id": "446f08b1-c8e2-452a-8927-5a4586e23b8d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ea33eff4-7bc7-4424-b745-588e86e8b1cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb62390a-82ee-48c7-91d8-2a236d050909",
        "cursor": {
          "ref": "2e87235e-2364-4d2e-84a6-d058446d2f5f",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a35afc3a-4e30-490e-a87d-0bb73fa8bdb9"
        },
        "item": {
          "id": "bb62390a-82ee-48c7-91d8-2a236d050909",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "af000947-4257-4f4d-a839-5a327d7ebe4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4bd68c-5d77-4b4e-ae84-ea9b85da5f74",
        "cursor": {
          "ref": "187a7ab2-bfb3-4b21-b468-216aecd5b3a4",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "345e4dbd-8e7c-4120-8d78-ff52646651d9"
        },
        "item": {
          "id": "ca4bd68c-5d77-4b4e-ae84-ea9b85da5f74",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d0f1bd6d-ce24-40b7-b233-22112ba927c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e457646-b7f7-4a96-b823-993733684995",
        "cursor": {
          "ref": "5e16a702-ea14-45e7-aa5a-4ddbadb36d3b",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d5babfd8-2494-4e36-b3ae-b07dda1e2ff4"
        },
        "item": {
          "id": "8e457646-b7f7-4a96-b823-993733684995",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e8633f77-cd1a-4812-813e-60b71d25e927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377ae6ff-9f47-4afd-874d-5c41303a377f",
        "cursor": {
          "ref": "68ef42e1-1552-432c-8c5c-1899f6d4fd5c",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c8e16bdf-d7b4-4214-9869-a6a82416711d"
        },
        "item": {
          "id": "377ae6ff-9f47-4afd-874d-5c41303a377f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a58fa0b6-389e-4060-a21c-6f65d4346aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d7b4e6-d135-4e65-84c7-902bb9a816a0",
        "cursor": {
          "ref": "42b4d399-c717-4862-810e-bdd35c90e613",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "43ccd4a4-d510-4175-9a13-c0cfbb0d5e8c"
        },
        "item": {
          "id": "08d7b4e6-d135-4e65-84c7-902bb9a816a0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "25fc662e-4ed6-47d1-b498-6f1b02323f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a24e71-9401-4e23-9a4f-2def4e04eb41",
        "cursor": {
          "ref": "5a6697ec-d7fd-4779-a009-6aa124d8b4b5",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "cfb269b8-8386-4d46-96ec-caf9f1d0cee8"
        },
        "item": {
          "id": "44a24e71-9401-4e23-9a4f-2def4e04eb41",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f43e35ef-f1ac-4d61-a90b-6b87696b45e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a2a7b0-d9ea-4009-ae10-dc0d06262ab5",
        "cursor": {
          "ref": "7ef68c91-0708-46c1-a509-3ecaf47f0a38",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "539e022e-f315-4536-8707-6177d43bc157"
        },
        "item": {
          "id": "e8a2a7b0-d9ea-4009-ae10-dc0d06262ab5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d55c2c35-1662-416c-8ef8-4e9ee254f25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df40660c-0749-43cc-b6b8-60c762ae0812",
        "cursor": {
          "ref": "5378c55f-1293-4d97-b6cb-e71a8850e60b",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1716e5ab-c0dc-483b-b200-c37ac9116d1f"
        },
        "item": {
          "id": "df40660c-0749-43cc-b6b8-60c762ae0812",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "39875e84-d24b-4e6d-8241-dcc3a45396b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f2faab-6d48-42e2-8087-7c1b6f5fc008",
        "cursor": {
          "ref": "65c86846-026c-4bc5-8453-21b89bd593a4",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f04f2f80-7ede-4132-a3e0-266f2cc44e19"
        },
        "item": {
          "id": "82f2faab-6d48-42e2-8087-7c1b6f5fc008",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f79017e7-0d66-4d9c-ac51-6d3d621ffb4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42bb9fb3-f1a7-442a-a20b-cdc46e4fbf36",
        "cursor": {
          "ref": "cdb3d7ed-9720-4950-bafe-fe503b84e202",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2efb1258-8efa-46f5-a939-454d968a1451"
        },
        "item": {
          "id": "42bb9fb3-f1a7-442a-a20b-cdc46e4fbf36",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5a3d4278-d16d-4460-bbe3-6bebcc0fe66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a654253-286a-4eaa-bfa3-fca26f088ae7",
        "cursor": {
          "ref": "38b85b48-d4e2-44bd-b8af-60c48331927e",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e51b89e4-c4f7-4c12-a672-3b47d1c580f9"
        },
        "item": {
          "id": "6a654253-286a-4eaa-bfa3-fca26f088ae7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5a4041b3-514c-4d8e-a673-1a3cdd6e9ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b2133c-d860-47e7-a46c-81cc1686f5f9",
        "cursor": {
          "ref": "bf1bfbca-3e84-4e9b-8b1a-32a4c339663c",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cbd57f28-250d-4361-8f02-e69a2ed06451"
        },
        "item": {
          "id": "99b2133c-d860-47e7-a46c-81cc1686f5f9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ad0da15a-c17e-471e-8d28-5975bbadb56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab8975f-3c39-44da-8e05-661571e0da45",
        "cursor": {
          "ref": "0b66720f-fb53-489e-992c-2918ba671c7d",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "085e0677-93da-45fa-b1ba-f18614dec559"
        },
        "item": {
          "id": "dab8975f-3c39-44da-8e05-661571e0da45",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "07230f9d-ea59-44f9-b749-5981e0015697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8111127c-e86d-4af9-a47d-28faa1d10ee1",
        "cursor": {
          "ref": "e9701fc7-80df-41e6-8d65-95f7be289548",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d559409e-86ce-4be3-b422-ff199429c6c2"
        },
        "item": {
          "id": "8111127c-e86d-4af9-a47d-28faa1d10ee1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d9617e8b-fecd-462a-8b7f-fc0cdf6c3571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98dc9855-4020-407d-b994-948098fcb52d",
        "cursor": {
          "ref": "21b957d5-d775-4a0f-bb51-679a94ee8536",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9c8b4597-d224-4e52-bdf3-4dce67c38831"
        },
        "item": {
          "id": "98dc9855-4020-407d-b994-948098fcb52d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e5c28ac0-b831-4964-ba97-69295bf957bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faeb3a3b-32cd-4ac0-983d-68cb52622797",
        "cursor": {
          "ref": "aa593fcd-b4ee-4e79-a420-2bcc05d9f06b",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5fb57e40-5313-4e00-9ce7-3247406e864e"
        },
        "item": {
          "id": "faeb3a3b-32cd-4ac0-983d-68cb52622797",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "509de80c-3d51-4fbd-8805-ad43549cfef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0674a387-88f6-469a-8ecd-6790022376e3",
        "cursor": {
          "ref": "e9e76c77-e796-49c5-802c-74066537017c",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "df20c8e5-abbb-4c56-8dd9-c629db63c584"
        },
        "item": {
          "id": "0674a387-88f6-469a-8ecd-6790022376e3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "80dd9b52-fe55-45fd-8bcf-afe3aa832f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbf4659-5a3f-42c5-8647-4e1389bd00cc",
        "cursor": {
          "ref": "1ba7ea89-3c2b-4ee0-8f00-aef4bf305ef8",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "86320844-6e28-4e3b-92c3-f3414a83ecc7"
        },
        "item": {
          "id": "acbf4659-5a3f-42c5-8647-4e1389bd00cc",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "da4890eb-cffa-4b40-8f4e-0899e4f3b337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e574a8c0-3652-4ea1-9add-da065831dc95",
        "cursor": {
          "ref": "24885b31-59b5-40ba-beb5-e3f9708d25d8",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "faba593d-e867-4e1e-a169-b473d85787ad"
        },
        "item": {
          "id": "e574a8c0-3652-4ea1-9add-da065831dc95",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c97d9d0b-2e77-447d-bd32-661eec520063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edd255d-d58b-4463-bd37-54c521a8a4f8",
        "cursor": {
          "ref": "b38ab754-5e47-4d1e-991f-537da7abd4ff",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5df8cfdf-aed7-430d-bc42-69fab5a6b9c9"
        },
        "item": {
          "id": "3edd255d-d58b-4463-bd37-54c521a8a4f8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fd60bd37-87df-4dfc-80f7-f6e7b512e5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01515b13-7352-4b67-bf50-0be2ef427626",
        "cursor": {
          "ref": "1e82559e-c683-4589-9715-6b7c00907113",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "be24ffd0-1799-49de-88d8-067846a59d30"
        },
        "item": {
          "id": "01515b13-7352-4b67-bf50-0be2ef427626",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5a843832-2442-4b95-81cf-d0cf48b1d929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4ad889-51ef-45ec-9f9e-92797be498b8",
        "cursor": {
          "ref": "182c7666-3646-43c5-8f2d-8be8a2e10d95",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6d0a49cc-9923-4527-bb5b-a5709112fc69"
        },
        "item": {
          "id": "5d4ad889-51ef-45ec-9f9e-92797be498b8",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "83140c2f-aba8-4508-a89a-4ccd28e87310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 180,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e0341b-7a03-4f2d-91de-10e09b55ac2a",
        "cursor": {
          "ref": "807050bd-117a-4983-a8d2-ffc1a5928067",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3ed59065-3338-432e-a896-6ff47e80bd38"
        },
        "item": {
          "id": "11e0341b-7a03-4f2d-91de-10e09b55ac2a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "405e964d-10be-4400-ae9f-0dd43dd0c0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f515c49-eb9b-41fd-9772-4e47ce3d3303",
        "cursor": {
          "ref": "3f1e550d-94ce-4099-856a-63c0e9db437f",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "39da9f75-ca44-4270-9102-46850ef84a26"
        },
        "item": {
          "id": "2f515c49-eb9b-41fd-9772-4e47ce3d3303",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7dce6d3d-c1d0-4369-9853-b322901ffe03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3866a8-5019-498d-a21f-8685b085ca4c",
        "cursor": {
          "ref": "1d00235c-8cf5-4c49-8f9c-f9eba9a7df17",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8b7793c1-520f-4035-8a05-bcb6ef85caa9"
        },
        "item": {
          "id": "fa3866a8-5019-498d-a21f-8685b085ca4c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "013ec127-c8f5-40ef-8e73-002847dd3651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a274fe-44d8-481f-8449-051c912d7662",
        "cursor": {
          "ref": "7099c181-ef7c-4bc8-8f57-2b333b0c05d8",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6bac7de5-b27b-485c-84f9-e24b1a215c7a"
        },
        "item": {
          "id": "29a274fe-44d8-481f-8449-051c912d7662",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "89c17a6c-19f2-4796-984c-c15875510d23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13be0df-7536-43ab-a1d2-8c1d2b74c7d0",
        "cursor": {
          "ref": "fd8f843b-154c-40d5-89b3-64e76c1b2cd5",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fda4dab5-4b33-4c3f-945a-d001af6a580b"
        },
        "item": {
          "id": "c13be0df-7536-43ab-a1d2-8c1d2b74c7d0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f5beea40-0b10-44cf-8b85-9c672f9bd398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86a53c8-a604-4329-920f-1ed9a855fb53",
        "cursor": {
          "ref": "d2f41267-7935-42d7-b62c-338eecb208a1",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e0f47a1a-a00e-4a38-ac60-ab16af1c6035"
        },
        "item": {
          "id": "d86a53c8-a604-4329-920f-1ed9a855fb53",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ea30f7f6-a931-4d41-8873-b21f9706f36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54561b02-df7b-4fa9-9cf0-48fcdec240cc",
        "cursor": {
          "ref": "76117d9e-49c3-45f7-a18e-f9e40c1aa532",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dd3700b9-529b-4b33-8424-b709d5404495"
        },
        "item": {
          "id": "54561b02-df7b-4fa9-9cf0-48fcdec240cc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "864680f6-b0e9-4437-81ef-3e8564d915e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d2bc8e-e1fd-4c92-a77e-d3ebbeae44dc",
        "cursor": {
          "ref": "cb1fd10a-db4c-4c2a-b590-5977c4a18867",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6c5aaac9-8eb6-4568-b151-88a955ef4adc"
        },
        "item": {
          "id": "e8d2bc8e-e1fd-4c92-a77e-d3ebbeae44dc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "26812bcc-0168-4572-9024-fda8382f8aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc0b2d9-d04e-44cb-8676-5195c360164e",
        "cursor": {
          "ref": "0e70898e-bf42-4584-bba5-0c7968b092dd",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5f625d5c-06f5-4d14-9842-97c5c804c61c"
        },
        "item": {
          "id": "0bc0b2d9-d04e-44cb-8676-5195c360164e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "6aa81266-c435-4510-b47d-1a54d65fd983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c86c1c9-47bb-4ce8-8bf2-0600f2823232",
        "cursor": {
          "ref": "39613532-e7f5-4eab-afd3-b47b2758360b",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2f9524ba-d983-4e85-89a3-d62072c4d776"
        },
        "item": {
          "id": "3c86c1c9-47bb-4ce8-8bf2-0600f2823232",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "89c9f2e5-2152-43d8-88cd-6271e08e9c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1a0df1-ff45-4e9c-9371-d732e6f2be2b",
        "cursor": {
          "ref": "efd52112-1401-4ded-a743-8afe15bd5b65",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f98b80da-948f-44b6-ba68-54ba48db93f7"
        },
        "item": {
          "id": "4f1a0df1-ff45-4e9c-9371-d732e6f2be2b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a5dcf2ed-5730-437a-a17c-f2e56961f28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba33899-4150-4e92-b806-1012a39f4f66",
        "cursor": {
          "ref": "019d9211-6898-4888-a6f5-cae03dd7996d",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "76c3aa4a-c52b-47f5-853e-4c9d3aafc1aa"
        },
        "item": {
          "id": "bba33899-4150-4e92-b806-1012a39f4f66",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f99b16bb-5d20-4b03-be12-611f21af699b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a82a50-f71c-41e3-ae3b-654eadd50292",
        "cursor": {
          "ref": "22c4cb7a-eeb1-4d52-9506-13c67cf2b907",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b388cfc8-f630-4c54-8f95-a26fd99bd979"
        },
        "item": {
          "id": "01a82a50-f71c-41e3-ae3b-654eadd50292",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6b3a6031-34b4-4e1a-aa89-6a554b1ed704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ab77f9-1861-4695-b43d-c4902f8a7216",
        "cursor": {
          "ref": "c66caad3-8fa5-4589-b801-e3b558b417fc",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "30eb1d63-d620-49b7-bb20-bfa850812e75"
        },
        "item": {
          "id": "37ab77f9-1861-4695-b43d-c4902f8a7216",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6525867f-69d6-4a4c-aaeb-7de9a35bc8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30596b70-cb5f-41cc-982b-6ef6d4870229",
        "cursor": {
          "ref": "5ef0a51e-c35b-4493-85f7-93251bf21b0b",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b7e51ae6-b814-4462-8954-4d64a8862805"
        },
        "item": {
          "id": "30596b70-cb5f-41cc-982b-6ef6d4870229",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d9ccb9d8-3cf7-4a64-94be-57ee4701f3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b4ca12-0490-4166-9e60-dafcde72ea54",
        "cursor": {
          "ref": "5e892a6e-8964-4ec4-a178-ccc2b31d1070",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "899ad5e1-4396-43d3-b76a-8411356250a0"
        },
        "item": {
          "id": "22b4ca12-0490-4166-9e60-dafcde72ea54",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a8b93be6-6aba-40c2-8052-7d2a9dc36195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c37f86-f435-44ff-9385-4cfd2737a492",
        "cursor": {
          "ref": "2ae560c8-7d5d-439b-9fab-6e8a3224a90a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "1519c1ec-f2a6-4dee-8133-e4b6d662c7a2"
        },
        "item": {
          "id": "53c37f86-f435-44ff-9385-4cfd2737a492",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "64ba466d-878c-4ca6-878c-c64f7344e830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b983206-4ba7-43d7-9dc9-185cd48d07d6",
        "cursor": {
          "ref": "0212fa4a-3854-4b15-800e-b1c16ed546d3",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f15b4aee-028a-48f0-9760-6249cba3b208"
        },
        "item": {
          "id": "5b983206-4ba7-43d7-9dc9-185cd48d07d6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1af001ab-e13b-4ae2-a5dc-9dcd5d9f6f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78feee67-7b21-4888-881d-307dda4c0f1c",
        "cursor": {
          "ref": "f67729a4-3367-4348-b193-c378beaa6d52",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "2aabae76-c8d0-4a7e-a83b-57cc779ffd36"
        },
        "item": {
          "id": "78feee67-7b21-4888-881d-307dda4c0f1c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "536d5f4d-ac50-4b0c-8a8c-0e5cfdc1376a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac04a55c-8d7e-4695-9646-76eea74e085c",
        "cursor": {
          "ref": "0f3530f7-5261-4996-bdd4-ab639f71fb53",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "454eb942-85f4-43b8-80e9-8225ee04f352"
        },
        "item": {
          "id": "ac04a55c-8d7e-4695-9646-76eea74e085c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "fb8d3965-ffe8-4ad2-9f95-b23d4ecd1f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af096c0f-608b-453f-99e4-f01ed12d9ed3",
        "cursor": {
          "ref": "1325397e-3210-44ff-92e5-057634f021e4",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a95454bb-49d0-43d9-a6d8-94d08e8f6de0"
        },
        "item": {
          "id": "af096c0f-608b-453f-99e4-f01ed12d9ed3",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9fbc94d2-27a2-4ff3-8ca1-cdbb095691a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02f37438-39a6-4dc9-ab86-ccc1aaed3a6c",
        "cursor": {
          "ref": "7334d397-7f30-4dc4-bf49-da9d53b7048e",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "48933fcc-dce7-46b8-92c2-542c68b48fe7"
        },
        "item": {
          "id": "02f37438-39a6-4dc9-ab86-ccc1aaed3a6c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "aa570f9e-2976-4cc0-b709-4e12b4b7a646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70ae5da-1649-42a8-a49d-5d06b544ff37",
        "cursor": {
          "ref": "55f8f96d-029a-41e6-ac32-815aa111d27b",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "84c21ed9-a381-476b-9027-e1f0a56a8a60"
        },
        "item": {
          "id": "a70ae5da-1649-42a8-a49d-5d06b544ff37",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "78977367-bf54-4055-b019-86feb80e46b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae88bfa-f762-408e-8007-2ffa053941b4",
        "cursor": {
          "ref": "88b7d619-9f64-4229-b9a1-9b05d645caca",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e77c8a11-b7f4-41fa-9f00-61d9de87c83b"
        },
        "item": {
          "id": "bae88bfa-f762-408e-8007-2ffa053941b4",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5cc4999d-3230-42c0-a0f0-0a570daa01d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f50a27-b80d-49e2-8145-aa1f4ae61263",
        "cursor": {
          "ref": "cad4290b-0adb-492c-84fb-29fd7a3a2c2a",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "53b9540d-0f3d-495d-8da2-a8725ffb2d01"
        },
        "item": {
          "id": "f8f50a27-b80d-49e2-8145-aa1f4ae61263",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0a193e6c-812d-4ca3-a577-2af76becffbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901a914d-8256-4656-9c2c-4e1ba25f52b1",
        "cursor": {
          "ref": "d6b6d3c7-b1ad-4c24-934f-deff7d2a837c",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "68e9f4c9-d0ca-4955-8022-4f95926251dd"
        },
        "item": {
          "id": "901a914d-8256-4656-9c2c-4e1ba25f52b1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "57550b1d-2242-4917-810e-e72ad4be56d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145c2023-7a3e-481a-a5b5-3da3aa8523b6",
        "cursor": {
          "ref": "cd831413-2ba7-4675-a768-7de44cd8ccc6",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "61b3e8b2-1b0c-4d04-a039-bd8ffe92769b"
        },
        "item": {
          "id": "145c2023-7a3e-481a-a5b5-3da3aa8523b6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c5e74fd1-df99-46a5-bef5-ecb04c9a8488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a042da20-d199-48a9-a5bd-37814fd37226",
        "cursor": {
          "ref": "609b29e1-ffc8-45e2-8470-d51e5860b50f",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "dfa48355-ad69-44fd-bb23-32455e49ec4a"
        },
        "item": {
          "id": "a042da20-d199-48a9-a5bd-37814fd37226",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ecab0257-6a06-411d-a116-50305bd621c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e5ec12-fd31-4243-a658-f8cdf077b9ce",
        "cursor": {
          "ref": "d5b1c558-cd90-41a2-a9ad-9a5ecc897e83",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b3e98d5b-328b-43eb-9c22-ec9576f30f43"
        },
        "item": {
          "id": "a3e5ec12-fd31-4243-a658-f8cdf077b9ce",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6940fd60-9a31-4ca4-b927-74bf054fa6c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a026ac3-523a-42c0-894f-329cb7d9b474",
        "cursor": {
          "ref": "0aeeb453-571d-4768-b3cd-959366d0e4db",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "09326eba-40c5-4559-8ba9-806d2b2a62be"
        },
        "item": {
          "id": "5a026ac3-523a-42c0-894f-329cb7d9b474",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "dc8f0b0b-589b-4d00-b564-3bc0eb2d6675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f6a77d-d88b-4b7d-bc3e-950f144b8a6c",
        "cursor": {
          "ref": "ee465e1e-29a8-4f1b-abc0-a27e1f1fa2f6",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "47780dc1-037b-4937-babf-5dc61da8c116"
        },
        "item": {
          "id": "23f6a77d-d88b-4b7d-bc3e-950f144b8a6c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "4ce88f49-1752-4eaf-b917-5c792d9ad2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6983c2b4-62c7-4767-87d5-94535367995c",
        "cursor": {
          "ref": "3cd43e4f-a98f-4e1f-8f78-be89a21bf035",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3284a7bc-4623-4690-b255-045824071119"
        },
        "item": {
          "id": "6983c2b4-62c7-4767-87d5-94535367995c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d16084e6-6992-4d47-8c96-7de33e36f41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9fb381-8719-47f4-8f20-73ffdca28b5d",
        "cursor": {
          "ref": "26dbde9b-72e6-468a-9788-2ac55b5fd5e9",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "aafb83ff-0c6c-4453-ae6a-db486d49190c"
        },
        "item": {
          "id": "ca9fb381-8719-47f4-8f20-73ffdca28b5d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c8eea9a3-98f0-4a9b-9ed1-e350710a8ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b6fc1a-a719-4bc2-8d36-b6b58a3724c5",
        "cursor": {
          "ref": "e5eac88a-b4ca-4fef-810c-6812ee9f5b7b",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "550be98d-ebee-4df3-ace9-82567ce2f773"
        },
        "item": {
          "id": "d7b6fc1a-a719-4bc2-8d36-b6b58a3724c5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a38299de-051a-4767-8b78-2f37068b935a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6711575-4cff-45f4-9a99-f0922d9cb157",
        "cursor": {
          "ref": "134cfc69-2bd2-42a4-8c4d-44e7912c527d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "cd41f55f-53d5-47d6-ba15-0b9e7838c826"
        },
        "item": {
          "id": "a6711575-4cff-45f4-9a99-f0922d9cb157",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f41be917-ad9c-4b43-9c96-73a7f722f0cd",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1912e53b-fe41-4383-afde-47167a403919",
        "cursor": {
          "ref": "0b15004d-3104-4519-8617-68eed007d67c",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "bf9b6ec9-47ce-4947-b18b-738ddecece93"
        },
        "item": {
          "id": "1912e53b-fe41-4383-afde-47167a403919",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c341b931-c1be-4ede-bc06-2452e957797d",
          "status": "OK",
          "code": 200,
          "responseTime": 2968,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fdfed0-f3d3-4018-af27-9eed86f743f8",
        "cursor": {
          "ref": "3f0628e3-be05-4d35-8b36-f6a29b24aa05",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "be2bb2db-c80f-4ba9-97da-18a8ec455042"
        },
        "item": {
          "id": "49fdfed0-f3d3-4018-af27-9eed86f743f8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "03aa9db2-04ba-4d85-9bc5-df6823ad1b7d",
          "status": "OK",
          "code": 200,
          "responseTime": 3061,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fed7100-79fe-4792-8cc5-b576229122da",
        "cursor": {
          "ref": "140fcb5f-4d53-49df-bf65-6805b669e4b3",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f18c12cf-3da4-4386-8343-5e8955e92433"
        },
        "item": {
          "id": "4fed7100-79fe-4792-8cc5-b576229122da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "54cca4d2-cc00-4440-bf67-86faba38a271",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fed7100-79fe-4792-8cc5-b576229122da",
        "cursor": {
          "ref": "140fcb5f-4d53-49df-bf65-6805b669e4b3",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f18c12cf-3da4-4386-8343-5e8955e92433"
        },
        "item": {
          "id": "4fed7100-79fe-4792-8cc5-b576229122da",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "54cca4d2-cc00-4440-bf67-86faba38a271",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b321ee2f-47be-4c17-af63-ef6aabac9fbb",
        "cursor": {
          "ref": "4b43eecb-f340-4ceb-b282-038e6ec55000",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "62138767-33fe-4b60-96b0-796a0d8e40d2"
        },
        "item": {
          "id": "b321ee2f-47be-4c17-af63-ef6aabac9fbb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "330ad5fc-11a4-4680-966a-1617b350b41c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee71c33-3b6a-4c58-b0dc-1c3882638c05",
        "cursor": {
          "ref": "bc564615-43c9-4241-af5e-45b7a698ce76",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "4caf932b-0b5a-4889-b2b4-21d464d62829"
        },
        "item": {
          "id": "dee71c33-3b6a-4c58-b0dc-1c3882638c05",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "76c0b635-d996-493f-acc1-b77d54852a3e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}