{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2559bdd7-3b28-4ec9-92ec-22fdddecee35",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7da78458-af64-452f-8e2c-4ee6e668c515",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5bae25f0-a31e-470c-beb5-1e6718994ec3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d32a6bf7-38c6-431f-9d64-81bd0e7da4ea"
                }
              }
            ]
          },
          {
            "id": "7e5840a4-b7a8-4036-961e-828a9ebce3d1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6920aca2-c5bc-4917-b526-c8b552c5aa19",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2b2d13ab-7b84-426d-bd08-71ac9749f349"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "72883bb0-da1e-4e3a-a7fc-d24fec27ff7a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fb7b50b9-9b00-456c-b576-8bb370a159ad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "148c532f-9233-4c06-91d3-3bc5e1ff159d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "878c77ad-dac5-45c6-829a-954b590af02c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dfb67cd9-5b08-4bf0-a38a-bdc1adc2f2dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8413ed9e-908c-4bc4-ad91-7b205600cd96",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1b55544-d4df-4024-adbb-4f2d50f4fa4a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "38d110be-cb0f-4d2b-bd1f-cd68041f7f0f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed01430d-f1ec-4187-abc4-e8bcefef7e81"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5ee1079-4851-4dfb-8155-9de31f43303f",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "7dcd4423-5ecd-4c8a-9916-ed223eb1d5b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5838b2ff-a6aa-4ed1-b11d-e47c8b944206",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dce03748-3b64-421e-ad66-7bcf5a3f7ffa"
            }
          }
        ]
      },
      {
        "id": "da980f98-970f-4ad8-a579-05f00be38977",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "462eaa62-3ffc-496a-b5fb-09deab4aaf97",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90d57cca-dac5-4062-ab58-f4d30609b484",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "73a2ee5b-5080-4e68-bf44-00a747ea6d51",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d48c690-c4f0-4f96-be01-8173e58213ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58306802-b508-40f4-b0c6-54afa6df4377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22abf893-3e10-456f-b32b-aa52953b636c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e45421-9c34-4db1-9f9d-b9021936533c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "608228f1-d8a1-40f3-9b36-1b57edb23dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21555ae-0e5a-4202-a660-4d39efa9d5be",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0338c523-c688-46fb-b546-48ab0f7aec4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7dc9ce04-1223-44bd-8a1c-347053e85045"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0254bb13-28d5-45ca-b306-daf4628abebe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac40f61f-0ee9-4c03-9712-670ca28cb01a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff83ac94-d18f-423c-babb-6af0bb569456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8d0d8b8a-6553-4744-a89e-d578fa698ca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1299d40c-59c7-4ded-9b8b-1521cf44e462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6598d58e-bace-47cc-8f6e-c40ff87d87b7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0cd7b767-058f-4f00-9f31-37b01a843afe",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fd6cf407-bbe1-4954-8994-a357f3a8416a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55fec08d-95bc-4501-a438-14e5bb91eeb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "195573d2-0981-4dbe-9423-2b7757cb00c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "925098c0-3380-4439-8632-d1872c9e7b3b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "17722a21-1dd5-4a71-b517-819297ffbbfc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5ae9606-c53f-4a40-afcf-83f50f531ca4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86c7b71c-18ae-47ec-9b7a-f3e303670d35"
            }
          }
        ]
      },
      {
        "id": "33b176ed-730e-4856-87ed-3742b355ddcc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "05c6b39f-c932-4ae4-896d-e36a50fbf97c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23f5e6e2-0bcd-467b-a33d-ad556d960a38",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "87f1959f-f7bd-4f1b-8c86-7b8fe0653e8a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bb2c1b-74cf-406d-b37c-6b7f28fa582b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acccb21d-12c1-4e49-ae82-36623ce1911c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d081683c-87ff-4014-8997-6b14a77bb2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20fc0fed-3bd9-40c1-b073-96363e5c0cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6731949d-dea6-482e-89e9-1f679002465c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0864b9-b0e9-467c-b57f-4faae184b58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2587e1d0-420a-4e0b-bb7d-ce81ee037e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086a9543-3b1e-4561-b3cb-cf52edba3295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d494930-0897-45b6-a34c-14eaeb53271a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f33c1f1-6988-43eb-9bb5-8ecdeb187696",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d5f5c8-3b7a-45a3-88a1-2d5c18c58904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe07716f-25ae-416b-9186-727c806168bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ba319d-0aa9-4582-b862-f286468f4276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "981994d2-93e5-49f1-becc-14da235ae26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44589306-84d4-4a99-a917-c809ec937e7f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded3db9c-101b-4677-a4a6-2bb642fb7d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283d1e7b-c535-4479-961e-149ef103b4fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6615a0b9-4177-498a-92fb-bb1882bfdd36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d27d4c32-59b3-43d9-88ed-3dd9533a606a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acba4dc-02ed-4b7f-b11a-991a8ad857ae",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c312dda8-514e-4074-ae80-55e29121ef5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4abcaa1-2f66-4689-8167-c6fc5f3079fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec7f60c-2797-4853-843d-feff5052fe41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a35ac4ce-acdb-4e9d-92db-5b49a13c8372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dfd1052-7b03-4e19-88d4-15b7ca602eae",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77dd1fa-a4aa-40f7-942e-3b990edb36eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a9324c-cf39-4207-b02f-b2af2a54e64a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a9080a8-dbd3-4d34-bdda-cd598c3ad4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a899655f-82cc-4cb0-80e5-14363c04fe6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7519b51f-62c1-4eb9-9ef9-e60c311eec08",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a0ef15-ff01-4904-88ab-26d759b693fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6174c9f-1e5a-4f65-9641-12960dd66079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00cafd57-2873-4754-857b-cd11101085ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b00e4c9-6613-46f5-a003-cd4e0cdc0889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65421198-92f2-4a0c-ae7d-644e7fcca48f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221aa906-c556-46b5-9255-20d8fd048fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1117a3-2fd9-4e60-a611-51a3bfdc5530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a1dc1c-b5f5-46aa-8a38-3e4c41d179fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64dea5f5-268e-4c6d-8fd3-bfc804449d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caff881b-64fa-4966-8515-dc671eecc20f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95020cec-ec0b-4f8d-9d22-101f2510ed10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd749f1-0b39-4373-ab4f-4d2a54e46d41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40fa6da-11b0-4566-a18e-f2b9bac18376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "219af017-faae-44d3-a64e-71ef793dd8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99558a9d-1678-473a-b74c-df6937d35d2d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1aa8b1-7230-4cbd-af0b-ac8ae5bc5117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7968c7-636d-416d-815f-216beee37ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b7c40c-b22a-40a1-96b8-d18905bc4b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "403bd77d-ab0b-4108-ae93-3b922cd51d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bca766-615d-4bae-ac82-46d80594fce0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047e3086-f20b-46d9-9867-109de1a03fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb21f09-c0f6-4fc0-9805-e8bab2181e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77578b97-a9a2-4260-914f-100928da165b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c522df37-b384-41b5-ac3e-95787dbb2aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e26632f-81f8-45fd-8710-195459a3e130",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6301028-912d-4bbc-bc63-a11e9a9827a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93facefa-8b86-4c28-95fe-aad3c3f8c66f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67321143-ad36-48c0-9bfb-550fd867658a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19a7c163-9bcd-49f6-9881-ad4c3a6c796c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe858ac2-8d0d-43ae-8e41-705e851a870f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ccdb36-bb33-406e-9643-6de2355ec810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16d5d5c-03db-43d4-8e93-5489b44f1044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a880d43-1a7e-4ed5-807f-cade465e27f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7138d232-bed8-4052-a4df-f8fff8f4c581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3bf0f02-0154-4810-b582-db82640e115b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4cbdb6-1418-46f5-9080-780317b3f7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eae2dcfd-2e46-4442-af9f-3cdeb3f6f348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c044a26-af93-43fd-9ca3-f209f3421f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "473dfd61-2937-4ef5-a85f-f4871cd128e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe57e40-a4a7-4865-a2da-ffde5347cbbf",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ae37d0-ebda-4a46-b924-92b507507d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e897d7ba-705a-487a-8dc3-ae6705bf3d12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "323fd1ca-bb42-4787-b4e8-65ccb0438e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d922ca36-aa56-49f3-9915-37d269c0deee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4197420a-b343-46f3-b942-3e37efad5a29",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fddae7-9b75-4f7d-b565-7ad07370d3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bb0fe2-46ad-40bb-a192-c9ca65fbfd3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c09be50-1e01-4344-926c-934fbd33b3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "755a1221-42ac-4a52-b984-0cba03e567d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2185adac-e369-4fdb-88f2-19279f0a05e1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fac460-fa37-48b7-bd14-b4cdbed6c30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7cc815-ed41-40be-9e6c-88cde3122639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3ad615-038f-41cb-8f05-1ab06b38df45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10272380-b22b-423d-86a9-60bde9664dbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1f9a51-b451-430c-b942-2ee0cfe1e17e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4065e9-d0e7-4013-9f62-a109b6b3eb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce1899c-8206-441b-9bb2-093355497b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb516f4-0143-44bf-b138-7eb1f22d78f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "857edb03-ad8a-4c74-880a-14f0b6360127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6841b96-0a96-4806-96c1-1fed3eca382e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "602b6400-0330-4835-a1a0-391cf187458e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46af3092-38d6-4c82-9269-c9e58478cc55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e18d8f-659e-4d10-a6c4-81ab056bbe10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7148a499-c323-43e4-a314-ad6f86e98f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac745045-b4b2-4b2d-8573-cf5a53f054ec",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b12c09e3-571c-4ce3-b637-a8029aac10f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800244b2-a0c4-4387-ae30-d74bdf073702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d9cd6a-569b-4737-8d4f-ceedc1881409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bac8340-30eb-4695-82a0-5ca62e513893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b93e7d-2aee-416d-b4d8-26e47665ae66",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6cddbb-cb07-42c6-85b8-cbfe04f62f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72626711-f1f4-4199-ba59-fdcc49519b72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf1b3fa-3660-4499-a0f1-1d560acf3cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b011924-c3c6-44ae-b65b-132f0f47ed37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4e2eab-4c21-4900-b1a8-9d0a4e932080",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b90b7f1a-cf5b-4047-be62-09b903d65585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16b548e-1106-439e-a90c-d364b7d0f932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13d1a09-4e6e-471c-b558-776b1fb98698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc44d3f6-540b-4faf-a9a3-80efb84fdded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3714a60a-4f49-4583-a08f-59fa7ef545c8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "321c897c-1c4f-432e-94bb-4dabc0da560f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61f1776e-73f9-4f8a-b3bf-845ab3d9064a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2c667e-33c5-4e1a-8e25-aecf337a6ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "87648e3c-0735-4173-acd0-af2a55b197a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2131176e-cae7-4b45-8efc-de38ea818ce9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9034ba8a-8454-4d04-ab2b-29812f99adaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee39860-9b78-4735-91eb-b9f294c69a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecfc819c-8c78-4d45-a0f1-49f98d6e30c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "da599514-044b-4a27-a718-85297fd54c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690882a7-ae61-42bc-904f-9b7776a49bc6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978bd637-2296-4f3a-9fd3-09f4096ca079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "954be365-f4dc-4617-9f60-cedfde24eb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d01a0d-5577-483d-add8-0b6816d75508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e348d8ae-e545-4fdc-8286-e27efeb11cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6e3c0f-9e9d-4b62-8183-0f7b87d24193",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6df178-63fe-41d3-bf6b-ff46bfbfad04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8053ba71-0b51-4883-a19a-537ca9011ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c85c8b8-f009-4d00-b6da-03719867fb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "99047076-b6f8-48e8-8270-f356dec256e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef879241-b7af-435e-92b7-36aaf8b41b99",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90898e4-5f90-4930-9f7f-01cc29be6e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8846a1c1-9963-4294-aee4-725b354938ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61fb4822-06e1-4390-9025-aebf169ed412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ba4735-7ca0-4a84-83b0-eac2e153d2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1097f8-f63e-4334-a0ce-7248e720371a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d778d4-c385-41e5-af40-a61808ff394c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1c9c71-1cb7-42b0-9d72-ff35fb6a6518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f1a974-b315-49f4-8212-2003fd3d9fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "df5d306f-4768-4344-93d6-684d3bb40bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e821d8-00c1-4832-b52d-1e3b66833375",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "652f5fc1-5173-43bd-abae-3286d8a88dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8b1c44-4e53-4073-a0cf-fbf18202f127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec69de4-a61a-422f-9325-bbf5509fb18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de81008d-b9f8-4d1a-bfa1-4df5573267d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6593f11-2f16-4118-83b8-d4abcff366d5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7e4f82-ce4f-4c40-bf81-0cebf2ec688c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73da96e2-1a70-4117-bea6-432207967c88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0764f21e-d96f-476e-bc47-a0d7dec58b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ede0742c-b3b5-42d8-8249-75f12b75af96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe8848c-5f93-4c97-bad6-96eab17552ba",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea3efcc-0e69-427e-88a4-bcfbde343d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7927d4f-9644-438b-8153-ed1e272804c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d878bcbe-ad36-4c89-a370-79eba393b984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "81e00cc5-8ef4-4afa-b960-bad9a6e8f0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b0830c5-ddd3-47dc-8c4d-6eeac62305db",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8cbca9-d615-4000-a30d-69f201a2d74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53969bc0-42d8-421a-a8d7-98b72578ef1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5adef569-1c7b-489d-8093-c033f810dfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a72ea44f-fad4-442b-be50-711db5e7dc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ccd85b-fd48-4568-b235-dad33a40df8e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80740a9-bbd2-45f4-96d4-a7724589f2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dbbe6d9-8009-4795-a9bc-46674bdf811b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2e602e-a1ed-4ebb-a63d-ec833c256d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "786133f7-87a6-4a56-8e35-27acbad1c50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40a158b-eca2-46e4-9009-f659c04bbd25",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a2d4991-edcc-409f-85e1-bf473c765b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109549b8-80c5-4a1f-93c2-c926c07bcd2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fc926a-eeea-4a17-9ed0-4b637f7b0520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3be7dd-8508-49fc-8b97-8e4d1e7f540f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb801756-94f9-494c-9f7c-30ca33b4b21e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3bcb7a-bace-4c95-bbe9-5de217a1dafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02f7663-ed9b-4636-8be2-503a362f38de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89103b9-4cdc-4a5f-bd10-1524f6c7c233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3daa98e8-feeb-4f7b-9db8-d436cfce64d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616ad741-c863-4043-a6f2-0d6f5dc4d68e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497b5b06-0632-4943-85ba-74ab4d9c6585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9637df69-caae-4a92-ab51-100f108b3389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c508515b-af7e-4e8e-96de-3c5ad883cdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c80b4200-fa5d-4aae-b9d4-16ca92a97a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa1bda7-acb4-40ba-9a90-370f5a18ef86",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "900f9362-0685-4acf-9c36-1c89e783f2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99612203-dfbd-4e84-b8fb-8269ca7c26bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a72a48-4b60-48df-a684-d10c71959c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "220219ca-c197-474d-a6b9-b673d241e6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c0446c-0033-4993-a0da-d6f61f0ca736",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ff5b5e-3f1d-41e7-b800-c45604ee0b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab113d7-f64b-453e-8ddd-61266185e8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542ad512-336e-492b-a8d0-acf63e8ae663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "35ab2666-0125-429c-b4ef-b12127f72246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63089d09-40f7-4da0-8e12-21e79beead3f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab12ade-5e7e-4adf-98de-66cec9f3b00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a5309d-fbb7-4532-87d3-ddb91a5023d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2125d96f-ab95-4760-bd81-5a0108517691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8eaedc8b-7ade-41b0-a745-09d45dd308b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21dada9-591c-48d4-a6a1-9fd9a1953237",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7db71d4-0ede-457f-91b5-673aa94747cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "986b75a0-a695-4d7a-b90c-af04b1c04753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eeea7d3-6328-4730-bb98-a9b22812b84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c379c48-c8a1-4593-820c-8dbd6f5a100f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bacabc-66bb-4138-8196-2061302ecafc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0d4b0e-71db-42a4-bd9a-8bc051017b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e2bbdc-531a-4236-bc0d-70cdf78c44f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab00367-7df2-468f-8421-e6826bcf75af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "18c97070-3fe8-4c3c-b491-b37950b60f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c17c576-25f4-4b24-beec-457dd5e8715a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f0a2da-bda0-43de-9388-9d902bbf3a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02fb653c-6298-47eb-9de6-51349b8bcf93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77aa07e0-4fe9-4113-862b-ceecf107d607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a21e028c-fc92-4b51-be8d-dcc031c68ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9c3156-caf9-4e12-9c1e-6a09ff859be9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6805a3d7-850e-4e0d-8266-277806b60eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d901d935-2c23-4e4c-a7d8-181953de3c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3b4995-48b0-41d5-9015-5a676dec87e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "64dc59f0-ad9b-40c6-b9f7-c608492385da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9750d6f2-c984-4d5d-82d4-67b3a5f0e366",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e5b08b-d306-44e9-ae90-7c89036f2f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54461500-ade6-46c1-b544-cd1b57e44c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2a60f3-3fbb-4a6d-add9-e1b734abf5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc09042-d0ab-4c1c-b0d3-dd21b1d4e1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604f2ffd-219c-4227-89e1-0fca6825d500",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b558eb42-bf06-45e2-abe4-25ad594c8e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6752b963-a4ef-4265-b04c-8d4e0084ae9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f04099-91b7-4901-a532-29bb6af1155b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59a269f1-9755-4db5-b26b-b7b7ef00e056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1843dd76-4282-4796-b1bc-4106c26c0ddb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c70c59-f1f7-4491-a633-30ed6eea2165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfc2551-d23a-43d5-b663-3005bedbd5ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e9b14f-a76d-4e64-a6ba-7571732ac78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6878562f-a70b-4781-b4c7-7a46b55ba8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede817f1-4c38-415e-95e5-0b743a2e339f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2b41b1-47a4-4cbf-b60e-769c462f9f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de1fa8d-a07a-4cbf-82af-ef45718fb7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f907c8-3f8c-40f9-a431-4a299394876d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97ed6dd9-6c56-4fa3-b0f5-ba82e8a161d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf302c8-a559-4d4b-ba63-54e37701f468",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c31503-dda5-49e1-b209-552fc8d8163b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f5d5dc-0ac2-4c62-9453-dd4045d83179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3b14c5-ab5f-4efa-ada8-dc7df9a2bb8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4faa326-df43-4af1-afca-569d27226912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30271aa5-59ac-4639-9e89-92238b21e685",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e752c683-1f95-4f36-a2cc-c50e1b3a61fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "790aa251-4a84-4d0c-ac5e-c1012bc0e5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623471d7-679f-4c45-8a91-c3ced8f216b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "705260e4-ea6e-490b-a5a1-3e82307f8f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4356fe5b-3722-4ded-af84-e786780d295b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b06a67-19af-4d52-9f82-314be23d461d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aa5d5c6-6050-413a-8a07-8079741c5183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8268d453-ba3a-497e-a66d-d6e5bd2abb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d009c4d-67d3-4d9c-a99f-5ae291c1ec25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adafb6de-f02d-4520-9ea5-deae2f36a2a4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49de20a-3a94-4df4-bd89-13bbd99973eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd48ee8-d4e2-43a7-991b-0e8127704170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0e51f3-181c-4fca-b921-ecaa18244f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "82864fc2-0888-40ca-a93f-3cf235091cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fea5a98-4101-4fc1-aef4-ba7fb43985d4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d45f12d-922f-4ce2-80e7-0aabe2ccb3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97f85d4-d577-4430-a8de-80a745115ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81505168-37c8-44e8-a2fd-67c47d98d0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15a5204e-2b18-43ea-a3e8-a9d76b2633b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a944b847-c0c3-4358-b8ed-863b9b1d9337",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c8981f9-54fb-450c-95df-3754fe55e80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fabbfca-69f4-43f0-a9d7-a90b3b44191a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b748ba8-8e40-4ec6-b477-e00e921a80d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7251f1-83b5-44c5-8703-27499c8e38c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6000ba92-f283-46de-90cd-3bca30fef243",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095e6364-6f53-445a-8fa7-b9f4ba900cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08f2170c-5c51-434c-a55e-f91134772782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e485dd67-ec52-4c10-8506-546dbd219a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "db09ff8e-b37f-4315-ab8b-1c08b92c0745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5eda437-4350-49f6-b01c-80381e625c60",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa4a0d6-0b83-469a-8212-d8751d730995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38c4b8bf-3fd5-4cd7-b863-25207c85b4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a8b8f0-42c7-45df-b264-f56ab17c4d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62c0ba45-eb24-4124-a0da-e33ae8792a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfc56ac-b915-4ea9-b446-9b7207b66907",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ab071f-8487-4583-b942-5c05579e20a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4a2457a-4fb9-4c4a-876b-1fd07a0c7688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17afb171-82c1-484f-9ef0-220b98c34075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "85856425-803b-4af2-8801-c7de04aaffbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a4d3730-fe84-4d1d-87ec-680deb4fbd22",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ea4bd0-bb9e-4a22-8420-fba2956ed1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a1b9372-36c5-46d7-85de-3f4c31c9a581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ca01aa-61fc-453e-84e5-9828aeee3f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b36f973-2e3f-4e02-86b7-301ba57cb2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96eb9d02-9bc4-46ac-9ef9-9229bd55baad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859dd837-9f1f-4586-9aba-7765004c89e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24aa6a0-0867-4b94-b425-e773b35a3dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104c425d-784b-43f4-b49b-cb1d5b8aa6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "00d7a1d6-a0c4-4bc3-9026-db5ea04e92a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f7d54dd-e39e-4ace-988e-211af1fdea60",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdd3e2a-b03a-4b1b-a7e4-4923c4e193ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc65e45-8647-4ad1-8208-d99363dd720e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a360044-b1df-4a3c-aacc-7ee8a1d932fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7002c0b0-5aa2-426c-b044-84303b6d1d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069922ae-15f7-40d8-b710-778d1284fea1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e28dd5f-dd55-45d0-a84f-88f753ae959f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5dadb3-56f5-4931-94bb-1e8a06b0403f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e354cc0-c88b-4baf-a9a4-d063c00fb9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa0751a-445d-40a1-8033-c0a8eb1b0fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f26da51-cb2f-4ac4-bbdb-83fbfe461388",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1652dd-2c75-4ae1-a6ca-e7cac0a83587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5bf21c-82d8-4e29-afec-97d17d630a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c172522-bc0d-4aee-af9d-9a9a4d7ae124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb46cac-d744-42a7-9fff-c01a338337d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d87a652c-56eb-4b98-a9fd-85b06881cc0d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29b5fb1-7f2b-4474-ae3f-6e957deeb2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019304da-bdf5-4552-a86f-560be38ca76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2071ba97-85c7-4a10-ba2f-a9507a027ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b1391b-d247-43ce-ac4e-945aa8f7dc28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207643c7-6f18-4f4f-8e52-b581064ecafa",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "698bff39-6f62-4c2b-b7f9-d867d96d8dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d076bc-6fa3-4653-a94d-2067df4cd555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b141283e-9264-4da1-a7f0-0b4ee920bb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "62571514-ba16-40ee-9730-c202739b90bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86e2f9a-6cc6-4190-89be-823547fbe4ab",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2698e4e2-b3f8-4cfd-84cb-09d594e4d135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bb9e219-1dc0-4e9b-a30d-0e82c57d4d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fc1927-7805-4562-adc9-ae837004812f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f14195-2b0a-4d1e-9a08-4c09c752c641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3251f61-5be3-4eaf-99fb-abf5ddfa50b2",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262c5d73-cc8d-44f6-ab0f-52c42cf965eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f6d4925-43fb-42af-8093-a4569a90454d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e3a98d-b0c8-4fbd-ba4f-f59f875b43b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "555e215b-a658-434f-8c0c-78bc55c151c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b19f1d-64e8-4180-9849-b042698128cb",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d45589-6148-49d1-b570-92d58fc52ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650d0a84-fbe5-437a-b453-826a164e4d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f67cd2-5826-41b6-a1dd-7ead97e4f0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fb11398-cb8c-4412-83ce-fcbbc57a6f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dc2cf0-b3d7-4d53-b22c-8956c5360d34",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e751e869-d5bb-441b-9a86-f8d6e4982d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fbd9f69-0b6d-483c-af73-3eb506fae484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec754bda-41c5-44b1-92f9-55451ee865a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92a23ef6-bbe4-4f82-802f-4d11c1955f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fca7486-96aa-403b-a189-7d61290b942c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dce858e-b85d-4798-8dcb-4c903ab8fddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89541142-3b3c-4215-ba2c-3ff75717464e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4422a9b9-a742-40c2-a3a2-0eea429ed9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd88d240-a03b-4f79-a484-e49a029d79c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aeafa96-0a24-4916-b2ec-001f9146e425",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2306f10b-ba1a-4e90-93c0-514bf3aaf7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5509439f-f3f7-4c95-b5a2-a93a9afa674f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20523798-8443-4278-8811-56667d368594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9776ce-6e82-4c8f-b135-00725bd3aa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb30b78-793d-48fb-824b-6e1b319e5c2e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb0d4b0-2b63-4757-9c09-2feb392449c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a278d07c-ef2a-42f4-9fe7-f3f51a6538ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6e28d8-44e5-4167-9b5e-54304024cc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb4970b-6801-4b1b-a410-56e0c9e5f1f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0298508a-88e2-4afe-b77a-091e8581dc5c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a6d585-1e03-412b-9df9-44fc9466651a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35062cc4-0454-4024-a096-183a15dff5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e155b3ec-c6c7-4ffd-a635-83727ad73fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab85db28-84a8-4cf1-bc98-60ae2b8a79b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "242a5445-492d-4029-9e37-ef83d8b331d5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c30a11a-7101-4b77-8fbf-6641e7085837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d6f88f-ffa8-4385-9d89-afd80a1fb73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc7e669-fcfc-47b7-8714-7019b371c881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfacd838-6535-422d-9b79-86f2ea39e635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a62249d-178d-43fc-8298-78cdacf78690",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2a0b20-21ba-4fb7-a001-a5e38ee37be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d143fe6b-ba7c-4eb0-8128-71ba31ea96a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cfeb2f-4c7e-48cb-b228-741f314162d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4fefbb96-b6de-462a-8a87-ac560d86a762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c81871-391f-4147-abf0-c3d7e78cf571",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c02d5f-8312-4f37-b8c7-146484cdfd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8a73a7-f01f-4cbf-acd9-879faedf8a54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7739d0d3-a4ee-4f35-a5f9-8395eef23cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb27561-0304-43c6-aff0-be4185245d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe0c934-a757-4066-8afc-1bb8895547e7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d545c15e-7be9-4c5a-898d-31c6d96197b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a31778-5e9c-48f5-bba0-d1374b072557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c3e228-a608-4ce7-b623-53de8d10c8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ec60bf6-5ea0-409a-893d-9b37133c6039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c0d186-098d-4320-bdd2-43a2ce4dad7c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4701b3fa-4bb1-4d47-84ec-71ba0a1b29d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088cafd2-7324-4732-8c51-45b565b2251a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cafc0a3-7e41-4306-b3df-f12a22dcdfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f73bdf24-f7d6-472f-b326-5efb0af631ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e52624f-1994-455a-a9f0-998580096eff",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e96de8d-c2c3-4233-b75c-9b4f1e03aa0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb5b4d6-385e-40bd-ac84-6ab298b2d3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0d7a24-feec-47f1-999b-52b5d641f700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "106d7d6e-c05d-46a0-83e2-2fbbc3f8a13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06521277-5335-495a-bc80-2fcbbe80de4b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ac2bffa-3fff-42b8-a78d-2e50d36db5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40bd059-3933-4040-94aa-746b5745732c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697c8458-857a-4d65-8c5c-93ad27b6f38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be568286-fd45-4a20-ae9d-4a298326d0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c74acc0-047a-48dd-bb2b-b22c96f3f0bd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5a2ae2-7abe-4417-89b2-b0bed8576924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d581aae1-6875-42c3-8291-8ef6dcfa7fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46caba1a-ae18-4f23-b936-e2d8083088f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee4e635-3872-4677-936b-4061526bc900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e6d306-2c23-4d23-bf1e-eb4ca2a663a8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5786278-5dec-4b34-bd4f-1509e5be90fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c705c5-a139-4f9c-939f-da15d9894f7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de793e6-a67f-4731-a5b8-60b618f817d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d78fd529-697e-41d7-bfb6-e75025797d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2aef96-18fb-4bec-acb9-0c9d68064070",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102958b9-dbdc-4c4d-ad64-39ba639a272c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236f63d7-f972-4fa0-9c25-f8383f299818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b61c06-7997-4f21-a2a2-fdc8a2774b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ec18ae-0e87-4920-b92a-e3300fc16acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bd8d72-bf68-4efa-8dd9-26a40a6ab915",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d49f5fa-68b5-4e73-9305-f8de0dc18cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005ff6d2-7734-4e78-8c47-72f9ac827be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80699ab8-ce74-43d0-819e-785ba1a603d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab66da8b-4294-4e3a-a97f-7c33f2b7d918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3084c4-8d06-491d-898a-792e751f80e3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a58394a-5fd7-4ab3-b7e5-ba6073d29297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569492af-140b-432f-9238-9f41991ea94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc92490a-40df-4f99-8a63-cef2f7fd0c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9277a405-54bb-4b60-b4ee-32c87289eac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0378551f-18d1-4fd5-af63-0f227b3c929c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac11360-de0d-498c-864c-1b9ab596737b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3def2176-4c59-4aa3-9d89-700464f04607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a107b5-6a56-4c98-b028-112a47bd9b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05ef23c0-35f4-4d94-aaf4-c6133e206120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e83e01-3a5a-4bdd-b806-b0a33ad5b288",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8f0b01-8744-4109-ad18-2e43cf52ee34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839fc345-8cf2-43aa-96b4-c1d95ea588f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b1a0ed-8766-44f7-ad01-09638f44b822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98135d2b-9696-49da-9731-80cdaa6177b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af60bf71-0bbe-4578-a743-e6b49394931d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfabe73-c244-4991-9bc9-5dff7a9754a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989937c9-ec63-44e0-98e2-e7ff0d359189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c70a752-22dc-42b5-8b71-1ac0f532a62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8940614d-06df-4c51-9ffe-4334299ade56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ea25eb-dc1d-490d-8f7a-d5d5d149ecb3",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67865aa0-af40-4766-8680-94b457f79365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd148530-d58e-4706-8b2e-cb28e4c98745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9675928-913b-48b5-b3dc-a79904a79ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3006fc26-e6b8-411e-9664-dc2e02413c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a236436-24af-45bb-b304-91fdc868a529",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34180c9-8cc9-4fa1-9c60-0ddc1a550752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d190a992-f2c4-4eed-beb4-67309d3345f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9add3c37-7e86-4b3b-a232-d166a143c892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e558ff0-1463-4a04-ba36-c17a6560a381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0b0cc1-b381-4280-9084-8396ca85c943",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69df25ab-4100-4e7c-864c-b6951542aed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bffe68-a051-4e92-9e1e-fc1e9e9d5a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955600ba-0daa-4a7e-9eb3-b2e4e87732e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "39725425-d077-429f-906c-3b041c4d69c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9919ead-d935-4ed0-8dfa-fc785326e080",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721c0bcf-a554-4d31-b377-a1b9349603e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0d26df-8992-46b1-a5e8-5f6db691bc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad283201-7484-4fee-a525-73b7bcc61832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7aead5a-2547-4332-84be-14f9fabedbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd75842-60f6-4395-be3b-9042e1210a09",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2f5e01-1ca4-4d66-b7b5-c2f0bb83a8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11395e9-68d0-4719-97ca-51257beb0e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87da2e2-f9d3-42b8-97be-0f314ac35153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "35be22ea-b0de-4734-a103-565783641556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ebd410-58f1-49ed-9c48-421b0ba6ea02",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21985ad5-af96-446f-8a98-de6e77f72248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4300aa29-d2fe-4d74-8cf3-cbd7c608e43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ba462b-be8c-46ad-bad9-f91a52dbf50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "35181382-c187-48ba-83d9-384297a526df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "46ebdd0f-02b6-45bd-b6a0-b858ddad0071",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d09b70c4-416f-48dc-a2c2-8c0dd6e8ba46",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14db1d34-6914-415f-bd23-ed26d78b5b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5103877-d788-4899-83d9-7683cf96c40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9fa71f-bffd-46ca-93ab-2710ce4fdd1a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64729aa2-26ee-4e35-94c7-5ea146e14612"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21c0994a-db64-4eec-91d4-7ecd3e222251",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "37bf9fbd-a207-45d7-b887-2e950bba1cab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a731add7-c24c-4e52-9f26-2214b7611efb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d5e4687-681c-496e-88cc-52f523ee7829"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7966635e-3584-44bf-ab5b-27075a02556e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "365d73c7-d3cc-4fd0-bfb5-3bbc1d994516"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cddb4b4e-8ea8-4062-ac3d-f9e0c5c940c0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0ba473bb-1069-456e-9451-34dc92957553"
                }
              }
            ]
          },
          {
            "id": "3390818e-30a0-4590-b7ab-dde20002e773",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cafea4bc-d431-41f6-890d-3a6e0613674e",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "33a6f7d6-3074-4ad5-88ff-86da5e794183",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f52032-d934-4e60-99ab-bd77e46b450b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2233dbb2-eea2-4597-9902-5f0407bf48d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb5c639-5acd-41a7-89c9-ed9ee9e9fccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04cac6a-8d8b-42ab-a54c-964a0d7997c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "796315ab-b51e-4813-9fb4-ba12e65ef079",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a7eebca-f6eb-447e-b0c2-b437022ef67e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "41f99cbf-d997-4662-945b-58cb6e776b70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c93cd2b5-9d3a-4c99-901e-53ac2b7be7bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e97b4a21-5027-47d5-8f8e-93b831632d0b"
                    }
                  }
                ]
              },
              {
                "id": "655b78aa-67f8-4294-a5e9-1ae49dbb1c64",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b345a436-7167-4c80-b524-e5d27798efab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06a78c63-623f-4b26-87c1-ef284bce1f2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a5e0743-4d80-4322-b4bf-d8d9517f3477",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb520494-b8df-47d7-ae21-68fce694d57f"
                    }
                  }
                ]
              },
              {
                "id": "282c191f-0d60-4269-91e8-51d2b1014ac1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59b36f06-381c-44de-9ec6-1269fdbdfaf8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5134f838-06b4-4702-9a84-d201e50950ee"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18e9604f-8f31-47ca-a322-c8e78144b205",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "601ba532-6d1d-4f53-99a5-8dc2cf5942f4"
                    }
                  }
                ]
              },
              {
                "id": "72e3ed2e-3425-4575-a819-dabb8c334327",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4defb48e-8bec-492e-8170-ad2042810cfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c0e05b3-d2ee-4b73-9dd6-308a0a72d48f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16a88706-0bd0-463c-a4a5-f601d1b48eaf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c676a3a5-8646-4bb4-a8e9-b8fd4cfcd275"
                    }
                  }
                ]
              },
              {
                "id": "122f0138-50a3-4b40-a96b-83e0cb755b1e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ea07c81-dbeb-404f-931c-6cf2b91d2eec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "647d130a-1af8-495e-96a5-f1a91df00045"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "040fa020-bc0b-4a1e-a427-b8347a06cc2d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "778cc9d8-7cfd-4a47-a523-1bc616fd86ff"
                    }
                  }
                ]
              },
              {
                "id": "10e61369-315c-4262-a9ba-bb2db19604fa",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b399edc2-eec0-40c2-850d-b830b1f4f6cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3e29aa24-68c8-456e-ad4c-10f3bfaf1a4c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab9bd0cf-d6b7-4d75-ae53-a2316069648a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c13dcd9a-a3e1-4fd8-832e-3e2ac8d6a0a3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "08ee3ce3-c2f6-4bb3-916c-e823bb9bb678",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e2abc7a-d2c5-425a-b951-52d853f5e07f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a1c18970-2ec6-4940-8eee-e5e1973fca46",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b6dd498a-9dab-42df-a80f-b21314442b5f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c866327c-efd8-4f96-8d28-de09533fe7a0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d53781f8-60e9-49fd-869c-99fe5e37cac2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fb56dd9-1013-4f8d-90d4-b6d5e59fe712",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e4ff8ab-8f32-4df6-be62-65ff5c809bfe"
            }
          }
        ]
      },
      {
        "id": "ec4950ec-0141-4582-aec3-002cff227ba4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "aaab0825-2da9-41f8-91de-36b5f42f7e37",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f63bac6-5163-4799-904d-f341b5d88a1f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "41503f70-d8cb-4618-89dc-ddf650425398",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a129d48b-f30d-4f68-beb2-dc51f5ad6b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2a5a63-866a-4985-af13-014262ba0dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2474d33d-de89-4343-90fb-4ee0b6a1193b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3d2927-d583-4d30-8cfd-d762a66087ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09da2008-2543-4c38-b238-e28c1b724283",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc49485-0895-4813-a451-57b5f0701eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b10f5da-5ad8-4370-af53-6eccaa31759c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3357b571-5aa7-4322-af62-1a9f77a125fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6b42789-c289-47a4-ab5e-a193deed0c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4205e05f-ad58-4419-ab91-85888ba3f38a",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73af187c-e46c-4c5b-9219-b67e28a74bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a37351f-a9f2-4da8-a2c7-478cce687df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd84c70-5ced-4244-9ed0-67c3e92702b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4a0e63-76e4-4d09-bb40-c05649f5d74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528eee32-5774-4ac3-a674-d0fbdd7dccf9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c539957-fc2a-4af1-afc7-cf4c4c32496e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b94f43e9-7309-4b4c-9727-ef56944e3a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff95eddf-d3fb-4086-9ea6-f93575cee588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b46c11de-e8cf-495d-b752-99765c705eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7aebbcc-a09a-4c23-b507-980c6ecc04d0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b513dfe6-de73-449f-af30-8beb23c18dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42ba3dc-a2ca-4f2e-9a15-80e02c802d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c21861-61fa-46bb-9116-13ede2e1dd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6df102-0b9e-49b3-9327-8e0070b6a913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2b4fd2-45a4-4429-8f99-6f1d38914191",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1dd810-2b28-4a22-a9bb-e63cefdb5e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a429d65-7cb9-4243-baaf-150006877b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b819cf0-30ea-45d2-8449-e77aca25c61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "12c08251-aabf-4c0f-b992-9e94c6506da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86b4929-26d2-4b91-9c11-c172db7b67b3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b37a31-1612-4325-8f2f-b5f2baf2adab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61710516-39af-4281-8c7e-3c0108424ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfd2349-e47f-4838-8d5c-f675c255c522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "51ff0020-358f-451e-b57e-1653560a189f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572664bd-e445-4732-add4-29cba13ccae8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be37eac-8472-4da3-977c-76d725795729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7188a6b6-edb1-4021-81bb-3d8f45d2ed0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0edf28-7b23-4635-a435-0b44060fa54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8381ce51-12e6-4e96-8627-07f597a42107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de80baeb-35f8-430b-9f91-143f6e2e9c9d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844c25de-c99b-4fc9-b4fa-980d422e9bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3907d30-ca0f-403d-9e0b-a880e6fb51f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8abf71-4b94-4d6d-83a4-1133d8da6afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76a4e93e-033c-46a3-91df-6b8123deff8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1ce763-327b-41a8-8cf6-d77e6dbde247",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e952122-4276-42dd-b560-e44a41d3df5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b389e80f-2475-4297-aa1a-2e9a2373aefa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc30cfb-0999-405a-9203-b1a198dc730a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7485a44b-3bb9-4a6e-87fe-a4363026c0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9553c7e-1b71-4a6c-8616-a5b0bbca5dc3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a97f305f-0cfb-4abb-b151-1f5607ebd6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15e1e7fc-3be3-45a2-882d-61574b781c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2456ecb-bab3-44f2-9aa3-f7ccb86e66aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ec3466d3-731f-46aa-9c88-33c812a0ae2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9538fc20-30fa-4377-b015-b456b7cfc9e9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef31962-7ba6-4704-ab48-327dded567e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8554dcd1-924a-41c6-868c-cc0e876d1316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9aef342-b395-4d06-b478-d2f3465bdd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6460c8cb-6bbd-4a9a-bd54-066d559a3326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bff7877-dec9-4cac-b560-d5fd4305f9e9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c7bde7-a1de-43db-9936-0480e2a33e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2790da5e-2915-42fa-be4e-8b7733f2ea0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68eba90-9069-41c6-ae65-ae585bf8eb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "60a45051-3206-4145-bad3-4a162d137d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566f61d2-78ed-41ad-803f-8a716b84075e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e8043d-5514-423f-a9cc-bed916245e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a60ad3e0-400f-4a97-a8f1-3937456e1677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7352453d-2fd1-4c25-9428-fbed93931439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3473fbd-049a-4678-a988-2fc654d83514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8495e46-88bc-45e5-a9a4-d8995db33a27",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ef0d77-45b5-4945-a48f-b84542866674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a13e71ea-b7df-4cd7-bb2f-73627f1a8f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087eb27b-a8b2-441f-b4e1-f646c343df85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5503d12-28b8-49fe-9d74-748626145b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4504078-cdcd-4420-8986-01622b9ec7f2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d116a12f-1d79-4ec0-b747-7ac5070e2fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f2b193-97be-4078-8343-d96d75199846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fa695c-85df-4b85-9faa-ab061fde4391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2857423-d92c-454c-a515-c49301a3db4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4797882c-7260-458a-9676-15de5db43ac0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47683a31-3aa2-486d-8e7d-93f5fb280055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d84cfe4-9d56-4ba3-beab-338457901127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5074613c-2e56-4edf-9c52-52865299046a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1042014-32db-475a-81d6-d395470d2000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb570bbd-8e04-4c0f-aa75-ca387b7feecc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef83a119-597c-4597-8fcf-11acd1c0ca2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bd79e84-3937-4daa-99ac-86123ae3dda1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3aa6364-378d-4058-8b0a-1d1de2e3c5c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2664621b-8521-49ca-a496-aa970901a9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26df6ed3-99f7-4b3b-a839-88db1de3afd7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4a2091-acf8-4f3f-9330-507709ef379e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8edd81f-0830-4831-a9c5-daf23961db98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ab5f5e-3df6-466a-bb9e-6b781bd73598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a214377e-1967-4647-90ac-9bda33bb0724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5499d9e8-791d-4df2-9e80-b4db4fea4dbb",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a969e7-ba57-4a81-8e57-d1c4aa81a627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a03262-d0f2-4cb9-a926-c7269048b11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fe800a-ac2a-4c68-a9f1-d17abe1a754f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7445447f-a49c-40f6-a789-7cf149af280c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a5ec14-f668-4f1d-a25b-3973e1dac16a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb47f98a-a35e-43f9-916a-e89fabd543a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857b7b35-4885-4bd4-9bc2-36519c759f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f77aac7-7f9c-4f2b-9411-95739daeda15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c61dde73-10c7-4faa-8f1b-ba8bae366d8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695997de-cd0b-4d95-8942-f65c52b00c31",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1771dc03-f453-4996-9978-e05e44762d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf474b0-faf2-4923-a843-01ac22d2793a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f8c12b-adfd-423a-804d-c49749117613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d288de06-b7f8-4e46-b85b-ee53a0becf40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ed6847-8f3c-45ef-bdab-450631bff94e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e23fbbc-1f3b-4074-8f17-f678d80ec3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08394a1b-85bd-4de0-b9e2-2bdadeb7288e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa04db0-6f5b-4f7c-b8f3-6b7169268619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9739a97-e6b4-4e3e-a4f3-c5e7756c20b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953c97bf-6b29-4cc8-985d-c88b6f9f8418",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32a7c5f-0301-4c29-8d5b-b9e6a9934336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75f0d23-6786-4b68-954c-e032e4271ebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf58a60-9562-40c1-86a5-2ed91e2fb646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48836069-e72e-45ab-9da4-f1f928274cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c522597-a49d-47b7-8463-9b40d0e12bce",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de492fd4-edd3-4d4c-92e3-5bdbaa89bfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81360987-8b2b-49f8-96c3-12d0f0cd3c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0749ed15-644c-4bb8-a063-49aca3778af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d119dd28-84be-4dd7-9e54-39671c65ca2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc00b7a-1170-4a7f-b19e-1320a3a0f019",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12483140-ee19-46b7-aa0c-a980eb1e0566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f7b1cff-9565-483f-b820-89a7144f6daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58168184-be49-4918-80b9-06e8353e474a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b56e7b7-b81c-433b-9627-4dc6535e9e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796c914a-2ade-4d30-a7f2-996d8c1a020f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c6501a-cdfe-4b06-a0eb-2c9584975fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e57f430-edf5-470c-886b-f95500e32e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c8b3e8-1a75-4d06-8639-00b529ce7112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "934f6952-36e4-4d2f-8650-71307358dfd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdce5eb3-addb-43ed-8aaa-ad316ca58b6d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f8dc0c-f347-4f5d-94d7-e20d5fda1462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56fce1aa-f50e-4ddd-9077-4597d981dd17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4bb838-bb23-479b-bb63-397c5dcc1455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e95adc19-031e-4ed8-9ea1-d7b605d43713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b495bd27-dce4-42c1-a325-a92ba54fbd74",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca13f12-06d5-4d7b-8b71-d038d0dbf3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "218faecb-ff7a-4cb8-ba09-3cdbb0249e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9f0905-0a9c-4b23-a3ab-7d6602ad16ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "139c1929-9845-4390-8a34-a897b0bda5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f41e632-41c2-41fe-84be-ab396b00a9d5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f41d63a-e5c4-4a6d-98ae-b8f7b54d1052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ac7af7-9472-4687-8674-7f53092d2f0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfb2658-2208-42ae-ae85-75221ecd22ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd0a23ef-ac62-4f10-8f38-5fcc15ebcc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdccb114-b35f-424d-acb8-1dd18af2d3f6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b54792-c8b9-4b41-a800-a1aecfd9ec5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4853b652-3202-475e-a6b1-69806917694f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f6ab93-0582-4039-8e0d-a7b80e7f4a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f60c4e9-6733-41bd-bceb-ea1b8ac78aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f834636-f726-488d-b000-317443a63b1c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e4b820-1a4c-4295-848d-caa42fae5075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae131b0f-aa1d-4b15-82cf-457c286d52da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d18a72-0efe-496f-819f-d430bdeaf04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcda2600-06c8-4068-b612-2da483d49d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff8019bc-63e5-4e86-840c-d359c87cfdf7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b816942-f863-47e1-a3a5-31c5c9462c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2fd3b4-3c19-4d41-abf6-71c3d63e3370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ce41d1-6c73-49d3-aacb-b26d28237a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3db156eb-d71c-4283-abe4-e4707580e1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b466e549-fe9b-4941-a26f-f7e4dd5844bb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd3d9de-a154-4eb8-b110-b2ace5eb9451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b88306ed-5ed7-4c0d-ae48-541f79207e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf3f550-e5cb-4afc-ac14-d11c335887a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96c36729-3d24-40e9-9dbc-73fcc3afa29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8fa563-26c4-49f6-8f3d-ac5d40c566af",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc34e83-83b2-4255-8754-77270dd5c8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a2078e-13a1-48d5-add2-9f825f36f463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d606af-624c-4e2b-b3ad-a188f4055b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d82a99b-aeb0-4171-b746-930e808fbbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d56f40-54c9-4d56-b257-8f84ec252473",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0d0286-776a-4135-add0-25c37c1cd0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc501406-f2be-4019-8caf-d0cd91cbb23f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1101133c-b252-4b38-8ba6-fe7a1f8cde04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2023d85c-6560-4c07-acbc-85aebf94be9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9331ad-ce9d-43bc-8eaa-7356e56a9d23",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c99e98b-546f-42d1-b56c-78237043e676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8019678a-e106-4f95-a992-30faefd9fde0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caabc9ca-5775-42ce-8222-736f783ccd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1e351a-3639-4d9c-967f-64d7cf275cd9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4cdb2001-9b95-4f67-b857-ca496ed884bc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1608c663-17ab-48de-bed5-17fe278c445c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940fb774-afd0-40b9-bc7f-afa9952ae1f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9a95f3eb-d425-4701-b651-774c45809308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1864d5-5c67-4ae4-bca3-5a77eb274415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3e2cdb5-a136-4434-8b18-b5abce8b2286"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb970e64-b014-4bf5-842c-ed6e2ab3ecae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1edf971a-fede-48a5-9a6b-272ebb040db8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fae7d09-3976-49f1-8893-59d27fad74ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38959bf2-0964-4773-b47d-f535173e8f96"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d30262d-8cb0-4d52-89ee-d650ce72b860",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7958048f-464b-48e2-b6b2-015f32a81c88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "759c4d10-4632-46d5-ba06-43c84c939108",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1c5cdaf-59b8-44e5-9c6b-457af8af8fc7"
            }
          }
        ]
      },
      {
        "id": "05c2d5c3-b987-425c-a4b4-2070f1aa16c7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "31481892-3b22-4ff1-9090-410ffd3a7131",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f76be2ed-33b6-441c-9606-d2e5340e7962",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17203d72-cd16-4363-a06c-2c49e32b29b8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27fb134-0b00-483d-8f74-656a53fa8a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70640663-dbe9-421b-a7cc-9cf304514775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abcadcc-e52f-4168-91f8-b5168fe1b61e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901c6421-5047-4b3a-911c-822c452d1f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c838b807-334c-4be3-bcdd-88f535842e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35486f3d-c422-403a-a8bd-3d66ca845b2a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4682b7-7df5-4592-be61-3b6b25b43d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1f57257-6711-49be-84c6-fab5695b627c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196a23f8-4be2-4216-ae1e-fce3b48d2be8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d2a8dd-d256-49df-a395-a95a9059fe29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291ebcb8-dff9-440e-85a0-1ca38b875908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cfa0a75-96e8-4ed5-980e-068ce096c091",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7759b7a-9c06-4a17-b827-a5c37e5fd459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d7abf7-162f-49da-982e-f89c0f04d6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d091ea5-38fb-408d-9467-62c93b1e5dc7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85bbbe7-2ef7-4b37-b55b-8026664954f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd368969-0f2a-4405-9850-1af2a9ff82ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e552d2c-b86e-4663-bba0-29f2b75a7773",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e275a4da-e8b9-4030-9b7b-4bd0c81cc4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3640a9c1-82ec-4ec8-80d7-294482f28cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8f58da-0e35-4b05-89e2-18630b368991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3b1b53-f726-4ec1-8058-0af576346661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfce2f4-f3e4-4a6a-ad17-7d53e32e0416",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f9e8c0-9902-4465-b211-ce6ca06f968f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a73b20f-ed69-412a-b6e4-56674cd6fabf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cfc839-679b-4cac-8b37-87cc3b9aa89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800fd1d4-3004-4b31-bee8-b82b0529ecda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f97886-5cc2-4780-8c11-b3dbb6bdec34",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934c5b99-9e10-425a-9562-4539664748ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc56b0ee-2ca9-4ff9-8758-f15643e55682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff51f56-5289-4bdd-b21e-a8a522cf71d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c333bf2d-a501-4949-8854-fef8c4bc7ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b5f68f-04d3-4b83-816b-3050221ecccc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8cd2bb3-50a2-4cae-a9cf-daeef0b844be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85766458-1f24-4fb4-bf31-9ad837beed9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b447ce81-4596-4d14-a695-3fbc22046320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2193758c-ec7d-4701-81ad-4a0a29b971ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6357be-4b8c-4d74-b67d-358df9177efa",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de85c99-c7e3-48c1-b6c7-316871d3d8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6bc695-ea11-4ee9-a1db-3ebebc2dfd84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c429081-092e-4109-b70d-38c935c0d907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "509e6831-12cb-4a93-b9f2-db9b77cb1c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcedc13-5e50-4a08-9746-3de5f2d15f02",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7157ad3-8a61-40ec-9a35-ab37ca67cf7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed78a609-8198-488e-8048-1be7f2d95aab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ab5412-4905-430d-bb32-d48d291b0349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0720bf15-737f-46ba-8130-30f1d0584ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939ef3c5-788c-4f52-a689-ae490b1465c5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc1f234-d141-4b93-92c6-cda329397ca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c3e7738-96f6-440a-a0ea-90fa387a4e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2919cd15-a573-4170-a416-87697b1e1a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380f2e5c-2616-4b5c-ae87-b48de6e7a999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9145a5bf-6500-45ec-9846-26318483b2ed",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71c09ff-ed05-4d7e-ae7c-7413a386fc40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14b90eaf-12c3-4155-88b8-21dc0268c9bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd392a34-9e3d-41fb-bab7-2a7f205964ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "179a92d2-f286-4ca4-835f-d863d502017b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63753207-0b3d-4835-8be4-3c46dee15580",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e605c484-426a-4548-8599-aa9fdf23589d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70f5fd0b-bbb0-4612-9e2c-568ef526f924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c0f08a-85e4-48e7-9df5-2149c3d701c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38749024-0046-4500-a04f-ce3da66c2a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ffcb0c-0da7-47ee-993f-4a3fa0f4f238",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd27a5ba-4c29-44e0-bec6-ec0010f5f826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a614da7-1b83-4951-b258-caeb866a471c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66634d7-8a80-44f4-ab72-dabe29aac978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7465c325-76c0-40b1-adfa-31fb2ac00aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9c1d52-b54e-40d0-a6b2-9447905ed16d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf2f648-5a36-4673-ba1e-98b79e135dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9fbc86-0d6c-418c-b834-98b657c9ccbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a05fdb7-27ce-4b2c-ac82-1bcd5c6fb5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eceb8f52-fd75-45bd-9bc3-f86b47eb001a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8384e95-1539-477c-9994-47981dd62403",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0939f555-3c0b-4b57-9e9c-0a1257847c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb29f7b-e995-4867-badf-967f1df753d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c72667-db47-4ec0-9c50-868cf17437fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5de1fae-07fb-49e2-9408-e797179d558f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdacefd-fd89-445d-bff8-1083971288cf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5f8daf-95f8-4f13-b38f-0008c3aa96cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d44c79-aea1-4bb9-90c8-dd8adb650e15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c09b741-914a-43b0-a19c-484955cc76d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12dba152-3ebb-4d48-9eee-68c6b61537b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443fcfff-48df-449a-ab42-4831c2ad4f71",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151a8afc-af1b-4158-9e46-bf6a708e2735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2771f1-0253-421f-bb3c-b643ec4829d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "643e5042-7a9f-4d14-9c82-9c1c821788b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f2b402e-49fe-41ec-954e-ad1a92270521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4036602c-0f76-4477-b7c8-9d51569694fe",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a594ef54-a72b-4056-9264-ef5396714598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b72160-5ac0-4900-bf75-7e610a4fe48b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0154f56b-2fa1-4178-8472-b499b8b3e1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750e9e76-5ec9-4260-8b85-6fc65dcdcae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4222e32-b9d9-48f7-a024-1e3ec674d577",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243c5a20-9aa6-4a64-9036-723cae01cf36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc61557c-ff1e-45f8-8ea0-9749e6dc42a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214ae888-c92d-4370-84b5-d1e8f8129f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "643e7153-a5d5-4cf4-a1af-b0ec226af54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a880244-558a-4f2b-bdd0-4ddc6bff45dc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf514fe-85fa-43b1-ba49-f8883ac65690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faccb5c1-4626-46f6-9034-cb3ab7867574"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ee6ef8-fe6d-4034-b8d8-368233aa7679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea3762f-9e18-4d52-9a43-638873e2c481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19fe9e7-33e8-4044-a0ae-378fab25dea9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edcf9ab-949c-4726-92c6-bac926f533a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b64e6ed-cb6b-44e3-a8ec-8c2c4db2dfff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6debe3ec-bb5c-4a93-bf2a-ffb9fd4cd9d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad715b6-a4b2-4651-ba10-2a34f319a92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd79634-e7fa-4236-800a-610a802c13a2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e00632-9c44-4fb0-ad81-6e2990debf90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c06d2829-4cd7-4a5a-baa6-aab7b7e1fefb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe838cb-160b-4bab-9c45-2a3eaed42c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b7faaed-1b20-485a-8c23-6263b9a6e383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8366c54-2093-4ad6-b860-99a3d1441614",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862a02b3-4f76-4d2e-ad3c-d8e18b0c4e63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "844c90f0-fdcf-42ce-9847-d1ee647b02e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e866e3-36c5-4141-b062-915de930bac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6128560-e9a7-4889-a351-6174bff8ffd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad086ca-7ea0-4ff2-b2a5-a3bcbb98d716",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01565bd5-49a5-43db-9867-b4a39b1f4212",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bba40e54-d2e5-446a-bc80-c387cf41f309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd7d40c-54cd-48c5-aff7-0f1c255b1fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce932703-0961-4a96-a861-82fe46595ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74119af0-f39b-47f7-99e0-d524d7c7fdbe",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9714e47-a385-4701-9daf-048252189cbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb73e86-b47f-4409-a7a7-2e014b732635"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c8f9f6-18ac-463e-9aa8-0eb05339ab62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeee7e07-ec87-4fbe-a572-2c9b4a56a96b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78423239-7ac9-439d-a9d4-528d6cb84523",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478e2fa3-b5f8-4f46-9d08-f5a279ddb0f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e346870a-2d32-46e4-b8af-1627335ab464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170b5fac-07c4-4e33-8e58-001235e0f93d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947f6926-e555-41b4-9517-0f07817a11cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47439e4-f01b-4591-a75f-6c3fecefe247",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530182bb-fbbf-42aa-9dfa-eb1b7a1c5fa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9edab06-2794-4069-8b57-514821a70d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2d820d-6ee0-4dd4-970b-d5bfbc3c2e45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b68e1f1-ac5a-4c09-a674-23a0073610a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b120fd89-979c-44d1-a2e6-5e77bb5ef7c7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110f9184-e68a-413f-8b00-3d6f832ffef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b6584f3-8ddc-4279-ac6a-9e3216bbbcba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ac7b8a-793f-4438-97dc-64c292d459c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b8a028-ac0c-46a7-b839-b0d05dd810f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f55012f-ba1d-42d8-9aa5-d8b817f844cc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea791111-359b-4e00-b237-5521111e7285",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "583937bb-48ee-42df-a1ab-fd94d0607578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d941b8-ff90-4b7e-9e0b-bb0824f5484d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd4be2a-0308-4044-a19c-0e133a2028a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd1268f6-ae18-46e8-b980-0683749f0314",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fa42ff-6741-490a-aad0-5d287b700659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f483bb9e-a4e6-44a1-8436-463cec55269d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69215041-5730-470f-aa56-9449d1dcda7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed16363b-bc48-4d9b-82c9-fdaa7bbfd3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2274b421-f5ea-4ab8-9130-367e2ecd9fbc",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a9e706-883f-4ab5-a919-3a026bd3f70c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ba8f5f3-9c35-4979-8d7d-26215aae3c61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9425dfe3-8f0d-4c7e-8334-df679e8a5f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40a90ea-618f-4acf-9c02-f7744f404eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c191c60e-51a6-4e1b-9025-9391715310ce",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260a5b85-8a03-4e1c-97bc-7f65b90257db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245ad718-ac1a-433d-9084-d167b7ebdd91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2f2853-c42c-44a5-bf79-5be8efb5c9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0288504-2de9-4eed-a59c-371b6817eb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a1c4b9-ef2c-42e4-a857-108bbec15300",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf669be1-8492-4a9a-94a9-4bb312935867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a505623-74c6-4aa1-a8dd-bcb7efd4e4e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a6667f1-c45a-456f-b3aa-4e8cd81d7184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6457ccfb-4106-4722-af50-148ea67cf634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32be2359-842a-4344-8575-2bb4151cc677",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea8c97a-17e1-4bb9-b68e-a79c3515d4f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5d123f-35f9-445f-a0a4-d4cd68c8693c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e67d5b-3f16-4dec-aba0-684b6207d99d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ce3fbd-41e8-4e96-bd78-49e493ee7e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b40838-c412-46c7-8f77-5ea8c23cf504",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdd52ba-8843-49e9-ac63-418e880b0291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b1c3dbe-318f-4aad-b29a-bf27781dead6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c65c5b-cc81-42cf-b930-8cb0b6a46a6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168c81c7-b099-4393-b1ab-4dc08d4a205e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcfaa38-9035-4bcc-8f8a-e8284c5358bd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb4a3a9-bc15-4e4f-a4bd-6dc9507fb790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04015f6d-7f35-4d0f-b681-4b3e2350b1be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea35289-4484-459e-b3db-d56a8f0c84bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8971587c-956e-4c29-b950-7e36e03c539d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee6c5d9-bd3b-4d64-83f0-ba041868c713",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726e1cf4-840f-44e0-b69a-f0fb74ee480d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c349978-8561-4e0b-840a-8f50772c70b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487e842f-afc1-4f90-81e1-4bb26a300470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88fe9aec-9056-4c00-bb66-c97b67c6e138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb12082f-b53f-40da-8453-862af0f0a0a5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa35b2c-c22f-4c75-a5be-e91133f73a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77859161-a97a-43b0-b2ca-95bfeec14797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d736c5f7-4265-477e-a201-53126cd3371d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a632daf5-c6c4-4b72-bb3b-0d3407aee121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a745b3f-c4cc-4cdf-af37-7dac7f405d3d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66084c3b-b991-4ac0-913f-9c74447f9e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69279c83-a3cc-46ef-9d74-580ee15a1a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb4d227-b416-45a5-8c09-f46c5df82797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8129414-71b1-4eef-be9c-bc0dbf6b71ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a832d1c-fc19-45e0-bc4b-a594142457dc",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3cd960-8e5e-4f0f-a1c7-cc6b53a31e8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203025a2-4234-488c-885e-04fce4fd8ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12b3f9a-d42b-477f-be87-fff1a851eb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62220d76-89aa-4dca-809f-d77de1cbbe77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbcf0d9-0544-4af3-b75c-7477d3ce7f5e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53851159-e51b-41a2-9e5f-226260146cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db375135-143a-494d-8eaf-c1b2473d22e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5860a0-ab2e-427b-b98b-654ea40ee47d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b5ef502-f8ee-4b70-a2b0-893be59ea215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ee7cd2-ec0f-487a-9f9c-8e253ca41dbb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833137b8-53f9-4edd-a7b1-ac4d2a71042f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663ff889-51b3-4143-b8ed-281204d6750d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6ae8b3-4626-4768-9df4-9d6fb6c4b62a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c29c33e-b5af-4547-86bd-95d1349edc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54b27f1-2aae-457c-966a-a129367c735e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c433c7f0-a957-4d74-a3e3-0a1d0b8a6111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa439a71-c519-40ff-bed7-8bc8b4cb4bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1969e916-3b9f-4a91-bfa0-920f8f819d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ac0bbf-40ca-498d-8ddd-73c4ec4036d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ca6a96-a863-420d-97f4-8b6efc725738",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3e6408-e97c-487c-a03e-8708fe4c85a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e73520-0bd7-4a7d-af8c-6dd3eddc1886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f1911a-6200-43ab-8861-23a6188f8fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f43537-2c87-480a-9774-3f161dd71e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66894a2a-3fc9-455c-9f15-cb4ca137fbcf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44815f14-52a7-4d5a-9159-aed955ddf14d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba961bad-e9c1-4b80-aa3b-62e890fb62e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85e617f-fc74-451f-85eb-f98a059cf01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360dbeef-5840-4ff0-8f31-8ba8018ca0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b214323-5862-406e-8992-7e8ac4fe7089",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1fbd98-9cfa-42be-a4ee-1ae9c0d82b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454e8344-11de-4204-8d1c-769c164264c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e879293-1279-40df-8626-fd96693a5725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b788437-786f-4c0e-869b-3e8516239699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9207e9-cc22-4ae2-b3f5-f5cf5c6f2000",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebfcbc29-27a8-4861-8dd2-4127b387d9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab94d980-d6d6-4d6d-992d-fece7a21926b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30045ef6-2580-49bb-9d6d-ffe22086668d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2a8aca0-3896-4298-8ff1-b222550f70ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fd3c2d-ff5a-4fe8-9691-5de581dd288e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11a1d23-8fef-494d-b011-6db79ce8a7e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665594b9-9985-47f6-9116-37f03c0d24c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3042f088-6371-4a29-9185-0f89de4ab21f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eddd743-bc4b-4ced-9a29-9b24cdd97861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152017df-9a2f-48ec-9719-959e88b53cfb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93f0252-5c57-4526-8697-0493f2dfbe19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2948820-1f4b-41ef-ace1-2b791453e819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf50814-6bd7-4d70-a226-75edd42e1520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f84f3c21-8ea6-46fd-9f3f-c89a5851ff8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b309a561-2e60-42f5-beb2-142fa68241fd",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d6c570-345e-498e-9fe5-23a13088ce1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b78eb8a-4498-4546-8a90-041994bef8f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97538e79-2751-49e2-b556-fe4f204f2a8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5cb408-8771-4f4d-93dc-5ded9a190512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8747c1c-2a0c-4898-95ff-2f740827c5ef",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cc719e-c29a-4681-a8a2-7fdaec223710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9281d9-590d-433a-a7ce-626f35049843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9151af53-2859-4220-8c01-d479ff3d5221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce4fb34-9b44-476b-a3ea-ef8af0d2b3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01ef35f-3adf-49aa-97c6-d9f4068f5880",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cfe1cd-281b-491d-8ce0-cf2dd729a9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1daf5b95-21f4-435e-a873-acd8ed5263be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb66d95-8c48-499b-9ee2-c123e48d8290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07707df-9cf4-4328-8ba8-0de2df461a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b20479-a5c7-42a8-85e1-2dc2984ac7f0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0de17d-2014-47bc-9a58-95f139609648",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c9b89dc-a096-474e-acf1-3bfafa2dc955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3910cc9-0a77-47a9-80d5-6410ec87bbe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e8c8d9-1e1a-4915-ba43-141f495e7d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32273eac-b353-4063-82df-bfaa2dd249c8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9250d022-9ed3-4d1b-866a-31cca88cfb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07c807c-c59e-4b2d-9401-52bb8868108a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac87251-7e8b-439f-bc88-858bdcd6e045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0ebcae-3868-4f6f-add6-d51f33de277c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a09e85-fed6-4bc4-abe1-6d71f6d473a6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7c32e6-3386-41e7-9f12-c50a54038ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e70097e-595d-4fee-8f40-73a3a73046aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f6291f-b19c-48fc-ae42-ce9cb6eb6c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f9190a-5736-4d4f-bc69-09b7f0b3cafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c81f6f0-3cd3-47a3-87c8-af3712f40ce2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "952e4a02-1395-4a4a-ae4d-46f181e1333e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc03bee-17ec-4d11-9874-826152843672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab4d6c1-f8c4-42b3-afa5-1d736ee1286f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116e3746-7899-49c1-9250-932a860aae2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78c6339-31cd-44f4-89e0-6fa43b7ff3ec",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc7fed8-fedd-4085-bf1f-5eeca242af19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd4a96d-2c39-4060-9698-5cc21945f604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c77ea373-49b2-4045-868e-2d81a8b94b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750b401e-0c2c-46e0-8a36-0ab87a9c8f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c74effb-8132-4a1f-a4ff-40f0eaa5c62e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f4674d-f177-4a75-b7ac-1beb660f347e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a80f19c3-d437-4c40-9613-89e6892f9de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e8f90e-e4b1-4be8-873b-60a0714bf607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654ef33c-e6db-4547-a150-936259379fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fbaf45-f472-4846-b7e6-64a5bf834427",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "043253dd-aa45-4daa-9e6a-5a9e94c8c15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad558532-ce57-4244-89be-b62420c7517f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4613a2e-5059-4dbc-b938-9819f74c1d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4641dd-be21-4b3c-a051-71fd8013c927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e5fd18-1d92-4486-a3bd-6895fcba873d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7eafeaf-ae25-441c-b0ed-1d181db237fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146a3502-46a4-4717-992f-0265a64cc848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1af12d6-2125-4600-95c9-eeaeba9657bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640ab3a4-8c93-4359-a440-8712c214d3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ca4aff-2fba-4f32-a842-f5c25cfca568",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c48a15-6887-45cd-be18-59b35c213db7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c6ff99a-e363-4d1a-9c1f-50a4edea8bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebf6337-d522-4afa-8c50-4a2814a3d5bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2353be8c-3414-4f94-b123-e8162a732828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d03afb-8af2-4c76-b327-aa172cde66fa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd91804f-acca-405f-af86-237b2655729b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "187bcfd0-9fcc-47ed-b08f-a9cb26dacfad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcfbd9d-f4bb-4517-aba4-4738d173c63b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a429ff7d-2f32-40ca-a711-eb5aaf83dcfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81cf62d7-8be1-4e4f-86ca-1e4ed8f49c68",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e30aeaf-20f6-4fdf-b1f4-2df468802be7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8509531b-6aa8-4694-987e-799714be95e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b241c8-148d-4681-9030-dfdab76e186b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50017726-837f-4d2f-bb4f-60cb9e4f204d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c72da5-8036-4fa0-bade-196369513fe6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da17963c-eb97-4b42-b69d-7aea5e79f930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fd6761b-cf64-40e7-bf24-86ae5eaf2891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9699167-5229-4fe9-8251-247bc49a9374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ecda5e8-17b2-4e6d-b081-6396ba566f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f550b2c1-710c-44d2-abb0-843e2bf7d458",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751f0c1c-f5e0-4811-b42a-012a3dc0318a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7979e760-d8cb-4559-b2e6-6b6fb3fd09de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2d0284-8384-405f-b4e4-cb5a2f37b0e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "937eb5f6-b0f7-4c5c-8d60-4eacabcc7c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63925a1a-6cf6-4b4d-a293-79185c173018",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a49bd66-9aa4-4b37-bac4-5d7092865f2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd237c45-706e-4f13-b652-fbc1ba8c9852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafcc500-eb3f-4215-8192-4d4ef0da73d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544020c9-f920-41ca-acd4-14e6403b68c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b98985d6-7b1c-4408-8f3a-fb9407294b79",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0db163-a889-4ecb-aa01-e27f4bed302d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff6dea18-6686-4a32-b4a3-b0092b8d78cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2f9ad6-cfc0-414a-9dbe-15a41faed963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6405c3a-9d6a-4950-8eee-3dddfeef2ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f87759a-0411-4e84-ab0f-415b5b596bc9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd927c3-b306-4dd8-b9e6-adbf3dd1896b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcc2f419-9001-4ede-9ec9-a9d58fc93f74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b108d2-45ae-479f-9b75-b61809445071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0a5ab8-7a3a-4bf0-a815-935a05060bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b92cc36-7cc1-4455-81e4-b05999141ea6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640531b2-b85a-4ef7-a1aa-59ce8cf94e11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9ae4820-45b4-4c5c-b0c2-8007525fa122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f433ff-d8bf-42f8-b999-e3edd5a7e8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e07248a7-cd9c-444d-83de-eba3a218ad07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8b7efa-66fe-4fd0-ae4a-1a774a60ada5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645fae92-5e20-4a37-aa39-db30925aa510",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a007bdd1-532b-4353-a601-ba0ef9b414ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be174da-87bd-42da-93a4-204fa5757f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f420beb5-8588-47e0-a6db-19c45de54ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9438f3-dc17-4de8-8a56-a3838183c49e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e806e5-a0e4-4ad4-becc-7e4faef3b1ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c70c4545-5cb2-418c-9ef3-6221566f7293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc355b36-82b4-46e0-9b7b-e95a0e37aecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4668be83-0e52-41a2-9f09-3984efcd7d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8551bff-baf5-414b-811e-066d4f241405",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964490ce-7599-46e4-8694-ee9f0c594ed2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1ce4b90-7efd-45b1-9699-8f28590a5143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a6c024-4899-47b6-b4ed-aab73f311eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b24474b-29e8-4b0e-993b-163c780bae6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8791eac8-07bb-4eb6-8518-ee08b3d54a65",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfc75fe-2173-4102-995a-424b7acbb4c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f45eaeb-ed5d-4df1-b4b5-11e8c85ebc0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f600377-17ee-4061-a2e8-01dffb26a672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c292f372-7838-42a1-8a0e-50af65766c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19657911-bcfb-4f7b-9fbe-fbb9ef61ca7f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24584196-fef8-4ea6-b5d1-4eaba8af3f9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e59d4e7f-e2b9-4782-871e-d9fff6c5516d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ddc9c3-7a31-4886-a5e8-26969066c7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406f0abd-7a80-4153-9e49-28a84832f03a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e03ad1f-d7fe-4527-a3e2-5e35300db352",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95dc880-8d77-4860-aa1e-63b26bf012ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10557c57-3776-4f00-b8a4-60a28d5677d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008a9d71-1190-4b9a-bd9e-d79520a75054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff075a51-a162-4262-90bb-019bd7095dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd229a5-db3b-4894-b713-fd972743772c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084210d0-92bf-41e9-b3e8-d88d21f875c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e4d450-a2a9-4d30-8038-5ebc0d9a480a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5241a5-b1fe-4816-b850-18b2dd29c54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08589e5-dc43-4cba-98fe-4cdb328e60a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27039a65-d931-4d2f-a00f-060ecae73702",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015db882-6c66-4382-a04d-f09cd3853bce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5f9f0d8-e738-407c-a81b-f611c4b4194d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d6d70b-d9d6-4efb-8f72-82e4558460e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9857c5-6a3b-4cdf-9c68-9f49bb81d692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bd2bda4-f2f9-4074-9111-ea25ac7f2d6d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e203ddd9-5ee3-4be5-b6c8-ef23d26b5146",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495e57ea-ffde-467f-8778-ed7c5cf5a473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b2c181-c0a9-4d6c-892f-fe222c787e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b958dd6-f675-4f29-910a-d62453e6233c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3518d422-3a95-47e7-8252-7ccd0faff05c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f37bf9-5f44-4c5f-953c-d83b7a26a6ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd13728-7bfb-4fa9-89ba-e027c1619c93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96bc8c0-33d9-4c37-a776-39853de8985f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b75d084c-48a4-4d4b-8923-aa310b0ebf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e842aab7-9d8e-4b7b-848c-3afb435e5bae",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edcf9e1-816b-4426-b6c4-f6ca8dc6031c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9da33581-48af-4228-8923-7967da1be540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8388de77-8086-43c0-b78f-da9568d0d97e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ca8ad5-7947-4e38-acd0-47bb688f8360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e8fff46-3878-4d53-86a4-fa0b52cb05e5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3023045-36e1-4a90-b5ef-96149fcf4f23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1eedec1f-6242-4451-8828-c545705f04e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22dc6a9-2e66-4d98-9c02-36c0e4d34435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94518d50-7f57-422d-a848-71e0fc05239b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0058c4-f1e7-41db-9113-f78cb1dec968",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2478e3a2-c780-4dd5-9bb6-03974f9bee42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cc3ce02-1243-46d7-8619-8cf08b8700d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de06b8ca-6d0a-427e-adeb-38c282d77abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef531e20-0f58-4250-8155-0f4cc1c64e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2aa517f-1e60-45a2-a041-6f9b2c3bf9b9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bd69ba-4200-4b03-99d8-a10ace653fdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee76e2a9-81a9-4d2e-bc06-4cabbeb92992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e3047c-460f-4c7e-802a-32a352aedbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65eeca46-4fbf-4d2b-a0d8-759a8c809aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655c1318-a0cc-4a04-b1c3-6cdb56347ff5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f184e44-d003-4653-bf68-37935febf8bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f60e5ee4-a367-41ba-b9cd-5857d56feea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72faedaa-1a1e-4ec6-abfd-d50c1ee8a668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf95072-998c-41da-b744-24d7ca3e5e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1ff21f-eece-4c59-9583-f6154f91e79d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f197855-5c4b-4c0f-a3ad-b82d270527ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc8a9443-43e9-4e67-890d-e00252d6dce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bbbc0f-d705-4c66-ad81-3d53ddc6d1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d903de-779b-4180-8115-8eea1e6e2258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742f5652-0d8e-464c-82bc-b7669eaa76a9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f5e7d6-e139-4618-902b-2b26f4cbf993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eab0515-22fb-4172-a2a6-771b3470a282"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eae1ec8-6c91-4b0f-a3d8-8f3eb55f06f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c0e74f9-477b-4b97-b600-1c3d9d7c16bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c3972d-bb5d-49b3-8bd5-a124a173d3d7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d6597e-0589-4e7a-bca7-09170cfb4036",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1058c55-b831-4e46-95ac-5a9b754a5d67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56132ae-3955-41d6-8bc5-086722da3ac8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19953358-e6a6-47aa-ad92-977c6e02a5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b80771-dc01-42cc-af3f-1cdc61e39e09",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65031b88-56cf-4fae-9587-ce82a689df08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26fe2ba0-9390-42fd-a6ef-db708a0687a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcdbc83-e07b-4664-ae22-657255a91989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cdf073f-32de-4bc1-a879-aff0a0bb4db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35901245-c2d3-4f99-bc66-f38a01ec6436",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0ad6a4-0c3d-493f-b03f-ee32d700f575",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e9bc8b4-5b63-44b5-befa-942ebbfe8583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "794377b6-d911-422e-884e-2d7b571ac57c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb13199c-00e9-4132-9a2a-b78dcd8f6372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359802e9-adbb-4a05-8e35-c42bb26640bf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2619bb-0b4e-42a3-9576-830358a16a24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82c80f1b-62d5-4872-af3d-6edacc09a208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5089fafd-876d-47bc-8edb-ef28585d2e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5f164e6-4fd4-417d-8360-2fafa886f6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9109c71f-87f0-45d1-a5e5-7e08254283a3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ab1047c-4681-4f8c-b8f5-c0f2a57dbab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfe58d0e-3bcf-4c40-ae6e-9f1893a7c1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2c6f2a-27e7-49bd-b1b6-08082d8c4473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3e1546-7ac6-44a4-9ea1-f43c7f3c80ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ec3ed7-2eec-4766-bfb0-e90da207e088",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f287d0c6-069b-4330-8a4e-361bf3d6166f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb1ec98e-e677-4d27-891b-e1b06a20b3db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e344d25e-6ceb-48da-bc54-2bd65dec6a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74baff2c-ac38-4226-9caf-483309462f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81517e18-09e7-4e55-8e5f-1c045c57b11a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f489af1b-afc7-4abb-b770-c0b014ac0410",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad96b135-8028-442e-b8cc-b3eebd9676bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9cbf16-a360-4711-a21d-8af9b7d5e55d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d1c2c23-00d9-45a5-80d4-03d6e99c865d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3475c4bd-4236-4e23-b9b5-b83fad3d9fe4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33af3e8c-fc32-4439-915f-062f834836a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "318e03cc-4ac6-42d5-9514-eecfdc6d1c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96f4b1e-e96d-4ed9-bc9b-0c5dc2a6448b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd63b25d-2a20-425c-a515-aa99d9b29e95"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d81ffafc-24a9-4b31-a35c-623fec4e6007",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25ded57a-a32f-413f-a600-00cd179eab5d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf96433f-583d-45f4-a26a-2a9720ef86c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19411da9-6d6e-4add-b52b-308d8ef4c087"
                    }
                  }
                ]
              },
              {
                "id": "d1b1b32e-e699-4078-9b48-2512455b77d1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19d4a112-27b2-41b9-9cfb-a24bd5f1f043",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d94a13-8081-453c-a4fd-c8512e2959ec",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4a3c7664-4aea-41fb-a9aa-1139e8015abb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db19fdd-36bc-480f-b275-a34dae919d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e62c3267-9e7f-4ab2-a790-afee46cb2f69"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d67cc4b4-6fdf-4370-a957-f0003a9b6737",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d41e7d1-08e3-4f2d-bdb5-3b2f13807550"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbb7769e-9e68-4a2d-82c5-582440a57547",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4130766d-7c55-4c9d-90b0-d2419412a491"
                    }
                  }
                ]
              },
              {
                "id": "c0643696-fd3e-4189-aa17-9cc5a8352fd2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "324929f5-9609-431e-a895-331771a6aa61",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceadacfa-6acf-4081-a1c0-ce691fd86e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "53a9a4e6-5118-4724-8537-4de087d1232b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d284a2e6-8cdd-4ba8-a836-2afa9e36f751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9394dd86-9f7d-4ecf-b441-2b9189bcdc2e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7426d4a3-a93b-4f51-99e5-ff005ffdafc1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bdf23784-6ece-4cdb-b120-bfc0dcc27836",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4af52e4-da37-490a-bc86-1bab4b87867e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "599aef00-636d-4bff-a9de-7fd0928dbb80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9040d5c5-b4e3-4958-91ad-3cb3516f7c8b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c57ba1f-0d9e-4eef-989d-07f2e9a15976"
                    }
                  }
                ]
              },
              {
                "id": "03138281-0150-4447-a781-8717ffa03d66",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9da96de0-e9f1-44fd-b220-332955e2844d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "da4f47ba-9d8e-4e94-946f-c18b0fbf75b7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b050941c-ef21-49c2-bcd9-23d1f3737992",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efecb20a-f3cd-4156-929f-45959aa43415"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94dc6a01-a083-43cc-a886-7eeb8005131e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3a6fae74-d1d1-49b2-8772-5300f364c6bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf1feb5d-5eb7-4984-a1d5-951bf86c32e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3e52765-78d5-4579-8573-c3ebd558fd96"
            }
          }
        ]
      },
      {
        "id": "5e54ada3-b92f-42bc-b6bc-f47de39be63d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f2f68773-e5ef-46c5-b7f3-575fb6fbebf6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0ec3642a-c28c-407c-b034-744c9904631e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d68fecf8-745a-40a4-b6aa-7fa25b28d722",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0720dd-23de-4f66-b2b1-72c715eea896",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0b002fcf-882d-4499-b913-da9d003dd0bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1dcb05-f5a5-4f5e-abc9-8b4bc5b76777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7396fa59-ee5e-4a27-b28a-5fc1051e8e72"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dae615ea-d0d2-4908-a091-c9cd70795721",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05a9a3a1-d108-4907-972e-ac927e092d60"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5c43c83-326f-4934-b91d-d4153379fce9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "90d36367-962f-4bf9-8ffc-8074c8f25e06"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58259591-e9c0-4442-805c-8ecae162488b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "11259bbe-f144-4cbf-aa3a-864a0a4617f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c52413c6-53f7-4fb4-a9bb-8fc930302704",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0598c8d4-6bb4-4ade-8d13-afca76fec42f"
            }
          }
        ]
      },
      {
        "id": "594f3273-9c77-433b-84f1-383750ab6738",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fed3e511-9a77-4a08-bc88-1ffd582b0dae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "426ddaaa-c2a3-42a7-b597-7d5ec7048198",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ade28712-2557-48b0-a53a-6b75b78efbe4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e87f4ba-790e-4342-a752-62b0300bb8d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56de9500-2991-4cc4-b3f3-83c6ca77c3a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07003bec-d0f8-404a-9a39-48ecf098efc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "525c2d4d-c55a-4cb6-8150-49f7bfe13e50"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfbef2eb-e386-4b36-b7b0-5ace768bddf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a14d962a-b91f-4684-98ea-2485e248f562"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb7a3656-3ac2-46b2-a100-c877f93c696f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d2870fd-a578-4366-96c6-b933b75bc4f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aac17e77-61c0-4cd3-8b38-bbfb360cf14e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee2e7b05-a94f-49f7-8483-c0ca976cac26"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1df413be-5929-4610-b39b-cbac75989dc7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59560812-cfb9-402d-b464-12f319d81884"
            }
          }
        ]
      },
      {
        "id": "2beab9ff-f199-4f99-991a-d91da6ce0241",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c474ba83-1c85-408d-a684-876134af731f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a7ab0b9d-b8b9-4903-b316-7b3d1b86cdad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9644a27-775b-485e-95e6-9232610d669f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a4a4a5-5c68-473e-aa40-230c101ac4f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7f5d0db-602c-4864-bcf8-5d782f8f730b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55375685-8bf4-4d4a-8521-9b426a7dd4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7e81f1b-bc0c-4af7-9a9c-b9bd5f2da9fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de8e390e-2885-42f5-8881-f2edd279a059",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a362ac66-e7e8-4a4c-a2c0-7dc1bf49376b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17fd9857-68d8-41fb-acf4-a5416621c039",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64cc2ac5-7cdc-4230-af5d-49acc828d7c9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8fffb84e-b0d2-4558-8fc2-09d857a6347f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f2e53c02-f086-445f-9779-045735213bac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4cf5c40c-2318-4386-ac45-2a50f6028afe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "af99c622-1ec1-4d37-8412-92b24d1bf2ca"
            }
          }
        ]
      },
      {
        "id": "b03f5c79-3c6e-443f-8f3d-07329da216a6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cb5fa90e-f3dc-4115-9e3f-4b31f76fa245",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c5c91fce-bdb5-4f56-a701-5182ef9f140f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "35d2b636-129b-4500-9d69-eca8b50e22d7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c5301fb-39eb-4f69-8279-d16f80dd1e1d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57a6d3f3-fc41-4502-b4bb-0df76cce31af",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.75396825396824,
      "responseMin": 8,
      "responseMax": 12050,
      "responseSd": 800.1849507091438,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1727138721047,
      "completed": 1727138758407
    },
    "executions": [
      {
        "id": "7da78458-af64-452f-8e2c-4ee6e668c515",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6bfa5314-899d-427f-a69f-2f7076c13faa",
          "httpRequestId": "e1bb41f6-e8dc-4100-9086-9e118b5db3be"
        },
        "item": {
          "id": "7da78458-af64-452f-8e2c-4ee6e668c515",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "999fcc34-4ae4-4c6a-aa1c-328935f349d1",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 0
        }
      },
      {
        "id": "7e5840a4-b7a8-4036-961e-828a9ebce3d1",
        "cursor": {
          "ref": "c8f3b8d8-f419-4365-8f32-965dda2b1793",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2ae65b28-5735-4073-8460-591fd4e504ee"
        },
        "item": {
          "id": "7e5840a4-b7a8-4036-961e-828a9ebce3d1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "77625ed3-3b1b-49b5-a8b0-a2581b66f991",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "148c532f-9233-4c06-91d3-3bc5e1ff159d",
        "cursor": {
          "ref": "e1e4e035-0740-40ba-9e8c-26b3144dee6f",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "81be310a-1ebc-48c1-80c1-2eec4925897e"
        },
        "item": {
          "id": "148c532f-9233-4c06-91d3-3bc5e1ff159d",
          "name": "did_json"
        },
        "response": {
          "id": "de1765d0-167a-4935-b16d-b59c2111652c",
          "status": "OK",
          "code": 200,
          "responseTime": 307,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a2ee5b-5080-4e68-bf44-00a747ea6d51",
        "cursor": {
          "ref": "9e8eefd6-5278-4690-aa52-021a9a3f4568",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "286aa2b7-aa50-4050-bc9f-6dbe3b535ecd"
        },
        "item": {
          "id": "73a2ee5b-5080-4e68-bf44-00a747ea6d51",
          "name": "did:invalid"
        },
        "response": {
          "id": "619fba40-7f54-4746-bcc7-b12dc8d3f375",
          "status": "Not Found",
          "code": 404,
          "responseTime": 328,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a2ee5b-5080-4e68-bf44-00a747ea6d51",
        "cursor": {
          "ref": "9e8eefd6-5278-4690-aa52-021a9a3f4568",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "286aa2b7-aa50-4050-bc9f-6dbe3b535ecd"
        },
        "item": {
          "id": "73a2ee5b-5080-4e68-bf44-00a747ea6d51",
          "name": "did:invalid"
        },
        "response": {
          "id": "619fba40-7f54-4746-bcc7-b12dc8d3f375",
          "status": "Not Found",
          "code": 404,
          "responseTime": 328,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22abf893-3e10-456f-b32b-aa52953b636c",
        "cursor": {
          "ref": "ec31894b-3f03-4ae4-8b07-9314948acc88",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c49d3c1d-449d-4c95-a282-53db4c418502"
        },
        "item": {
          "id": "22abf893-3e10-456f-b32b-aa52953b636c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2b4d4811-157e-4c32-a2b0-f86975458892",
          "status": "Not Found",
          "code": 404,
          "responseTime": 111,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21555ae-0e5a-4202-a660-4d39efa9d5be",
        "cursor": {
          "ref": "068e2653-4400-4be9-aceb-a3a333233446",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e8f2451d-baea-4a6e-b7db-db5a4280da70"
        },
        "item": {
          "id": "c21555ae-0e5a-4202-a660-4d39efa9d5be",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5deb0b85-fd2f-4427-bf44-7b8a9c00639a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 89,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac40f61f-0ee9-4c03-9712-670ca28cb01a",
        "cursor": {
          "ref": "1bf48e3a-657b-4b1f-becc-29c0e9761a5b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "87e39cd6-f37b-4fe0-8bbd-3f74af7d0a55"
        },
        "item": {
          "id": "ac40f61f-0ee9-4c03-9712-670ca28cb01a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "250912c1-db46-481b-ab79-d975f02ad7e5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6cf407-bbe1-4954-8994-a357f3a8416a",
        "cursor": {
          "ref": "ed3d31b8-2d63-4285-80f3-544b46838627",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "50d8b385-6f47-4af3-842d-5212728d1c56"
        },
        "item": {
          "id": "fd6cf407-bbe1-4954-8994-a357f3a8416a",
          "name": "identifiers"
        },
        "response": {
          "id": "71adc652-80c8-4b13-97bc-22865344f949",
          "status": "OK",
          "code": 200,
          "responseTime": 38,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f1959f-f7bd-4f1b-8c86-7b8fe0653e8a",
        "cursor": {
          "ref": "e28d28b1-60e9-4c38-a7ea-342def484239",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a208e33d-0cfc-404c-a3a7-33003509fbdc"
        },
        "item": {
          "id": "87f1959f-f7bd-4f1b-8c86-7b8fe0653e8a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4dae4563-c997-4a24-8e40-9f4f477fd847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6731949d-dea6-482e-89e9-1f679002465c",
        "cursor": {
          "ref": "0a237a9f-9f99-4723-9642-109d1f4d33ad",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "43c4ebae-a19f-4fe9-824e-a14b058ce557"
        },
        "item": {
          "id": "6731949d-dea6-482e-89e9-1f679002465c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "688ef7aa-5ea9-48fc-aa17-f3a058d5166f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f33c1f1-6988-43eb-9bb5-8ecdeb187696",
        "cursor": {
          "ref": "20cd8cfa-e14c-4383-941d-549c7b73ff55",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3cb0832d-f9ce-49ac-a694-30467f600797"
        },
        "item": {
          "id": "6f33c1f1-6988-43eb-9bb5-8ecdeb187696",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7d15375b-d19b-4838-8081-a3bf79132316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44589306-84d4-4a99-a917-c809ec937e7f",
        "cursor": {
          "ref": "4286cac0-4bb6-41a0-b07b-7c8ccb25e353",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "64430582-e3df-4821-9008-72b87aed4f33"
        },
        "item": {
          "id": "44589306-84d4-4a99-a917-c809ec937e7f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "32ad4da5-dbba-46b7-92cd-dee20df0396f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acba4dc-02ed-4b7f-b11a-991a8ad857ae",
        "cursor": {
          "ref": "efde7275-7e38-4fa8-9aa0-1a9c21191bd3",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "365f8c18-369d-4ae5-8785-b800717f0d5c"
        },
        "item": {
          "id": "9acba4dc-02ed-4b7f-b11a-991a8ad857ae",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5f684448-1b8e-4123-9005-ee733cb55975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dfd1052-7b03-4e19-88d4-15b7ca602eae",
        "cursor": {
          "ref": "55f2013b-554f-4051-ab3b-dac09e733a7f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5a0f0183-7412-40be-a08c-97fbfa678a2d"
        },
        "item": {
          "id": "8dfd1052-7b03-4e19-88d4-15b7ca602eae",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a29dc414-13bf-4c4f-bc1b-a44f570fce6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7519b51f-62c1-4eb9-9ef9-e60c311eec08",
        "cursor": {
          "ref": "43e9ca96-0906-4dce-ad17-c638ef27dbfb",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8a2c51a0-6ead-4614-85fa-c6bd571c6095"
        },
        "item": {
          "id": "7519b51f-62c1-4eb9-9ef9-e60c311eec08",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c7775c5c-fd3b-497c-a6fd-59e06372f6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65421198-92f2-4a0c-ae7d-644e7fcca48f",
        "cursor": {
          "ref": "9ab27243-f828-422b-9f18-440925cbe3a7",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0d86b678-18a7-43af-9103-75eb81c8fa60"
        },
        "item": {
          "id": "65421198-92f2-4a0c-ae7d-644e7fcca48f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "76831d1c-8598-40aa-bbad-e96724583f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caff881b-64fa-4966-8515-dc671eecc20f",
        "cursor": {
          "ref": "9ee4aaa7-efe0-4c66-99a5-21eb8ed50e8f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "54b8eca5-00bb-431d-b344-fb58316d3495"
        },
        "item": {
          "id": "caff881b-64fa-4966-8515-dc671eecc20f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "02372c3b-af01-4a0c-98fd-4f877e2759b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99558a9d-1678-473a-b74c-df6937d35d2d",
        "cursor": {
          "ref": "2df602a2-e4bb-484d-981b-4e70a5f07f35",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "43e6ca37-ba67-4ae4-ad61-5019d33e521e"
        },
        "item": {
          "id": "99558a9d-1678-473a-b74c-df6937d35d2d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f904f599-8443-4cc1-becf-434704dd029e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bca766-615d-4bae-ac82-46d80594fce0",
        "cursor": {
          "ref": "cd0d1bd3-d914-414a-abf9-3b49645e3038",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "beaca319-eaa3-42b7-99b7-f3ad1d64e19e"
        },
        "item": {
          "id": "b4bca766-615d-4bae-ac82-46d80594fce0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "16b3fe56-7346-4180-ab4d-8326f425e084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e26632f-81f8-45fd-8710-195459a3e130",
        "cursor": {
          "ref": "03bbeb46-234f-4b55-8304-78b1feec182c",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "faa081ac-9e48-4ea1-8ee8-1787a675f1fc"
        },
        "item": {
          "id": "0e26632f-81f8-45fd-8710-195459a3e130",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b65c7e1f-88df-49fd-ae00-a3d889a436d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe858ac2-8d0d-43ae-8e41-705e851a870f",
        "cursor": {
          "ref": "03447042-559b-4caa-b95e-e020daab3763",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fa27119e-e631-4d0c-bf4b-828bd9975f1c"
        },
        "item": {
          "id": "fe858ac2-8d0d-43ae-8e41-705e851a870f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d48920b0-8bc1-4306-a68c-f9c011601770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3bf0f02-0154-4810-b582-db82640e115b",
        "cursor": {
          "ref": "2a89447f-776d-4c60-8677-f73a115e6474",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6d16629e-8601-4210-8aac-d67107d8d28d"
        },
        "item": {
          "id": "d3bf0f02-0154-4810-b582-db82640e115b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "dd859014-e106-4838-a537-78640957ea23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe57e40-a4a7-4865-a2da-ffde5347cbbf",
        "cursor": {
          "ref": "674570ba-befa-44a1-b5c9-39e75752f7ff",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "989cf8be-2351-4763-a267-50e95c88ed53"
        },
        "item": {
          "id": "abe57e40-a4a7-4865-a2da-ffde5347cbbf",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7b23b0ee-8bd6-49af-820d-1dd61fd2321a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4197420a-b343-46f3-b942-3e37efad5a29",
        "cursor": {
          "ref": "d168cc71-3017-48f2-8a77-6cb5d98690ff",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a7e299c3-b7f1-4e03-aabf-53c50569c9ce"
        },
        "item": {
          "id": "4197420a-b343-46f3-b942-3e37efad5a29",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b9eb89e3-949f-490d-8f5a-c846de38e645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2185adac-e369-4fdb-88f2-19279f0a05e1",
        "cursor": {
          "ref": "74d93565-b2be-4c7f-9993-765f5d4301c7",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9e0e81b1-6a27-4eb7-9c2a-37e503a854eb"
        },
        "item": {
          "id": "2185adac-e369-4fdb-88f2-19279f0a05e1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d2558c71-90c0-41d5-8a66-940f917b9055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1f9a51-b451-430c-b942-2ee0cfe1e17e",
        "cursor": {
          "ref": "d9a81bc1-58fa-4588-aa68-c55173d6745c",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "91dab039-99cd-4b35-a478-a790ae6de7a5"
        },
        "item": {
          "id": "0e1f9a51-b451-430c-b942-2ee0cfe1e17e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6d56be5c-bfd9-4849-9ee6-d7b6481b942a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6841b96-0a96-4806-96c1-1fed3eca382e",
        "cursor": {
          "ref": "a40fd71b-66a0-40d2-8fc7-416568d4e07d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1687753b-6320-4ffb-99c0-33777c22eae4"
        },
        "item": {
          "id": "d6841b96-0a96-4806-96c1-1fed3eca382e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "78dea057-b4b4-498a-9013-227de640244e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac745045-b4b2-4b2d-8573-cf5a53f054ec",
        "cursor": {
          "ref": "9e124188-c203-4abc-8a16-8889d99af972",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f01ce32f-6ce3-451e-abd4-94bb6f73fb2d"
        },
        "item": {
          "id": "ac745045-b4b2-4b2d-8573-cf5a53f054ec",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "be5fca73-7f53-4ac1-a866-990568367925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b93e7d-2aee-416d-b4d8-26e47665ae66",
        "cursor": {
          "ref": "b7339087-d6c3-4d50-a76a-e9071dbb4831",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0fee6a77-f900-4f1a-b192-c2e8fba98759"
        },
        "item": {
          "id": "25b93e7d-2aee-416d-b4d8-26e47665ae66",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0e577a4a-2a53-43c4-b5ac-d70fff2b1443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4e2eab-4c21-4900-b1a8-9d0a4e932080",
        "cursor": {
          "ref": "e5473ab1-6ba3-4e15-b837-a92bdf43d6cf",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "91d0e44a-9084-4434-87e0-bf6acc87af7a"
        },
        "item": {
          "id": "2b4e2eab-4c21-4900-b1a8-9d0a4e932080",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e55ceb45-ca5f-4eec-86e7-14364ccdca34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3714a60a-4f49-4583-a08f-59fa7ef545c8",
        "cursor": {
          "ref": "61a17b5c-d687-456f-9686-daed61256b53",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "4ac79985-ad24-44b6-9273-8a6e511e51db"
        },
        "item": {
          "id": "3714a60a-4f49-4583-a08f-59fa7ef545c8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0ab4e519-179f-4d71-bb92-bcb36f485a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2131176e-cae7-4b45-8efc-de38ea818ce9",
        "cursor": {
          "ref": "ca6b2269-67c1-44a0-b11c-d4adfdb326ca",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0dd8cba5-55c5-427b-89be-c2467239369b"
        },
        "item": {
          "id": "2131176e-cae7-4b45-8efc-de38ea818ce9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6bacfec3-2f39-4012-bc83-c7fb857e2899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690882a7-ae61-42bc-904f-9b7776a49bc6",
        "cursor": {
          "ref": "aab1d589-8193-4ab9-ac1f-1b533b4d0e3d",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "5ed81ec3-91d9-4d09-99f8-a1ed20466fb5"
        },
        "item": {
          "id": "690882a7-ae61-42bc-904f-9b7776a49bc6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "fd233f3a-e4e2-4497-b166-dc6cb5091223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6e3c0f-9e9d-4b62-8183-0f7b87d24193",
        "cursor": {
          "ref": "7ae2ca7b-356a-4715-930d-23b8331d29b7",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fc1a2b15-c2cd-48ee-8519-0f3863c92ad9"
        },
        "item": {
          "id": "4d6e3c0f-9e9d-4b62-8183-0f7b87d24193",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c8451134-e99d-4e00-8b26-06192b2eff00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef879241-b7af-435e-92b7-36aaf8b41b99",
        "cursor": {
          "ref": "12c00d65-5931-4d7b-8dc0-0db617ba3e29",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2bf50452-d946-4d9a-bf03-78f0d605b9ee"
        },
        "item": {
          "id": "ef879241-b7af-435e-92b7-36aaf8b41b99",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "20b945df-b9e9-4de1-8389-e28744becbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1097f8-f63e-4334-a0ce-7248e720371a",
        "cursor": {
          "ref": "c8c0a6d9-abce-413b-ab64-8aff16cde261",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "67ec2d47-91ab-4cb9-b622-06d271c22edc"
        },
        "item": {
          "id": "3f1097f8-f63e-4334-a0ce-7248e720371a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "858fef62-e6ce-4e69-98f9-44705fb79d5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e821d8-00c1-4832-b52d-1e3b66833375",
        "cursor": {
          "ref": "901e34bb-3423-41b9-aca6-b8d6cacba147",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "15a49cfe-b9e2-4ae0-84d9-a5ce0b4252f5"
        },
        "item": {
          "id": "34e821d8-00c1-4832-b52d-1e3b66833375",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8d13c316-0f25-4829-8c7c-49e9e27350aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6593f11-2f16-4118-83b8-d4abcff366d5",
        "cursor": {
          "ref": "0b738b46-e122-4d14-84ba-13830e53d8f3",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7357c700-2609-40cc-aa96-040c5782786f"
        },
        "item": {
          "id": "a6593f11-2f16-4118-83b8-d4abcff366d5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b5741a02-63c2-46e5-8a68-c10a76656c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe8848c-5f93-4c97-bad6-96eab17552ba",
        "cursor": {
          "ref": "34f0d33a-0a6b-498e-bc1d-d66e801aeac4",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d0af3c73-cc0a-4d23-a625-72350c26e63d"
        },
        "item": {
          "id": "1fe8848c-5f93-4c97-bad6-96eab17552ba",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cea43dac-12bc-48d6-a4b1-8e738b789881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b0830c5-ddd3-47dc-8c4d-6eeac62305db",
        "cursor": {
          "ref": "49a1d213-f78d-445d-8280-d0852ee2c34f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b1f975d4-70d2-4619-8a3e-6733a4f4a64e"
        },
        "item": {
          "id": "0b0830c5-ddd3-47dc-8c4d-6eeac62305db",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ee42a050-23bf-4581-b044-16c9b1b4d9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ccd85b-fd48-4568-b235-dad33a40df8e",
        "cursor": {
          "ref": "b2cbbba9-82b7-4565-b195-df4b0e3d46ac",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f8f7ff51-f80e-4e04-b81a-31e5ec3dff7f"
        },
        "item": {
          "id": "e0ccd85b-fd48-4568-b235-dad33a40df8e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d6445b2a-6637-417b-aaa5-f229d099a004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40a158b-eca2-46e4-9009-f659c04bbd25",
        "cursor": {
          "ref": "7af1e28d-b995-4708-b2cc-71f1494549e2",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "40c2e22a-f18d-4491-90d5-31f8b78be819"
        },
        "item": {
          "id": "e40a158b-eca2-46e4-9009-f659c04bbd25",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b783090a-bcfa-470d-925a-2b68a4fa4a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb801756-94f9-494c-9f7c-30ca33b4b21e",
        "cursor": {
          "ref": "277f6a7d-5673-4a99-a074-1f3d5eb8a421",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f3955af6-4b46-443e-87f1-d44224d18183"
        },
        "item": {
          "id": "eb801756-94f9-494c-9f7c-30ca33b4b21e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c2539c0d-5024-40f8-9eec-c04d91726e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616ad741-c863-4043-a6f2-0d6f5dc4d68e",
        "cursor": {
          "ref": "d14a216b-2cc5-4bf2-8e71-7eebb2cdc21c",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "894fcb96-2382-4665-9cdb-1d77bab55910"
        },
        "item": {
          "id": "616ad741-c863-4043-a6f2-0d6f5dc4d68e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "589d5375-a2ff-4ddc-b1ca-8a3484e8b4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa1bda7-acb4-40ba-9a90-370f5a18ef86",
        "cursor": {
          "ref": "f79478c9-4499-4730-a9e6-84386a6e7a04",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f377332c-04a1-4b12-b533-94a85a59fba2"
        },
        "item": {
          "id": "8aa1bda7-acb4-40ba-9a90-370f5a18ef86",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "32495af1-2d43-4911-867f-450db8325d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c0446c-0033-4993-a0da-d6f61f0ca736",
        "cursor": {
          "ref": "fa86ada9-4fbe-4a58-9f03-f924d5cc9458",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "97f2e89a-3dde-4dda-80cf-32ae32622615"
        },
        "item": {
          "id": "02c0446c-0033-4993-a0da-d6f61f0ca736",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1c4438ff-dff2-4684-b5b5-6683d7afd9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63089d09-40f7-4da0-8e12-21e79beead3f",
        "cursor": {
          "ref": "f5d7b8b7-39ab-42f8-8b01-10f2cd46b7c1",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f23a9e32-7437-4baf-bd7c-6502b109e449"
        },
        "item": {
          "id": "63089d09-40f7-4da0-8e12-21e79beead3f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1eb675b4-a6db-4e17-8bd3-eae239e9b4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21dada9-591c-48d4-a6a1-9fd9a1953237",
        "cursor": {
          "ref": "df4cfa05-a27f-49aa-9c07-7188d771f1d3",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6e2db146-8056-414c-842b-c67eeba0a9aa"
        },
        "item": {
          "id": "c21dada9-591c-48d4-a6a1-9fd9a1953237",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "70b458dd-a1a9-4d6e-a85d-813d77b755c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bacabc-66bb-4138-8196-2061302ecafc",
        "cursor": {
          "ref": "69412c8d-9dcb-4c1f-8734-db1dccc7f40c",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c7f7b339-6f7e-4abf-8b2c-377f311d2313"
        },
        "item": {
          "id": "d6bacabc-66bb-4138-8196-2061302ecafc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f0219d29-7be4-49a6-a582-ea589b802169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c17c576-25f4-4b24-beec-457dd5e8715a",
        "cursor": {
          "ref": "3e7b01e0-957b-4bc2-bf0a-51242b213d1f",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a30b49d4-2165-4276-92ce-9abb8cdff8d4"
        },
        "item": {
          "id": "9c17c576-25f4-4b24-beec-457dd5e8715a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "1a02fa8a-a627-4aad-87ae-9f5d86be49b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9c3156-caf9-4e12-9c1e-6a09ff859be9",
        "cursor": {
          "ref": "ca9c43c1-d20c-4b8e-b675-9b56690479f8",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "049e7721-903e-4c66-a72f-7e8847d74f53"
        },
        "item": {
          "id": "5c9c3156-caf9-4e12-9c1e-6a09ff859be9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a4d1d111-17f1-4b1e-86ea-5140bddac6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9750d6f2-c984-4d5d-82d4-67b3a5f0e366",
        "cursor": {
          "ref": "d1e22c35-40d6-4d6d-994c-2ecc9dfb8888",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9b2d3705-cce3-4901-aed8-a34e9aff941e"
        },
        "item": {
          "id": "9750d6f2-c984-4d5d-82d4-67b3a5f0e366",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b0cca6e9-2728-4211-b9e0-e3a4d1a33064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604f2ffd-219c-4227-89e1-0fca6825d500",
        "cursor": {
          "ref": "e82f90a5-f2a3-43f5-82b7-d8a2802318e6",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "08972266-fc75-427d-b14d-5be7c7ab2bde"
        },
        "item": {
          "id": "604f2ffd-219c-4227-89e1-0fca6825d500",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ea35146a-123a-4659-867c-5d2826effe18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1843dd76-4282-4796-b1bc-4106c26c0ddb",
        "cursor": {
          "ref": "77f86753-e8ed-47ee-8209-d271fcbda8bc",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d9d81d11-f9bc-4b30-9cfa-fd2de86fa934"
        },
        "item": {
          "id": "1843dd76-4282-4796-b1bc-4106c26c0ddb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "da277a0b-6126-4f08-88f5-eae523073a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede817f1-4c38-415e-95e5-0b743a2e339f",
        "cursor": {
          "ref": "6b9290c7-9635-4b52-ae4d-6dc872dd27df",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9ab3c72c-96b8-4334-9234-c4c72ca24ac6"
        },
        "item": {
          "id": "ede817f1-4c38-415e-95e5-0b743a2e339f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "83c192e1-560b-4f01-b7e7-681c86d5264c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf302c8-a559-4d4b-ba63-54e37701f468",
        "cursor": {
          "ref": "d113451f-1a53-4da6-a037-90a7d9a5f170",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3f5ce544-9608-4100-b9d8-75e75512d9a2"
        },
        "item": {
          "id": "daf302c8-a559-4d4b-ba63-54e37701f468",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a9ae78a7-a805-4d89-a479-25a52d7559ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30271aa5-59ac-4639-9e89-92238b21e685",
        "cursor": {
          "ref": "e1587c8d-1a22-4eae-a86f-d09cbadfbfd4",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1cd8bd9f-46ce-4b4e-a5f9-8e2f6a5e2cbd"
        },
        "item": {
          "id": "30271aa5-59ac-4639-9e89-92238b21e685",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "15c7ac1b-8a18-47d7-9594-f6e7e8e4a282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4356fe5b-3722-4ded-af84-e786780d295b",
        "cursor": {
          "ref": "e787066b-cf4a-46bb-a3de-4575cd0bdf49",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "835c74a4-dcff-4088-9420-faefa8650e56"
        },
        "item": {
          "id": "4356fe5b-3722-4ded-af84-e786780d295b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "50f69606-5f3f-4dc1-9a46-b6ca1740f91c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adafb6de-f02d-4520-9ea5-deae2f36a2a4",
        "cursor": {
          "ref": "ff77e08b-fa5d-4cf1-9246-58dbdbc12ebf",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5cfd9dfb-05e4-4281-86f7-ca24e1131933"
        },
        "item": {
          "id": "adafb6de-f02d-4520-9ea5-deae2f36a2a4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "45e26d71-baa7-4734-a2c7-d3eaf9a878b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fea5a98-4101-4fc1-aef4-ba7fb43985d4",
        "cursor": {
          "ref": "56b34517-12a5-4bea-969e-6f46d01651fc",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "08e69d93-1458-4853-b7a0-b2bdfd13c71e"
        },
        "item": {
          "id": "1fea5a98-4101-4fc1-aef4-ba7fb43985d4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "be7ca3e5-5214-4850-b6fa-ad9cc469efa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a944b847-c0c3-4358-b8ed-863b9b1d9337",
        "cursor": {
          "ref": "c755a418-006c-4d6f-8443-ed78b3d23bc4",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "525d73b7-c7c2-4649-88f0-03e79094ce19"
        },
        "item": {
          "id": "a944b847-c0c3-4358-b8ed-863b9b1d9337",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9ed35b8f-bf07-4acf-9c5f-20b97c7f5ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6000ba92-f283-46de-90cd-3bca30fef243",
        "cursor": {
          "ref": "c4b404da-83e9-47bf-863a-51f62c5f83f7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "564475fc-3dbc-4a41-b334-d55fc091c194"
        },
        "item": {
          "id": "6000ba92-f283-46de-90cd-3bca30fef243",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1943fd44-5af5-4e48-a97a-b8c6ea39a9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5eda437-4350-49f6-b01c-80381e625c60",
        "cursor": {
          "ref": "e978d290-7d64-4bfb-b8cc-12d0deaa3562",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1fc0b09c-b206-453c-9673-96366f7a8679"
        },
        "item": {
          "id": "e5eda437-4350-49f6-b01c-80381e625c60",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4c49bc12-9316-4e8b-9453-82e958d6266f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfc56ac-b915-4ea9-b446-9b7207b66907",
        "cursor": {
          "ref": "5d52d187-5294-4130-9a54-fd5e617a54b0",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c3e07cfc-008a-4a12-ae79-83c5fe17bf97"
        },
        "item": {
          "id": "cbfc56ac-b915-4ea9-b446-9b7207b66907",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8a7cd58c-cd49-4aeb-bbcb-7981b8ec8907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a4d3730-fe84-4d1d-87ec-680deb4fbd22",
        "cursor": {
          "ref": "d3d4cc14-ee7b-4131-b798-8abbb2524135",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "f4c23968-b329-4e97-a913-271ba470d2a6"
        },
        "item": {
          "id": "3a4d3730-fe84-4d1d-87ec-680deb4fbd22",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7177c934-1d5c-4706-ba88-951388ca04fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96eb9d02-9bc4-46ac-9ef9-9229bd55baad",
        "cursor": {
          "ref": "bd2d8138-8b76-4097-a5bb-c8ff88864486",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "101a3a8d-be10-4335-ae72-198a84eab523"
        },
        "item": {
          "id": "96eb9d02-9bc4-46ac-9ef9-9229bd55baad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "75cbe130-fe46-4fe2-b5ef-12914b4726a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f7d54dd-e39e-4ace-988e-211af1fdea60",
        "cursor": {
          "ref": "0418a035-63f0-480a-a735-153510606efa",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cb4d6621-e71c-4679-9cc4-962f28be6b8a"
        },
        "item": {
          "id": "3f7d54dd-e39e-4ace-988e-211af1fdea60",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f961e00b-42b0-45a0-bf12-71bf4a7fbd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069922ae-15f7-40d8-b710-778d1284fea1",
        "cursor": {
          "ref": "fd717d5a-4eed-4d7a-a681-4ca0bdb3b2e6",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fd640a21-a736-4958-a83b-c958620991ab"
        },
        "item": {
          "id": "069922ae-15f7-40d8-b710-778d1284fea1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e0495349-4ef4-4fac-9c30-845fdd0af47a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f26da51-cb2f-4ac4-bbdb-83fbfe461388",
        "cursor": {
          "ref": "56e0137c-d478-4496-9b90-264d4438c61b",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4cf964be-6bdb-4148-94ff-1f3b968d8d41"
        },
        "item": {
          "id": "8f26da51-cb2f-4ac4-bbdb-83fbfe461388",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5bd168f7-89e6-4c9a-b571-b49b17d3efda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d87a652c-56eb-4b98-a9fd-85b06881cc0d",
        "cursor": {
          "ref": "6c97434f-d1d0-40e9-b74a-b6860e795ce7",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1f35e6ec-1358-45eb-83b7-2f447adc3932"
        },
        "item": {
          "id": "d87a652c-56eb-4b98-a9fd-85b06881cc0d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7e3167c5-39ce-428c-88c6-a95ccc5957a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207643c7-6f18-4f4f-8e52-b581064ecafa",
        "cursor": {
          "ref": "693c875b-0533-4bf3-b9c6-8ce3feee4bec",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b7be20ac-d8aa-4166-a9fb-4333a1cb553b"
        },
        "item": {
          "id": "207643c7-6f18-4f4f-8e52-b581064ecafa",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "927cfc4f-7446-4f52-b2a5-fb96529f6ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86e2f9a-6cc6-4190-89be-823547fbe4ab",
        "cursor": {
          "ref": "650a7c11-bb07-4fef-8f91-9dc6038ea20b",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fe79b6c5-25fd-49ce-8179-4263bb7b0264"
        },
        "item": {
          "id": "f86e2f9a-6cc6-4190-89be-823547fbe4ab",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "ca6e9cb1-3734-4915-906a-8ec2a60e1d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3251f61-5be3-4eaf-99fb-abf5ddfa50b2",
        "cursor": {
          "ref": "20d96886-dde9-4dac-a629-8f1df4c8be01",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d93e5a15-cf9d-4ab0-9e6f-67eb273c9fe9"
        },
        "item": {
          "id": "e3251f61-5be3-4eaf-99fb-abf5ddfa50b2",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4b2ff2c3-6396-40a6-9bd4-eb6722b00c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b19f1d-64e8-4180-9849-b042698128cb",
        "cursor": {
          "ref": "6b59507b-f142-4811-b64f-0f30ea20d0d8",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b85f6d72-07b0-4d8e-89dc-ae78755c7c63"
        },
        "item": {
          "id": "d0b19f1d-64e8-4180-9849-b042698128cb",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "dabd9cef-c225-40b1-ba45-3fdaafd881d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dc2cf0-b3d7-4d53-b22c-8956c5360d34",
        "cursor": {
          "ref": "c9c1b13a-3e66-4c2c-86c9-16e953d54d36",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "901e6829-0bce-40de-ae46-24bdc88ba07e"
        },
        "item": {
          "id": "24dc2cf0-b3d7-4d53-b22c-8956c5360d34",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9ca654c9-1aea-4a46-939f-79a70bfe3c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fca7486-96aa-403b-a189-7d61290b942c",
        "cursor": {
          "ref": "aa124212-70e3-491e-ad94-e97c2e4ca8c6",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "36920924-5bea-43de-a59f-d0ddc9c756f1"
        },
        "item": {
          "id": "2fca7486-96aa-403b-a189-7d61290b942c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d9b8e92c-504e-49f6-b9ab-ce07ed20f073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aeafa96-0a24-4916-b2ec-001f9146e425",
        "cursor": {
          "ref": "c26bf928-87b4-463e-9cc4-246c35ba237a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "56d55903-5169-4f66-8682-5e8b8e864a53"
        },
        "item": {
          "id": "0aeafa96-0a24-4916-b2ec-001f9146e425",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "322df989-cca5-4250-b442-b7aec5c2c1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb30b78-793d-48fb-824b-6e1b319e5c2e",
        "cursor": {
          "ref": "50029c7f-957c-4be1-906b-54c219306b05",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a0925b8c-6f55-4671-8948-633094607091"
        },
        "item": {
          "id": "7cb30b78-793d-48fb-824b-6e1b319e5c2e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b784d037-89e0-487b-812c-b5a0a1ee2dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0298508a-88e2-4afe-b77a-091e8581dc5c",
        "cursor": {
          "ref": "03ab5e0f-e6d2-43ea-85ba-70ddd23ad146",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "eb8f524f-9807-47ef-9203-d90a1a56833d"
        },
        "item": {
          "id": "0298508a-88e2-4afe-b77a-091e8581dc5c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f5971a41-79bd-42f7-ae80-f69897feb08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "242a5445-492d-4029-9e37-ef83d8b331d5",
        "cursor": {
          "ref": "4ac1c6f1-fdc6-4411-a4ca-4608f7ec8b7b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e2482921-5f9b-45d7-92c9-ee21b3c6d1cd"
        },
        "item": {
          "id": "242a5445-492d-4029-9e37-ef83d8b331d5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d597c995-989c-4f1a-9f64-f16a2ac41cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a62249d-178d-43fc-8298-78cdacf78690",
        "cursor": {
          "ref": "5ab83276-0dfb-4f43-92d4-36b6ca31e662",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "68f39421-e4b9-4963-8a6f-a4268343dc08"
        },
        "item": {
          "id": "7a62249d-178d-43fc-8298-78cdacf78690",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "661f2c8e-da91-4462-b8af-079524874856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c81871-391f-4147-abf0-c3d7e78cf571",
        "cursor": {
          "ref": "248d3faf-bee8-434b-9360-3579198fcbf8",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c706e243-1b60-42e9-a33e-1bf2115a96ee"
        },
        "item": {
          "id": "36c81871-391f-4147-abf0-c3d7e78cf571",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a3ab7f32-685b-4603-8c0d-b03958a519f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe0c934-a757-4066-8afc-1bb8895547e7",
        "cursor": {
          "ref": "a6aea0a6-8af7-45a6-b57d-3a8f155f93c5",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5b674ee4-0534-4c90-bb22-866e0fe4f634"
        },
        "item": {
          "id": "ebe0c934-a757-4066-8afc-1bb8895547e7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7eddf207-7fce-4876-aea4-4d4a1fabfa64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c0d186-098d-4320-bdd2-43a2ce4dad7c",
        "cursor": {
          "ref": "6d8c012d-cb43-42b0-8a42-4eb884a4bf4b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "82f22077-5715-457d-bb38-e390bb8e58ce"
        },
        "item": {
          "id": "75c0d186-098d-4320-bdd2-43a2ce4dad7c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "05698125-4bc4-417e-a404-5d24a7db9bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e52624f-1994-455a-a9f0-998580096eff",
        "cursor": {
          "ref": "012f3ec3-7168-42da-9afe-e8828c99b3d0",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "058ac8eb-b974-4945-83af-8d78e28d9f47"
        },
        "item": {
          "id": "5e52624f-1994-455a-a9f0-998580096eff",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1d92d487-7d87-4d27-9818-2a92d73302ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06521277-5335-495a-bc80-2fcbbe80de4b",
        "cursor": {
          "ref": "cd0dcb59-c83c-4f1b-b392-88cde6413d1b",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1dfe5673-43cd-4b50-8fb5-6023e6456c5f"
        },
        "item": {
          "id": "06521277-5335-495a-bc80-2fcbbe80de4b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b802375a-5479-4ee6-a978-e88c7a4aad39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c74acc0-047a-48dd-bb2b-b22c96f3f0bd",
        "cursor": {
          "ref": "08c0d5ab-619a-40e7-9a36-9c4e03432f3f",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "17dfbb67-880c-429e-b5c9-b83dabef00c5"
        },
        "item": {
          "id": "0c74acc0-047a-48dd-bb2b-b22c96f3f0bd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a3bb0883-ccec-437e-9e8b-1d402f46b74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e6d306-2c23-4d23-bf1e-eb4ca2a663a8",
        "cursor": {
          "ref": "0e453f57-73a1-4918-b59e-bed0a6f45f24",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d14f0e3d-f138-4301-8a8a-252bf12f2f65"
        },
        "item": {
          "id": "f7e6d306-2c23-4d23-bf1e-eb4ca2a663a8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "322a4426-35cb-4a8b-a934-44a8fca21d64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2aef96-18fb-4bec-acb9-0c9d68064070",
        "cursor": {
          "ref": "3d402e5b-0b2e-4d4b-8542-d9699d0f2880",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bca7894b-9e28-46de-b04c-b1853df386b2"
        },
        "item": {
          "id": "6d2aef96-18fb-4bec-acb9-0c9d68064070",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "590179a7-8f1f-4090-86b1-480ce17aa6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bd8d72-bf68-4efa-8dd9-26a40a6ab915",
        "cursor": {
          "ref": "5193bfe1-2476-4606-b0e6-ebf7083fe7f2",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "de154515-a556-4aa9-a414-93d1d48147ab"
        },
        "item": {
          "id": "f0bd8d72-bf68-4efa-8dd9-26a40a6ab915",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ebc1834d-d2c8-4c1c-97ab-95d1ae56f330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3084c4-8d06-491d-898a-792e751f80e3",
        "cursor": {
          "ref": "1e4a3766-a5d5-4b52-949c-a8fa05c8ee50",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4cae130f-0c9d-4730-a5fe-d49a989fcd54"
        },
        "item": {
          "id": "cd3084c4-8d06-491d-898a-792e751f80e3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a4382e60-49ac-458b-83a3-24e7fac6fa07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0378551f-18d1-4fd5-af63-0f227b3c929c",
        "cursor": {
          "ref": "b0aa125e-d74a-41d8-b86a-5a76d47bb19b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ae158797-e96c-4b9e-956a-c9579ce225c6"
        },
        "item": {
          "id": "0378551f-18d1-4fd5-af63-0f227b3c929c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "3c00d91f-95e3-4ffa-a0c6-95b928c105a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e83e01-3a5a-4bdd-b806-b0a33ad5b288",
        "cursor": {
          "ref": "23876ef6-4d6a-411b-a815-3789f84a6fbe",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "815afd82-a96c-482c-9157-f8c09a9fa05f"
        },
        "item": {
          "id": "07e83e01-3a5a-4bdd-b806-b0a33ad5b288",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "59a2f9ea-f2c0-4694-a9ba-b652bec04179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af60bf71-0bbe-4578-a743-e6b49394931d",
        "cursor": {
          "ref": "a7940d77-4fd5-4f2e-aee4-19d61076dc90",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "40442693-8a9c-4462-b7f1-a7fb0ba3370f"
        },
        "item": {
          "id": "af60bf71-0bbe-4578-a743-e6b49394931d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "efedc833-2aff-40ea-a824-e16c33cb2e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ea25eb-dc1d-490d-8f7a-d5d5d149ecb3",
        "cursor": {
          "ref": "fabe3401-b941-4daf-b05d-9c6ade837874",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "78946f67-9dac-411c-b118-c61827526bf0"
        },
        "item": {
          "id": "f4ea25eb-dc1d-490d-8f7a-d5d5d149ecb3",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bd012560-f5b8-4948-8081-d0701e00765d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a236436-24af-45bb-b304-91fdc868a529",
        "cursor": {
          "ref": "d1331818-5931-4337-87f8-25b2c7263be8",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0508ab70-8b28-4b77-a059-b09bcd5174af"
        },
        "item": {
          "id": "9a236436-24af-45bb-b304-91fdc868a529",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0e0a43a1-528b-47d4-b5ad-ee30caf59490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0b0cc1-b381-4280-9084-8396ca85c943",
        "cursor": {
          "ref": "3e51d668-9f1e-477e-889c-a547152b78fe",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b039017f-f922-4b90-8546-e365a453cbe8"
        },
        "item": {
          "id": "7c0b0cc1-b381-4280-9084-8396ca85c943",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8487aaf1-eef3-423f-8d69-c2ac5c98a362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9919ead-d935-4ed0-8dfa-fc785326e080",
        "cursor": {
          "ref": "531b5a3c-7d60-4a00-9b94-77bc8f0a2903",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3030eb1c-3886-421b-946a-6b42a8d0ab07"
        },
        "item": {
          "id": "b9919ead-d935-4ed0-8dfa-fc785326e080",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "64b76096-3cd0-4e57-9f28-f745ab38167a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd75842-60f6-4395-be3b-9042e1210a09",
        "cursor": {
          "ref": "35a67899-7536-4e52-aa51-2d5fdcdd8ce7",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4b3e6f0e-e44c-4e3e-9a3a-649372626596"
        },
        "item": {
          "id": "1fd75842-60f6-4395-be3b-9042e1210a09",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "277d2ccb-053f-46b9-9e61-967a9f5756ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ebd410-58f1-49ed-9c48-421b0ba6ea02",
        "cursor": {
          "ref": "031315cf-fbfd-48bf-b59a-7e86e3067d21",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4db69ec6-5e7d-4840-bf7c-265abbb1baad"
        },
        "item": {
          "id": "a0ebd410-58f1-49ed-9c48-421b0ba6ea02",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f60bb79f-f83a-4cb4-b26d-0f7f0e8a1917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09b70c4-416f-48dc-a2c2-8c0dd6e8ba46",
        "cursor": {
          "ref": "73e745db-31ec-4565-9883-d248a6b6d758",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2f18a842-89ed-4d6f-8ed0-98adde281640"
        },
        "item": {
          "id": "d09b70c4-416f-48dc-a2c2-8c0dd6e8ba46",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "492408d6-5893-4035-bc7d-3729cda14b92",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a6f7d6-3074-4ad5-88ff-86da5e794183",
        "cursor": {
          "ref": "4216cb2b-0d81-4962-86c5-3cda896ac276",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a9b77dd3-539f-4f10-87b5-20756de4007d"
        },
        "item": {
          "id": "33a6f7d6-3074-4ad5-88ff-86da5e794183",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "53cb01a1-aee2-4732-b8ec-605b10d7d4b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "796315ab-b51e-4813-9fb4-ba12e65ef079",
        "cursor": {
          "ref": "148133fe-10e5-46ec-b3f9-863babe56ec9",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a56ed262-d87c-477e-9115-0aefa840ddf9"
        },
        "item": {
          "id": "796315ab-b51e-4813-9fb4-ba12e65ef079",
          "name": "credentials_issue"
        },
        "response": {
          "id": "89513882-d24d-48e3-9898-4a2ec1b17d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "655b78aa-67f8-4294-a5e9-1ae49dbb1c64",
        "cursor": {
          "ref": "d865f9ac-3741-4eeb-8982-235c6d07eaa3",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9af3db0e-b1ef-4557-ac3e-46d47c95ca69"
        },
        "item": {
          "id": "655b78aa-67f8-4294-a5e9-1ae49dbb1c64",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "623c37eb-2022-4609-9008-c0329aec0e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "282c191f-0d60-4269-91e8-51d2b1014ac1",
        "cursor": {
          "ref": "c870cb7f-44e2-47bd-8145-810436fe6e48",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "b0ca3b64-7fc0-4a65-acf0-6312fadff9ea"
        },
        "item": {
          "id": "282c191f-0d60-4269-91e8-51d2b1014ac1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cb28adfe-fc1c-4a9b-9c85-21d2d1cbde5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "72e3ed2e-3425-4575-a819-dabb8c334327",
        "cursor": {
          "ref": "f8556968-0238-446a-820f-35d2c30e236b",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "9fdf4f7d-c5cc-4a75-92f2-ede0aef3e87c"
        },
        "item": {
          "id": "72e3ed2e-3425-4575-a819-dabb8c334327",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "20fbdfdd-be2e-4b65-99aa-6a27614cde91",
          "status": "Created",
          "code": 201,
          "responseTime": 12050,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "122f0138-50a3-4b40-a96b-83e0cb755b1e",
        "cursor": {
          "ref": "ba6f8081-d866-4f7c-963a-6ffd08815e76",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "837bd998-ac1c-4703-8389-d326d3951166"
        },
        "item": {
          "id": "122f0138-50a3-4b40-a96b-83e0cb755b1e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e44ab08c-8c0c-44e3-88ad-9b06d0eeb8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "10e61369-315c-4262-a9ba-bb2db19604fa",
        "cursor": {
          "ref": "ca252d10-b56e-48e9-af78-29a08bc60c3b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e6a8f711-aef4-47e0-bf29-b7ae46e30d76"
        },
        "item": {
          "id": "10e61369-315c-4262-a9ba-bb2db19604fa",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a70e3d5c-ba3f-43f9-937c-b9d2540abeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "41503f70-d8cb-4618-89dc-ddf650425398",
        "cursor": {
          "ref": "593a629e-8cf9-49b3-bef8-33a1883d7694",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "866d2236-1ef2-4ade-bffa-9d429eee890a"
        },
        "item": {
          "id": "41503f70-d8cb-4618-89dc-ddf650425398",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f50ad0bc-37b1-4cb0-8cd7-9c19f525a2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09da2008-2543-4c38-b238-e28c1b724283",
        "cursor": {
          "ref": "34f75d9a-9285-4cc6-8c74-f382217e9fa6",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bcc2f7e5-14d5-4359-b6dd-839b57bd8147"
        },
        "item": {
          "id": "09da2008-2543-4c38-b238-e28c1b724283",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "83c2a41d-ed56-402e-b232-214ddaa5bc10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4205e05f-ad58-4419-ab91-85888ba3f38a",
        "cursor": {
          "ref": "9a819490-6918-4e30-8501-775589d75032",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0f5fb586-654c-4594-8456-23c23dee23fd"
        },
        "item": {
          "id": "4205e05f-ad58-4419-ab91-85888ba3f38a",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "65bc71f7-74e1-45a9-b86b-a6212479d8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528eee32-5774-4ac3-a674-d0fbdd7dccf9",
        "cursor": {
          "ref": "a4cdb04a-f320-4577-bf31-0dfaca0e2ae0",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "92818595-db72-4ed4-ac62-8dcd6216cf51"
        },
        "item": {
          "id": "528eee32-5774-4ac3-a674-d0fbdd7dccf9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "fea40a7b-d9a8-4199-8908-82064309c9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7aebbcc-a09a-4c23-b507-980c6ecc04d0",
        "cursor": {
          "ref": "d4bb30af-32f6-4516-b951-2c93c6a1e581",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f03ec8a4-7c88-4991-ae91-3a0ae2f73c9c"
        },
        "item": {
          "id": "d7aebbcc-a09a-4c23-b507-980c6ecc04d0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b621544a-c35f-4a6a-a396-d16047c89eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2b4fd2-45a4-4429-8f99-6f1d38914191",
        "cursor": {
          "ref": "a89c5dad-5ee9-456d-8bd3-bfd8c9b3224d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8af7b6c0-76a9-4fb1-8c0f-7fcbe43e620d"
        },
        "item": {
          "id": "4a2b4fd2-45a4-4429-8f99-6f1d38914191",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b6682b96-bab6-443e-be71-f3c936fd2880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86b4929-26d2-4b91-9c11-c172db7b67b3",
        "cursor": {
          "ref": "47d1f41c-f33e-47f5-bb04-fc208fd408cd",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "50cf11f2-12c5-4645-9a58-d526f3fd715c"
        },
        "item": {
          "id": "c86b4929-26d2-4b91-9c11-c172db7b67b3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4a146552-4292-429f-8917-c65adad7a54d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572664bd-e445-4732-add4-29cba13ccae8",
        "cursor": {
          "ref": "d1d8c31a-6ac7-416e-b06e-d18ecf2c5a08",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ef3597d0-82ab-4451-8ca0-4759ec909b75"
        },
        "item": {
          "id": "572664bd-e445-4732-add4-29cba13ccae8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "141630ba-a1bd-4ef0-ba5f-eaa289a54498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de80baeb-35f8-430b-9f91-143f6e2e9c9d",
        "cursor": {
          "ref": "94166e4f-2d8a-4275-8b78-ddad45af05e3",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9c90de84-615f-437b-9d32-a62463a83087"
        },
        "item": {
          "id": "de80baeb-35f8-430b-9f91-143f6e2e9c9d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b5b3d30a-1f4e-4aea-845d-4ffa8a07a469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1ce763-327b-41a8-8cf6-d77e6dbde247",
        "cursor": {
          "ref": "5e682578-4863-49a9-8ba3-c05b8c6e2858",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f990dbe9-4973-4d39-85ed-1d486a263fcd"
        },
        "item": {
          "id": "ca1ce763-327b-41a8-8cf6-d77e6dbde247",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "81ff446d-17c4-4f82-912a-241e634d042e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9553c7e-1b71-4a6c-8616-a5b0bbca5dc3",
        "cursor": {
          "ref": "9d8699d8-9da7-4437-b76b-3660a20a0d62",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bcae619a-6997-48b9-b8ef-f6d42060bde8"
        },
        "item": {
          "id": "e9553c7e-1b71-4a6c-8616-a5b0bbca5dc3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f3fbe8e0-a79c-41d9-9573-9062d2c25a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9538fc20-30fa-4377-b015-b456b7cfc9e9",
        "cursor": {
          "ref": "7be67ef3-229e-452f-8fac-9f64fbaa6612",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6fca20cb-1222-42f3-be78-eccb1c16973d"
        },
        "item": {
          "id": "9538fc20-30fa-4377-b015-b456b7cfc9e9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f1ebeaa5-e3ed-4186-add6-54d4aee5fe67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bff7877-dec9-4cac-b560-d5fd4305f9e9",
        "cursor": {
          "ref": "f414a4c6-2356-43fe-ac84-60281f7dbc1e",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "44650d6d-4c15-4f1d-a174-da5b91e88071"
        },
        "item": {
          "id": "9bff7877-dec9-4cac-b560-d5fd4305f9e9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6d51ed6f-f665-4115-9d43-e20e6e28293d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566f61d2-78ed-41ad-803f-8a716b84075e",
        "cursor": {
          "ref": "f5a23743-df47-46fa-bd50-1b5cba7b8b51",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3148ebad-f132-435d-937d-6967990c81b1"
        },
        "item": {
          "id": "566f61d2-78ed-41ad-803f-8a716b84075e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "867080ab-271b-4ce4-ba36-4bc4a1755f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8495e46-88bc-45e5-a9a4-d8995db33a27",
        "cursor": {
          "ref": "8a231d92-b091-49fd-876a-f563bfc5fea6",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9104c6a9-57e1-4df9-88ac-c38ce71b3778"
        },
        "item": {
          "id": "c8495e46-88bc-45e5-a9a4-d8995db33a27",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2b886542-8923-40af-8649-4ad8e25a5fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4504078-cdcd-4420-8986-01622b9ec7f2",
        "cursor": {
          "ref": "02a13c61-e7e8-4ea9-9e0c-ab872348e439",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d3c0028b-7874-4a30-b49c-c04a2822fb9f"
        },
        "item": {
          "id": "c4504078-cdcd-4420-8986-01622b9ec7f2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ee8767ac-0258-4c5a-abf6-58aee774ec83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4797882c-7260-458a-9676-15de5db43ac0",
        "cursor": {
          "ref": "f3171220-7577-4afe-b3ab-0bf5c8a93294",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b213a9fe-3e04-4a38-942a-ed6c30c3f1b6"
        },
        "item": {
          "id": "4797882c-7260-458a-9676-15de5db43ac0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "51b86178-262b-4a1e-a622-8d1ba55cfa01",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "cb570bbd-8e04-4c0f-aa75-ca387b7feecc",
        "cursor": {
          "ref": "1c971b35-7323-4757-9262-2900a8702862",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "123f2ca2-e038-4517-a75f-e4b86078df1b"
        },
        "item": {
          "id": "cb570bbd-8e04-4c0f-aa75-ca387b7feecc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4e0144d6-0060-49fe-ae46-11562f2b5584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26df6ed3-99f7-4b3b-a839-88db1de3afd7",
        "cursor": {
          "ref": "3b005f68-d4fa-4e15-951f-f5d8411b97b3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "60f53558-a775-42a7-a981-5032cff44d8a"
        },
        "item": {
          "id": "26df6ed3-99f7-4b3b-a839-88db1de3afd7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c80db10d-0be2-480e-88ce-7cc25dc4b1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5499d9e8-791d-4df2-9e80-b4db4fea4dbb",
        "cursor": {
          "ref": "62080410-ab4a-491d-9aee-cdfcb3ec1ea2",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "dbecb131-98da-4fe1-b909-15f571f34ca0"
        },
        "item": {
          "id": "5499d9e8-791d-4df2-9e80-b4db4fea4dbb",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9f1d9198-a077-4aa2-b9b2-4ac1c7512078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a5ec14-f668-4f1d-a25b-3973e1dac16a",
        "cursor": {
          "ref": "78459f65-b1e3-491c-a4ee-9dbd4a196cf1",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "1b5b2666-c2ee-4d72-bb14-f96517fb8c2a"
        },
        "item": {
          "id": "55a5ec14-f668-4f1d-a25b-3973e1dac16a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9706a107-7651-42c2-960f-0e879a2a2596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695997de-cd0b-4d95-8942-f65c52b00c31",
        "cursor": {
          "ref": "9b1ec65e-c3b5-4beb-9ac3-e92137116bff",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "86fa4098-a152-4cbc-b5dc-c8fee8b84525"
        },
        "item": {
          "id": "695997de-cd0b-4d95-8942-f65c52b00c31",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9b1d39bd-7afa-49f5-93c6-c5eab89f7fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ed6847-8f3c-45ef-bdab-450631bff94e",
        "cursor": {
          "ref": "740e429a-72e6-42a5-a08d-f1c68e839a18",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "75df37b6-6d9a-41bf-a6b9-1ccaa2fba8a3"
        },
        "item": {
          "id": "75ed6847-8f3c-45ef-bdab-450631bff94e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0fe36c3a-fd69-47ee-a3ed-f89a53155f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953c97bf-6b29-4cc8-985d-c88b6f9f8418",
        "cursor": {
          "ref": "6649c294-06e8-4dca-be9f-b3778f6611d0",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c139ccb8-df6d-428d-b2f1-cf6cbfb681a2"
        },
        "item": {
          "id": "953c97bf-6b29-4cc8-985d-c88b6f9f8418",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e75c9b90-a9da-4eeb-b269-cefad724f5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c522597-a49d-47b7-8463-9b40d0e12bce",
        "cursor": {
          "ref": "55426a9f-676f-4e30-8014-acabed457b94",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cd43d7b8-e35c-47b6-bf0f-45b840c7aea2"
        },
        "item": {
          "id": "0c522597-a49d-47b7-8463-9b40d0e12bce",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "33a75fae-dd95-4014-b7e1-ec05751a9044",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "3cc00b7a-1170-4a7f-b19e-1320a3a0f019",
        "cursor": {
          "ref": "956a0b6c-2c56-414b-bbb8-4addfc717faf",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d56fdd08-f13c-4d81-a6ed-db4a21c9e938"
        },
        "item": {
          "id": "3cc00b7a-1170-4a7f-b19e-1320a3a0f019",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "725eaf02-dca8-45a2-b3f4-843bbb1ee8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796c914a-2ade-4d30-a7f2-996d8c1a020f",
        "cursor": {
          "ref": "c4aae60d-2854-4133-87b2-7d8801bee646",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8c672d03-01af-4c30-b214-69c8c347c4d1"
        },
        "item": {
          "id": "796c914a-2ade-4d30-a7f2-996d8c1a020f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a2d87038-d2fb-4697-a4e5-cbae1283e168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdce5eb3-addb-43ed-8aaa-ad316ca58b6d",
        "cursor": {
          "ref": "19ccda6f-3379-47f1-8fef-d7a47b0879e4",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1d4ed930-75d0-42a9-b82e-b314fdf865fe"
        },
        "item": {
          "id": "fdce5eb3-addb-43ed-8aaa-ad316ca58b6d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a9a0d7ef-a2fe-4429-a9c3-6d2e26d5d0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b495bd27-dce4-42c1-a325-a92ba54fbd74",
        "cursor": {
          "ref": "adc2b449-0d81-4cd4-aeff-a7a4740d1bb4",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5773e4f2-88e7-4e15-9f1f-45a7bbd13eee"
        },
        "item": {
          "id": "b495bd27-dce4-42c1-a325-a92ba54fbd74",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "79833a94-a55b-4475-b436-23251de8bc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f41e632-41c2-41fe-84be-ab396b00a9d5",
        "cursor": {
          "ref": "249ab3b7-10f9-4823-8304-6d4cf5fbffed",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "46ddcdae-eca0-44d8-803f-704c40372ec8"
        },
        "item": {
          "id": "5f41e632-41c2-41fe-84be-ab396b00a9d5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d75b1d76-e468-4cf4-89aa-f5e4bdfbbb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdccb114-b35f-424d-acb8-1dd18af2d3f6",
        "cursor": {
          "ref": "5c3cbefa-0960-4c7a-a09e-f1ce4514c1f9",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ca6160b8-135b-4d58-a548-7a888bec5192"
        },
        "item": {
          "id": "fdccb114-b35f-424d-acb8-1dd18af2d3f6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6d19962a-dfef-4a76-8251-1d35d0cfcc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f834636-f726-488d-b000-317443a63b1c",
        "cursor": {
          "ref": "a12a14bc-81da-4610-8e8f-489550029b32",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "328fb1bc-ba85-4383-93d6-12b51d6364a5"
        },
        "item": {
          "id": "4f834636-f726-488d-b000-317443a63b1c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "dfe7a8d5-9df2-4287-b3d4-e7939776b9d3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "ff8019bc-63e5-4e86-840c-d359c87cfdf7",
        "cursor": {
          "ref": "52704132-1e43-4aa2-bb58-906dfc7aaa4e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1754fe1c-42e2-4930-a914-7256a3052224"
        },
        "item": {
          "id": "ff8019bc-63e5-4e86-840c-d359c87cfdf7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "76b86cae-0946-4849-9c5d-19e08799579e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 29,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "b466e549-fe9b-4941-a26f-f7e4dd5844bb",
        "cursor": {
          "ref": "64fd7e3f-76ba-4174-8005-e382c9a21b24",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d11e1aad-e695-4fad-a26f-2b3ed3490413"
        },
        "item": {
          "id": "b466e549-fe9b-4941-a26f-f7e4dd5844bb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f22fe7ea-9323-4ba1-ac30-ee82f20e8b54",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "be8fa563-26c4-49f6-8f3d-ac5d40c566af",
        "cursor": {
          "ref": "b4f1ae0c-ea0b-420b-82be-bcd3e2bbcd73",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3d3e0ac1-c205-4727-8d9b-df68d9147c05"
        },
        "item": {
          "id": "be8fa563-26c4-49f6-8f3d-ac5d40c566af",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "bf66c7c8-9c5f-405b-91a2-227d3b888d8c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "92d56f40-54c9-4d56-b257-8f84ec252473",
        "cursor": {
          "ref": "049cc08f-fad7-43f6-ad4e-e53f5262978c",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "165a8a4f-34ba-454c-8873-72d72a23d0e7"
        },
        "item": {
          "id": "92d56f40-54c9-4d56-b257-8f84ec252473",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "627bc688-9a21-48fc-9ab6-3064ba321c63",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "db9331ad-ce9d-43bc-8eaa-7356e56a9d23",
        "cursor": {
          "ref": "4cdb73ee-55fa-4c69-9888-ce29ff683b53",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7e1ac702-6c4b-43a6-8a5a-44b549f075b0"
        },
        "item": {
          "id": "db9331ad-ce9d-43bc-8eaa-7356e56a9d23",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "5e3db483-a417-4346-ab50-37630946e369",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 28,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "1608c663-17ab-48de-bed5-17fe278c445c",
        "cursor": {
          "ref": "32d0fbf6-9f78-43fe-b325-4491cccb367b",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "27b92305-2f8c-4662-a989-c0b8142b4d60"
        },
        "item": {
          "id": "1608c663-17ab-48de-bed5-17fe278c445c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e87cce16-969f-4e4f-be3f-8158d9046e63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17203d72-cd16-4363-a06c-2c49e32b29b8",
        "cursor": {
          "ref": "ad8c493c-61d1-4c3a-9716-1ba1fd111546",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "295f2e25-c604-477b-9b24-d0c1a57b0808"
        },
        "item": {
          "id": "17203d72-cd16-4363-a06c-2c49e32b29b8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f4a2eabe-fad1-44ba-8e92-0c8c2563987a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abcadcc-e52f-4168-91f8-b5168fe1b61e",
        "cursor": {
          "ref": "4aa602a7-8eb1-4259-8a33-e8234ce9bc87",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2a41fec8-2b4c-4666-8f18-1de90eaf9f5e"
        },
        "item": {
          "id": "9abcadcc-e52f-4168-91f8-b5168fe1b61e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "72857a18-93a8-4022-9cac-0d5e375286ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35486f3d-c422-403a-a8bd-3d66ca845b2a",
        "cursor": {
          "ref": "c81f39f3-e966-4ebb-91e9-5c37f6a49a31",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1172e2e1-bc91-4a13-8def-97c04f641538"
        },
        "item": {
          "id": "35486f3d-c422-403a-a8bd-3d66ca845b2a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b11cb956-efde-46dd-aeda-71d6c64e4ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196a23f8-4be2-4216-ae1e-fce3b48d2be8",
        "cursor": {
          "ref": "5f850280-0d88-4ee2-80f7-1338a72575bb",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d60aa2bb-e2c4-4dc7-a5cc-50ef251d5243"
        },
        "item": {
          "id": "196a23f8-4be2-4216-ae1e-fce3b48d2be8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4984ac4a-a795-4e61-9d14-b9761c713cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cfa0a75-96e8-4ed5-980e-068ce096c091",
        "cursor": {
          "ref": "281c54dd-b5ea-484a-bce1-b1dce51da60b",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ff0d8240-8e1d-4bea-bec3-30fc34b1f334"
        },
        "item": {
          "id": "6cfa0a75-96e8-4ed5-980e-068ce096c091",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d6f662df-727f-45da-87ff-04272e511708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d091ea5-38fb-408d-9467-62c93b1e5dc7",
        "cursor": {
          "ref": "549cac0f-4a2c-4d47-bc07-ca05103794a7",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4d6b3bb4-9a81-4c61-b6b0-c20705080531"
        },
        "item": {
          "id": "1d091ea5-38fb-408d-9467-62c93b1e5dc7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2fea9f5f-b11e-4a4f-a9ee-2e9c9279e038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e552d2c-b86e-4663-bba0-29f2b75a7773",
        "cursor": {
          "ref": "49bfd12c-c03d-4ee4-9e20-af3e266b1adc",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "eca8839a-d55b-4eca-a4b8-63f5652ff846"
        },
        "item": {
          "id": "7e552d2c-b86e-4663-bba0-29f2b75a7773",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f4df8b21-9458-41cc-94db-f693d0bcb945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfce2f4-f3e4-4a6a-ad17-7d53e32e0416",
        "cursor": {
          "ref": "981b5739-ee09-47a1-9f82-ce100776c31f",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7bf13840-56ac-4c8e-8d27-20abb61fb56d"
        },
        "item": {
          "id": "1bfce2f4-f3e4-4a6a-ad17-7d53e32e0416",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0ddfc65c-63aa-4fb9-bb22-1d9929a96c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f97886-5cc2-4780-8c11-b3dbb6bdec34",
        "cursor": {
          "ref": "c9fb3993-9e44-4e23-96e0-17b9a3ec5fd2",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ab098ceb-bbd2-4d1c-a522-afced2440888"
        },
        "item": {
          "id": "98f97886-5cc2-4780-8c11-b3dbb6bdec34",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8f84c045-7247-4d2e-9da0-9b6d47b222f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b5f68f-04d3-4b83-816b-3050221ecccc",
        "cursor": {
          "ref": "afe18146-99ee-4e91-8ec2-0084fb125b3d",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "57ea76c9-20f9-4a6f-9f5d-f2661ef0efab"
        },
        "item": {
          "id": "87b5f68f-04d3-4b83-816b-3050221ecccc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8bf04ad0-e00e-4067-bc1b-40cf85a633bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6357be-4b8c-4d74-b67d-358df9177efa",
        "cursor": {
          "ref": "70f0849c-4a07-4f67-aa21-f212aeb78f46",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e006b9c5-4f67-4745-bf31-5cd11f601ab0"
        },
        "item": {
          "id": "7f6357be-4b8c-4d74-b67d-358df9177efa",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c0014d88-fcc6-415a-9055-dd6d42615383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcedc13-5e50-4a08-9746-3de5f2d15f02",
        "cursor": {
          "ref": "4aff60d5-bdce-413f-9b05-3ccd0c8dd96a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c95afb82-426a-4f17-96d2-376e72331d2f"
        },
        "item": {
          "id": "bdcedc13-5e50-4a08-9746-3de5f2d15f02",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8efc3509-1be2-4f66-a72f-850b82f8faef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939ef3c5-788c-4f52-a689-ae490b1465c5",
        "cursor": {
          "ref": "562d2de3-b3f9-4ee6-8822-d071cf4ac299",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "688ca52e-fb08-4484-949d-2ef5bafe48c9"
        },
        "item": {
          "id": "939ef3c5-788c-4f52-a689-ae490b1465c5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "89e9e886-3c36-4c01-afc5-1f67d2a7a859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9145a5bf-6500-45ec-9846-26318483b2ed",
        "cursor": {
          "ref": "f440b94e-3f85-4f79-adc9-9488785dabe7",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "eca7a7c6-fe5e-4929-8b2f-76964e2e470a"
        },
        "item": {
          "id": "9145a5bf-6500-45ec-9846-26318483b2ed",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3057d3d5-e2d7-4f80-b565-a1ec124dcfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63753207-0b3d-4835-8be4-3c46dee15580",
        "cursor": {
          "ref": "466f97f4-e227-4689-8ac4-cbe82f6ff273",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "60090976-7c1a-4443-80f7-d2f0933605f2"
        },
        "item": {
          "id": "63753207-0b3d-4835-8be4-3c46dee15580",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1cf6b649-bc4c-43e1-ac65-dd058d733e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ffcb0c-0da7-47ee-993f-4a3fa0f4f238",
        "cursor": {
          "ref": "16a51960-c950-4e9b-887e-857ceaeec1b6",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "209c499e-95fa-4238-89be-28a0d28e1189"
        },
        "item": {
          "id": "b9ffcb0c-0da7-47ee-993f-4a3fa0f4f238",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "525ea6f4-05f4-4467-8bcd-02615318a254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9c1d52-b54e-40d0-a6b2-9447905ed16d",
        "cursor": {
          "ref": "ac08b33e-69f6-4c1d-a3ba-48c257cc9fbd",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "59bf8e82-6161-4980-a298-9e4dd0383825"
        },
        "item": {
          "id": "0a9c1d52-b54e-40d0-a6b2-9447905ed16d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3c6cdeff-1775-477a-a38f-2501d3a7d287",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "f8384e95-1539-477c-9994-47981dd62403",
        "cursor": {
          "ref": "6f1cbba6-f99d-400e-b786-76c65e9f56dc",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d7ce7544-e6dc-443b-8c67-bd7479eb4476"
        },
        "item": {
          "id": "f8384e95-1539-477c-9994-47981dd62403",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "78bb2376-1f4d-417e-9d25-ffbdcded6b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdacefd-fd89-445d-bff8-1083971288cf",
        "cursor": {
          "ref": "bf200d61-8c23-4483-9de6-62880e562860",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "35cc4792-a3a9-4b06-8d18-d3f0591cfb73"
        },
        "item": {
          "id": "4bdacefd-fd89-445d-bff8-1083971288cf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a86d030a-d303-4b35-92ad-0390d5e7c93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443fcfff-48df-449a-ab42-4831c2ad4f71",
        "cursor": {
          "ref": "8111a587-afdb-473e-9626-75e7ef4f6bdf",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "cc3bc4c7-5faf-4b28-bbcc-740b1d60f008"
        },
        "item": {
          "id": "443fcfff-48df-449a-ab42-4831c2ad4f71",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "aee7fa8a-9c93-4adf-9c74-ce2cf6d22035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4036602c-0f76-4477-b7c8-9d51569694fe",
        "cursor": {
          "ref": "04d14fa3-1a25-4eb2-a67f-1fe6f49c1386",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6504e5b7-c67b-48ba-a8f0-be7b8520d0f1"
        },
        "item": {
          "id": "4036602c-0f76-4477-b7c8-9d51569694fe",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2d288cac-7080-4fd2-ba00-f2627b442928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4222e32-b9d9-48f7-a024-1e3ec674d577",
        "cursor": {
          "ref": "701033f2-0cb9-4181-9244-6fb809c0c4cc",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "32e764ab-d2b0-42dc-874e-afe26a7261fa"
        },
        "item": {
          "id": "a4222e32-b9d9-48f7-a024-1e3ec674d577",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "35cc0da4-a656-4717-858c-026016d24221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a880244-558a-4f2b-bdd0-4ddc6bff45dc",
        "cursor": {
          "ref": "5715adb0-0413-48ec-966b-3f5ae8a2c915",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "21dd76cc-5915-4ea1-99b2-ed58aaf91d64"
        },
        "item": {
          "id": "6a880244-558a-4f2b-bdd0-4ddc6bff45dc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ba417769-70a2-4ea1-9546-7680a2ff4a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19fe9e7-33e8-4044-a0ae-378fab25dea9",
        "cursor": {
          "ref": "c151cd68-7302-4c61-ba46-3eefa3482b8a",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "055e0490-3fe0-4241-a054-d81a9190a909"
        },
        "item": {
          "id": "e19fe9e7-33e8-4044-a0ae-378fab25dea9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7070ba44-be08-4002-ab70-47fd31662a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd79634-e7fa-4236-800a-610a802c13a2",
        "cursor": {
          "ref": "4e86c768-d4d0-4897-8169-cd87853c831c",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8d561c19-a69a-442f-8863-e6cde6ac1b8e"
        },
        "item": {
          "id": "fdd79634-e7fa-4236-800a-610a802c13a2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "958b3006-ff9e-4131-ba50-cbce42d54141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8366c54-2093-4ad6-b860-99a3d1441614",
        "cursor": {
          "ref": "f38867bc-8d5f-4e1a-9123-02dbb83216f9",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "857bb249-1a10-448b-a2a0-9000e32903e2"
        },
        "item": {
          "id": "c8366c54-2093-4ad6-b860-99a3d1441614",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cf05ae17-8eee-4d43-87d8-4b53a6a0f8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad086ca-7ea0-4ff2-b2a5-a3bcbb98d716",
        "cursor": {
          "ref": "3f590a2b-2654-41e3-ad7f-907e0db54d56",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "b415a849-590e-4b91-b127-e867ee67bcdf"
        },
        "item": {
          "id": "fad086ca-7ea0-4ff2-b2a5-a3bcbb98d716",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c3dc4b6e-c1c3-4fb8-b1b5-2a28798fe6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74119af0-f39b-47f7-99e0-d524d7c7fdbe",
        "cursor": {
          "ref": "0bd8eeef-95a3-44a3-8941-212bf5572790",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "803e70eb-798a-4a29-953c-fe5cdef4352d"
        },
        "item": {
          "id": "74119af0-f39b-47f7-99e0-d524d7c7fdbe",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7eb91893-a077-472b-899f-c08c211e6d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78423239-7ac9-439d-a9d4-528d6cb84523",
        "cursor": {
          "ref": "a95ebd17-b899-401e-8245-64cabcbbd735",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d7b9f423-fab7-4ef1-8182-bfad68b604a0"
        },
        "item": {
          "id": "78423239-7ac9-439d-a9d4-528d6cb84523",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "530b6f7d-21b1-4d18-a6d6-e6297b392ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47439e4-f01b-4591-a75f-6c3fecefe247",
        "cursor": {
          "ref": "3062d237-fca9-4baa-852f-57fb8a879c12",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "685fa5b7-74ed-466d-a7ff-fb79b7b2c243"
        },
        "item": {
          "id": "f47439e4-f01b-4591-a75f-6c3fecefe247",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "83f4a825-1377-4983-9372-162ee7932e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b120fd89-979c-44d1-a2e6-5e77bb5ef7c7",
        "cursor": {
          "ref": "6a239272-8937-4eb9-9e51-c1c473faf20c",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a15af362-15ec-4896-9015-84b3c19b3d51"
        },
        "item": {
          "id": "b120fd89-979c-44d1-a2e6-5e77bb5ef7c7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "dadbf9bf-3d51-4f45-8f78-75b70808ea77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f55012f-ba1d-42d8-9aa5-d8b817f844cc",
        "cursor": {
          "ref": "963c4ebe-f22b-4a0f-97dd-c06bcb752a50",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "582f6064-7799-4134-a85b-06b574f1a023"
        },
        "item": {
          "id": "9f55012f-ba1d-42d8-9aa5-d8b817f844cc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7d476863-b56e-4666-b256-77eed0187ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd1268f6-ae18-46e8-b980-0683749f0314",
        "cursor": {
          "ref": "72993f0c-46fb-48f5-9752-a60ef68f1bb4",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d231c628-554e-4f1c-a961-4e25d32c41e5"
        },
        "item": {
          "id": "dd1268f6-ae18-46e8-b980-0683749f0314",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b2944783-6353-4350-a03f-b0c9a63ee87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2274b421-f5ea-4ab8-9130-367e2ecd9fbc",
        "cursor": {
          "ref": "f5fd3942-7ac3-4fe3-b47c-99055d620a7d",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "992a7b12-ec92-45ab-b4e5-5ae66ee3ae31"
        },
        "item": {
          "id": "2274b421-f5ea-4ab8-9130-367e2ecd9fbc",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b56e10cf-b86b-4aa6-b9a4-7d43154bed82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c191c60e-51a6-4e1b-9025-9391715310ce",
        "cursor": {
          "ref": "a995a58f-0a21-4ab6-b236-c79b037e5b92",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2256af4d-d1df-4d80-b50f-040c92f91a93"
        },
        "item": {
          "id": "c191c60e-51a6-4e1b-9025-9391715310ce",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a8a1d10b-da97-4f56-9321-7102c98ec460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a1c4b9-ef2c-42e4-a857-108bbec15300",
        "cursor": {
          "ref": "20db98d7-79c8-4b44-b3c4-52ed79b0f690",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f27a718b-ce07-4251-919b-f90f8d4f9768"
        },
        "item": {
          "id": "20a1c4b9-ef2c-42e4-a857-108bbec15300",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f2542950-f891-4915-ab31-930e21dd42ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32be2359-842a-4344-8575-2bb4151cc677",
        "cursor": {
          "ref": "f1cd04eb-b154-4e7b-9b0c-dd297a5cc868",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "19b40979-7c1d-4cc3-8030-0aee9cec2afe"
        },
        "item": {
          "id": "32be2359-842a-4344-8575-2bb4151cc677",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "59f6d53a-5aa9-48b5-98d8-b12251768733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b40838-c412-46c7-8f77-5ea8c23cf504",
        "cursor": {
          "ref": "16d07ac9-970c-4294-a2be-113319b499b1",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d83be8cd-181a-4680-84fb-9090ffffefa1"
        },
        "item": {
          "id": "f8b40838-c412-46c7-8f77-5ea8c23cf504",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "274dcbc7-c08d-4ea1-81d3-ef3e44f7bc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcfaa38-9035-4bcc-8f8a-e8284c5358bd",
        "cursor": {
          "ref": "eef86ee9-3c23-425e-ae28-daa216ca1b20",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6de9401b-dfc0-4b99-9f06-bf2fed5a5ea1"
        },
        "item": {
          "id": "2fcfaa38-9035-4bcc-8f8a-e8284c5358bd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "50f51fff-98cf-48e7-aaa7-fa858438f8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee6c5d9-bd3b-4d64-83f0-ba041868c713",
        "cursor": {
          "ref": "586b8bac-cfe7-4580-923f-7ba9ddba8a37",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "35e78b05-c117-432a-9b86-e5cc9c6530c3"
        },
        "item": {
          "id": "bee6c5d9-bd3b-4d64-83f0-ba041868c713",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e0cadd58-a5d1-4413-865b-7e6619bfee4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb12082f-b53f-40da-8453-862af0f0a0a5",
        "cursor": {
          "ref": "43596364-07cf-4787-88c4-6e20b84ec4f7",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6286f554-a433-43c7-a8d0-f88ec9a2084c"
        },
        "item": {
          "id": "eb12082f-b53f-40da-8453-862af0f0a0a5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6475ace9-9c92-4faf-907a-9f913d159f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a745b3f-c4cc-4cdf-af37-7dac7f405d3d",
        "cursor": {
          "ref": "6c138914-a794-4126-8d7c-b77937689f46",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "695a5b24-06f5-4206-b4dd-091c074c980a"
        },
        "item": {
          "id": "6a745b3f-c4cc-4cdf-af37-7dac7f405d3d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6cde5161-9637-42c6-9d1a-12a3a920a577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a832d1c-fc19-45e0-bc4b-a594142457dc",
        "cursor": {
          "ref": "499fce56-ea43-4f3d-9a02-8d503cd78f67",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7b23efd3-d9f9-4b78-935b-fdeb451b5e65"
        },
        "item": {
          "id": "6a832d1c-fc19-45e0-bc4b-a594142457dc",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2acf993f-634f-4f3e-823d-c7c7162d7823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbcf0d9-0544-4af3-b75c-7477d3ce7f5e",
        "cursor": {
          "ref": "54540fbd-c604-4dee-86dc-054360e1a4f9",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7433277d-ec60-4215-8964-0d64c370b8a5"
        },
        "item": {
          "id": "8cbcf0d9-0544-4af3-b75c-7477d3ce7f5e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "aedb2702-4d2f-49fe-8794-2456068c852d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ee7cd2-ec0f-487a-9f9c-8e253ca41dbb",
        "cursor": {
          "ref": "2a761352-0f3a-4b63-8e29-1b0b574bf20d",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ab28c9fa-c6e0-4bae-afae-ab31451d674c"
        },
        "item": {
          "id": "29ee7cd2-ec0f-487a-9f9c-8e253ca41dbb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "55e99418-75e2-4555-a9e0-c8cd70c7af09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54b27f1-2aae-457c-966a-a129367c735e",
        "cursor": {
          "ref": "4696e1ad-6e37-4e4a-9363-b1be7b4a4087",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5377c515-1994-4332-9c67-54006b072551"
        },
        "item": {
          "id": "a54b27f1-2aae-457c-966a-a129367c735e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c50ba08e-a4dd-405b-bf56-17e7fb3c3b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ca6a96-a863-420d-97f4-8b6efc725738",
        "cursor": {
          "ref": "457f2b58-03c3-4bb7-b42f-0b7a413b9e18",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d81001e6-56ea-4fa2-96fe-3917abc3ea19"
        },
        "item": {
          "id": "54ca6a96-a863-420d-97f4-8b6efc725738",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "89055b3d-994c-4c6a-9ac1-1936dbd89075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66894a2a-3fc9-455c-9f15-cb4ca137fbcf",
        "cursor": {
          "ref": "51585491-ee2e-42c6-8c7c-fd23d2b546b9",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "21b4366a-0563-45c7-9062-5c5b85a0e499"
        },
        "item": {
          "id": "66894a2a-3fc9-455c-9f15-cb4ca137fbcf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "91e59793-494c-4696-b8e9-efd198a859d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b214323-5862-406e-8992-7e8ac4fe7089",
        "cursor": {
          "ref": "df119595-13ca-493f-89d8-5aa2c122a2be",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e1d87f0e-702b-4b7f-9569-72daf7a709dc"
        },
        "item": {
          "id": "2b214323-5862-406e-8992-7e8ac4fe7089",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "bd8c79ed-fa1f-4922-bf10-fb370b19b0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9207e9-cc22-4ae2-b3f5-f5cf5c6f2000",
        "cursor": {
          "ref": "f37ec47a-b53e-4b2d-b9fc-ddfb9debef2d",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "efa40484-2656-4b9d-9b43-cd96c2bdf537"
        },
        "item": {
          "id": "8d9207e9-cc22-4ae2-b3f5-f5cf5c6f2000",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "80ac88fd-bec2-4874-a134-9e21bcc4a226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fd3c2d-ff5a-4fe8-9691-5de581dd288e",
        "cursor": {
          "ref": "0a490a26-2f15-4c50-b22f-d6ba68157f35",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8e32d0ec-05d8-40a2-926c-dd14b667be47"
        },
        "item": {
          "id": "b8fd3c2d-ff5a-4fe8-9691-5de581dd288e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a2f96851-dc8e-468f-b436-fc29f8452bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152017df-9a2f-48ec-9719-959e88b53cfb",
        "cursor": {
          "ref": "f6860597-6f84-4b57-a617-9b4e85cf69da",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "21745a44-7984-49da-a582-e31783cf7ccc"
        },
        "item": {
          "id": "152017df-9a2f-48ec-9719-959e88b53cfb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "0ed07a3b-700f-4f6b-a154-149bd684b7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b309a561-2e60-42f5-beb2-142fa68241fd",
        "cursor": {
          "ref": "2b0667b6-a52b-4f30-a2a6-010655bfce87",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "20136e83-2ad5-415e-ab3b-c11d1e2705e1"
        },
        "item": {
          "id": "b309a561-2e60-42f5-beb2-142fa68241fd",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "defe63cc-b87b-4e6d-807b-68b293ae538e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8747c1c-2a0c-4898-95ff-2f740827c5ef",
        "cursor": {
          "ref": "c54f9f50-4923-47e3-a4f4-b7d53fb596fe",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "efcac2b4-372e-42c4-a7bd-4f732d6a13f8"
        },
        "item": {
          "id": "f8747c1c-2a0c-4898-95ff-2f740827c5ef",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "47ba3e18-ff40-4094-b31d-f82c93551be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01ef35f-3adf-49aa-97c6-d9f4068f5880",
        "cursor": {
          "ref": "2debbcc9-ed1c-444b-a847-ddabd9834045",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "1ed5c75c-7f24-44d4-978a-07108008f02e"
        },
        "item": {
          "id": "c01ef35f-3adf-49aa-97c6-d9f4068f5880",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c2b3bf04-3270-474a-85c9-b6b883e012d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b20479-a5c7-42a8-85e1-2dc2984ac7f0",
        "cursor": {
          "ref": "789821d6-ee24-4a97-a7b1-4ba7d8056124",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "aba4c1fd-8669-4091-910f-ee033e877666"
        },
        "item": {
          "id": "00b20479-a5c7-42a8-85e1-2dc2984ac7f0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4f047231-dd73-4084-a255-c00928cb0344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32273eac-b353-4063-82df-bfaa2dd249c8",
        "cursor": {
          "ref": "135c8959-b53f-422a-ad67-3f923e466f36",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a84a226c-5d7a-4b07-a5ee-3501ee85461e"
        },
        "item": {
          "id": "32273eac-b353-4063-82df-bfaa2dd249c8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "db96837d-4609-4a9c-90c0-3bf9e1093a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a09e85-fed6-4bc4-abe1-6d71f6d473a6",
        "cursor": {
          "ref": "5d82f6ee-9921-489f-8620-2c5aaf443d3f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "05f90132-08ec-4286-8c07-5eb8c36c782f"
        },
        "item": {
          "id": "e8a09e85-fed6-4bc4-abe1-6d71f6d473a6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f251835c-5148-4aeb-912b-fb307bded0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c81f6f0-3cd3-47a3-87c8-af3712f40ce2",
        "cursor": {
          "ref": "2cb6b4fe-c6a8-4dba-b8b4-7eb352f5f3a2",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "780bbda1-7ee0-48a6-81ea-4767943cf3a9"
        },
        "item": {
          "id": "6c81f6f0-3cd3-47a3-87c8-af3712f40ce2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1045fc09-3c35-424e-a6a3-896d3cd0b0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78c6339-31cd-44f4-89e0-6fa43b7ff3ec",
        "cursor": {
          "ref": "31c3e1ef-5adb-43c4-be8c-dce6ae3632c9",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "495101e1-4460-4e66-9aae-1c729f9c8f52"
        },
        "item": {
          "id": "f78c6339-31cd-44f4-89e0-6fa43b7ff3ec",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8696c24e-c834-47ef-a4e9-4e261449f197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c74effb-8132-4a1f-a4ff-40f0eaa5c62e",
        "cursor": {
          "ref": "53274bae-d7b4-4392-9a55-b43c0fff1676",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3ec3da9d-a73d-473e-816f-91a7e7589e9b"
        },
        "item": {
          "id": "2c74effb-8132-4a1f-a4ff-40f0eaa5c62e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "fb0ad3b5-6413-4787-97f3-b46a31a70557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fbaf45-f472-4846-b7e6-64a5bf834427",
        "cursor": {
          "ref": "dc0aff77-b62e-43d7-ad4d-8834e50c8cf8",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8fa32bb9-8f22-4f23-8428-41b7b29fba82"
        },
        "item": {
          "id": "37fbaf45-f472-4846-b7e6-64a5bf834427",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fec13d88-063a-4aaf-85ef-f626424bef5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e5fd18-1d92-4486-a3bd-6895fcba873d",
        "cursor": {
          "ref": "75dc9d1d-1337-4138-8dc3-ce537727ade8",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bce36f92-1eac-4e7d-abd9-f461a1649de2"
        },
        "item": {
          "id": "b0e5fd18-1d92-4486-a3bd-6895fcba873d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "afb9979e-0aef-4f2f-9344-52ad6d042104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ca4aff-2fba-4f32-a842-f5c25cfca568",
        "cursor": {
          "ref": "6a45a32d-9f53-47cf-983a-2108598e1307",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2d01b6dc-daf9-458a-883d-bd7708a7d754"
        },
        "item": {
          "id": "21ca4aff-2fba-4f32-a842-f5c25cfca568",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1b98abc6-d7c9-4aaa-be7f-47d6aa22ed45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d03afb-8af2-4c76-b327-aa172cde66fa",
        "cursor": {
          "ref": "137962ac-0645-456e-af6e-c3dbb9357fb7",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "00a7ac89-e6c9-4446-a1f9-21e7a203b946"
        },
        "item": {
          "id": "99d03afb-8af2-4c76-b327-aa172cde66fa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3af673fd-01d5-4748-a021-d94da2b2f0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81cf62d7-8be1-4e4f-86ca-1e4ed8f49c68",
        "cursor": {
          "ref": "bfb97746-376b-498c-b840-d00bc7f0e179",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "49ad6897-f1a4-40d0-a0a5-58507c69daf5"
        },
        "item": {
          "id": "81cf62d7-8be1-4e4f-86ca-1e4ed8f49c68",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2f8754af-d743-4c7d-b137-3474ee68e4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c72da5-8036-4fa0-bade-196369513fe6",
        "cursor": {
          "ref": "6035a47b-77bd-4bce-80b7-829b8fd5f264",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d37bf19a-350d-4577-b853-69107123267b"
        },
        "item": {
          "id": "f7c72da5-8036-4fa0-bade-196369513fe6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2cb674de-4909-4077-be3d-35bd02c9563b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f550b2c1-710c-44d2-abb0-843e2bf7d458",
        "cursor": {
          "ref": "f56b4bbf-6349-476a-bc9f-1e4f1e9fdd21",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6906cb37-b98f-4fd8-b95c-61ddcdad5fe9"
        },
        "item": {
          "id": "f550b2c1-710c-44d2-abb0-843e2bf7d458",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "19f3b821-7124-4496-be3e-4e2826af12f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63925a1a-6cf6-4b4d-a293-79185c173018",
        "cursor": {
          "ref": "96d990a8-eb3c-417f-aba3-c6c81986afc6",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "be7fbea4-6d1c-4e34-ad01-cc775c01393e"
        },
        "item": {
          "id": "63925a1a-6cf6-4b4d-a293-79185c173018",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d3a83321-645d-4d84-8035-6968a973f43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b98985d6-7b1c-4408-8f3a-fb9407294b79",
        "cursor": {
          "ref": "8f0ecd7d-40b4-4402-9932-8097596a7920",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c87aacad-663e-4644-b086-7d71b046f38f"
        },
        "item": {
          "id": "b98985d6-7b1c-4408-8f3a-fb9407294b79",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bc6070e3-ed78-400f-a06b-98f13dd35e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f87759a-0411-4e84-ab0f-415b5b596bc9",
        "cursor": {
          "ref": "ef9bbe37-8c8e-4517-b641-722219f6351f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "59b9fe32-bea7-426e-9484-c093cc641faa"
        },
        "item": {
          "id": "3f87759a-0411-4e84-ab0f-415b5b596bc9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9610a66d-a7c1-46a5-ae36-310481c101e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b92cc36-7cc1-4455-81e4-b05999141ea6",
        "cursor": {
          "ref": "1da7b251-f52a-40b0-9476-a37f087776b1",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8d362d46-a551-4a4f-9a30-f35a03f66bea"
        },
        "item": {
          "id": "7b92cc36-7cc1-4455-81e4-b05999141ea6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4afe8637-b8e5-427e-9e64-2228c7ad30eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8b7efa-66fe-4fd0-ae4a-1a774a60ada5",
        "cursor": {
          "ref": "f66d8210-0a12-4042-8387-fd580fcc7595",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0f5f67f4-eccf-42c3-bd89-7a7c9d249de2"
        },
        "item": {
          "id": "ca8b7efa-66fe-4fd0-ae4a-1a774a60ada5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "161af691-2480-48e3-bbe3-16ec6298526c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9438f3-dc17-4de8-8a56-a3838183c49e",
        "cursor": {
          "ref": "0bac09cc-29da-4d2c-9eae-4f5ed12d2be1",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8ac493e9-7944-4956-ac5f-4a84994c5e66"
        },
        "item": {
          "id": "fc9438f3-dc17-4de8-8a56-a3838183c49e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "69bd3954-1e55-473d-b7c0-a2afce27f045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8551bff-baf5-414b-811e-066d4f241405",
        "cursor": {
          "ref": "bbf4ad5d-3390-41bc-913b-f260907cbbde",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b61377fd-6c9c-4d5c-9086-6a928ed35f27"
        },
        "item": {
          "id": "a8551bff-baf5-414b-811e-066d4f241405",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9335d5b7-498e-4465-9bc2-21f57896e706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8791eac8-07bb-4eb6-8518-ee08b3d54a65",
        "cursor": {
          "ref": "30fbb4d4-956a-4973-9c0c-a3482db6334a",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fb7fcafa-ea56-4ba2-95ad-4004ab4ed175"
        },
        "item": {
          "id": "8791eac8-07bb-4eb6-8518-ee08b3d54a65",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3a4ce599-26a1-4a91-bcd8-ebca3ce9d687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19657911-bcfb-4f7b-9fbe-fbb9ef61ca7f",
        "cursor": {
          "ref": "52e29960-a73e-4f40-8712-a48d85ed1527",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d53d246f-0ddf-41fa-93e5-4fcf7150c43f"
        },
        "item": {
          "id": "19657911-bcfb-4f7b-9fbe-fbb9ef61ca7f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e723517a-1f84-4d66-b101-b475815a0fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e03ad1f-d7fe-4527-a3e2-5e35300db352",
        "cursor": {
          "ref": "448de5cc-f50a-4ea3-b05c-af893b5c28c4",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4efcc179-bde9-4b43-80c4-c888cca97bc4"
        },
        "item": {
          "id": "0e03ad1f-d7fe-4527-a3e2-5e35300db352",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0494e998-a898-4247-b61f-4efb268fd3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd229a5-db3b-4894-b713-fd972743772c",
        "cursor": {
          "ref": "48d859f3-c226-4f62-b2d9-d5cc4d70c121",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ba9c5758-f4ce-45a8-94a5-b696775573a4"
        },
        "item": {
          "id": "4dd229a5-db3b-4894-b713-fd972743772c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f3778319-7f96-42cb-ab0e-87e15c22ab35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27039a65-d931-4d2f-a00f-060ecae73702",
        "cursor": {
          "ref": "8f7ac88c-4e24-4e66-bf0f-2b7f5e3a35f9",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "c4908cdf-48da-4502-89f5-86b562971237"
        },
        "item": {
          "id": "27039a65-d931-4d2f-a00f-060ecae73702",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d3f6bedf-48f4-4149-b890-2b7c2165d950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bd2bda4-f2f9-4074-9111-ea25ac7f2d6d",
        "cursor": {
          "ref": "59f51e6c-e1a4-4f3c-b8ba-50b0e3f82cb7",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "035c667d-3b66-4d15-a09e-f9b640eb73fb"
        },
        "item": {
          "id": "2bd2bda4-f2f9-4074-9111-ea25ac7f2d6d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0609fb6a-07c4-4bfa-bb8e-890bb38fbfab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3518d422-3a95-47e7-8252-7ccd0faff05c",
        "cursor": {
          "ref": "5d94e874-99eb-4f76-b61f-70e19a8cc299",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "42ddadda-932e-43cd-ad79-6d52b0554439"
        },
        "item": {
          "id": "3518d422-3a95-47e7-8252-7ccd0faff05c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "574e55dc-0392-43ee-9a44-1d166f49ce2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e842aab7-9d8e-4b7b-848c-3afb435e5bae",
        "cursor": {
          "ref": "45fa7d2b-8836-4c81-9988-f760fa579d16",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ca5c4c2f-fa82-4fd0-adf3-8d6397e91099"
        },
        "item": {
          "id": "e842aab7-9d8e-4b7b-848c-3afb435e5bae",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0352e04b-3fd4-48df-91a4-f9416b41b595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8fff46-3878-4d53-86a4-fa0b52cb05e5",
        "cursor": {
          "ref": "b7526cfb-7f7b-4c72-a695-78a5a5af9433",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b15690ea-7f44-4560-80b0-c188a4aa4a83"
        },
        "item": {
          "id": "4e8fff46-3878-4d53-86a4-fa0b52cb05e5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c7ff6821-b8e2-4db9-bcb9-6c2a7b99d2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0058c4-f1e7-41db-9113-f78cb1dec968",
        "cursor": {
          "ref": "462bcbec-181d-4b5c-b014-078d81d9e76c",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e6bbe1cd-54a7-40bd-be0a-2d9f0599e8f2"
        },
        "item": {
          "id": "dc0058c4-f1e7-41db-9113-f78cb1dec968",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d57e4493-ebf5-4791-9aa4-3d085e5b588e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2aa517f-1e60-45a2-a041-6f9b2c3bf9b9",
        "cursor": {
          "ref": "b0c12070-6882-49a7-94dd-4a7971c755af",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "88ff316e-2b17-4850-b169-6bd0d6f215f4"
        },
        "item": {
          "id": "e2aa517f-1e60-45a2-a041-6f9b2c3bf9b9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3eaff067-3a84-449f-85eb-bfc2331de107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655c1318-a0cc-4a04-b1c3-6cdb56347ff5",
        "cursor": {
          "ref": "d0adbae4-5363-4664-9030-070243c4d408",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1f444293-5cb9-41ad-8a99-44ad5dfa9a5e"
        },
        "item": {
          "id": "655c1318-a0cc-4a04-b1c3-6cdb56347ff5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e6fadbb2-ee1a-4227-9b04-df8ef3df784d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1ff21f-eece-4c59-9583-f6154f91e79d",
        "cursor": {
          "ref": "0915f5af-7db6-4fca-b40a-092f0496bdfe",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fee6e0c9-88cb-483f-9e85-94dd621bb87e"
        },
        "item": {
          "id": "3e1ff21f-eece-4c59-9583-f6154f91e79d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6601c363-2193-4866-8fa2-5ba5a9fc4b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742f5652-0d8e-464c-82bc-b7669eaa76a9",
        "cursor": {
          "ref": "168b534d-17ef-42be-8b98-6d5f212ed7c7",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cebdb964-d3b2-441d-8534-da301afca7ca"
        },
        "item": {
          "id": "742f5652-0d8e-464c-82bc-b7669eaa76a9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b4ee0078-f67f-4e14-87aa-0dadc49f1de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c3972d-bb5d-49b3-8bd5-a124a173d3d7",
        "cursor": {
          "ref": "60a3d976-6752-4392-9238-fee041c26466",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "1acf23c0-4e5c-48b0-abfe-b3a23118b202"
        },
        "item": {
          "id": "28c3972d-bb5d-49b3-8bd5-a124a173d3d7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "06ca2109-7b64-471f-b5e9-5dfbe6aead42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b80771-dc01-42cc-af3f-1cdc61e39e09",
        "cursor": {
          "ref": "d5720dae-26d3-4902-958f-4243dd5a4f03",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4d482f49-5428-4d75-a54e-fcd8eb803c49"
        },
        "item": {
          "id": "41b80771-dc01-42cc-af3f-1cdc61e39e09",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6af4c985-a7e8-4619-8c10-ffcc88aec900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35901245-c2d3-4f99-bc66-f38a01ec6436",
        "cursor": {
          "ref": "0252ecbf-56cf-47c1-a6a9-d7a0eed904f9",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "83bee67c-947d-47dd-8344-f6eafd9e638d"
        },
        "item": {
          "id": "35901245-c2d3-4f99-bc66-f38a01ec6436",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "183397dd-45a6-4a12-b1eb-791030611106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359802e9-adbb-4a05-8e35-c42bb26640bf",
        "cursor": {
          "ref": "da6b28b8-bc78-44e7-9339-74fe16b34304",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b80dc0b1-333d-4fd1-8114-af604319b5c6"
        },
        "item": {
          "id": "359802e9-adbb-4a05-8e35-c42bb26640bf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5b32d872-e9c0-489a-8c36-e49818531734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9109c71f-87f0-45d1-a5e5-7e08254283a3",
        "cursor": {
          "ref": "32faad0c-e0e0-4ed9-a716-ab8d47a647fe",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "989d1711-f611-444e-a6e3-df493972275c"
        },
        "item": {
          "id": "9109c71f-87f0-45d1-a5e5-7e08254283a3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ce8af737-af23-4b5b-90d6-dff01f4254e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ec3ed7-2eec-4766-bfb0-e90da207e088",
        "cursor": {
          "ref": "b9260bcc-6695-44f0-ae40-4482ef46c554",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e328d619-a37c-4bda-b5e3-7146d9c9dcb3"
        },
        "item": {
          "id": "46ec3ed7-2eec-4766-bfb0-e90da207e088",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "328a777d-f726-4fc6-95f1-aa625a7800af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81517e18-09e7-4e55-8e5f-1c045c57b11a",
        "cursor": {
          "ref": "93b24d2a-1e9e-4169-b815-a3d19e69560a",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "88d0becd-6fe7-488d-b060-a9bbf6475cca"
        },
        "item": {
          "id": "81517e18-09e7-4e55-8e5f-1c045c57b11a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "69a4ca94-ebc1-4a72-89e1-5aeaa4ec1d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3475c4bd-4236-4e23-b9b5-b83fad3d9fe4",
        "cursor": {
          "ref": "0813e124-2f3e-4867-a3be-c1876620a7f2",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0a967334-ebcd-4e17-a8ed-0c6fac1264f4"
        },
        "item": {
          "id": "3475c4bd-4236-4e23-b9b5-b83fad3d9fe4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8ea813fa-1119-472d-8b2d-a46fa067576d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d4a112-27b2-41b9-9cfb-a24bd5f1f043",
        "cursor": {
          "ref": "45ed64cd-57a7-4c88-809d-d59cc80315d7",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d515048f-ceab-4b81-be09-38673bd0771e"
        },
        "item": {
          "id": "19d4a112-27b2-41b9-9cfb-a24bd5f1f043",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1490cf34-8fd8-477f-a970-017327e0620c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 18,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324929f5-9609-431e-a895-331771a6aa61",
        "cursor": {
          "ref": "68b33919-507a-41bd-818a-30b3081f7519",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6c4b8862-dd21-4478-9cfb-3173212ba3d3"
        },
        "item": {
          "id": "324929f5-9609-431e-a895-331771a6aa61",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8bbb7274-e7b3-4e1a-b74c-1424d0cd54b2",
          "status": "OK",
          "code": 200,
          "responseTime": 157,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf23784-6ece-4cdb-b120-bfc0dcc27836",
        "cursor": {
          "ref": "b811c317-2085-47e1-b2a8-247662e4f6ec",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "afdd77e5-3fbe-43f0-be3c-8823022235fd"
        },
        "item": {
          "id": "bdf23784-6ece-4cdb-b120-bfc0dcc27836",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0a31bef9-ea48-4d45-b330-cd7dff4c900a",
          "status": "OK",
          "code": 200,
          "responseTime": 2644,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "03138281-0150-4447-a781-8717ffa03d66",
        "cursor": {
          "ref": "09536aff-d929-478c-a3ae-af6dcec4fd07",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b5869fba-a2e8-41d8-ad34-93a5c54f5076"
        },
        "item": {
          "id": "03138281-0150-4447-a781-8717ffa03d66",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3379196d-80a6-415b-bf63-95e97cee89e7",
          "status": "OK",
          "code": 200,
          "responseTime": 3283,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68fecf8-745a-40a4-b6aa-7fa25b28d722",
        "cursor": {
          "ref": "692e1577-9a5c-4038-9f16-1920390e5cd2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e55e5418-8787-46a2-8f65-82091ae71f8a"
        },
        "item": {
          "id": "d68fecf8-745a-40a4-b6aa-7fa25b28d722",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c6d0011f-e03a-40bf-88f6-be2529e3bb71",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68fecf8-745a-40a4-b6aa-7fa25b28d722",
        "cursor": {
          "ref": "692e1577-9a5c-4038-9f16-1920390e5cd2",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e55e5418-8787-46a2-8f65-82091ae71f8a"
        },
        "item": {
          "id": "d68fecf8-745a-40a4-b6aa-7fa25b28d722",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c6d0011f-e03a-40bf-88f6-be2529e3bb71",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade28712-2557-48b0-a53a-6b75b78efbe4",
        "cursor": {
          "ref": "01372b62-33c1-4d94-ad27-6d6a016b9ba3",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "80a7402b-c359-46f3-b08a-8cecc5e5c3cc"
        },
        "item": {
          "id": "ade28712-2557-48b0-a53a-6b75b78efbe4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "452e3a19-afed-4ec9-9692-379358b8283d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9644a27-775b-485e-95e6-9232610d669f",
        "cursor": {
          "ref": "a3447d22-35dd-40f2-a031-c386f756c9f2",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a4934204-3cbc-49a2-8806-15582f5d289f"
        },
        "item": {
          "id": "a9644a27-775b-485e-95e6-9232610d669f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0fa114e6-3259-49af-afe1-9bfc29604bd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}