{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e2434048-53f4-447c-a218-cfafdc983ae1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3870e762-8a8c-4154-80d7-51897306eb4e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fd7c8b98-e01c-4b8a-bb77-499c7b2c6321",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "41e1e26d-6bd4-479f-ac1f-d50039678ec0"
                }
              }
            ]
          },
          {
            "id": "5aba86eb-6d06-4345-80c0-1065b4345de3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4eba1ada-eec4-4a2d-8ed3-9f21d5614d73",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e5eab042-8387-4843-bd53-11d29b4e80c9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "45e59257-aa42-4d04-894d-384b7dc9d474",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fb2eca6e-457b-4eff-aa18-91681ebd656d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3d0993dc-41b8-40d3-b04c-b78f7c18d363",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0633758b-9366-4749-a283-b7eec595980f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e03e1fd9-a7f9-442b-bd1b-81e492a30d1b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "61379a55-bfad-4aa3-b290-e9ba168a9e03",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "549a1495-1276-407a-9d20-3fde5601ff31"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f7e0d169-bc2f-4336-8fa3-81ab47d99071",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "229c9c8a-ebe2-47b6-b901-25c6a22b8415"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba3733a2-4618-46c0-a2ca-6b50a527e9ae",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8ccea023-d39e-461c-869a-45e59a4f0020"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55d10d19-44e9-4ee5-b7f6-d4f13ef53651",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5734f47b-87b3-402a-9415-b072dd72984a"
            }
          }
        ]
      },
      {
        "id": "c8bb41b3-96d7-4947-b0ba-3d6e62376ac9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "157eb9b5-04c7-43df-b670-a403ffbc8af7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "66345466-4d41-4fce-80e9-d0b62d56baf5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8e54b958-b7ab-44a5-a4c0-4dbb346af80c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb47a49a-b5e3-4d13-8824-de52fb4c9875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58ea1b30-379d-4924-af89-ba25beaaf00f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37abcec1-6def-4a1f-b7c1-55366da583bf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac60e737-2b90-4f2a-88c3-01cae38ee1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77be9c1e-4dab-4ec6-a2ad-609f4d4ea175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c8c581-b04f-4bea-b243-beaac5db53a9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d66ebef-c477-42ae-803a-d031c5269970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "34c6d408-aa44-4678-8e33-7105bd77c03e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0ae2f1d9-1a54-4a84-8e8c-cde3bf83b6b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e69a235-6049-4e00-b80a-aec24c216bcd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bcbd22-e37a-4bee-8d69-fb9c9b1d7634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32a4f281-ff74-4cf1-ad24-16491e57a272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079cbbda-2e3c-4c66-a5bf-25f4a277967c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339b4ab7-5d4a-4ef5-baaf-38c57919a02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77689e78-e3f8-414c-b0ca-64390e0688fb",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9021757d-2d2a-4e2a-8cab-db7aebd61e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae772ab8-9534-41cf-abbe-aca64742d6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d89439-85d8-41d4-8b7d-228b71a32824",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "05d62516-341c-4f5c-a962-117abf89c89d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "08336539-3ba2-4225-8d0f-ccd518072845",
            "name": "Positive Testing",
            "item": [
              {
                "id": "19509df5-a5af-4456-8278-ece657681a6f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f6f08327-e0d9-435c-b5d0-c442f03ee811",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "86af14af-26e3-4171-a87d-b8f571ece571"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b61f681-34b7-411e-8ba9-c32a9d624220",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "e518ea75-b6af-49ee-a60e-05b6141c216d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49d52a3a-1948-4317-a6fa-039eaa049032",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b9e7378-2381-4659-b8d8-33ef1fef479c"
            }
          }
        ]
      },
      {
        "id": "573156f5-04c9-4c5d-a31f-0442fe39fca2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "57b070f5-a5cc-4ce1-8b5f-f6f79e43fe91",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78e57767-5f41-442e-8864-ac772d946d84",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cd9a252f-c289-44af-bb1c-2daa5e95b047",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc43d2df-72e5-4966-bc36-ef8947abc52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef8c20af-5052-4796-8f57-ff773b0042f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763dd90e-6794-4261-919a-1740b2ff2d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9efa509b-3c5e-46a1-a528-6a12b58dbbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3b5009-e384-465b-ab38-6b646e214a53",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2015e38c-0c1a-40a9-98b5-fd31b0b9ac9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c3da3b-bf1c-4c37-8fa4-12b52eda43ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2891e1b3-da4f-413b-bbea-d649cc021726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f6b2f48-70ca-4d7a-960c-6ed455c6fd72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "375ed0e0-d7ad-4254-9e12-385402ac5059",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513981dd-6820-4144-9d67-e28b91ca2c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e70de8-1951-409c-b61c-e63a2755fe2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec67cfc1-e866-4345-9bb5-456bf9d42c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e44d147-b619-4a64-a272-0e7226e1ba8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb856131-b7f6-45c8-bd12-739f9442296d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140f7194-114e-4dfc-ad87-3221724e8695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6f3dd7-07d4-47ba-8839-aa9fadaa1229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f3c2f9-d4f2-4ddd-8ce8-e4d638cb2e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c997d41-0f6a-4ad9-9cf2-87d0dc0dfcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554f87c4-7b6a-47eb-acce-a2a36e2ee464",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5cf426-9aef-4614-b277-6809feb51263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c53079b-0c21-4524-ae45-6375010a3c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc74626b-8358-42b3-8456-44cd858bd82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3105b78f-890a-491b-aea8-639771346609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae64b98-1d4f-4088-a13e-304b840c72b4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013d00d1-fb37-4b39-b8e8-62ab2c95cce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ad03a1-7411-40d5-9619-214bc791a962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0d269e-b427-4eac-a5cf-0c2319852fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72f118df-78c2-48fc-a53a-e88fb711e981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93eee21f-050d-446a-9512-ea479f103761",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51f9124-10f3-4172-b3b5-c03732ab9155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf95172b-6caf-454a-aa1a-e1f4fa1d78b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5216b100-9ef4-4f4c-89a4-9a480077fd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf6d6cc9-b986-4f24-aee9-179343f9d954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a4c1fe-8598-47a7-b0ef-cba204c1d9ba",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390c6ad3-7ae1-46dd-8dcb-9e943378a997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30ff3abf-bfd6-47b7-90e9-9b4d5ce4ad75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b3ed28-ce89-4996-b3bc-2ac8ed132905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78441d20-f91e-46f8-a850-8c1cae1ff35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb33eb2-039c-49ad-90c9-eb65751c15f1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b41eb9-59a2-45a0-987a-551ca46485ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b10fa979-6312-496c-acdb-aa3ae75ca8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00612ed-cf1a-4288-9d25-758c4a1ed29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d5702b2-1c8a-481c-9b86-a5d5b559037e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f326b3c1-5da0-4b04-8faf-803250d61ff1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240b082f-a539-466a-b9d4-9fdeb3ed6de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cc87d2-9f68-4acb-9d4a-73979a04e3ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d18746-0fa6-4b24-803b-5cc00e6e9b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb5038fc-686c-4344-8be3-5b0e10397d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f03e01c-2f13-4b9a-8cbc-27628de39e5f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c40e96-4b0c-41f1-bbb5-e1b1a4a44185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264756d2-ea71-4e81-b186-cefbfa9c98ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec669d1-0a13-40ca-a594-e8d732cc10a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27fafd91-1331-43db-ad4d-393c3f79103e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf952b8c-0c8a-45d9-88bd-7f5bc159d12b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9744995f-cd65-474d-896d-5d0638bbae4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dd85c9c-6eab-45c5-80a2-38493d3caf6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d905aa77-ec40-48c1-82d6-1f1848b330b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddc82a00-8d94-4fa3-9a55-f450bcb6afd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fac67f-4bba-4306-a3c7-f86234cb2593",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541dd15e-a859-4e8a-9a71-1073034a3d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d304aed-1810-454d-b506-558479732ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1238b0e-549e-4fdb-8869-71e59b9d3166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c1e72ee-f86f-4d26-befe-aa98fdd78852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ee1298-391b-4952-8824-a21b478a0ad3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9274d2-0b6b-4fe6-92f6-1a7f90dc428f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed34be7-356b-4a37-9ca8-65d32a845e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792928cc-bc47-4977-bc65-a39692b5d983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "daa616d5-6d4c-4a4e-9e11-dd139302af0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade450c8-4032-4ea7-a756-3b3e62ecfeb6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc8dd80-6efb-4bf9-be52-fef58acb2fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b839eb-022f-4406-b744-633fee168cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849dcfb9-c7fd-433b-8fd0-c73c43a524ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78430f00-864e-4513-be5f-5ce540c31bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc6865a-22f4-4320-861d-3f0e53aa6c2c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5f3f38-6411-493c-80e6-0fa75fdf6326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "064c6afb-5bcf-4a1d-a2b7-791189016aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18ad4fc-cb36-4921-b0a3-a12f8165df92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c90565c-aac6-4099-9ce7-2646c34bea73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e341762-abad-4167-9790-a8a75a8ea3c1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5badac27-4051-4ec4-b10a-d8b478b4f321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688426ee-25e4-4d85-b746-058c6d799eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d1d5f2-07c9-4869-bb38-c84cf67f2b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b069afd3-b0df-4928-9108-d32166141434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55edb73-7dec-46a7-b5c0-bf004caf52a7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2f13b4-e5d1-4a2e-9c43-1a711e4108c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee0dcf8-606a-4485-966b-ae164df88079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3dce2f-b039-422d-9867-5819c162745e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ba4208-ce81-49f0-b930-3da09edcdc92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7437129d-72d0-40bf-81b0-427889901908",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b722efec-8230-492d-9ee2-b4b19c6035b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14fae202-9d77-4688-b8cc-f60c5ab14bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe638f9-ff68-4316-9cb0-b6d391096630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a63cf32-d8ed-4b06-86be-dbb130a56796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b7b98f8-43ae-4893-81a4-b2f2ef961f6e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0ad7fb-7a40-4aae-a70d-baefc3af41de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85747a08-3f8c-4bbb-ad34-f1c4f46cefb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62037d40-0b1b-4c22-842e-5c8808984409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "063f89c7-28d1-44ec-8913-59127f3591a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbccdf2-0443-45b5-a540-bf868ed4f4c7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db0b0719-9e49-4062-a748-72450eef7a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71007f82-84e2-44c9-951f-fb69f38a2021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2de659-84a5-4fd7-8892-ed81be8bcf21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a34c53a-03ac-4128-947c-04dcf794251f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017b44b4-0699-4f84-892b-f2ff64aa45db",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc92627-511c-4e87-9667-b77db4753846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f58ed64-6665-4a05-81cd-0a916639d476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f615e857-f062-4c76-a614-ea1795987f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1049ce2e-97c6-4056-a02f-1e87ddeaa72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7a0c7d-405d-4ddb-8c2b-17cc95e68302",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bcabcb-e54b-42e0-8b4f-35e73f80185e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6592b501-fca7-45a2-96d2-0439d2f6d428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b623bb-2491-4d1e-89ee-105380db2a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ec41176-8780-4aab-8ecd-55a25444aa91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b1b3c6-a858-4009-be14-988b43446053",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dec9d45-6402-4d3e-8a60-5fa2f4d94624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128bd3d3-b758-429b-b0e2-677bf8d62316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2eb855-ef2d-42be-9ab1-5538ff227576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "27f14b43-ff34-4372-8132-0514c6539748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948752c0-32d6-41ab-ba2c-a9b8d569cf88",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ecc0b5-fb40-4495-8a9a-758c8ddb7568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87942760-ab0c-47be-bf77-a11a91f2dc39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402f7b6b-f401-4dc2-8bee-f91042ff0126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c829f66-3248-4bfa-8b44-e0d368d29859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcaf96c8-cae6-46e4-ad41-59ef172e96c7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3d3c79-ccef-4590-b4c1-177736445c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74571de2-7183-4652-a828-e79a562e03e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece3d5ca-6f0b-4824-bc04-523894eee2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "50f630ef-93cb-4c6b-9a02-6d2ae1a9bdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95a1e7b-4dbb-43a4-865b-21a766cad004",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e5a95f-c59d-4dfd-ad02-b5a6ef6023d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bebd6a7a-12f8-4f7b-8e73-8cfe9052c629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e64c18-8c3e-459f-af59-334348a94b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "787cac5b-29b3-41b0-9d55-8a1d9d2f02ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfc269a-e277-48ca-a7a6-0ab88af8202f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1913706-38fe-430d-8d3d-fb522d638b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9a6c84-0bf0-4943-b607-7b6e94b919ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbecaa3-9f2d-409f-88b2-9635ef43cb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "692887b7-089c-4a7f-af4f-92b9436470fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f98e4b-6a40-4217-ab83-9ce8475ff61d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941af902-399c-4bb4-bc5a-7d4d816e556b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf4a83d-5ea5-4223-8a8d-3561de67547d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e917ec82-2020-4322-bc8e-aac2af799779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "13f0bfb4-a873-408f-82a1-280d7a56b19c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c425d728-c4b4-4495-9240-ca24f92b813c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa5ef1f-43b6-4ade-9b7b-9b2783566588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649e4fd6-7a95-423d-81e2-ceb695a43615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50005c38-4cc7-411c-86b3-00447a9fcf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0204cefa-f444-40a3-a45e-d6a88db668e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "951c7d4a-4c5a-4ee1-ac15-6a009284a4c8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8990cfe9-d806-4653-b579-f3298deb9a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c40de8-c660-4e20-ae13-25e6867b5ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7547e8b0-2acd-4b12-8b6d-527c43b0bf13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "51b52cd4-aa44-4367-a295-7fb1cfb54f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48bd6bdd-5822-4a1b-baf0-842a89b4519d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee56cbd-3263-4770-85e4-70f2bad5a5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64daf0ab-db0a-4b4d-a31a-8bd72d3ec200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f5d96c-2988-40fc-b1b1-1c5fb326be81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d606a71-7b3c-4b61-b5e1-1a33d289b05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5082eaf-feb2-4aa2-8c37-6cb286a495cc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47c6258-463f-472a-8347-f0d66ac1e5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f15298-cb5e-4060-ace3-9d9b5646fa3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908ec60d-9e43-43e5-97b2-2176b3861e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d38de9d-e312-42ee-bd4a-f2fa0f0b1729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9367236-03a0-4495-a272-f079d98fde46",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648b7d2f-0be9-40f7-870c-ab205648426a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ca8d5fe-6990-47ec-9e2a-3df948b7db91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b51c5d8-ee38-44d2-bee8-870656bd5995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff2ea670-454a-4882-a040-0b352367e80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5aa877-5d08-4797-9ae2-3dbae7d42c5c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf9090f-7074-4883-ad0a-1f970a513e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "024e1e3c-9906-486f-83ff-5896e1a002c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d52f9f1-14bc-42cb-b545-4c1d4cbe584a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "288248bf-c328-4cb8-87d3-45fc74f58ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae16c81f-d21b-4c8c-a284-a4b4d9b3d9bc",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951af317-a60d-48b5-98f0-08f0942322da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b122eb8a-c8ff-4b69-b4f9-d63f500e596d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502c7572-dcbd-4e05-83cc-8f41942fb67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b492a7-6756-4cb8-bd9e-f20793f97bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3363e7-5f21-47a7-b182-4de3553c243a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb54deea-6b19-4f90-93dd-f1969a6a9bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6bb8a2-1f77-4b2e-afdc-a6088f21d576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02d6c80-cc29-4461-a562-a2ae92f2313b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1fe1320-ecd1-48b5-b442-38e34a0fc5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "974e4b91-4880-46cb-b61f-17747f147eb6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca98d640-0952-4d54-a6b9-819c3acbb8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c9f532-69af-4f81-9904-db9de71a584c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c776b08-30fb-4d65-bd07-16974a04253f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec479051-773e-4f47-9f26-5e9db8db04d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b96fe64-16c9-47e1-8095-6c899cd64ea8",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff38f96-d5ac-4cd3-838e-88c47f033055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269e18e1-2a3e-4da9-8700-38e46aeb5f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6489acd0-0157-4cf7-99f7-deead274af4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "255a7001-e601-4582-8c90-c14afbbdf58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c46feab-c061-4fb0-bc46-407fa71f5553",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd57a2d1-efa0-4356-95ea-9e349d9437d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8951b70-efd0-4d21-ab1b-4738b11305a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bb8666-6b8a-4094-b6cf-7c637bb0a84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "91e4e6b1-9d96-421b-904e-d6867c3ce61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea27b0e-a2a1-4180-9d46-4d9ef5140479",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ead3c1-3fb6-4a2f-ba37-4cd4fab18eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5acedf7-34a3-4a41-8745-745846401d48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c63aa0a-a98d-40ac-991d-124dd3d8fb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf0011e0-9c2d-412c-9e57-c2bc239357ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bf6d08-cc18-4a28-9271-bc189a292c57",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88f569c-0761-484f-a586-019bbd1d47be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2eb3c5-b8be-47ab-8f05-1294817d157c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08d9914-49bd-4205-a274-448d1d7fcb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e47fbc69-c737-44b6-aae8-ab65aa39d29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8150af44-d3b6-4c9c-930d-a6471cb9464a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49df5fe8-c8f4-4252-b2e3-55b84865a87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97200895-2e5c-49df-b094-d688df9bfbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d627bc25-5b67-434d-b4aa-df700422ac6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f72ef434-bf35-48a4-a2a7-70aba6ed41fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a94fc55-d08d-48a9-9b41-f8f3d269fa99",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce7b3ead-82a0-4795-a57b-3bd1c871add3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab533a72-93eb-4ad2-ac98-36620552a84a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63132c3b-3432-4955-bec9-3ed9444ed980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc7ecbd-78b0-464f-97f1-755efb62ac3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab3faa46-c681-452b-b4f4-d910fa94f8b9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d07e35-7824-4990-8e3a-285895a7a101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca91e3b3-3c2d-4fb4-b3d9-1d1b0257f098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9382ad74-7da0-4b9b-8a33-71ccd9786a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5aa313-031d-42cf-8556-b1adc11738c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b25aad-d178-4011-8fca-2ba87f4c07fe",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e7ff8a-4e8d-4b91-9ab6-3335328e837a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37865535-bab2-4dc2-bfc1-aa1be4fc49e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e83f24-fa44-4bc5-9cb6-55d8780b2618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "802d80e4-5e1c-4030-8f05-fb047606c010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05da8b1-733e-4766-9eb1-d9dfb1a83ddb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "556027d6-17dc-4b95-aebd-ad52a520f2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b79c04-ea0f-40eb-8624-629736c68c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7861e9cb-a877-4415-b29b-b08e60942380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f36d826-0d81-4545-9fcf-451e71259dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae6660a-50f4-44b2-8d9f-d8d3659dc535",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31fcbb63-cdfa-4169-b7fe-cbcdccf469ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400102c3-6f15-4d95-a348-a680a6769626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7773aaea-a432-4b1c-a469-0b72692d0179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2bf733-a683-4452-94d3-c8a29fd04f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88837b90-2f9e-4402-b127-c0bf68720b16",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093c724f-ce6a-448f-8a95-8f61eb001df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a41ef43-60e0-4a37-8bc1-f4bc70e05e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b08907b-2920-45c5-a66f-e4ba33a57c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2def4a-34fe-48f6-9524-887e0d7aec9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4a81d6-0866-48e8-a7a4-71f3d30ef7fb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb0db70-d7e4-45f6-9d54-0bfcdd7e7c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d7de1b-501d-4a36-96d2-5947fff66a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4028dd-f1bb-42a9-b8ef-64f5a105b804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b9c470-5d93-493c-ac93-4fb4ca4eaff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f67685-b029-4432-b8f1-0400229cdcd2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf55627-cb9f-4a11-b4d9-359b365d41c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92b580a-d4cc-49f8-ba42-c6ccbd462adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554c7ac2-a4ce-4cfa-812c-38f54f50a8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6dfd4f-acab-4b4d-b1dd-6de5f0812bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3edde192-aa42-421e-a6d3-f8bcec03c1bc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83389472-8b2c-49e6-9902-cfd18b2d5a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38bcf9ba-09b0-45b8-b9fa-3a3b0c418ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23da09ba-b778-49a5-8bcc-f384dcd931d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f97f74ea-de7f-4b01-b67d-ba17875f4932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6e2302-63ba-4cc2-99b3-953507257a00",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc8887c-a935-4b0d-b6b8-1e308e583699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fdcd8a-4994-44cc-bc57-b25e083f4af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fd7767-0a3d-43a4-9738-d3f7518bb9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26a97501-346b-4d7f-82ae-09eb1dfcb654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4678c501-4a12-4226-8801-ebc3d6e7fc2d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705e6aba-df27-4bf3-bc51-03cc009ce1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898000a0-bd0e-493d-8e02-20a67d4cd279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571d192a-41f0-4281-882f-332bdcc2331e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e76ac4-779d-4d60-b312-8c20017ebcf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a987d79c-da86-4bb0-b7d8-6be64e88fcee",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88519775-9daa-469a-9bc1-69440f300d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a877a2-aa2a-41ac-b9c2-430de105228d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37567ad9-da74-4c73-93fd-fc36b3679e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b47b380-6626-42ef-a8bf-2bffe1f0915b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "521f8972-491d-4cf4-acb8-696e67a5c91b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475d0cb1-a497-4db7-940f-85a62276b251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275f082b-4602-4848-89fd-a48644cfc6d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197a3df6-bd16-403b-b12c-70212fa12aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "86d48de9-e42c-49d6-b114-d023adf90fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a187f7d5-11b7-4cac-bd4b-9877d5fa83d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807cc024-ff8a-4363-91c7-98b2dba76631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f6e836-c479-445d-830c-0314673be0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9afa7422-f760-4a38-b76a-081cb4449eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e29bd0e-5311-49a7-a76f-98e8d9be4795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6cea5f-d1a6-46cd-b013-2368f17034e8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7aebdce-f6d5-47ad-8788-dbaae0909f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebd6b23-3cc9-4b99-abdf-6e23ccb7efdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f5d6f1-b1a5-47ea-b46f-003000bb1691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "08933468-1817-4909-a409-71ab146ab275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf608dc-d353-47a7-b824-c169ad8ff83f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae0aaf4-b6a4-4d7d-b93b-82a19e05fe66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e325a70f-35d9-48d0-9fb0-ea0de03426e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e4edbb-7631-4f61-aaf5-08fdeaa02990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e116bd2c-475e-4554-aeb2-c377f1fc3421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80c8b31-95bf-4bae-a96e-c879ea5d97b6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bdc96b-0cbb-4ec1-b1f3-780deedef0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d1b6b0-e78a-4733-acf1-5ff62c43dbb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad79c6d0-62a7-403f-bb26-64b84c5f7bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "552cd6ff-7ea1-4d40-8eba-7e3db18b01ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de650856-cd32-4fe4-a527-b50620848f10",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a730cf8-f9d4-48c0-bddd-1743114e021a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e46619b-7175-4a09-8da2-f5fdd2832615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36cea134-6db6-4278-8109-5737711e0b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "56888182-a5ef-4522-b15e-114307f57539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d76b33f-1e8d-404c-aa98-d2be7b3e1175",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43969b3b-00fc-42e1-af40-23f5c20f90e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fdc8e0f-2c81-442d-8b70-262e52368b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8beee6-2603-49fe-b253-ce007f884232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e422a74c-ef64-490c-8fc9-e20e2c81f2f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b0c248-fb4e-444d-8bd5-3f9c229924d2",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f7e823-f937-4bf2-bed4-37d84f6605e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bedccee1-c717-4a6c-907d-dae88099aeda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40b021b-5dff-4ee5-b488-b9ac339b77f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2113b1f7-5dc6-471b-b547-24beffd3ae41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80312826-806a-4136-9279-76055dd68614",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f229cc76-1a86-482c-8929-bcd8610517ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad0bb40-8643-4565-b7eb-0cbaa796b4bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe50b9cb-7e14-409e-b19a-a5ee5bafb366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a513824-f686-470b-991b-ceef11f54f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d589277-3a92-4a91-8ee4-c8c0077a81b4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64382585-ea6c-4156-99da-b3a41b7487a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9382e96-8726-48dd-bb59-f60d1ea517ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f0bd8a3-8bce-4abe-8db0-939541a4cf4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "538777a4-8017-49cc-bbb1-a22f64361c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b89e2c4-c2c2-4d48-a12d-af274b3eb4a1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9560900-a5a4-43ec-b6f3-233e11cc35ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49abe82-2adb-4d01-84b2-9623b1ffa05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119eedd7-c75d-4a60-af4f-1c20b2c10083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73f77612-b88a-4fa8-bacc-6a06748ead2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a96ab06-4fa3-4be7-bf33-8e1283d1b898",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93feffab-8263-498f-869c-dd9263218b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb178f3-d35f-4d2a-9d91-9c6094d66626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac382599-884e-4bb2-8e15-bb2abb7cf0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6330a077-c297-4f07-8cd8-baea43afe0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b89b10c-532a-4cd0-ac69-f6f900932581",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00885e95-242a-421e-b7c7-144c6cf9a5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a86908-cce5-4a3c-a208-280e8ff0df49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52eda6c0-489b-4620-8007-2202a1173635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "031e61fa-657a-403a-a68b-1f43e3fc746a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe4428b-d462-45a4-bd53-92f342d07be2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15cf0121-152b-447a-824e-c0a14e177bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bad4b98-442c-439c-bd5f-ec9c6559762e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a781855-b0d5-4005-bf1f-187cd43d30c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae7d408-0745-464d-86fd-f510c5801239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a00c25-1e9f-4b70-bc43-c43d53f8e29c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1645aa6-fec1-4a98-994c-5666db6eeeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d40ae6-f1d6-47be-bb89-3788f22cdec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea851d5d-2d70-4fae-a9ab-2a138025d36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef8f880e-f25f-424a-bc53-98fb676a891d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6265737-9d8f-4494-99fe-f2465c813d13",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b40be4-5f7d-414e-8fbe-b8ee5f76be33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b7deda-e310-4945-a4f4-1426ee20f2c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d47decb-4147-4df4-a7cb-678474b82873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab24709a-0881-4554-abeb-1a093d94d46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88dcc720-d54d-4218-a345-1e052a81eef4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec5dc6c-fb7e-4527-8f57-359dc8f6f7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3aef9d-3919-41c3-8aca-d54f9df3af12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd31827-f074-406e-9e87-dbf6cb324590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "391a9509-da37-49bb-999e-36c7ea96ce0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b0710e-ec46-4232-86d5-b1db6de899e1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc147bd2-2828-419d-8f9e-8ab17fc3ff11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d65583-daf6-42d5-b27e-688874bd4a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a9a3cb-eb15-4520-9a7c-253fd865e7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b1561f-3bac-4000-8a41-769eb61e7b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b576616f-f3fe-4735-8ad8-22de7b52e0bc",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656d806e-b7c5-4772-97dc-9b21681b035c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4c3a19-b89e-4bee-bdcf-f358051f37c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3baa837-b74b-4a8c-aeb8-bceb0a31242b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef0778cb-5365-4a9d-8d57-02157de35407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dea0502-6479-4af4-874a-e1c5d757b396",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d44dcf-5704-4163-b257-8e08a9c266bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a373d3-6ad3-4986-b748-691f95d952b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f36bf7f-5bdc-4f14-b175-e76bf7dc1b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a63346e4-5803-456e-9354-23816254388f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3078c9b-9956-4d81-9551-210753d04906",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c618921a-3280-44f7-bb39-ae6f76c3e62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f9e56a-5b01-4eca-950e-7d98e26a199f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0634b99a-ef1d-4739-9d9a-d8173c99d51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "881be2c6-482b-479e-93e6-edbc4545d5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01296c78-e4ef-4c56-b05d-efa54a428adb",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b834535b-85a8-4a72-923f-dc1fca118f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b2b812-4394-4e30-8ba4-12f1507dac1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366a65ab-413c-4d9f-b52b-69ec8d7d42ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc63958f-0885-49fc-9955-ab2dcc61d6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53c0589-cead-45ae-8980-3b2ea228da1e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca1a714-8967-4401-a3bd-cc08da8432a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b011c7-d8bf-4f94-8aa0-edfc8f00fa74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87492c05-1352-45b0-9432-6e90225d2127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab93b4de-9a91-4d3d-93cf-10b572f264f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec8d863f-1e02-4175-a633-959d9b3dbc53",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50259c6-f7cf-4851-afad-dc4b13ce1fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a9f1a1-d6e9-4891-bd42-b463f09a299f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e6c115-5e4a-4598-b8bf-d24e5bab6119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2a3754-a2f7-4564-83e8-f416a28c45b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288d680d-f96c-4e23-a54e-d6b5aded0fb7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbc4305-73aa-4771-8a84-a1a58849659d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ddaa6e-8a23-40f6-8a58-246b198abf92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b9ecc3-af78-4230-b27b-a443d9bb2314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a435a701-fc1d-4842-a910-ab64758e680a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49746786-60d8-43a1-b656-afc1b30af4fe",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3b86f9-f7e6-4ed6-9906-b28bcd5f659b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c413ab99-090c-45c3-ab4e-239c13d2b743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7b14ab-540e-4462-b20d-7cba513c5abb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4dca62f-e5c7-4722-a029-c7e7342b2c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a96e27a-9fa8-46bd-a278-420d8cff2160",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218f9c37-8889-4f89-b3e0-fa876dea953f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0ecd2b-8d75-45ef-ba28-149564921790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c35fa92-0688-442f-a25f-0f019b801e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7cbb23-4047-40e9-ba3f-254090a1b576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63f5c69-3a87-4a56-b959-f93c4b842ea0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c204c0-0bbc-477c-b393-aeda03da9aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957935e2-8680-44a4-8f49-649f789b5342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549110e4-715e-4be1-95ba-74538cdeeb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3eea8f9-668f-418b-9c08-86462a921faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e665020-29ba-4e64-9fde-538f1d8750ab",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a69f428-2568-4b4d-b274-bce0e6f25a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e95eccc6-6cdb-4419-8851-8332d70b33c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ce332e-6114-4bf8-8daa-773f34e3d48b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71403c43-3d19-43fe-a876-808327c2e58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea97ec21-caf3-47c7-9fdc-074a24f5f440",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd8bd51-fbd6-4fff-8fed-213d3b32c666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04eeb293-206c-4898-af10-bac24c275621"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f93fc5-0a79-458d-bc3b-f3efa262afa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f81b925-b6f0-463f-927f-9d8758bebf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe541fa-d846-42b3-91d5-26902dbe52fd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd523bef-72a7-4890-a3e3-77f5ba064821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40dc9566-3dce-4bb2-80e0-beffd97a2e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45b041c-cdc1-44a1-adc5-73ae4f626daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae85c60b-65f2-4a9d-b9ce-655c46da7fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f131fb6-1e99-4414-92fb-812a410c4e3a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f9ec6d-baa0-4fa6-883a-9c815ee325db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f94b4f-10eb-42ad-8550-2b0bc0362f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2831a67-d84c-43bd-946d-2b53a6752217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "704f3c3c-c1a2-488a-bea0-db3fea65dc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442a5c98-47b1-41b9-8dd9-ea8d8f3acb3a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcdc174-0134-4d0c-bdce-307d6b8df070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65161c0b-233e-4269-b924-465435b0e801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182f7e15-65a9-45f2-96ae-c553e98143a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "123af586-3683-4763-8cf4-2ae8da5e3524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35cc8cb-85f5-4bbb-a661-ba1037b88d2a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab8d4d90-2bdc-4295-8c56-8a26798ea7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e921e1bf-09ba-4dfa-b471-f442999316cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122a82d3-8077-498f-808c-e0033abc2cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "acfcaa7b-01b4-4159-b800-b564f048ceac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2add60-e539-4b41-9c27-1668b21e9723",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07682652-9f4c-4dfe-a40d-7d0f0a63e642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e818cbad-edbc-4d8c-9c46-d08c5d623bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f51521-fe5b-4972-86fd-f8ccfafdd7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec4faace-cc37-44f0-aa0f-c580c21a386d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f72c670-9806-490a-998a-917c4b552ad9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8cca31-2d66-47e8-9d91-2ac38413a723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c1365c5-2804-4f5a-a757-bb8046907ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba798911-7912-44b5-9da8-6a679b7c0ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "746f7805-f974-4f6c-99b3-e2c7b7f503df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470234e4-8d3f-4df5-9b5d-8877742050d0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99fd61d-647c-48e7-8fbe-af034ee648db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "58ed6a33-880f-46bb-8c21-fee17de8dadd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1949da0f-b71e-4bdc-aa28-b60b1c089205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "788ce899-5722-4a26-878c-05a8c9396a84"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b4d14e77-61e8-469b-bfb9-a4317d704faf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "831dc6e5-1226-4199-bcbf-496e6dcd7180",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c8a099-a4db-4199-bdbd-18ef3ce9b727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f591d399-bc46-4e74-9431-8d8de9bf4879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6885e5-7a0c-449e-ae77-60e5d2ac2a24",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1fb8159-1f18-4e5c-84cc-058bde8f8c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a98533-bf45-49d3-8d90-dd9af811d2d9",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824dcdbe-337a-49f8-a474-a4de5c5cc867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50ee6609-71e2-4b9d-a83d-64e15fb03968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8653418-ad7b-406c-8af6-35dded873518",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "600fa764-4b20-4a7f-ba13-7509931233ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75a0697b-fb0d-4ef4-9dc8-ebe8725377a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7117c4b7-3f72-4eaf-be04-6af92785ccc8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b28e81fd-66e4-45dd-b7f2-cf9f2cd2d44e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b1907d2-e1c5-42f8-b938-75b0c85a5f1a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2c1f1ecc-2dfe-4cc6-b14c-5768dd66732f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4ee4380-6ca9-45ad-88c1-d5b2ecc48ccb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7a278c5f-6c45-4796-aaf8-ce9f915ca59e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67632e24-c5a4-422e-8e36-d11c64519355"
                }
              }
            ]
          },
          {
            "id": "a65ddbfe-a997-4f45-875b-a6ecad04dc34",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf1dd9ac-7bb7-421c-b928-a25580790c55",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3317630e-8877-4be3-8a65-c7455f65acdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a324256-d162-4232-bb2a-b958b57e22f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3135f99-f6a2-4c77-b79d-0861665979af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1ba42c08-29c0-4650-a264-002076b73c73"
                    }
                  }
                ]
              },
              {
                "id": "de346a88-5fcf-4b98-a011-f92c861a29b2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86bdfac1-e315-4cd8-aeb2-0245cca2ab50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "574aefcc-c306-4909-a50d-28a168f2a8e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9225ea58-718e-4029-a098-3a08eeed24db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0a01d97b-e7d0-4936-abd5-fb1809322b48"
                    }
                  }
                ]
              },
              {
                "id": "0d58be35-fc90-46dc-a729-7fafd24fe17d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52ef9eb8-abe4-4c9e-9b99-ab1534f996cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a778c21-e8a5-4991-8acf-a53ad289fcc6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91b68328-23d0-44c5-9a63-41a507ce2d58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c0808597-a1d0-4bc4-bef2-c9eadb9295a7"
                    }
                  }
                ]
              },
              {
                "id": "4d0c19d5-8183-4ed5-8e70-745d4662ce4f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d73e75d8-1cfe-4ef8-9484-4312e91b02f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d5b766e2-ff7a-4554-b78a-c7483261ada5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b002f0f6-cfbc-4d23-93a5-a7b5e3d79442",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c0f9d0e9-12d6-4903-b4ac-e5ca3fe985fe"
                    }
                  }
                ]
              },
              {
                "id": "184a1f03-b7b9-4ba7-96ad-e983f6c7911b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7a0da35-d111-48ff-8450-fe5bfe5d01ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db687063-f502-4368-89ba-a08766bc3260"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca9b7517-501e-4faf-8dcb-dee98b8d8483",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1fb823d5-bd83-4114-b930-68beaf6bd413"
                    }
                  }
                ]
              },
              {
                "id": "c0d7e9d5-3b63-4fe4-816c-ef244b916780",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c12cafb-55ad-4ac2-b65d-98b265025ce8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9812828c-57df-43e0-804b-dc112e678879"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "142cf563-36e7-46a9-8947-b52966cacf47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a0a179c9-109c-4c0b-a66f-7d286b0f09b2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "128c830b-1ed3-408b-ae12-7bc9e8ba5d5e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d063d31c-72fd-4d42-9d4d-816729152040"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "515af98b-f0a9-4968-b86d-aeb19fdf8f06",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1c12df8c-7edd-4b9c-b232-abc2cb570e12"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "390e2851-25bb-4950-a2e5-e69a9cbafdd6",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e5d4df68-fd86-4dbb-8abb-15f92116ecc5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f18b5721-07ba-4164-9bf9-83c89063c10d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1eeab565-c4de-400f-be30-e6997067039a"
            }
          }
        ]
      },
      {
        "id": "95a4e72f-4299-4884-ae9f-240166e163e2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1916587a-9404-4e55-992e-bc9bbf07d8f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3992b862-9b46-409b-8ca8-1e22391f385d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cbe8510d-9f03-477e-a37c-cfd8705fef31",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f653a374-ebcf-4170-b0d0-f21077d9747e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51278414-e86d-456d-87fb-ed3b41dff7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1522b8-9552-4a90-b6fc-83bbeb826228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "92eeeeab-051d-4f75-8de5-2d0ccd1779e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7036de17-6a38-4786-a71e-f49f0851d9a0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83da65bc-5495-4094-a334-44d91d406a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ad3371-c828-4639-a113-788db7aaea75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a4e89a-2d8d-403d-8fca-ce26663df5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "63685857-1964-467e-a454-a2eae860c6e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0dfd8e-9927-4fd8-b186-3df639075de1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dace706-d9c1-412d-bf02-ea43881a4ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243dfd1c-864b-4d51-9bbf-8c0a69b1df5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef683c4-94fa-4c4e-96ef-a2a0af18e127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2e08af-5545-485f-bc08-6e61a18e1f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e00f59e-1525-48e6-9f60-d0e3b82d6e44",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1564b120-f87d-4590-a1cc-4dc1c881d9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ca9902-fd00-44d4-8575-d1055ae774c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77ff763-17aa-45cc-b35b-ce25cf07cf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb75e6a6-03cd-421c-a28c-b97618422bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef05c3c0-c59a-4c11-95e5-1582788d5bac",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da01d890-72b7-4b3f-9a38-7440d2693b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c874fd05-cd83-421b-b035-b1917bc424cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9afb61b-6097-427f-a079-affcf3877a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1637fc07-c663-4a7c-8366-cb6260cdf501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e672cc7-dfa1-4b47-ace2-72f95428a926",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577652d2-d275-4ef4-a5e7-d38aae21debe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b5966b-07f7-48a9-b523-7c5dd8ae6de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c867a6-4514-4eed-bca3-56cf89b1c7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f632707b-5ff1-4367-8734-518c9fa495cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9848e97a-ba09-49ab-bb53-cf57cd56b57f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5742b5f2-206f-4494-879e-959c010a8f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e12f16-dcce-4739-9b6a-6d66f4cf9ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03700cf-f9d3-4b1e-9acd-6176cf9501ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5809277d-2534-4d13-b249-8f5d3b2f9330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2833d27-dd73-4519-9673-25240bc2e706",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98aebe8b-4164-43fe-ad74-709c4ed49478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa339d18-5e34-41c8-94d9-c6e3dc450ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52aea8e-8893-46bd-bec4-71da58d874de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf21ee46-5790-4736-9d22-7b9dd11b6b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b81d862-b00e-4282-aca5-942ef0153d43",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cff0c0-9d27-4c55-8219-2490e9230870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b194d62-2401-41f7-a651-437a1e7ff8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a56f65-ebea-4f24-8e05-91494ce79e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "127d9134-3130-4291-bede-0b0c7e28b3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ed519c-5858-4b40-b630-836d15b54db4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdd3f15-a2ef-4d35-80db-9e5141f5a1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca23fa47-fdc3-4178-ba0a-16a04ad25da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a93b2f-8cfe-4243-a5e9-c97f9f2ba05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5174713a-e1d0-40dd-b4db-ed37dcf2e1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef2fb2e-1f83-47b4-900a-318b83ea5d7b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b873c5-1cc0-4874-8e37-4e1761c572b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108e168b-b90f-4a2e-85b3-4b8e5668f1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b6acba-1f77-4dd2-bc65-b14251b0b211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ef68eb91-f0fc-407e-8933-3e6192d5d1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbad8d8-5f3a-415c-8976-3f7cfdf11118",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69dfee8-0879-4abf-9d91-eb12539d69b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f800dba2-89cd-4b69-896e-1708bb9e70ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce61724-3126-47df-bf9a-9a163695bdb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4b79ae50-1318-4451-a54f-602a613bb5b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a530527f-257a-4554-9345-695cd2fe05c5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c02c1e-508c-47b4-b4d2-d54c605161c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e73698-55b1-4794-a84c-2dc8a479108c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b95283e-ff37-49db-8e3b-9e55cd097952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a719d4f7-d94e-4093-a8c4-14d764a6b57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6facfd5-8cc4-4218-bbe8-9fa69c2294a6",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38dbbc09-c97f-49ca-9819-961f0239cb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7c805a-f345-4777-b0f3-96043c12d9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153168e2-61eb-4f42-9ae8-f2db1e782d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3e3931-2572-4830-8b9c-596876b2ba05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e592d343-34f4-4941-9376-b0b2dd89546f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f712d0-60e0-41ae-a0e3-d2d471630303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9204d7f-391a-406a-94b0-8e842f762fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bff2b73-2a01-478d-9ce1-e3614fccdb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fff71d83-5525-44f0-b97c-66244e6175ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56561e8e-2cae-4da5-b41d-3dff331f0eaf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05df637a-77dd-40bc-85da-8a1ef969b35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6af2251-1ec7-43a4-a799-8b8d7cbdaed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725ed231-d375-4a68-91b6-0d73d3bab8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8dd1920-6db1-459b-be3a-2b57e6f1448e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225563a3-0b5a-4cb7-9f87-dda422926feb",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af012a2d-4431-43ce-8c0e-c4e34fb9668a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9cee45-d59d-4ffc-a563-06f0aeb8b96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc77ab0b-1a4e-451c-870d-5d6307bda222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "46a5a333-efab-411c-ba65-a18948b92319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfa9172-b572-4722-80b8-f3307aefdb66",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88df7311-bd62-4083-aa6a-ce7339c8416a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a2f8ac-f891-4040-b5e0-59b4bcca2384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a5bce2-aab2-4a6a-a505-8ff46f883957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3230201-637e-49bd-93e9-9463576665a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "658b561a-96a7-468d-b17d-c2caa763a6f8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88b7c40-ec25-4fd9-8542-2623e33f5d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d4f854-92bb-4100-bfae-4ac2722df3de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fdea7d-21ac-4042-aa71-1b365fc78b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3f8d4d3-b578-43fe-8aaa-464ed01ea61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ba933b-5d96-4765-97b4-8dccb36d8b38",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a5824b-6c86-48fd-b7f6-e5cff35d3627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f59cf94-b36f-4f13-9cda-bcc661d76fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ce2515-cbab-4451-b5d3-e657eac3cd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78dfc3b6-d151-4e75-a38c-5bac8e7b6566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501d371c-a9af-455b-a649-b8369e388359",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f75d79-032f-43d4-8ef6-8429ce467070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c6405a-d4ac-4bec-9103-ceace1736315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86d95ff-9e29-4579-8e0d-25086878ec39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8ef334d-5efc-4c6d-9651-82bc7457adaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd16a84-8b8f-448b-aa81-709570f66234",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b305ce03-cd71-437e-902d-b178c479d488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b827fb6-f2aa-4bfa-99db-aa1918dd90ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb9129a-87ed-4f41-af32-3dc29b92d07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5ddd93-e799-46db-891e-20a7b1392f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60373f8c-700b-44b0-bde6-47b3bd7cfff9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcc4fc2-66af-44f7-9244-fa7c5829bcfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1dc95a6-f663-4ac7-9a0f-2fca91134269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083c82ed-e51a-432b-924e-1499672bf6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed82d11-723c-4de7-b8e7-7ad1ca8a9428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5377eff5-e982-40dc-af07-562d0fa40bbd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476fbaba-1373-4a6a-a623-177cdac941f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35af99b3-0449-4d44-8289-ccbf04d9d467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20df5156-2ea7-4994-8b4a-c11cec0e84b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddcba80e-24ac-40c4-8977-75b071503db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc35670f-71b3-426f-a369-3a8fbaf0c0c8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc8de1b-b094-48cf-9186-e44ca2100970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a026164c-9aaf-4bcc-b116-08a64a2e3368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9714d8f3-dcaa-4720-9511-23a13f2d4819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa83c0ca-f495-4111-b10e-5649e1e7edaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7921765-ce7c-4b48-9756-3b9f337a2bc5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a295b9-318f-4f28-8682-2ebeb6ec264d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c24b1361-3bcc-4bc1-ad0b-a912c967ea6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116fa282-74ae-469f-aa0b-3e396f7c39af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55757b56-d569-4172-84b8-e663adaa7451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af4fdc4-ed50-46cb-87c2-62e9425678e7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fbd5ab-76ba-4706-a3b5-111adb1e761e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86e75ff3-6735-4549-a615-f28c41f52066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd55a6f8-018d-425b-a6f1-999c2ac0db2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "357d7f68-e0ef-405d-9abb-11414fa5306e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7905234-0587-44b5-99ec-20ef9366ef1d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ef64e3-eb65-480a-845e-4a2252f31ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79a3b29-4016-4ae8-8817-dec39e7937d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2577d0b9-81c4-4cb4-9c50-ffb60a09a02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5794c2-559d-44a3-ae7f-7cce53fcf5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264ffe92-372f-4be5-8115-6a43c9005b3c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00767f5e-0ea2-4f2d-8581-02d9820ecaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8495c5d-62de-48f6-8d06-e84a2b33e8ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a3388d-6f77-43a9-9d2b-8a830ddd3628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fea985f-f0f2-474b-8174-6ff34dd63fe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3769867f-3ab1-4147-be1a-213e708f6233",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01990fe9-bd91-4514-9ee7-6908b607e21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0679640f-674d-4b79-bdd2-2ac7c8108b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3af4b3-5d9e-4bb1-a110-385501380cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb26f57e-6313-4798-8a0d-e74281b9cd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9992d7-e96e-42db-bdfb-2e9711becef4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a805cb-15c8-41d2-ac30-0f3200d67fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01c75d8-60ad-4d33-a8ae-0235234821f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5d55b5-b77b-45c9-b32f-0e1a746a4efb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c30a71-040d-4f2c-8140-4651f9badc40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a0094f-51f6-430a-94df-d81d6c12c9ce",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff4396f-a5c6-42d4-b6e5-42e8bb473c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934228ba-4e92-4af2-8f3a-e191bd4e4974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440cf6f3-3223-4f89-8164-d193cf7c5fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5176c298-52cb-44b2-87fe-9d2907290fe8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "17c4d57a-be35-46f0-8e08-425853fb90f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f496237a-89b0-4eb6-b307-cb472d28d08b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d6509a-0e42-40ba-b1ce-e942c774ca3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c209d62a-82e7-4a24-a461-b58cd423895e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f81b34-ba3f-433c-a5de-da5b0f29f895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "122be468-4620-4a22-84b3-b91c7fcdd587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621e79a1-9f83-4773-a450-67ef2e339ea0",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5fef610-f4ed-4dfd-a4b2-85fe0713f5b8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "529943c4-00d9-4bba-acbd-0f07e3b61ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f558d271-30c0-4059-a318-01a95a52e919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3e47c8d5-db1b-4a45-ba77-8a130e1cb069"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6e80d42d-3454-4dc8-95e6-f9c16309e64f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3c5cc6e-a595-46f5-a138-ae40249a854b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd553183-21a2-458b-8be4-5faf357a9592",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bb70391-3f45-42b2-b399-2e86176c57ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bf193ed-a874-41ef-8c38-14b37e0e0315",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "210b8dba-b9af-4ac9-92b4-fa68954ef58d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "226267a1-9f19-46a2-8ecc-63b5af28f9a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1a49791-2864-4525-a8f3-da6d9e633df6"
            }
          }
        ]
      },
      {
        "id": "67dde361-43c8-4384-9468-c53fa69515dd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7db6580c-5004-4dd8-8473-aad2ced7ccf0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a4dc996-db14-41af-949f-c2729f587842",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5c176de0-06e5-4953-bb5e-0835fa5724a3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c43b85-3277-495b-b7b6-cfb777ebbabc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d715b1-5873-41bc-95f1-56580420e7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcc5692-c767-4dd9-9617-91c8d996a689",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a449fb6-9998-411a-b2f8-37caf5d488ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a363716-0178-4ac8-8261-88174e92fd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea7d6e4-db44-4d27-b9a0-51d5055dd472",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a499c0-6954-41bf-9775-a2a8b72a7af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4fbfecf-e317-41d0-9821-59c0488ed0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b158b25-bf33-4aa5-a282-80d29429a1a1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914316f6-0053-43d9-befe-cbdb4e7e8757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65c83676-4b6e-4b8a-93d5-e672dc351d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cf693a-d9ea-4a05-8928-631610390ba0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16bdfc4-e8ec-43aa-870d-1d2ad6fbe124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e141904-5d42-4ad9-8e44-1412ff65e397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be79606e-d840-4e2c-9951-16d9dcaa49a4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15dc64a-0fd0-4d4d-9c15-06868a32c5b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5de0c31-d832-4d81-9793-6688f01a4424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a905ac40-5723-44b4-a314-2a2a7bab1ad9",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ec4848-8ebd-4c7e-ba96-86f54dbbdbf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5b2f64-8e5e-4be4-908f-7e6447a81308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "991aa726-bbe0-4e90-92ab-1c886a4a0d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64d7811c-5da7-480c-877e-d86e89fc65ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53186725-8bc4-4f1e-8ecc-04f5db6354d9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409860e2-adfa-46eb-8c6e-03508e40354d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c25c28ed-137c-4d53-bc2f-1d87b0b315a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1ed769-abc0-4d3f-9f27-3afaa95def18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab865e0e-a5aa-4d7f-b2f1-e8132ef17d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735c9a55-ff4f-4171-8a90-cb41df72fce4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb51115b-30cd-4191-b742-62cf42bca905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1be90a85-e4c2-4338-a191-7c39446d2ba3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c397bb81-0079-4143-8989-d2ee9ebc8cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9dd1c33-1adc-4d87-a977-d4c221c0ef2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4f6c71-473c-4ad7-b20f-ca23f504d87d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae776638-811c-4524-8799-84477c3e5d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0134b51e-145f-4e20-8caa-3aec6a2f888b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b87096-01a9-400f-9205-d8b6c6c1dac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd345a7-b585-4910-8a68-864517776164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4390220b-bc9e-471c-99ff-e2f6f6743bb6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b798c67e-ddfc-4509-9c9d-dc85e0991dc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6605bab-d652-48b8-b491-31b08bceeb52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "890523a3-82c4-4eef-afce-a2239808dd35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235335f0-f9bf-41d6-83f5-87d59db655f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05547a79-3188-443b-bb00-eabb37457ea0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae06eb52-4206-470c-9650-34fb9a777639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad607bb-b137-4a4d-823b-947b147a75da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0084adfb-a0a6-4ff7-9d9a-f178067818b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4bbb9b-8ac7-40a5-b587-9b2e3acc2f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eeb1e99-32d4-4d6f-b675-3b0c67e29eab",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff1cd7b-c138-4c12-89c4-84e2987c62be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5ae556f-1550-4b54-aded-3d5c96d14278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42b444a1-4130-43b2-896d-f58f9dc24d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6008333f-babf-4cab-a8fb-0e459fe5ccd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8340e1c3-0189-4474-afba-2659bb7fded9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321a0639-ad13-48d6-b436-0d7ead6fbaae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2d27c00-b5ac-487d-a231-a957b34ebbf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9638cde6-a26f-409c-96bd-c3b3b90f656b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b50fc6-d0a6-44c9-a445-675e29545980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7c510c-6522-4c74-89c7-e678e6122ff3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a6a786-48b9-4b09-8c2a-34a0b047a3c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff2d325b-da73-4383-a58f-9e0a48f92c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "476a33d4-35c7-4e38-8363-fcae33ad2c20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7e0fb4-4738-4105-b616-ecf1ec0204fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35f6549-928e-4507-9bcd-218c34d6ed09",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff54779c-9291-471a-baa4-c97b7bca323a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea734999-f5bc-45da-9e20-2b359042af66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6221a0c-68af-438d-81af-d91c5f2e0dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "618c74a6-48a5-40e3-96e9-30a133d24216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe92be84-0a26-4599-8cc0-eebb575b4d30",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eab46a3-848b-4006-9158-e552d0fc6d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a382152-7b83-417d-9b7b-76d69609e922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac3303c-e4de-4e5c-85f2-b91ae7ddb1f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ae88ba1-3a68-4c22-9c41-266bd71c6489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c91cdf4-e4e5-40ba-85d0-baac01d6fe25",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50164966-30f0-401b-822c-ec0c328b4ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c19fef-0c25-4429-a97c-a40dcc6654d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "312071cc-d3bd-4734-b0d1-cee636a12a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c584645d-1f6a-4924-af7e-ef58a201cded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edd651ba-d799-443a-a9cc-a875f3ea91ff",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b68cbf-b80d-4361-a714-2cacb58fbf09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd26002-71d7-48b9-9075-85d3651c48c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89e192a-7871-47aa-92b0-b5ba2230822a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6ff586-9c1b-4ecc-b2d8-c80f1a73aa9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df101407-55e2-4ec9-ae06-2b0d808036aa",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03727124-b8dd-4a51-a759-c31a730856de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6099437f-2e0d-40de-918a-96c536f888e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fd69b4-8cfd-4a30-97be-0c08708349c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001acce5-415d-47f7-883c-555aefa2ea93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace1a215-e2bc-4ed9-bc54-680f124f6432",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db5ba9c-6ad0-4086-8787-0ee49f60d86c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d367def-55c4-475b-ad10-a32f99f49f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b08cb9-ce29-4e91-bd4d-c99e37e69d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f7de8f2-5a15-4100-91de-8bf1c91394bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd4e296-a6a5-4883-89de-c6da35e371b3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b48a3e-9948-454a-9ca7-e3bdf824f7e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7059b105-adc2-4f61-80f2-d63413004e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d33fdc-2c19-4542-884c-9ef9221a969c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ede039-314b-429c-b74f-05e8c76a4965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba31057f-2324-40b8-b9e6-aeebec0c46a7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30619975-a5cd-4a62-8edb-f137bbd22fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b928cc-7cd2-4523-b500-0076dde0557d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d4d4ee-1f8d-4dda-beeb-7a6d6d533f2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d85392b7-b29f-481f-9d71-9a86d5ed8bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5388e28-2258-4170-8c14-de941fcaf7f1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2cfca5-a560-4b0a-a8af-87a3d8e83ff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55782cc3-513b-49fd-8904-0c93ee591d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f16878-efad-4c10-b18c-4cff192f4fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1046afa1-684d-4e94-a4a9-09d2c3885d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c07b443-b7cd-4462-833f-5fc933f5f7fe",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1c0205-5f02-4cd4-a0b1-dba0a539a839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2001631c-57b2-47c0-8c95-5306a86abe2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c91c7b-1345-4358-ae13-592277d50ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21791785-d175-4101-9043-b8a8bffcbf52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8b2036-eca7-46db-96ba-2eb2416bbe88",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd82969-5a4c-4ab0-b84b-7cbc4c68dc4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a608430-12e6-4eaa-85c3-ea06360ab09f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c791753-348f-4512-8463-18ac12073f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4458f2be-8ec4-44cb-af37-4d7f6d39abcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9028d99-6a6f-4437-916a-02f5fa16ac38",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91e7a31-3461-4f91-859c-c3f7fab64b21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c12aecc7-ed57-45a5-9cd5-b5950bef4ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008a2eee-e818-4812-971b-532180769c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d198ff-d0c5-4c3b-a9b6-083b31c9ea2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3677cbcb-c20d-4bfc-9521-2ed6d0b90197",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05907b5-8836-48d8-90b9-825f14cce0b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2ccc8c-906f-46dc-8318-f341681cbaf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084ee195-d00e-44cd-a16f-64d0ed3953b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c112c2-7afd-49d2-97d9-4c74e6549462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0295981f-602e-4eab-8ecc-4abc6fc32296",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e466bec-3438-4ec7-817b-724495285f01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68503ca1-997e-4983-92da-434a2d4b65ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20ce6a1-2850-446b-828c-dad3a6c7301e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52f3cb6-63c9-4b3d-be58-63a81b1517ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f243470a-7149-414a-9863-189df8049cf7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551477bb-f69b-44a2-8b32-0e978476619c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a6f9f1c-e280-4b48-bc32-095454b61a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7662c34-d0e1-4329-b433-7f2fe30fd16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010cd3aa-7c84-49ff-9a9c-48a73f40c687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7807298b-3a55-4785-a40f-3fa4eba1e3fc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23906825-f3b9-44b0-841d-c57b0c8d6da2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a46ec88-4376-47cd-89bb-06d9576d0675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9781e9-3f91-4e7a-9efa-66851e578e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c1dd3d-288a-43bd-b78d-5a5fceec04f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19748245-3e85-456a-954f-e39c81c1ab4c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef785fb-6469-46fa-a159-c44f5e463fa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "721ea4c3-7173-477d-a754-7bc04ecfd76d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2105c34-7939-45fa-997c-236698433142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ab4aa9-fc85-4a88-b6f3-67c031477790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8efd13-44ca-4986-b527-bef37443db79",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4621488b-3369-4046-a103-0e255f315470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "506e7cb1-2e96-42e8-9e75-f87c1acfbc6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "632c4be4-e590-45a2-9c02-ea037681d119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3992fc3a-6e95-490d-9ff1-84f0182230e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c6fd18-8337-45f5-9723-e3fadcfdf96f",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf5a400-80d0-4eda-8699-b6bed1e5b176",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88fcf258-0fa3-4bc7-96c1-f8046fa25eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98731162-0ed9-452c-9a5f-14a110053d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65c87a1-61a4-4d53-9c45-d5dc63620a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7621c4-6278-40d3-8ec1-14fe8fcaea05",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10139f1b-7edf-4474-82e1-842fafca0e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0a8e92-6d72-4519-9241-bce8f057713d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efe99bc-47ae-4224-a0e1-108e6ecb4952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4203b78-b918-47d7-a882-edb83464172b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f098ca-e61f-4daf-bebc-5ea438e60da5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc0489f-35a8-44f1-ad0b-55b78301e683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0898424c-ad72-4059-a457-71c6f6998325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3569137-2f84-4f77-812c-6c7f8c38c829",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13bd629-9879-49e0-8114-42fac30d1484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55ab1f2-da46-4b61-b04d-ac9c5121787e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84173198-b7f6-483b-ae55-79a0ee00025a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68bb5172-77b4-49e9-8214-9c8f88f1d6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d28d0e-968b-4831-82f8-56f57c3c4bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8d293b-0360-4f88-aded-7ced440adf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9113c2-3b85-4e91-9075-6da777fbaf87",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d003d06-4333-4e8f-ae50-49659e54e022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847658fd-02a7-4641-a8c1-976422bfaf59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d25be06-e66f-46ec-9165-9ca675588070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c521a9e-4eca-4e62-9251-96efedad4fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7bd6de-d7eb-488b-bf26-ea1900a8216d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b4c9bb-c04a-40ae-b67f-d9dea32cb996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37a2c633-ed61-4540-abbd-b245f9aa3ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4296548a-6df7-47af-b161-b2a5ad3f9766",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b5b35f-ebed-4f81-84d1-f4af8b0e42e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea6f462-5348-4f88-904b-182ed5198e61",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c872ac8-920f-4cd4-b72e-948a43274a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60587d3d-6ee3-42cf-9ac9-d280aea656c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c9b9ef-5a3b-4336-a5d8-c8a293cea9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce8363f-e615-431c-8ec6-3b4ee3eddeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c740e69-6624-466c-bbe8-81079643c868",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3a38d9-72e5-4c06-b0ff-2ef24ec8ed84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19eaf3d0-c50d-44fe-8d1f-f1d2d99e53c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10f14329-eb5a-4595-9d3e-43b7d70a19fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fae0444-8e00-429f-8c8e-aadc709ef7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192931f8-6853-4285-a38d-fb92b1611fde",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaaf4fc-a69d-47aa-8343-0279e303bc57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c9eb8ba-1ce9-4fdb-9ba3-5865446f7e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a62b85-f012-42a0-9731-289d0990ee82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b056398-d785-4064-9c90-984b90545ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33702e46-2afc-4cf5-95a9-38c9cae28ee8",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b55ec8c-efb5-49d2-abe6-426d999eb534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3859bbd6-d220-4ee0-a71f-52cd371ce8aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e19e0f2-4c8b-4547-9588-380d4e9654a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79da87f-9fbc-4d8c-a273-70d8bae1ddd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91118ff-de1e-4d1f-a700-1020c6963b8c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f7cc8d-5754-4f1b-b6a9-95baa0a46706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4b195c-fb40-4c96-ad81-57fa9bc1cc48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "945d31f3-3777-4fc8-bbdd-d4df5ae3cf31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29440fce-8327-4b84-9c36-5f960ee26e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d46ac8-c998-4347-ba91-d6764ca26eeb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8f87a8-06a8-41cd-a498-d3dcec1c33ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74db8f05-a676-4d77-8eb5-afa1b8126fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2092df1-4ac8-4143-8445-29330447db9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f67ab13-f0cb-4a16-963d-b4c88888aefe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdbfd6a-6653-443d-a7d5-68bd7d667530",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f516691-0443-4ebb-8c2b-6eaac5b0df20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc0927ff-22c6-4aa3-980d-b30a31655ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45ff297-7e7e-422e-9fec-2e718edfbcef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f114cb-3be6-412e-b546-88ab9f626ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378265a2-c382-4412-b7cf-dabea2963de8",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3baaf8-04fd-4a23-8dd0-0293abb64ce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49c8b4a-3150-4d01-b455-73f2087f8e06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8d5787-f4ab-4bb8-9cc7-12b8d68e72aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb02b0f6-76b8-46eb-a509-2122c02c36ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7a95ab-cf74-4d82-8703-5ebcfb3aace0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457512b5-e37c-400f-9d35-ba095101e4bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f2a5fdb-c7b4-45e7-af70-775398a0c0b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4b70ba-653a-4669-abfa-5faff8a81863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65938414-ce2b-4e3a-9101-8cf1fa1dc7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9872c53b-2f9c-4ccb-a0cb-a71f089de76d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fc8c4c-a5bb-4cb5-8f3a-08476c44eaac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08af50c-6a40-4d05-8bdb-f135ec5dfe0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcba7c0-a7c5-4bb5-90ee-fb659f2054e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12117b8d-9eb7-4158-abe1-3163ec87d4c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ab24b8-849a-40a1-a842-199e04975923",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f740a573-09e9-46e1-9d99-9a01577c243b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f89f2ef-2ea4-4757-a063-6c27a9147715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7685a6-00bb-4a86-b033-4b86f28da9eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db230128-fcde-42ca-be37-70e4d8620c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff9f387-96b6-40d6-b2be-66aaf9d335aa",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae4a68a-741b-418f-8b66-d201348439b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c66c7d-1119-4bdb-bf6e-d4e003fadb62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f01009-ac2d-467a-a320-41f0b612b230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57be850-5b40-4b0f-9c7f-9d1b33ee4929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9125513-f4a6-4409-9bed-e0b44f658b48",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913d393e-a814-4d07-a9c1-e0ae1b7ed119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610baf2a-a533-4210-b651-a3cd64b8e564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a93fb32-818d-4190-b09e-57ea27087d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326fdc64-b337-4ee2-aed1-da09be828d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748fba8c-208f-4865-8010-5bcb952c9c5a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2af4837-4e56-4b8c-bc20-f1bcc9c7838f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa9574b-333f-41b2-b0b6-2e4501232ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15731405-0ebc-4a9a-993c-099bb5b054f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "398db34c-0661-4148-948e-1315f856f000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c91a7aa-7a49-46d7-ba82-39db0f240bc2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b221d0-5f49-49e0-b439-184b75c41bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a275c2-9454-4781-8dad-bea79bf8fcae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9983d503-f94d-43e5-b63b-39469da9f187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d709d454-7731-4c83-95e9-73d5a1856ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99953daa-9379-4c84-9639-aecb7d8658c2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c435b5-ca09-4509-801b-9c2b05845178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975c147f-d132-4daf-aa90-d60112ea04be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e038a9d-0961-4601-b98c-554a2fd78d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d6f71b4-62e9-4336-b295-748e7f2d5b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeef5e32-4272-4d0b-8916-2e2b498f0169",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a079617f-c602-42e9-a3a5-a952033e03b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ecfce0d-8c53-43b6-abc3-725a55b8e6eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f5e674-fb25-4549-b8bc-457955bb3aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79c173a-0bc1-4034-b0ea-bbb4b7400cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca9b225-9acf-4410-a385-da8ee8c63a64",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ea3a93-e16d-40f9-81fd-9084a2d73ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca924619-abc0-42ca-8110-db2bc1d08070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422d8e46-92ab-481a-9e97-9ad69745505a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119f9ee5-44f6-4803-a286-4a9a717858f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "255f3e76-b682-40e6-83f7-bd5a4ccb86af",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479b3667-80aa-442f-9d66-5315c405055b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a2e4a2-5ccb-465f-b15a-e74b1a18f888"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef6673c-485e-4816-8ab8-9ecc077a02ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5833c5a4-a694-4bce-98f3-e2533250e069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07740e0a-6f6b-45f0-a0f4-99266b068e44",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40844e0e-3a1a-4802-bf1a-49fa734abffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4174a3-4687-4d55-8dd6-cbaeb52e14de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "772fc05f-513d-41b6-a23d-7be4f5ea89ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e7cd67-6629-4b49-adf1-07fcd725cbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f4fcda-99d9-44fb-8250-2dae73ec9306",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812b0c23-5bde-4521-b442-5749d48b13e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e084686d-1d25-4e16-aafb-257126b67930"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7d2cd9-1b3e-4280-a8a4-56df561dda83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42b00426-9339-4694-8c1a-aa0eab5bc8ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d581f277-7047-4a00-879b-9343788b52b0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c89ed166-bbf2-41da-add1-5a4d49a9f579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe724b9c-8d51-4c83-b7ec-d2a6c936bc7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1805a10-af1d-4fe1-a24f-7747872475d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e111ef8c-5264-45a6-aaea-3174e2463518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137d44ec-7445-4e47-a31d-b7cbf3d273ea",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f324141b-4b8d-4563-ade3-1fe848d47689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a25116-0cd0-4b0d-961c-4a90d4f9ab74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d106b8-d960-4c8c-bc57-88c35f2d4378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99604f00-dbad-479b-8df2-8969284a04ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3824ccd-4db6-4900-b2a9-fcf92d8864a4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaaacbe-fb5d-42c8-a5b1-287fad065cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17ae7df-a819-4a3a-8aab-53f8669af947"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4984e6-26f7-46ea-950d-7fa5f323414c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8319ab85-e238-4d50-851c-b1051d432fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38207a18-d719-4e9f-99bf-d7c06df4a787",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610dd49a-5f7b-4b7f-ba26-cc45586933e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b468e9a7-647c-48d4-9db6-7b1c42d46c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c0b920-27c2-44c0-9650-027571b95cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c6364b-6128-4a57-a003-a0d342d1d60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e267c5c-9be8-4729-a998-96b621330616",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe5f954-f731-46f3-8ec4-d2240e8ff061",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88231f87-d4ab-4cf1-ac2f-71edb22b8520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f6cf4e-2805-4181-bbd6-638609da1299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "719d4371-36d2-40ba-b8f1-a93db87f46e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d29785-149c-464b-9b11-6e507c047759",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d4a953-5c8e-48d2-8efd-482b01c726d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d085ab9-d65c-4280-b7e4-0da0c3689af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd537695-b6e7-471f-a508-f4e3ad58f8bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea0c9ca-ff21-4828-8f90-0878cccaecaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b7df26-3d23-40bf-8105-e79f867f73cd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be35f34-93f9-4580-969b-d2ae4b4dd70e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f9334f-d4cd-4a7e-bd24-7ca42086141a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe98532b-2e93-4bb5-9aee-c30e6c45e3b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc9b65a-07fa-4041-b963-3523f64b5c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efeaa19f-2d70-4949-8ec0-4410489c7443",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a22b155-bb01-4cfa-8d00-7ab59e409709",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cbeec4d-8096-454c-af47-8f5f158670c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a7d2cf-dfd1-4a64-b5e9-75d6d85085b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2cef74-d2a4-45ed-ba1f-7f2c2ad0f2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9d593b-72c5-4f06-828e-1675fb95b7a7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babb24c0-fabb-4e80-bcbf-f84027bb7ef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce52e74a-9f15-4c35-a3f6-60e531b22b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5a362c-9b41-4f1e-a43e-562a637bca36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e80ce89c-a82d-4ed0-a67f-48a84d4a1004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480e5d56-01d0-4b61-a5ac-24de0c4c806c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd7ead0-88db-403b-b35d-8f70642f2119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1fbed49-45d7-40d8-8e41-9bce02bdf3ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7ee3df-1477-4b11-8bd3-1af8bf0a17ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5a45ff-e005-4bc4-b8a5-559e063cc305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b7c614-2a75-4945-8e89-e5c07bbab049",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4552075c-0fd3-4aa3-90f6-752a1e155bec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a427eb6-6fd7-4b45-934d-dc27154ea08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac36f9f-0ba3-4b20-9931-5e52826d8ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b299eaa5-19af-4f05-b50d-647a0072f451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9a44cd-84e1-44a0-b0c0-c90020b3df32",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c95bde-6e9b-4dc4-be5d-66ca7b63a533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8dc7eb7-e7d1-4a54-b901-21af6ee2dc73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a40761-0b46-4716-a2a7-4f3ae77d559b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5684d33-6fd2-45d6-9198-9711c28c03db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e00cd73-de11-4145-887f-71dbb0864229",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f94b7271-2777-4437-8212-9927173c276f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "619a7db6-0649-41d7-abd1-41afaed91431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38478b0a-51ed-4957-9272-7fdbbb8d3c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c4dfa5-541e-4782-a430-0d0e52025160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f42eac-84a6-4a4f-adc1-a8db49d01071",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a156e1e7-4b72-4af1-957d-72f9d6ebc05d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f67b1d29-9a38-48fe-b660-de0f26613b30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfca2d7-faac-4f45-8070-62cfbcd02372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94520184-c149-47e0-b455-6b56ed181c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d194b635-a625-4827-a77c-9841a32002b9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d1e681-5a3e-4133-9c6d-4728e8268cda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0514d2ac-1acb-4432-b919-fc05f4865b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7723dff9-890a-46f2-97b3-b8355acc58b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ea510a-a20b-4999-954d-10ee3a8eced6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18d8eb0-8c0a-4c0c-915a-4f27f3c44f63",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f42b480-5e66-475f-89f1-935d2d4305a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80c625d8-113f-45bf-b820-cf2f71d13d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c22a5b-ea63-4713-9871-92de4025b490",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c05ab5-dea3-4f95-86d0-27b79c347fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02913517-feda-4881-8079-d1402aba0b22",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3328cdeb-8e9c-49ee-bf25-abe8cdb20123",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd526d09-7fad-4ddb-9d49-0dd8a30f551d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cf2607-cb87-4a69-af82-49cae292f7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695fa685-dcf1-4fb5-a11b-bb5fdfbb1de4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b29bd6-fd81-427e-a185-30ff6683eac5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a235d368-c5ac-4983-9d44-6dfe0ded99f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae35c01a-bb27-4c58-9f47-199601b9d1da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d08712f-7c90-47d7-9056-2e4dac04573a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64273ea-0869-428e-afba-1f29bee3fb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5f2ee5-f8ac-40bd-9703-2d7669f9a22b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f90bfa-baf5-4cf7-834f-a88da5df95eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7503e9f7-a054-4c5d-9a50-3e0b34831786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cb3a3d-a0bf-4325-ab0e-5568d0684a81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06b831f-f227-4010-b173-e5c1608754c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7a83b7-1920-4683-91a8-18d947f62f88",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e9f466-c392-48f3-8d5c-932e4412c50d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be3172e5-26c3-4c02-9881-de2f3a4e8268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e846d648-0956-4492-be80-f1464a49ec01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb883c8-f685-40ae-bfae-24bae643b73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c39a686-a07a-4a87-8a4e-859c7ba0fad7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767e8acf-8581-4b2a-9a98-483fdde67aec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8181f7fb-5593-47d4-aef4-2e44c7acb8c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "843a96a9-f282-41ce-96a1-2038e8be5f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95e53c5-217d-40d5-80ca-79cdb73c146e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837a47b1-3f1a-4226-985d-caed85e4190d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f2c74a-3930-46e3-b7af-fbe99b2e0b26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e82fd76-c7e9-41a7-8af5-0e14a72777e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8245fa-2407-458d-88db-598d9146ae97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a4eea8-b4e5-4428-8130-4ee42e6c01a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56fd12d3-3910-4dee-a59b-84e25e1b0495",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f68c6b-7e8f-487f-b181-6d9a94c63358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d83cdf9d-9599-4217-ba99-049817e7abb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d09dc45-6bed-42de-a4a5-0da1a161d36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d83fc6a-13e8-41c3-82e2-6c18492d5156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaec15bf-9d3a-4666-a654-16bb7a4f9299",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7cc1581-e716-4fb2-a9e2-143d51980ed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b1c0a45-17bd-422e-836f-35ddf0ae9165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc23f049-b357-40a9-a702-5b621c46a4c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c3b4f15-98eb-4fce-b84e-aa679c235add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d71e3f16-8f46-47f3-8492-378227006831",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb641c3-f434-495d-9749-3e235ced1eca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d877d97d-50d7-4f53-9255-b1491dcee305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10799c2d-09de-41d4-8752-ed558841d519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01153f41-e691-4fa6-ab9f-a8a617ccc97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302d07f4-10b3-412e-bf8c-773c2e8306cc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7cc243e-3eb8-420a-9b18-4248f3a9063e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e4968e3-7287-4f48-88ce-5ea156ebf268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a17307-0266-4ff3-a53a-2854d8ebd640",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758725d9-1ebc-4b8a-9864-cda69aeab198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50542d87-9922-4a63-9a67-7e1863bbfa46",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd40643a-d627-4572-9206-5ac936d9921a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e81fb49-505f-4d0c-aad5-4e1b05a21591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99b6e56-162e-429f-b161-307349fbfb0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff9aee8b-694e-42ce-b1fc-bb7625ed2494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd516be0-4b13-4753-8493-a80fe52dbaa1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10efacde-4566-4883-acd3-75c2c4e65d7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32df4230-6a68-445d-bf81-514d9c13ec69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efa4094-d664-4c51-a438-cf2e69a66c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "083f08b0-2123-4c07-825e-18a935d19f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28bc8b75-2592-467c-b379-541bc447229b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc95c4be-0187-46c1-83c7-49f7bf3bd4de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca8b4b6b-15f8-45c8-898d-c1a04575fb2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "115dce19-c4a9-4951-9531-59d2b5257e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6a14759-e59c-45ef-b0e8-a0b99abade7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313f9685-fc07-4808-9c81-18553923cb7b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93622477-223a-4373-8a00-99dd0f6eacb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69cc5de4-38e1-45c8-be2e-eedbd56a72f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a61986b-b155-462d-9a18-334796d1225f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8acf5f-591c-47c6-9cec-c0d02738ef14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e08537-b539-4a84-b9e1-92109bc34d64",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bf48d8-4c9f-405d-96c8-5fcc74c0af70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50d6ff16-2aa9-4dcc-848d-9a63da62f163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a318436-2583-4178-85c2-df8e361b9a43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa21e290-fc70-4216-9aa3-6bbf21cf9c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6409dfa-fa53-4691-ba8a-56d6f5e8465d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e557970-4751-451b-8fd7-0f445e83074a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf1a3e2-a7a4-4896-b0cc-bd6ae6eebc08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e002d7e4-831e-4601-a250-ee981d7684e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccaaeab-6d09-43a3-a061-df7d01f26c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a89c82-73b2-4f02-bb8a-08900451e95e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b37801-c731-4a0d-9c4d-e60f16b7b7a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2795dfa-9034-4a37-b183-4811030d8305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f3306e-6f24-4e02-8a8f-c00100c9c043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b69824ba-0da9-43ab-a01a-6d884be21e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff73eb8d-a353-44d8-ab59-fffbe050dc0b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24a9367-72af-4cf7-8253-69e0bfcdce70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc890015-4a94-4edb-9b46-70585b501d9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2d431f-04a8-4068-bcad-01bbf4cb655c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed34930c-8b00-4a66-98d9-a0904557de11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a652b91-ef87-4cbc-9ca2-ac85a3cc8b1f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab985d0-fad2-486a-a705-17f19ef31d67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06632ea9-f034-4e7d-89b6-ef45696e88e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bad59f-31b9-4b57-be7e-74dc2d3ad18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6ce503-c429-4dd9-84e4-87ed6990b9f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d65a1bb-e11b-4793-8306-122ba7c191ee",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a34fcaa6-f568-45af-bad6-af0fa90762ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29346fd7-14ad-4ce4-bb4b-5c25837ad63e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc420bf-629a-4ce0-92c8-5ac578ab8ccb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75e04ec5-d4c7-4fb9-9441-0fe11bea6480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "773157b3-0cc9-4612-92df-0f4827f0a54b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27bee8f2-dea6-4545-94f8-2a67057cc656",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afe6e126-7bf6-4e7f-8db4-29bb744074ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69084fb7-5c43-429a-8c70-1644405e71cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e36949-2846-4685-b1b3-4e351bcf8041"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05fb5c00-ff25-4288-9364-f1dac2695ceb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "65605268-cebf-4dbf-90cf-2cd10b5f0f13"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa17c06f-da2d-4391-8beb-fb53e9c30e44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "768feb04-da85-4cbe-b179-8c73181cd486"
                    }
                  }
                ]
              },
              {
                "id": "a7af4add-ff68-471f-bd38-b35584ec16e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "71c1cb18-8c71-48c6-a281-3990246edc75",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2630e1e1-6094-4549-8669-5a4037fe2076",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1f739b09-6155-4345-bbc4-7a06693a4097"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7131ff-eeee-47d5-bedb-f3bd282109d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "946d6e1d-7f42-45ba-a701-cbe25e15d438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6686934-ad35-4e4c-b34d-f852fcca7853",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f925a535-5b8a-4562-a654-221a3f2f0dd5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f837e537-ea97-4705-b0c1-f35dc37a330e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5d3af3-ae38-478f-af60-b89ea6875997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd438e53-1224-47d0-80b7-0562c27eb6d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80dddc48-46c2-4cdc-b51a-5d5ade901633",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "914279ba-3922-48d7-9bd8-2cd77305c0c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f24fc836-a0ee-40f3-9c96-3e7ee5936866",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8681c3a7-2449-401d-a1fd-af85cfb49d24"
                    }
                  }
                ]
              },
              {
                "id": "ab97e228-7db9-4292-9fbf-708d173c7576",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c87f477e-5dd3-43dd-92c1-5034f865b9c9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d07fbcb-914c-4934-9a27-f0f3d35e589c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "758d6cc9-f106-412a-9086-89161b9dcebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef13d3c-ff7c-4516-ac09-8c71c9ecdfd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "741668ae-2e86-47bb-ac35-c621032a2e29"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "94c11d98-c728-42f5-acb9-33a2a6eb5a23",
            "name": "Positive Testing",
            "item": [
              {
                "id": "425cab37-913d-4da1-a171-aa5af382a717",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82c8f289-b3c9-4a75-86f8-0c65d3e6e646",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "df00b25e-48c6-482d-ba7b-1e9ff702458e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "479f7763-d85a-4d01-bc8e-6071a19d48b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63e653f1-fbf8-46b1-8ff9-d8f22ab32046"
                    }
                  }
                ]
              },
              {
                "id": "a3ea84e8-6865-43a9-bc11-beb94b78fd4d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f6296f7-7007-4c64-8fad-ae43ed4cbb78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "83c0a6ea-cce4-47e2-b93f-b350261933c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00bdafe0-d1ae-4618-bea7-acc2815a0e42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b4dab44-43e5-4022-aabf-a9020b3a0833"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05c4eb78-cd75-41d6-bcfb-7e5ba4c092f4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9f2127b5-f750-4429-b511-171a5c4fa2c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fb9067d-f734-47e9-a7df-80fc49fd3428",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9d9c6c40-ad5e-4ded-9511-fd6fcf39e728"
            }
          }
        ]
      },
      {
        "id": "fa6126b2-6ba5-4f41-bbbc-7867d5e079cb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a929cfda-75cc-45fb-9d63-bef46162d503",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d520116-573a-488c-a5b8-171c1fbbf5e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0fa274b1-3260-409a-b9f2-5ccac16e6a8f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a255643f-5a3b-4c22-905c-5817b4def155",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7dd9e50d-9ae1-43d3-9c64-459651adf655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db01736-acd9-4bd5-89e3-0ac82adb4114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "033a13c4-49bb-441c-bba4-6ce2ed87841b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a0a9f9-47fd-4cf2-9088-d6c6079c33b8",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18976dee-ba3b-4a41-9803-1fa45de99741",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2c096036-cb1b-4c44-8c8e-df18c90f65ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2ac5a0-dfcf-4481-ac4e-109f4789f4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fca5ea5-9ca8-4dda-adac-4ee64690c619"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "282fa26b-295b-4c17-a1d6-30918a357958",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9dbade9-08e0-4714-aa12-fdbed52d4799"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe94203b-b09c-4663-92db-28ea44c0ecf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72d8b5fa-9ba7-485c-8ecb-ab2fb849bc13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57566e54-2810-4fcc-bf38-a01977e76355",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0b84aef0-a876-44c8-b4bf-9120b9036491"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f321165-680d-4888-bf82-fca0e4838547",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52bf7198-d23a-466f-86cc-416b3168187a"
            }
          }
        ]
      },
      {
        "id": "b0331d61-602a-41ac-abe4-076562eebb9e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b7705e3b-0148-4438-923d-ccba3593b4fe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa1eddca-32ed-48c9-a762-ebaec653ae9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2d2e7bf-aee0-4807-a92f-011b0a65112e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a8675e-0dc5-4caa-8a4e-5f1c56bbae8b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0d5c7db-65ed-4c6a-ba55-edd53853b690"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b866df21-83d1-438e-93b0-4f36ece690f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a86311f-6e06-47ce-811c-59fee0fd50b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff80936-3125-4271-b1f3-93857f06176f",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f4cea2-ff99-4dfa-9768-0bc2f5f2b35b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "faf12a88-1539-412e-b108-66f004d8ff24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d6631b-c6ad-412e-b3cd-e6fe64e39fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "524e3402-cc54-4b7d-a2a4-cd6ebf8bbafb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eaa4c360-8a63-4b69-ac9c-9c1ec72bcf6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da2241a4-ae5f-4d9d-ab6b-865d095d5ba4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b78023c9-dfa7-4d89-8163-0fc414688b15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e60069c4-5c67-4a1e-9eea-0eb3ac412c74"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a28cb827-644b-4bc1-90d3-24018eb1db43",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f27e8af1-f4a2-4c92-a322-01b79363cd02"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "370b72e7-023b-4520-97c8-424250c61aa7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "69d08aee-d17e-43e6-98e2-08b6857e10c3"
            }
          }
        ]
      },
      {
        "id": "109e9229-fd46-47b7-9557-037d0e0e8403",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "cd76f69f-8f32-4d12-a6ed-77f49ec1c334",
            "name": "Negative Testing",
            "item": [
              {
                "id": "567a23f3-283a-4f53-ab0f-cbd0ec019e27",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6ee40ec9-ae06-4321-82db-8e61f0957691",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1caaccd2-bbb4-460e-a1a5-867eeb55cfb5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d339b3a-5201-49c0-9485-664727d7526f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ddb9ad-dde4-43d5-9c9c-7a8ea651e20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0d52eca7-34b1-424d-a471-0b640117fd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fbbca2-465f-4dc5-b8c4-885af2ce525f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decd8c90-df00-423a-8a42-0181b9405deb",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a158c815-23c3-4293-9f84-a8bb6495e8ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e925a01d-d964-4db7-bad4-9c93deeed883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b63b5696-f89f-4b1e-be6d-fd3a27eab363"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5db199e5-1a45-47c8-9abe-75b6347650af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0c4f3ca-d613-446a-9a02-931a7dfd1dc3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1826021c-69fd-498e-8dda-47e705138e08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eec5e89a-0ead-433d-bf43-4c61e4a0f23b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be3d550c-4b99-4745-a8a9-7cad3636372e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "afa084a0-fda0-457c-bded-c82d55d440c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ea7fb07-c2bd-4b95-b9a9-0392d9335c69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ca653e3b-23fe-42a3-a427-0a46e3f9a02a"
            }
          }
        ]
      },
      {
        "id": "aaff15aa-e6f0-4f58-aadb-6fd94836aaba",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "702376a2-4103-42b9-b6e7-edc5b4009a4c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1d4f6c8-84bd-4c23-9f73-f07dd70dbb8a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "91f9e17b-7d07-4469-8f04-0b519608de49",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3441c362-2da1-4040-ab7d-60d6515ea45f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4deb5543-4b24-4b4a-afd1-d27f43ed2487",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 15.211538461538458,
      "responseMin": 3,
      "responseMax": 431,
      "responseSd": 48.27068569673667,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1684456630046,
      "completed": 1684456644860
    },
    "executions": [
      {
        "id": "3870e762-8a8c-4154-80d7-51897306eb4e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "42f07e3e-6a44-409f-b092-13c3246e8938",
          "httpRequestId": "0b15decd-be80-4dec-9e72-3de8e56607ad"
        },
        "item": {
          "id": "3870e762-8a8c-4154-80d7-51897306eb4e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "962d56e3-3170-47a3-a22a-5ddedbbb032e",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "5aba86eb-6d06-4345-80c0-1065b4345de3",
        "cursor": {
          "ref": "63563c67-2f96-4e68-b35e-e638c866586b",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5df847df-f35b-41b8-8df1-6fdbbc6296c4"
        },
        "item": {
          "id": "5aba86eb-6d06-4345-80c0-1065b4345de3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7af704ba-216b-4f12-a22e-bc94f33d1275",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "3d0993dc-41b8-40d3-b04c-b78f7c18d363",
        "cursor": {
          "ref": "29fbddd2-c153-4aa0-a4a7-e0f1862c75db",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "623ed640-1f2d-4e79-ae1a-e96a4ecda3a2"
        },
        "item": {
          "id": "3d0993dc-41b8-40d3-b04c-b78f7c18d363",
          "name": "did_json"
        },
        "response": {
          "id": "20dc252b-0c0a-4de4-978c-faa54609f454",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e54b958-b7ab-44a5-a4c0-4dbb346af80c",
        "cursor": {
          "ref": "ffa94a36-5dde-4e63-ab3f-9f6f49423447",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7deabfb3-e1e8-4048-9c9d-10c02b9ae8e6"
        },
        "item": {
          "id": "8e54b958-b7ab-44a5-a4c0-4dbb346af80c",
          "name": "did:invalid"
        },
        "response": {
          "id": "d57864b4-e364-4795-af9a-21bdb6364bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e54b958-b7ab-44a5-a4c0-4dbb346af80c",
        "cursor": {
          "ref": "ffa94a36-5dde-4e63-ab3f-9f6f49423447",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7deabfb3-e1e8-4048-9c9d-10c02b9ae8e6"
        },
        "item": {
          "id": "8e54b958-b7ab-44a5-a4c0-4dbb346af80c",
          "name": "did:invalid"
        },
        "response": {
          "id": "d57864b4-e364-4795-af9a-21bdb6364bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37abcec1-6def-4a1f-b7c1-55366da583bf",
        "cursor": {
          "ref": "09f09009-3657-4341-94c1-c00ae082cafd",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8d9e69a9-4655-49bf-bca9-fd518567dfbc"
        },
        "item": {
          "id": "37abcec1-6def-4a1f-b7c1-55366da583bf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fd33a5e8-a219-44ba-9c31-4a94a4f4d6ed",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c8c581-b04f-4bea-b243-beaac5db53a9",
        "cursor": {
          "ref": "003d68ff-8f90-436b-8dab-787065c1f234",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8f9aa0ba-3bb8-4110-86a0-9c485a4a01d7"
        },
        "item": {
          "id": "29c8c581-b04f-4bea-b243-beaac5db53a9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7ec556f3-7b24-4a99-a593-1b800d9f90be",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e69a235-6049-4e00-b80a-aec24c216bcd",
        "cursor": {
          "ref": "507b1a3d-5670-4f7e-b595-ced4c6c45129",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ec1b6cb8-793b-4f6c-ae49-1a6f12c21fc8"
        },
        "item": {
          "id": "2e69a235-6049-4e00-b80a-aec24c216bcd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6a6de253-d6d5-43f8-9550-ac586418329b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77689e78-e3f8-414c-b0ca-64390e0688fb",
        "cursor": {
          "ref": "4c68e3e3-1265-4696-a638-f722403fe085",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bea2ee7f-e1d3-46a0-a086-27d445556e04"
        },
        "item": {
          "id": "77689e78-e3f8-414c-b0ca-64390e0688fb",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "43f0b710-ac39-4ee8-97d3-c82368288dec",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77689e78-e3f8-414c-b0ca-64390e0688fb",
        "cursor": {
          "ref": "4c68e3e3-1265-4696-a638-f722403fe085",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "bea2ee7f-e1d3-46a0-a086-27d445556e04"
        },
        "item": {
          "id": "77689e78-e3f8-414c-b0ca-64390e0688fb",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "43f0b710-ac39-4ee8-97d3-c82368288dec",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19509df5-a5af-4456-8278-ece657681a6f",
        "cursor": {
          "ref": "1baebdae-f50e-446a-8e1d-f044f353efa9",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "fa8a4f28-d634-426a-8559-e3aa81b62e85"
        },
        "item": {
          "id": "19509df5-a5af-4456-8278-ece657681a6f",
          "name": "identifiers"
        },
        "response": {
          "id": "b58676cc-9d2a-458e-a618-d198fd925197",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9a252f-c289-44af-bb1c-2daa5e95b047",
        "cursor": {
          "ref": "2646b307-2a44-408a-8364-671ff2ab5346",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c4ff3cd5-a860-42e5-98eb-f96182627466"
        },
        "item": {
          "id": "cd9a252f-c289-44af-bb1c-2daa5e95b047",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bb6112fa-e9d5-4599-8e2f-012fccbf08ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9a252f-c289-44af-bb1c-2daa5e95b047",
        "cursor": {
          "ref": "2646b307-2a44-408a-8364-671ff2ab5346",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c4ff3cd5-a860-42e5-98eb-f96182627466"
        },
        "item": {
          "id": "cd9a252f-c289-44af-bb1c-2daa5e95b047",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "bb6112fa-e9d5-4599-8e2f-012fccbf08ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3b5009-e384-465b-ab38-6b646e214a53",
        "cursor": {
          "ref": "f768b9fe-c7cd-4f81-a4bd-760b8e344903",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0a723643-c852-4354-9889-d1449f0bc395"
        },
        "item": {
          "id": "ff3b5009-e384-465b-ab38-6b646e214a53",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "66cdb6ea-9e92-4998-8dce-c45d5bd01b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "375ed0e0-d7ad-4254-9e12-385402ac5059",
        "cursor": {
          "ref": "d1c1a256-9b76-4bfc-9c7f-702a2854e4fd",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "585fccd7-d4db-46a3-9e54-e70644f1bff7"
        },
        "item": {
          "id": "375ed0e0-d7ad-4254-9e12-385402ac5059",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b1f743ff-fc20-45b2-a76d-2c32800e50fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb856131-b7f6-45c8-bd12-739f9442296d",
        "cursor": {
          "ref": "3e4ac72a-156f-43a2-b482-33fa485e68c1",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b8a5b40d-7c62-4483-b7f0-63eba21be72a"
        },
        "item": {
          "id": "bb856131-b7f6-45c8-bd12-739f9442296d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6eebe871-7317-4ce2-9723-fdb2c9027888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554f87c4-7b6a-47eb-acce-a2a36e2ee464",
        "cursor": {
          "ref": "e6d6e639-b08d-46dc-bc02-4422681fa210",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "926a25f2-87f9-459d-9f23-9c47ae93e4fb"
        },
        "item": {
          "id": "554f87c4-7b6a-47eb-acce-a2a36e2ee464",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a8660dca-11fd-4f81-9933-7387ec1473ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae64b98-1d4f-4088-a13e-304b840c72b4",
        "cursor": {
          "ref": "29de356f-a5f2-4f51-90a4-aa28b5c81f98",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d30bdd5c-be62-49fb-9933-761cec2dee94"
        },
        "item": {
          "id": "dae64b98-1d4f-4088-a13e-304b840c72b4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "439449cb-9c30-438c-a5ab-ed4019eff39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93eee21f-050d-446a-9512-ea479f103761",
        "cursor": {
          "ref": "33200ae3-e3c6-46a6-8e76-811f63a9cb34",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ee2a7b05-59c8-47db-9d48-c9605b973ca4"
        },
        "item": {
          "id": "93eee21f-050d-446a-9512-ea479f103761",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "deb96c8d-a920-4adb-abec-6b8efbbcc4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a4c1fe-8598-47a7-b0ef-cba204c1d9ba",
        "cursor": {
          "ref": "6cd141e4-dee6-4164-bd03-e5ec2e36e862",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5a261f87-f887-4fd6-919a-b6a71d6b2639"
        },
        "item": {
          "id": "f8a4c1fe-8598-47a7-b0ef-cba204c1d9ba",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "7793e0ea-5759-4451-8c22-22921e9f5903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb33eb2-039c-49ad-90c9-eb65751c15f1",
        "cursor": {
          "ref": "bc2e3273-9d6d-4cec-99b1-d82f08c2c963",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b1eda34e-c131-4a2e-b340-f11bdbe04a7d"
        },
        "item": {
          "id": "7fb33eb2-039c-49ad-90c9-eb65751c15f1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a62566d8-ab51-4b18-942c-05eecdc0cfd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f326b3c1-5da0-4b04-8faf-803250d61ff1",
        "cursor": {
          "ref": "8adbada3-01a1-4acb-bc63-c8dbcd5fcb74",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e75fcd23-be0c-41a3-ab26-55720676552d"
        },
        "item": {
          "id": "f326b3c1-5da0-4b04-8faf-803250d61ff1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "63ba0254-851b-4031-85c7-c88e21dab7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f03e01c-2f13-4b9a-8cbc-27628de39e5f",
        "cursor": {
          "ref": "fc077c37-db80-4c88-a8d1-55e860f38500",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fc480362-28cb-4424-b053-10255240ad7d"
        },
        "item": {
          "id": "8f03e01c-2f13-4b9a-8cbc-27628de39e5f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6af2dcb0-4d7b-4887-bb56-0e6278301d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf952b8c-0c8a-45d9-88bd-7f5bc159d12b",
        "cursor": {
          "ref": "fd40c0f4-9cc3-4584-be42-308639c9cc6a",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0d9e97aa-54a3-4901-af6f-24e694e4b427"
        },
        "item": {
          "id": "bf952b8c-0c8a-45d9-88bd-7f5bc159d12b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e3ebebb7-caef-4f84-b847-bd006df6115d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fac67f-4bba-4306-a3c7-f86234cb2593",
        "cursor": {
          "ref": "e7b9a4fe-cbd8-4ab3-bb96-c2994c6ffce4",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fb4424b1-4102-4042-88cb-afaa9e11f0d1"
        },
        "item": {
          "id": "33fac67f-4bba-4306-a3c7-f86234cb2593",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "76e4ac65-c023-4ed1-a7b8-3dec353de4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ee1298-391b-4952-8824-a21b478a0ad3",
        "cursor": {
          "ref": "686c7440-59e1-4ea5-b88d-c0673ff78bc7",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6fba4bda-d83e-415e-91c5-e3c640100b0b"
        },
        "item": {
          "id": "15ee1298-391b-4952-8824-a21b478a0ad3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6303b756-7046-43b0-952a-65000ad93d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade450c8-4032-4ea7-a756-3b3e62ecfeb6",
        "cursor": {
          "ref": "8e3d8c10-3c6f-4aca-ab75-6ba65842fcfd",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0a4e130e-7286-41c9-8125-1d4b7bde2e89"
        },
        "item": {
          "id": "ade450c8-4032-4ea7-a756-3b3e62ecfeb6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8ff0b1f7-b715-4520-8184-cba593f3e7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc6865a-22f4-4320-861d-3f0e53aa6c2c",
        "cursor": {
          "ref": "34661e69-2baf-492f-b08f-2b5b68dd2391",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a1ae0a23-d611-4f28-af8b-5381d052ebab"
        },
        "item": {
          "id": "2cc6865a-22f4-4320-861d-3f0e53aa6c2c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "eefbaea3-9ace-4702-acbf-e29f98898c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e341762-abad-4167-9790-a8a75a8ea3c1",
        "cursor": {
          "ref": "96fd0193-2750-4abf-a0c8-32ce102c0108",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "6fabbd80-b468-4e22-85cb-2e31f45c5411"
        },
        "item": {
          "id": "9e341762-abad-4167-9790-a8a75a8ea3c1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3cbebfed-e767-4d36-a2b6-4a67db7ea4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55edb73-7dec-46a7-b5c0-bf004caf52a7",
        "cursor": {
          "ref": "3805bf50-26ff-4098-8594-4e37b813b8d8",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a1846c8c-59e9-4400-a941-0f2d5f9d1b9f"
        },
        "item": {
          "id": "c55edb73-7dec-46a7-b5c0-bf004caf52a7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "70fb3d15-ae83-4b4d-846e-dd25b1c26cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7437129d-72d0-40bf-81b0-427889901908",
        "cursor": {
          "ref": "9c6a2f66-3ec8-4719-8283-b2294f123e8f",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "82c96998-eafb-4afa-b948-d3ed349a0a50"
        },
        "item": {
          "id": "7437129d-72d0-40bf-81b0-427889901908",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4e9da89f-de8b-45da-9939-04a38f1be12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b7b98f8-43ae-4893-81a4-b2f2ef961f6e",
        "cursor": {
          "ref": "99e296fa-62cd-40a8-9244-b8e6eefc7ffd",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6aa4e380-57dd-4aeb-b117-a71fe5dce385"
        },
        "item": {
          "id": "8b7b98f8-43ae-4893-81a4-b2f2ef961f6e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3753c69b-bd5b-4076-8d6c-d3be0b14ca7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbccdf2-0443-45b5-a540-bf868ed4f4c7",
        "cursor": {
          "ref": "aa25946a-24e1-45f9-94bd-d8c07a2e933c",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0391b5d8-6d23-4d41-af5f-bd50b5c578ef"
        },
        "item": {
          "id": "9cbccdf2-0443-45b5-a540-bf868ed4f4c7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e2a4e26c-f80d-46f7-9cf5-c471556376df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017b44b4-0699-4f84-892b-f2ff64aa45db",
        "cursor": {
          "ref": "c2adb39e-5513-41b7-84d2-1450360ffdef",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8041461d-c3a4-46c7-965d-1df8b3b71e7a"
        },
        "item": {
          "id": "017b44b4-0699-4f84-892b-f2ff64aa45db",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "74de1202-38ce-4bf0-8b87-3cebf12ce146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7a0c7d-405d-4ddb-8c2b-17cc95e68302",
        "cursor": {
          "ref": "1b98a73e-7714-4e63-8c6a-bab736dc5285",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3b0622bf-2a6a-4564-b8b4-7156ccb35279"
        },
        "item": {
          "id": "fd7a0c7d-405d-4ddb-8c2b-17cc95e68302",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4a64b81c-989d-4e7f-b314-87fb8a0dc8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b1b3c6-a858-4009-be14-988b43446053",
        "cursor": {
          "ref": "0d8eb4be-1d47-464e-a375-11e05427b30b",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "65c019b3-213e-407f-a999-9edda10552e2"
        },
        "item": {
          "id": "11b1b3c6-a858-4009-be14-988b43446053",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a7be0e61-b56a-4580-9e47-682bc595913d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948752c0-32d6-41ab-ba2c-a9b8d569cf88",
        "cursor": {
          "ref": "cf2a643f-c124-4bde-8de2-c4a91ef11cae",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "69b3bd51-760c-4924-8337-4b25c30b9e50"
        },
        "item": {
          "id": "948752c0-32d6-41ab-ba2c-a9b8d569cf88",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5bb23547-c32c-4480-8f56-48ba77f3dc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaf96c8-cae6-46e4-ad41-59ef172e96c7",
        "cursor": {
          "ref": "f61d6ef3-640f-4bec-ad01-ad4b50ec0de7",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "5b3e40fc-abab-40e0-a9f4-58abd29baadb"
        },
        "item": {
          "id": "fcaf96c8-cae6-46e4-ad41-59ef172e96c7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4ed9471f-3b93-4e31-9904-9b21c75c7a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95a1e7b-4dbb-43a4-865b-21a766cad004",
        "cursor": {
          "ref": "fb042a67-ca04-4cc8-a1cd-004d561111a6",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c32d21cd-dd91-4adc-8cb5-2776c4be5651"
        },
        "item": {
          "id": "a95a1e7b-4dbb-43a4-865b-21a766cad004",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "20392ec5-c510-4b55-a6c1-794c698212a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfc269a-e277-48ca-a7a6-0ab88af8202f",
        "cursor": {
          "ref": "46319f6c-7f19-4590-9be1-9a7c60700980",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "06b45a20-64c1-4dc8-b5d4-5ca39f1cf9a6"
        },
        "item": {
          "id": "cbfc269a-e277-48ca-a7a6-0ab88af8202f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6d52aa4b-636e-4305-a715-6af6a6e96267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f98e4b-6a40-4217-ab83-9ce8475ff61d",
        "cursor": {
          "ref": "8e3fa545-a6ae-4b34-8b81-70c4abbe4cdb",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0dc7fe7f-f14e-43be-b04a-8eba8b1aede0"
        },
        "item": {
          "id": "a3f98e4b-6a40-4217-ab83-9ce8475ff61d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1b44a892-5533-4242-948f-0b07a86f8109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c425d728-c4b4-4495-9240-ca24f92b813c",
        "cursor": {
          "ref": "3dfc14a7-90b9-43a8-9c50-c2b2fd8a8438",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f2e12a6b-d171-493e-ad18-e17e46eb7569"
        },
        "item": {
          "id": "c425d728-c4b4-4495-9240-ca24f92b813c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d3402db0-9892-455c-9e46-35546c7af0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "951c7d4a-4c5a-4ee1-ac15-6a009284a4c8",
        "cursor": {
          "ref": "9ed60a6f-c2ff-45e4-98a2-0314de1b042e",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "35a2b711-6b68-4168-ab73-7ecc55817fa2"
        },
        "item": {
          "id": "951c7d4a-4c5a-4ee1-ac15-6a009284a4c8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "cec7dde1-336a-4d13-b6de-993b4ac2d0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48bd6bdd-5822-4a1b-baf0-842a89b4519d",
        "cursor": {
          "ref": "04c2e39f-62f1-485f-b367-1c6e2d20d262",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5f131679-fbca-40da-ab64-de464d776e8a"
        },
        "item": {
          "id": "48bd6bdd-5822-4a1b-baf0-842a89b4519d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a04beb00-ee24-4231-be12-e2f409c0f766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5082eaf-feb2-4aa2-8c37-6cb286a495cc",
        "cursor": {
          "ref": "ee74db99-2089-46fe-9e2b-c052533633d4",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7085fac9-68b9-40dc-85e3-d18ba71c976b"
        },
        "item": {
          "id": "b5082eaf-feb2-4aa2-8c37-6cb286a495cc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "45526bd3-3146-4a67-b3ae-e5f613e7c763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9367236-03a0-4495-a272-f079d98fde46",
        "cursor": {
          "ref": "cbd852e0-5187-450c-bc96-618ecf9e26fa",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3e875045-f08e-42ab-8fbe-48730cc516a3"
        },
        "item": {
          "id": "a9367236-03a0-4495-a272-f079d98fde46",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "df3d2982-2c5d-47c8-9ec3-f9be5cd69736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5aa877-5d08-4797-9ae2-3dbae7d42c5c",
        "cursor": {
          "ref": "adcf5931-6795-46fd-875f-137358be6e94",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ae1a2844-76f8-49b1-ae59-0399065438e8"
        },
        "item": {
          "id": "0c5aa877-5d08-4797-9ae2-3dbae7d42c5c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "559dd402-4d68-40a1-b67b-4aea35d58ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae16c81f-d21b-4c8c-a284-a4b4d9b3d9bc",
        "cursor": {
          "ref": "ffa2d910-4a1d-4938-b0ac-0e62e2e67bfe",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6ded7af5-d2b9-4c78-8687-6c3f615dac76"
        },
        "item": {
          "id": "ae16c81f-d21b-4c8c-a284-a4b4d9b3d9bc",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "541bcbfd-3e53-438d-b38c-d9d417bfe925",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3363e7-5f21-47a7-b182-4de3553c243a",
        "cursor": {
          "ref": "92c175b5-8a6f-47cd-87cd-bc32dd5b2f39",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6fe7df73-59e6-4e5f-97f3-6b8d0c9a21a1"
        },
        "item": {
          "id": "dd3363e7-5f21-47a7-b182-4de3553c243a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "54778745-542f-4f2a-9730-8acb9eee74f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974e4b91-4880-46cb-b61f-17747f147eb6",
        "cursor": {
          "ref": "4d60db51-e869-4bd5-8182-8cd1f448ac5e",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e4275866-473c-4ef6-a7a8-60a89ab69b23"
        },
        "item": {
          "id": "974e4b91-4880-46cb-b61f-17747f147eb6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "beb9cebf-ba51-429a-a276-72eb3e250659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b96fe64-16c9-47e1-8095-6c899cd64ea8",
        "cursor": {
          "ref": "500a8c96-045a-454b-a5d4-69e070bb7631",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "14c41a2a-f1cf-4336-8fe4-5b41760bc7a9"
        },
        "item": {
          "id": "5b96fe64-16c9-47e1-8095-6c899cd64ea8",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2f3fb17b-59eb-4a33-ac26-07dfe6d534bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c46feab-c061-4fb0-bc46-407fa71f5553",
        "cursor": {
          "ref": "46a4184d-860f-4f14-b8a9-fc3b4f55ba72",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fdc9dc71-f3aa-4f4e-8970-1d609708c07e"
        },
        "item": {
          "id": "8c46feab-c061-4fb0-bc46-407fa71f5553",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "32b85fe9-5c27-482e-a52e-ef3a092df23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea27b0e-a2a1-4180-9d46-4d9ef5140479",
        "cursor": {
          "ref": "d24ad496-e624-4e04-b92f-fc0ba69f42c6",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "03a6cb62-413a-4117-9653-dcb173d2d6ad"
        },
        "item": {
          "id": "fea27b0e-a2a1-4180-9d46-4d9ef5140479",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6651e48c-9a19-4c80-8a9f-d8a07f8e3441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bf6d08-cc18-4a28-9271-bc189a292c57",
        "cursor": {
          "ref": "c375db9a-0570-42fa-8d5c-ab5ae10a7e6f",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cef0e3e7-ed7f-4324-a042-60768a388a4f"
        },
        "item": {
          "id": "40bf6d08-cc18-4a28-9271-bc189a292c57",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f6a7ef12-24f6-450c-a339-b976984a3a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8150af44-d3b6-4c9c-930d-a6471cb9464a",
        "cursor": {
          "ref": "1ae056d8-ca62-466e-bdfb-5165b1e3436a",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d498211b-97f5-4a6b-9fc6-5017e688028a"
        },
        "item": {
          "id": "8150af44-d3b6-4c9c-930d-a6471cb9464a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "af9ca276-583c-4bd7-9b18-c8bbda6b5c85",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 13,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a94fc55-d08d-48a9-9b41-f8f3d269fa99",
        "cursor": {
          "ref": "64c933f7-99a2-4faf-94f3-0e96b2f15784",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "415e8189-dcd5-4799-b7a1-bda226453a7e"
        },
        "item": {
          "id": "1a94fc55-d08d-48a9-9b41-f8f3d269fa99",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "64a01c15-b36a-42cb-95b5-3d6fa112b0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab3faa46-c681-452b-b4f4-d910fa94f8b9",
        "cursor": {
          "ref": "12d0a8db-6e60-49d1-ae96-9f9d92f0acb0",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d780f69b-c553-4880-981a-12fd0f927141"
        },
        "item": {
          "id": "ab3faa46-c681-452b-b4f4-d910fa94f8b9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "656131de-0d76-49fa-ae75-d1184a858f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b25aad-d178-4011-8fca-2ba87f4c07fe",
        "cursor": {
          "ref": "0c176f66-fd15-48a2-9410-f0cf75ced132",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "51833c41-a0c6-4bac-b16c-3fc0e5c649b2"
        },
        "item": {
          "id": "c3b25aad-d178-4011-8fca-2ba87f4c07fe",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cf6210b1-adbd-4d84-9739-208335ca9c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05da8b1-733e-4766-9eb1-d9dfb1a83ddb",
        "cursor": {
          "ref": "35b2afe9-f557-486d-8435-995038fe64c8",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "52279700-102a-44eb-b6fa-2388a5addfec"
        },
        "item": {
          "id": "f05da8b1-733e-4766-9eb1-d9dfb1a83ddb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f0dbeee8-66b9-4f84-8c47-6964ebdb82cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae6660a-50f4-44b2-8d9f-d8d3659dc535",
        "cursor": {
          "ref": "bd9a2ec8-a86b-4710-82ad-e870081653a2",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "440c1029-1756-463a-8abc-493981951737"
        },
        "item": {
          "id": "bae6660a-50f4-44b2-8d9f-d8d3659dc535",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f4105859-4ed8-4f9f-8d54-ca30873ba451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88837b90-2f9e-4402-b127-c0bf68720b16",
        "cursor": {
          "ref": "b18ddc90-3ffc-487f-9238-1feffc68f285",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0c8fae7a-fa56-4184-aa18-35d06573d7b0"
        },
        "item": {
          "id": "88837b90-2f9e-4402-b127-c0bf68720b16",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "938d64b3-c525-4dd5-84db-c68edcbb2b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4a81d6-0866-48e8-a7a4-71f3d30ef7fb",
        "cursor": {
          "ref": "b375daf7-1733-416b-931f-c48460da8c12",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4f3d9f55-bcc4-4d61-af86-c4769921f444"
        },
        "item": {
          "id": "bd4a81d6-0866-48e8-a7a4-71f3d30ef7fb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b7d5d211-72a2-4570-9863-2e4d88780d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f67685-b029-4432-b8f1-0400229cdcd2",
        "cursor": {
          "ref": "c622e482-4a46-49ba-9b43-7f3b8c285df4",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ffa50f62-e72a-4109-9131-e6a3dfe56f3f"
        },
        "item": {
          "id": "20f67685-b029-4432-b8f1-0400229cdcd2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "61382454-1820-4567-9455-89d58f53dc1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3edde192-aa42-421e-a6d3-f8bcec03c1bc",
        "cursor": {
          "ref": "359111c3-4bbe-4503-83a8-f75f86f3fa60",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "745f556c-26ff-414e-9d88-d88151c786ec"
        },
        "item": {
          "id": "3edde192-aa42-421e-a6d3-f8bcec03c1bc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9f7de084-d1d1-4a21-94e0-21427f72e7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6e2302-63ba-4cc2-99b3-953507257a00",
        "cursor": {
          "ref": "60baaa1e-1d5e-4250-8b93-cb8d4dc9706f",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "11c99f51-a81a-4cba-96b6-8adbb9b4908c"
        },
        "item": {
          "id": "0d6e2302-63ba-4cc2-99b3-953507257a00",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "96714572-4c56-405f-a121-c4e939e59fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4678c501-4a12-4226-8801-ebc3d6e7fc2d",
        "cursor": {
          "ref": "dd7abaac-31ff-48cd-b41a-c1044fbd3cf0",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2969976c-9bd3-4068-afbc-8d2a31f52058"
        },
        "item": {
          "id": "4678c501-4a12-4226-8801-ebc3d6e7fc2d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b7c9bf2e-3b33-414c-bd81-ed95b1b5f21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a987d79c-da86-4bb0-b7d8-6be64e88fcee",
        "cursor": {
          "ref": "083ba6ff-fa01-4194-aafd-2081d16d20dd",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "7d21a57b-6190-4df1-b117-3fee07d6c7d7"
        },
        "item": {
          "id": "a987d79c-da86-4bb0-b7d8-6be64e88fcee",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "594efd8f-055f-4bc1-a8cd-3bdb65176a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "521f8972-491d-4cf4-acb8-696e67a5c91b",
        "cursor": {
          "ref": "ac59f1ec-db55-47af-a11d-f35a27600bfb",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "677b8724-e9af-497c-be70-48c75de74603"
        },
        "item": {
          "id": "521f8972-491d-4cf4-acb8-696e67a5c91b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d17a0f93-6369-412d-9b2a-c9ca15bf56b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a187f7d5-11b7-4cac-bd4b-9877d5fa83d3",
        "cursor": {
          "ref": "df46e3dd-1fa6-4c78-9ee9-2287391acdeb",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "898efba0-e571-4992-9144-258af305c4bf"
        },
        "item": {
          "id": "a187f7d5-11b7-4cac-bd4b-9877d5fa83d3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2b2a1aa6-9fe2-4a8a-92ab-26c5ef4e3d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6cea5f-d1a6-46cd-b013-2368f17034e8",
        "cursor": {
          "ref": "fd578bfa-6fe7-469a-9a15-fe5ab1fd8eae",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "69195275-1850-472d-9a8f-94d767d5a859"
        },
        "item": {
          "id": "4d6cea5f-d1a6-46cd-b013-2368f17034e8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "54ca47e7-5c38-42c6-8061-5d4500ffdf27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf608dc-d353-47a7-b824-c169ad8ff83f",
        "cursor": {
          "ref": "46cf490f-3534-449c-aeee-beb9977954e7",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e4c3573e-d90e-4a6e-ba61-0e8b2398beab"
        },
        "item": {
          "id": "3bf608dc-d353-47a7-b824-c169ad8ff83f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2c64b251-f1f9-431e-8e58-29c4ccff2b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80c8b31-95bf-4bae-a96e-c879ea5d97b6",
        "cursor": {
          "ref": "9a65e4db-94e8-4a70-915d-fb3883178c67",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ee57e38d-b538-47da-990f-8753918e25dc"
        },
        "item": {
          "id": "e80c8b31-95bf-4bae-a96e-c879ea5d97b6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a24382cb-2d1d-4829-ac49-d01a3f4ba9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de650856-cd32-4fe4-a527-b50620848f10",
        "cursor": {
          "ref": "66625eda-d15e-48a9-b5b9-f01b1284ea78",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "37604d39-f9d5-4ab5-87a9-220107034cc4"
        },
        "item": {
          "id": "de650856-cd32-4fe4-a527-b50620848f10",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6188c7d8-19bc-457a-a53d-040371ff8957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d76b33f-1e8d-404c-aa98-d2be7b3e1175",
        "cursor": {
          "ref": "b0b4868f-3591-4cdd-bd51-401ee46e3231",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c8c30e01-4a9d-4e58-99bb-6190966d10b0"
        },
        "item": {
          "id": "8d76b33f-1e8d-404c-aa98-d2be7b3e1175",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bef3433c-505b-4912-a765-100d77ad0fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b0c248-fb4e-444d-8bd5-3f9c229924d2",
        "cursor": {
          "ref": "50a463f5-82cb-4fc4-b11d-78d8c01e1227",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fb3ee607-b417-4974-b52e-06e40c259d3b"
        },
        "item": {
          "id": "85b0c248-fb4e-444d-8bd5-3f9c229924d2",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "992083f7-7a43-4ae2-8000-6f879a34547d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80312826-806a-4136-9279-76055dd68614",
        "cursor": {
          "ref": "132c3184-6b2b-4a41-b5ed-dce97a185369",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e7b9e105-4804-45c7-9555-2f90eeadaf8f"
        },
        "item": {
          "id": "80312826-806a-4136-9279-76055dd68614",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9168320f-044d-4a58-8ef2-f2ce166d8c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d589277-3a92-4a91-8ee4-c8c0077a81b4",
        "cursor": {
          "ref": "cb34988d-704e-4b3a-ade8-a969fdfa7b6f",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1faec438-0e69-4bc8-ad75-8651497042a0"
        },
        "item": {
          "id": "1d589277-3a92-4a91-8ee4-c8c0077a81b4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4de38f02-266c-4423-a6e2-5203dd052133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b89e2c4-c2c2-4d48-a12d-af274b3eb4a1",
        "cursor": {
          "ref": "ae29657b-e8cb-4571-9f91-b5a9ab47be2b",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2ec44354-0cc1-4f59-8e27-c6a5ed8a7d2e"
        },
        "item": {
          "id": "6b89e2c4-c2c2-4d48-a12d-af274b3eb4a1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "49e7f678-6464-4377-b71b-0df32ee2537a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a96ab06-4fa3-4be7-bf33-8e1283d1b898",
        "cursor": {
          "ref": "dfdec952-b40f-4394-86b8-2c0b16c36bc8",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "46495423-c5ea-4214-83a7-58e3a4382652"
        },
        "item": {
          "id": "0a96ab06-4fa3-4be7-bf33-8e1283d1b898",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c1dd763a-4d0e-4024-9cbd-00bce9e0da25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b89b10c-532a-4cd0-ac69-f6f900932581",
        "cursor": {
          "ref": "21913075-d708-48f3-a7f6-3e924bb39842",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6dff667c-fe1f-4bdb-ac90-68cd5ba63fcf"
        },
        "item": {
          "id": "1b89b10c-532a-4cd0-ac69-f6f900932581",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d7f2b2ff-42d6-47f3-8d3d-28a4034d4157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe4428b-d462-45a4-bd53-92f342d07be2",
        "cursor": {
          "ref": "dd813f63-fe5a-4f83-a649-9afb869115f2",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ac02102c-571d-4e63-80ca-c829d74da569"
        },
        "item": {
          "id": "2fe4428b-d462-45a4-bd53-92f342d07be2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "57bcecc0-7981-49e8-b85b-d135ada7b429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a00c25-1e9f-4b70-bc43-c43d53f8e29c",
        "cursor": {
          "ref": "f4a5d77a-4408-472d-956a-94a9c41156b9",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "287cc1ff-f2ee-4be6-8dee-70cca677ca86"
        },
        "item": {
          "id": "a8a00c25-1e9f-4b70-bc43-c43d53f8e29c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1ab3c53e-cb39-4c4b-9024-64decaba25ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6265737-9d8f-4494-99fe-f2465c813d13",
        "cursor": {
          "ref": "bec226ea-8239-4323-b2f4-4ac330c4a18e",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "651ea133-61ef-430d-9a0b-070a9525a462"
        },
        "item": {
          "id": "b6265737-9d8f-4494-99fe-f2465c813d13",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "475f5701-51c3-4e9c-919e-505c85354504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88dcc720-d54d-4218-a345-1e052a81eef4",
        "cursor": {
          "ref": "be68c375-4e20-4c46-bea6-fc02a6852086",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ea502501-0b27-4300-a7d4-2c80c5aec96b"
        },
        "item": {
          "id": "88dcc720-d54d-4218-a345-1e052a81eef4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "378145b3-5604-429b-b3b9-f8016595298d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b0710e-ec46-4232-86d5-b1db6de899e1",
        "cursor": {
          "ref": "1e92d0e9-1973-4a8c-a67d-26f8d821a8bc",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "276b1464-9e45-457f-af4c-56250fcd024a"
        },
        "item": {
          "id": "71b0710e-ec46-4232-86d5-b1db6de899e1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "15ec0e83-7628-49ab-ae7c-9d00a25871d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b576616f-f3fe-4735-8ad8-22de7b52e0bc",
        "cursor": {
          "ref": "7991af12-e306-47e0-9896-369dcef0218e",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3d27d23d-4e3a-4bf4-a272-072bf51fb8db"
        },
        "item": {
          "id": "b576616f-f3fe-4735-8ad8-22de7b52e0bc",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0a745780-f2fb-41c3-8d08-e02184c2acec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dea0502-6479-4af4-874a-e1c5d757b396",
        "cursor": {
          "ref": "31ae1d2d-36b9-4553-9db1-4eb38be4769d",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5afea277-5ddd-427e-9dbb-1e8d24812a44"
        },
        "item": {
          "id": "4dea0502-6479-4af4-874a-e1c5d757b396",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7f90d02d-50c7-45d8-915d-936565fc44b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3078c9b-9956-4d81-9551-210753d04906",
        "cursor": {
          "ref": "0c5588b6-8246-4582-b014-d1274d1ed9ca",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2a33ace4-ff6c-4607-9951-4297112b2394"
        },
        "item": {
          "id": "f3078c9b-9956-4d81-9551-210753d04906",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bc29fb14-03c2-42d4-ada7-c807788307ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01296c78-e4ef-4c56-b05d-efa54a428adb",
        "cursor": {
          "ref": "2f73f89e-7d06-49b0-a5e0-e63e27b05da3",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b33bddc2-251d-4b98-83be-919e87274e2a"
        },
        "item": {
          "id": "01296c78-e4ef-4c56-b05d-efa54a428adb",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c0318e42-9c9e-4f0c-b597-facb6597e5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53c0589-cead-45ae-8980-3b2ea228da1e",
        "cursor": {
          "ref": "6db55900-611e-44f7-9f64-1682362b18e0",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "905957f0-f1bc-45ee-bcb4-c35c49b729db"
        },
        "item": {
          "id": "c53c0589-cead-45ae-8980-3b2ea228da1e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c26465b3-0c6b-414b-906f-33dcab37e664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec8d863f-1e02-4175-a633-959d9b3dbc53",
        "cursor": {
          "ref": "9ef94b99-32bf-4fb1-9c70-09e5b1cbb00d",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c91030a3-d20d-4023-ba57-08c7acb9ac73"
        },
        "item": {
          "id": "ec8d863f-1e02-4175-a633-959d9b3dbc53",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "970bda04-7ebb-43bc-a06d-bc42340db052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288d680d-f96c-4e23-a54e-d6b5aded0fb7",
        "cursor": {
          "ref": "1f60c5c0-ff1b-4a52-805e-3757541f889d",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "75edd27b-af00-4ed6-af16-06e466bb112c"
        },
        "item": {
          "id": "288d680d-f96c-4e23-a54e-d6b5aded0fb7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "40ccba17-8645-4aa2-84aa-354ce98a5cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49746786-60d8-43a1-b656-afc1b30af4fe",
        "cursor": {
          "ref": "1051f4e2-ec1e-4c89-8fc1-378d5def461a",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cb5a926e-4489-4d26-983b-d05e00702ff1"
        },
        "item": {
          "id": "49746786-60d8-43a1-b656-afc1b30af4fe",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "58d85b9f-bf6a-43ac-98aa-db44d7c8c406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a96e27a-9fa8-46bd-a278-420d8cff2160",
        "cursor": {
          "ref": "fb6d1bfe-6567-4e63-a334-77f7a22c9f25",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "709f4d02-a4d4-4055-b009-5ec0c227ab39"
        },
        "item": {
          "id": "6a96e27a-9fa8-46bd-a278-420d8cff2160",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "41c9a54f-3ffd-43d7-9f27-5866005dad29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63f5c69-3a87-4a56-b959-f93c4b842ea0",
        "cursor": {
          "ref": "aa51bbf3-8370-421c-889b-b938c7ffb205",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "81501922-4934-4750-b082-84d74e9c84ab"
        },
        "item": {
          "id": "e63f5c69-3a87-4a56-b959-f93c4b842ea0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a71ded3a-5320-4448-b21f-731ea9522b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e665020-29ba-4e64-9fde-538f1d8750ab",
        "cursor": {
          "ref": "1f473a07-e11d-46c9-abe8-c564ec7392e0",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2a3d2db4-f153-4311-9b17-06703b495e80"
        },
        "item": {
          "id": "2e665020-29ba-4e64-9fde-538f1d8750ab",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f0500350-bd29-4b39-9b03-25561c2408b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea97ec21-caf3-47c7-9fdc-074a24f5f440",
        "cursor": {
          "ref": "777f5644-d9d9-4e58-9d6d-2ea56046bcd3",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1dd5c35d-719f-487c-a2ac-9643d1462f8d"
        },
        "item": {
          "id": "ea97ec21-caf3-47c7-9fdc-074a24f5f440",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "32c8ce7d-4c6b-486a-8da8-77ae3a2cea1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe541fa-d846-42b3-91d5-26902dbe52fd",
        "cursor": {
          "ref": "06f6e560-e5b8-44dc-9e34-99a0af1ea650",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0f907241-e0b0-4389-ba4a-315873e3fff9"
        },
        "item": {
          "id": "3fe541fa-d846-42b3-91d5-26902dbe52fd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6aed32ad-489a-43a3-831f-07b2ed80f7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f131fb6-1e99-4414-92fb-812a410c4e3a",
        "cursor": {
          "ref": "a4a74508-8670-471b-af23-841f3d893f1f",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a5b6e4f4-50d0-4423-b7b1-83856ce5de7e"
        },
        "item": {
          "id": "7f131fb6-1e99-4414-92fb-812a410c4e3a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a7767f23-bb97-412c-bb02-cc46b01220b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442a5c98-47b1-41b9-8dd9-ea8d8f3acb3a",
        "cursor": {
          "ref": "b5551c6d-8d20-4add-9041-b8c8b954e4b5",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e8cf6862-bac1-4e10-a979-e5f1a57b1e80"
        },
        "item": {
          "id": "442a5c98-47b1-41b9-8dd9-ea8d8f3acb3a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "97ff882d-1531-4791-825a-0ea30ea604d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35cc8cb-85f5-4bbb-a661-ba1037b88d2a",
        "cursor": {
          "ref": "4426bceb-a0d2-463c-a664-166b752658c8",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "dd021165-93fd-4c0e-bc7a-032283a36c3a"
        },
        "item": {
          "id": "a35cc8cb-85f5-4bbb-a661-ba1037b88d2a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b5b87804-dfac-46a1-8b6a-add0e08835c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2add60-e539-4b41-9c27-1668b21e9723",
        "cursor": {
          "ref": "f964ec03-6910-4570-abc7-75057fa2ca54",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "98cb6ff6-773b-48ef-b259-7e4e3f1100d6"
        },
        "item": {
          "id": "df2add60-e539-4b41-9c27-1668b21e9723",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5672d88f-0e15-4a2e-9efe-3a44375f5fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f72c670-9806-490a-998a-917c4b552ad9",
        "cursor": {
          "ref": "648ab24a-fe36-4d6a-b3fc-bbc50a0988b2",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "369edf6f-0398-462b-a4bc-0c7a2be74cd6"
        },
        "item": {
          "id": "0f72c670-9806-490a-998a-917c4b552ad9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f767b8b8-0ddb-40fc-ba7d-6a3f92b87e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470234e4-8d3f-4df5-9b5d-8877742050d0",
        "cursor": {
          "ref": "c83c7f13-94a3-4a82-b0d7-e0027382c820",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a630b364-c4c3-40d7-aad7-b79578154a18"
        },
        "item": {
          "id": "470234e4-8d3f-4df5-9b5d-8877742050d0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fd152e9d-7ed3-49a7-a548-e0cc442f76c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831dc6e5-1226-4199-bcbf-496e6dcd7180",
        "cursor": {
          "ref": "95cd7c60-f7a0-4cff-9381-d23458d278bd",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3b44f47f-876b-46c5-ac14-f004e33b7d24"
        },
        "item": {
          "id": "831dc6e5-1226-4199-bcbf-496e6dcd7180",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "bef8303b-1c1f-4944-838a-6b108b285b63",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a98533-bf45-49d3-8d90-dd9af811d2d9",
        "cursor": {
          "ref": "71de59e8-6830-4197-bc27-b73293cb2f0a",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "015faaa0-0dff-4c7a-995c-76406a548287"
        },
        "item": {
          "id": "38a98533-bf45-49d3-8d90-dd9af811d2d9",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "25bd2da0-0b83-4669-adb3-895035e79985",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 49,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1dd9ac-7bb7-421c-b928-a25580790c55",
        "cursor": {
          "ref": "0dfef809-488f-4dbc-99ec-4fbd3796413c",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1e3efbbb-2109-4cfa-a77b-c29b44467f72"
        },
        "item": {
          "id": "bf1dd9ac-7bb7-421c-b928-a25580790c55",
          "name": "credentials_issue"
        },
        "response": {
          "id": "942d14d7-2c9d-4ade-a888-45288d79eca3",
          "status": "Created",
          "code": 201,
          "responseTime": 85,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "de346a88-5fcf-4b98-a011-f92c861a29b2",
        "cursor": {
          "ref": "e194e28f-dbb7-4218-bccf-0dd5f0026fad",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d77abf7e-7151-4dfc-93b6-30f1eb6807bd"
        },
        "item": {
          "id": "de346a88-5fcf-4b98-a011-f92c861a29b2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3163846e-0ff9-43a4-82c3-8d6d7b7869af",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d58be35-fc90-46dc-a729-7fafd24fe17d",
        "cursor": {
          "ref": "aec756b4-7444-4c78-8ada-787b54be74a5",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "947fb140-42a2-4648-944c-b51f1ae5a67a"
        },
        "item": {
          "id": "0d58be35-fc90-46dc-a729-7fafd24fe17d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "09fb3e66-c504-45c2-9d32-ca3e9315c0a8",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0c19d5-8183-4ed5-8e70-745d4662ce4f",
        "cursor": {
          "ref": "c9ee9585-40c1-496d-b95d-f82a559f68c1",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8fdb7d3a-9482-47ef-856e-4cf83a6e1e17"
        },
        "item": {
          "id": "4d0c19d5-8183-4ed5-8e70-745d4662ce4f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "23846c82-46f1-4844-959b-12db7dae5ad4",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "184a1f03-b7b9-4ba7-96ad-e983f6c7911b",
        "cursor": {
          "ref": "08962871-c545-4228-980b-e915ef53c5a6",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e3fdf87c-3fe3-40d6-b283-7a8523b03511"
        },
        "item": {
          "id": "184a1f03-b7b9-4ba7-96ad-e983f6c7911b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "00201a1c-1c1d-4626-b9f5-40160b2819d1",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d7e9d5-3b63-4fe4-816c-ef244b916780",
        "cursor": {
          "ref": "5f5c74b1-a6e9-4423-91b5-b58a56c6b246",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4b80beae-a682-48de-b467-6842e0076fec"
        },
        "item": {
          "id": "c0d7e9d5-3b63-4fe4-816c-ef244b916780",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6c01dfe8-ebc2-4ca9-9aad-ec9b7baef9c7",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe8510d-9f03-477e-a37c-cfd8705fef31",
        "cursor": {
          "ref": "bc251cd9-52e9-4659-9223-b5eed0461a5c",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "986287bd-a51d-4779-8fa1-9733ecf88394"
        },
        "item": {
          "id": "cbe8510d-9f03-477e-a37c-cfd8705fef31",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "759ca768-7fff-43da-8094-893b521603ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe8510d-9f03-477e-a37c-cfd8705fef31",
        "cursor": {
          "ref": "bc251cd9-52e9-4659-9223-b5eed0461a5c",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "986287bd-a51d-4779-8fa1-9733ecf88394"
        },
        "item": {
          "id": "cbe8510d-9f03-477e-a37c-cfd8705fef31",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "759ca768-7fff-43da-8094-893b521603ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7036de17-6a38-4786-a71e-f49f0851d9a0",
        "cursor": {
          "ref": "b789816c-5958-4bf1-b994-77fe76c59aeb",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e11ebff7-2786-4f9c-b6fd-be487adb7e79"
        },
        "item": {
          "id": "7036de17-6a38-4786-a71e-f49f0851d9a0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c33e3ea5-001d-46f0-9203-744c14d8ebbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0dfd8e-9927-4fd8-b186-3df639075de1",
        "cursor": {
          "ref": "4e8cab89-802e-40ae-81ff-03e92a5290fe",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "948ce2a2-8962-4b03-98a2-12168231bf5e"
        },
        "item": {
          "id": "4b0dfd8e-9927-4fd8-b186-3df639075de1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "217c8407-7fd3-45f7-bbce-3f526d98e4db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e00f59e-1525-48e6-9f60-d0e3b82d6e44",
        "cursor": {
          "ref": "0c7e9c91-595f-40e0-bc0d-71b3728f9e11",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e613a24e-a33c-43b5-9cf7-7e8ddfb4c91a"
        },
        "item": {
          "id": "1e00f59e-1525-48e6-9f60-d0e3b82d6e44",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2746053e-b2ae-48e3-8e53-bc355ea8a7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef05c3c0-c59a-4c11-95e5-1582788d5bac",
        "cursor": {
          "ref": "95139e65-d238-4848-aa4c-4d7dddd36876",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "12b71bc7-9d40-4f0b-aad6-009a1aef6e9f"
        },
        "item": {
          "id": "ef05c3c0-c59a-4c11-95e5-1582788d5bac",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "48003308-3344-43b8-af01-12e8dccc8e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e672cc7-dfa1-4b47-ace2-72f95428a926",
        "cursor": {
          "ref": "ff5383b2-d5ec-428f-a813-3cd5d6a8a20b",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3c323874-e3d3-4420-bc85-9ae92f69f3fb"
        },
        "item": {
          "id": "2e672cc7-dfa1-4b47-ace2-72f95428a926",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "59e99e22-8081-4cbc-975f-4e2ce540d814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9848e97a-ba09-49ab-bb53-cf57cd56b57f",
        "cursor": {
          "ref": "9dfdf644-484f-495b-a27c-a53c898f9233",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f4c9651e-e094-4e15-97c8-3005f3b0bed2"
        },
        "item": {
          "id": "9848e97a-ba09-49ab-bb53-cf57cd56b57f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2c544ac5-0677-49e6-8364-5fcaf71835c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2833d27-dd73-4519-9673-25240bc2e706",
        "cursor": {
          "ref": "735e3696-cf45-404d-8921-b10bb97cd916",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d1f80fdd-1255-4cb4-ab89-b17b22bb9d31"
        },
        "item": {
          "id": "f2833d27-dd73-4519-9673-25240bc2e706",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3de08f02-7a7d-42c4-b148-6199c216ff02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b81d862-b00e-4282-aca5-942ef0153d43",
        "cursor": {
          "ref": "b36e4257-d50f-4f6d-a369-d9dbedb83a66",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "872bf440-13aa-4484-bd34-2f706935d09f"
        },
        "item": {
          "id": "1b81d862-b00e-4282-aca5-942ef0153d43",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2f9dec6f-16ce-4d29-9081-88e72284a191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ed519c-5858-4b40-b630-836d15b54db4",
        "cursor": {
          "ref": "a2fca67e-3190-409d-81a3-0969fdea336c",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e9b938ac-005f-49c0-8056-312e4caa0779"
        },
        "item": {
          "id": "97ed519c-5858-4b40-b630-836d15b54db4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "616ca178-33b1-4e86-9960-fe571c84cc72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef2fb2e-1f83-47b4-900a-318b83ea5d7b",
        "cursor": {
          "ref": "2a45dcec-a8b8-408f-beec-0b8e5cc59f5b",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b443ab7a-b528-4784-b062-9e13381c890d"
        },
        "item": {
          "id": "4ef2fb2e-1f83-47b4-900a-318b83ea5d7b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ec688363-2c0f-4fe7-9d7c-db4b74e22680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbad8d8-5f3a-415c-8976-3f7cfdf11118",
        "cursor": {
          "ref": "85b50786-1010-4b92-b268-9b22844a9cfe",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f6bd2ec8-74b3-4c87-bc26-e982223ee2ed"
        },
        "item": {
          "id": "7dbad8d8-5f3a-415c-8976-3f7cfdf11118",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3aad126e-df0f-401f-95b7-7b9de680c110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a530527f-257a-4554-9345-695cd2fe05c5",
        "cursor": {
          "ref": "adbfa675-f015-45bc-9638-4487aa2f9be2",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0af4c696-e704-44b0-b286-1646aea50323"
        },
        "item": {
          "id": "a530527f-257a-4554-9345-695cd2fe05c5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d28bb15f-df40-4b16-9b9f-27a3dbd2dc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6facfd5-8cc4-4218-bbe8-9fa69c2294a6",
        "cursor": {
          "ref": "39f785cf-64c9-4038-a480-b26aa602f714",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a0c16bee-16da-4ee3-81ed-ecd3101c80f6"
        },
        "item": {
          "id": "b6facfd5-8cc4-4218-bbe8-9fa69c2294a6",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "35521d07-eb6e-4924-a144-c5d14b8f7b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e592d343-34f4-4941-9376-b0b2dd89546f",
        "cursor": {
          "ref": "3f65eb4f-751d-46fc-b9e3-3327d63c17b4",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d3c66624-496c-4106-aa00-a9d8aa32aaba"
        },
        "item": {
          "id": "e592d343-34f4-4941-9376-b0b2dd89546f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cc92d9a8-dac4-4ed5-bb2b-4de304de5433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56561e8e-2cae-4da5-b41d-3dff331f0eaf",
        "cursor": {
          "ref": "6233cefd-151f-41d0-98dd-fc29c829914c",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c91ad10e-d40b-4533-8ed0-4342490a5993"
        },
        "item": {
          "id": "56561e8e-2cae-4da5-b41d-3dff331f0eaf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fcb568b3-a548-4c21-8b0b-d200d0ed6bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225563a3-0b5a-4cb7-9f87-dda422926feb",
        "cursor": {
          "ref": "a915d847-b4ef-4087-b62d-153aa1fe3aa7",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a8a517e2-7d05-4325-9d1e-134f59afee99"
        },
        "item": {
          "id": "225563a3-0b5a-4cb7-9f87-dda422926feb",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "72875829-1dc6-4485-b603-f1feb1c3f963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfa9172-b572-4722-80b8-f3307aefdb66",
        "cursor": {
          "ref": "9b9b147f-cb0a-4234-9d73-4ede41e4b7c9",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "acf08614-64b8-41cd-b5d3-e21d9395694b"
        },
        "item": {
          "id": "0dfa9172-b572-4722-80b8-f3307aefdb66",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "12cde92f-9bf8-47b2-a81d-528aca40eb46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658b561a-96a7-468d-b17d-c2caa763a6f8",
        "cursor": {
          "ref": "782b6777-da4c-493c-aec7-c877642aa6d5",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "abf50a8d-f913-47ba-8558-6e4f8b058f75"
        },
        "item": {
          "id": "658b561a-96a7-468d-b17d-c2caa763a6f8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2fa872f8-8562-4497-82cd-46b3443a24a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ba933b-5d96-4765-97b4-8dccb36d8b38",
        "cursor": {
          "ref": "2c287579-6efa-4aab-bec8-7ff9b6b0bc7e",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "371009df-4e5b-496e-b232-98c9afdaa45f"
        },
        "item": {
          "id": "19ba933b-5d96-4765-97b4-8dccb36d8b38",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ab304e9d-99bc-4f0d-80df-18513a67b167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501d371c-a9af-455b-a649-b8369e388359",
        "cursor": {
          "ref": "08ffad26-7444-46b9-9d6f-f6b2d7310b86",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "90381b7b-66d7-4894-ad56-9b544b02340f"
        },
        "item": {
          "id": "501d371c-a9af-455b-a649-b8369e388359",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "423f2ba4-022d-4156-bb65-eddc77a264fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd16a84-8b8f-448b-aa81-709570f66234",
        "cursor": {
          "ref": "6fb9cd39-c189-4f95-8575-67be036859df",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ee644961-251d-45ff-afb2-1dcc03353fbd"
        },
        "item": {
          "id": "3dd16a84-8b8f-448b-aa81-709570f66234",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e9ccfc74-b942-4b41-bd3c-5c1f019d936d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60373f8c-700b-44b0-bde6-47b3bd7cfff9",
        "cursor": {
          "ref": "993b07f9-7c9f-4809-9c5f-2494d6add1f1",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4d8044e0-b805-4e9b-9cd7-cfc5f0bd96ee"
        },
        "item": {
          "id": "60373f8c-700b-44b0-bde6-47b3bd7cfff9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "353beec2-72ff-443b-861a-34fbdd219a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5377eff5-e982-40dc-af07-562d0fa40bbd",
        "cursor": {
          "ref": "0cb9de69-e920-4553-a1ca-0c99a2a6cd50",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "835f39c0-156a-4975-ace5-c0f4ea08ccaa"
        },
        "item": {
          "id": "5377eff5-e982-40dc-af07-562d0fa40bbd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8263c202-a305-48d8-9004-71d7e900c353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc35670f-71b3-426f-a369-3a8fbaf0c0c8",
        "cursor": {
          "ref": "c14c2968-f8ba-44ad-bc54-2e9d5515a6bf",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3dc25756-7c0c-441c-9c03-e9ceecb10d59"
        },
        "item": {
          "id": "dc35670f-71b3-426f-a369-3a8fbaf0c0c8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "397fc305-c60d-4066-a583-03e46e066716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7921765-ce7c-4b48-9756-3b9f337a2bc5",
        "cursor": {
          "ref": "503f51ee-15ad-4a29-b0b4-24b6f363731f",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ae18ebe3-4293-4977-bb86-c345ca792167"
        },
        "item": {
          "id": "f7921765-ce7c-4b48-9756-3b9f337a2bc5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "26907e6c-44d5-439b-80a5-db28a815a64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af4fdc4-ed50-46cb-87c2-62e9425678e7",
        "cursor": {
          "ref": "80a060af-15e5-4604-bd65-b0d4f2f7d88f",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6ed7cffe-c46a-4014-b306-c8bc316c7183"
        },
        "item": {
          "id": "6af4fdc4-ed50-46cb-87c2-62e9425678e7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a8189980-e4ae-41c2-b59b-5fb74438fab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7905234-0587-44b5-99ec-20ef9366ef1d",
        "cursor": {
          "ref": "0df8556d-2c32-4608-9a67-c46dbf63db71",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2cc5c915-b07a-4ae6-9b00-fd7b5536f87d"
        },
        "item": {
          "id": "b7905234-0587-44b5-99ec-20ef9366ef1d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "45a4ea66-02e8-48fe-81f1-2e85a7aad29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264ffe92-372f-4be5-8115-6a43c9005b3c",
        "cursor": {
          "ref": "88a8bbae-ea82-4dbc-8f64-63ca0265ce6c",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d33b4a89-e98c-4bc6-838e-13709c8e706e"
        },
        "item": {
          "id": "264ffe92-372f-4be5-8115-6a43c9005b3c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "80355832-e734-4d0b-9477-a9eb5b4fb374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3769867f-3ab1-4147-be1a-213e708f6233",
        "cursor": {
          "ref": "e2a85134-49d8-413d-880f-1dd1cbceea4c",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7215392b-9ad1-4127-9710-6e7466dae8ea"
        },
        "item": {
          "id": "3769867f-3ab1-4147-be1a-213e708f6233",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "902cffb4-0c25-4999-a905-47deed8a005b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9992d7-e96e-42db-bdfb-2e9711becef4",
        "cursor": {
          "ref": "d210747d-6c75-49f1-8069-8fd719513840",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "38a2148d-5402-46d4-93d9-f3401d6b9442"
        },
        "item": {
          "id": "3a9992d7-e96e-42db-bdfb-2e9711becef4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "246fd5b2-0f85-4a83-8e68-d6ba10debe94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a0094f-51f6-430a-94df-d81d6c12c9ce",
        "cursor": {
          "ref": "a19bd885-06e4-480a-82d6-c06fe7da117e",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1251e33f-6fe0-418f-9713-b9b8e725f065"
        },
        "item": {
          "id": "09a0094f-51f6-430a-94df-d81d6c12c9ce",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "4338eee4-b93f-4836-9186-749265638d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f496237a-89b0-4eb6-b307-cb472d28d08b",
        "cursor": {
          "ref": "46a1be10-9c0d-4c16-9f83-309f0796dba2",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "437c44a5-8b34-4d08-a42c-e55c256b39fa"
        },
        "item": {
          "id": "f496237a-89b0-4eb6-b307-cb472d28d08b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0dd89423-f2da-4ddc-981c-2d78d8402b43",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621e79a1-9f83-4773-a450-67ef2e339ea0",
        "cursor": {
          "ref": "1251c05f-0125-44a8-9c96-235d130b0f51",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "99045621-8ad4-4ec8-b200-526e5e2bc020"
        },
        "item": {
          "id": "621e79a1-9f83-4773-a450-67ef2e339ea0",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "8eb89053-1de3-49c2-9422-7870e104ac7e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c176de0-06e5-4953-bb5e-0835fa5724a3",
        "cursor": {
          "ref": "5d0d607b-62b6-4c93-a4e8-ea83590e006c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f8c2eb0e-adbb-4f9a-9658-119b25e0310d"
        },
        "item": {
          "id": "5c176de0-06e5-4953-bb5e-0835fa5724a3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "73d14317-e1a8-4faf-80ac-66a846f50a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c176de0-06e5-4953-bb5e-0835fa5724a3",
        "cursor": {
          "ref": "5d0d607b-62b6-4c93-a4e8-ea83590e006c",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f8c2eb0e-adbb-4f9a-9658-119b25e0310d"
        },
        "item": {
          "id": "5c176de0-06e5-4953-bb5e-0835fa5724a3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "73d14317-e1a8-4faf-80ac-66a846f50a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcc5692-c767-4dd9-9617-91c8d996a689",
        "cursor": {
          "ref": "f187cf3e-7771-416c-9a71-9b6c4ff89294",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "599a5721-5ae5-4620-902d-c119c52aa3f3"
        },
        "item": {
          "id": "4bcc5692-c767-4dd9-9617-91c8d996a689",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b9b4ec8b-0c6c-40ca-83b8-d0727aa249e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea7d6e4-db44-4d27-b9a0-51d5055dd472",
        "cursor": {
          "ref": "3cec0e0d-c9ca-4bc8-b30f-b3d82064e21f",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "444314b7-f6cf-4a7a-b0ab-ce55f5accff3"
        },
        "item": {
          "id": "bea7d6e4-db44-4d27-b9a0-51d5055dd472",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "19725fd0-ffe6-427f-8a39-802861577948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b158b25-bf33-4aa5-a282-80d29429a1a1",
        "cursor": {
          "ref": "cf08761f-a7c1-49fb-aa0c-f3d3a8a7400c",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4156a4f8-9aed-4c2c-960d-c9d305afed8b"
        },
        "item": {
          "id": "2b158b25-bf33-4aa5-a282-80d29429a1a1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cb1ad3eb-12d6-4549-b0e9-abbbbe46522a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cf693a-d9ea-4a05-8928-631610390ba0",
        "cursor": {
          "ref": "b7282164-9d28-40c9-967d-9e5d55a7b239",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "db5ea088-a5f1-41ac-a2ca-a4b4bc844f0c"
        },
        "item": {
          "id": "55cf693a-d9ea-4a05-8928-631610390ba0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "13e25013-b232-4e06-b057-58e7457412d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be79606e-d840-4e2c-9951-16d9dcaa49a4",
        "cursor": {
          "ref": "8c411461-a48a-4c69-9d4d-4ea8fba05ec0",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a4a01f83-15be-4208-b963-3ccc4b6f2fb8"
        },
        "item": {
          "id": "be79606e-d840-4e2c-9951-16d9dcaa49a4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5591340d-b856-445b-adb7-4fe34d98f291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a905ac40-5723-44b4-a314-2a2a7bab1ad9",
        "cursor": {
          "ref": "97bfdd74-396b-4ad2-b643-36ff03dc9e48",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5861b658-4493-4ad3-a805-d2e847dd8758"
        },
        "item": {
          "id": "a905ac40-5723-44b4-a314-2a2a7bab1ad9",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "9cf4b0ed-bdf1-453c-b7b5-83d959156108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53186725-8bc4-4f1e-8ecc-04f5db6354d9",
        "cursor": {
          "ref": "7e907212-7715-47f4-8e8a-c2c475dc941b",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ec085ac6-1249-45d4-887a-52ed81fa5b42"
        },
        "item": {
          "id": "53186725-8bc4-4f1e-8ecc-04f5db6354d9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1c51680a-1fbc-4948-ac3a-ad1d2982fb24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735c9a55-ff4f-4171-8a90-cb41df72fce4",
        "cursor": {
          "ref": "17d5c3ed-348b-4b9b-9548-dd0789aad373",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "db76ac4f-5767-460b-a303-8e7dc431f14f"
        },
        "item": {
          "id": "735c9a55-ff4f-4171-8a90-cb41df72fce4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "917f4e96-8217-4957-b689-52876d57b1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4f6c71-473c-4ad7-b20f-ca23f504d87d",
        "cursor": {
          "ref": "cf8e2d38-4247-4f44-a15d-1618746745e2",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5ac14938-d2db-408c-bb1f-f5a41697d363"
        },
        "item": {
          "id": "4a4f6c71-473c-4ad7-b20f-ca23f504d87d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9de9c534-7de9-47c4-9323-d81f13109715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4390220b-bc9e-471c-99ff-e2f6f6743bb6",
        "cursor": {
          "ref": "750f8980-08bf-44ef-9903-c0c89ad2f026",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bc7289e1-9f00-42a4-8df8-067086b2bcd9"
        },
        "item": {
          "id": "4390220b-bc9e-471c-99ff-e2f6f6743bb6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a8a4d4d4-d4e1-4fe1-a9a4-d9742e872893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05547a79-3188-443b-bb00-eabb37457ea0",
        "cursor": {
          "ref": "43d449d2-d751-4e7b-b2da-88873f70ba8b",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "36f8cff0-31db-4a27-9351-f609cda73d4e"
        },
        "item": {
          "id": "05547a79-3188-443b-bb00-eabb37457ea0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "919a36a7-0cb3-47f8-a798-bf0f0b0c8b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eeb1e99-32d4-4d6f-b675-3b0c67e29eab",
        "cursor": {
          "ref": "be4d0098-543a-46da-9bd4-096910e352cf",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c00c07f2-5b41-43d8-aba8-b081f76940ad"
        },
        "item": {
          "id": "6eeb1e99-32d4-4d6f-b675-3b0c67e29eab",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "04056f30-59f5-45dd-809c-23dd5aacc894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8340e1c3-0189-4474-afba-2659bb7fded9",
        "cursor": {
          "ref": "51a47764-0fef-4ba5-8779-879a014a6465",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c91c4c39-5fc0-4256-b6bc-967f34f796ac"
        },
        "item": {
          "id": "8340e1c3-0189-4474-afba-2659bb7fded9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d23dc777-7a37-482d-8bd0-f573db05feb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7c510c-6522-4c74-89c7-e678e6122ff3",
        "cursor": {
          "ref": "095b48ec-47c7-4b87-8ae7-294461071589",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b48d61a2-3854-4bb4-be5b-6c8500336608"
        },
        "item": {
          "id": "7c7c510c-6522-4c74-89c7-e678e6122ff3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "89244470-2140-4a75-9102-00e63ce9e1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35f6549-928e-4507-9bcd-218c34d6ed09",
        "cursor": {
          "ref": "3ab7685d-4a24-4880-b37b-28246fb31649",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "19a4c33d-5de6-4d87-a09b-d77f8de58747"
        },
        "item": {
          "id": "f35f6549-928e-4507-9bcd-218c34d6ed09",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5c5b6ffc-2eee-44a6-9c98-9784e8a096c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe92be84-0a26-4599-8cc0-eebb575b4d30",
        "cursor": {
          "ref": "bc0a8213-faa4-4241-8522-7ecc119d21fe",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4459620c-57d5-448a-89ae-884ebe72a3b4"
        },
        "item": {
          "id": "fe92be84-0a26-4599-8cc0-eebb575b4d30",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8d1354dc-96bd-4932-8029-19a9877a78d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c91cdf4-e4e5-40ba-85d0-baac01d6fe25",
        "cursor": {
          "ref": "f0858399-7750-4858-9e5e-e8403635fd1c",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2a52b5b1-16b2-40c9-b3c2-66c97c9aa1ae"
        },
        "item": {
          "id": "8c91cdf4-e4e5-40ba-85d0-baac01d6fe25",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f8729df0-9c3f-45b3-9ca6-45551c2a928e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edd651ba-d799-443a-a9cc-a875f3ea91ff",
        "cursor": {
          "ref": "25d1c16d-08b0-41cc-9359-ea2adb821eee",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5ab8032d-711a-47da-8efe-cca8de2d6efc"
        },
        "item": {
          "id": "edd651ba-d799-443a-a9cc-a875f3ea91ff",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8257959a-e39c-4709-9e30-143eca5ba9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df101407-55e2-4ec9-ae06-2b0d808036aa",
        "cursor": {
          "ref": "f7dbc1ce-6415-4660-ab4f-36b095759b4f",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e403307b-ad6f-4711-a44f-7e6a828d7165"
        },
        "item": {
          "id": "df101407-55e2-4ec9-ae06-2b0d808036aa",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "884da4fc-41fa-47c1-9a4f-70fd0b4c7ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace1a215-e2bc-4ed9-bc54-680f124f6432",
        "cursor": {
          "ref": "b85c5a20-a92e-41d7-a0d7-af8327263ddd",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b3a37aa2-0d9e-45c4-a1d7-2a1ec5bb13c9"
        },
        "item": {
          "id": "ace1a215-e2bc-4ed9-bc54-680f124f6432",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "31f976cd-7660-48a1-a1ea-d8f5deedf129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd4e296-a6a5-4883-89de-c6da35e371b3",
        "cursor": {
          "ref": "9a923f68-fda4-4d4b-8489-d6a0f0aee2a5",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f4cbeb99-e4e4-4cba-9a29-e2e1ce913b1b"
        },
        "item": {
          "id": "8fd4e296-a6a5-4883-89de-c6da35e371b3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4d5f8aaf-9f4a-4881-bb53-43d868103fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba31057f-2324-40b8-b9e6-aeebec0c46a7",
        "cursor": {
          "ref": "877fcaaa-f302-4181-9e3b-cbd51457465b",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e171b7e4-4dc5-43e0-9539-db9cc1e56c6e"
        },
        "item": {
          "id": "ba31057f-2324-40b8-b9e6-aeebec0c46a7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "996a2aec-1d0b-4d72-b2f1-4928c5f3b548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5388e28-2258-4170-8c14-de941fcaf7f1",
        "cursor": {
          "ref": "c5c60520-2eb0-4e2e-9448-d472e32107a4",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d6133304-abd0-4057-b9db-1efd761d1334"
        },
        "item": {
          "id": "a5388e28-2258-4170-8c14-de941fcaf7f1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7e873c94-6d73-4357-87f7-65ebe5263534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c07b443-b7cd-4462-833f-5fc933f5f7fe",
        "cursor": {
          "ref": "37c650ba-049e-4ac7-b828-b7c6fe22d788",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "721d2c5d-ced6-425c-8c19-c0bbddb7e6b7"
        },
        "item": {
          "id": "9c07b443-b7cd-4462-833f-5fc933f5f7fe",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "eb39ba0f-c4e2-481d-a469-2d59f32de1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8b2036-eca7-46db-96ba-2eb2416bbe88",
        "cursor": {
          "ref": "cc5f6c95-9690-48b0-a39e-23b513f6f17e",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fa43cdb1-406d-4eb5-830b-344a21564dd4"
        },
        "item": {
          "id": "3d8b2036-eca7-46db-96ba-2eb2416bbe88",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2795c8ba-9c13-4004-9026-e986adf746de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9028d99-6a6f-4437-916a-02f5fa16ac38",
        "cursor": {
          "ref": "88557298-4631-4daa-bd4a-133490a2919d",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e0945a53-8f69-4231-969f-00f032602f6b"
        },
        "item": {
          "id": "a9028d99-6a6f-4437-916a-02f5fa16ac38",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e9c3dea1-402f-4681-8e8a-bf1c7f5cd6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3677cbcb-c20d-4bfc-9521-2ed6d0b90197",
        "cursor": {
          "ref": "042574c1-b1ae-4239-a1f2-6f41541cba2f",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3089a935-1302-48e6-84bb-91afc7d9b5b5"
        },
        "item": {
          "id": "3677cbcb-c20d-4bfc-9521-2ed6d0b90197",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8f1a6456-28f5-4218-a902-f965d8f2d489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0295981f-602e-4eab-8ecc-4abc6fc32296",
        "cursor": {
          "ref": "fa9e4a11-411b-43d0-b205-fe18fa3b4b1b",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f0983875-2f6a-48d0-93d4-7eb989a5c1d0"
        },
        "item": {
          "id": "0295981f-602e-4eab-8ecc-4abc6fc32296",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5b7f9c5e-a813-4192-8def-225d28e90ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f243470a-7149-414a-9863-189df8049cf7",
        "cursor": {
          "ref": "74c4aff0-fa20-466a-b719-d58cf898ee95",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "83add66f-8622-4ac9-8ab8-c99a67af1a5a"
        },
        "item": {
          "id": "f243470a-7149-414a-9863-189df8049cf7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "01150080-0485-48b6-b7cf-bd52b4f7a372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7807298b-3a55-4785-a40f-3fa4eba1e3fc",
        "cursor": {
          "ref": "311748f5-a405-484b-aa42-3e2879b236bc",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fad7ba1d-bcfd-4fac-8a4f-5d6cd9180ebe"
        },
        "item": {
          "id": "7807298b-3a55-4785-a40f-3fa4eba1e3fc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d0017c68-f508-4a87-b057-fbc2c78b7ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19748245-3e85-456a-954f-e39c81c1ab4c",
        "cursor": {
          "ref": "42a0484f-80fa-4242-8e6d-39713157652f",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6d979d46-040d-42db-a3a2-5a2f8a4115e5"
        },
        "item": {
          "id": "19748245-3e85-456a-954f-e39c81c1ab4c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7201633c-9911-4607-b964-2484bf854ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8efd13-44ca-4986-b527-bef37443db79",
        "cursor": {
          "ref": "6b9117b1-352b-4886-81eb-ec328208deeb",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "438166e0-4bc3-4e4f-a6f4-c95c411fa160"
        },
        "item": {
          "id": "ca8efd13-44ca-4986-b527-bef37443db79",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f90224b4-eb27-4dc7-b3f2-1f58f976bc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c6fd18-8337-45f5-9723-e3fadcfdf96f",
        "cursor": {
          "ref": "923f75c9-30ac-4e3a-a6db-f63177afbfd4",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f172cde0-eb61-4740-ad76-b2c2fae2af9f"
        },
        "item": {
          "id": "b2c6fd18-8337-45f5-9723-e3fadcfdf96f",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5e37a685-0641-4b28-8556-430a51373b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7621c4-6278-40d3-8ec1-14fe8fcaea05",
        "cursor": {
          "ref": "9daf1ee6-d044-48ff-bb99-02573e12ef01",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "6fb75153-bf24-4e2c-a60a-cb1ce1c74a9b"
        },
        "item": {
          "id": "3d7621c4-6278-40d3-8ec1-14fe8fcaea05",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "259ae6ad-ddc5-417a-a2c9-7584cde7eb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f098ca-e61f-4daf-bebc-5ea438e60da5",
        "cursor": {
          "ref": "d3275782-294d-4fd1-9975-3eaa32ca81ec",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "945de0b8-71a3-4e50-92ce-84e63723840c"
        },
        "item": {
          "id": "88f098ca-e61f-4daf-bebc-5ea438e60da5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e13d223a-9e32-433a-9281-da77aaa2f5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55ab1f2-da46-4b61-b04d-ac9c5121787e",
        "cursor": {
          "ref": "95c23211-fa91-482d-ad53-292d8e4f3c6b",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "16fc0ab1-5cfa-4947-a3ca-3ddc8156fc74"
        },
        "item": {
          "id": "f55ab1f2-da46-4b61-b04d-ac9c5121787e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "338aa8fc-b844-4f69-a749-2af81c404612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9113c2-3b85-4e91-9075-6da777fbaf87",
        "cursor": {
          "ref": "144cef7f-9169-4dee-b775-ebdd1a22f062",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5c78fae0-a421-48b2-9f55-bd41930786d1"
        },
        "item": {
          "id": "5d9113c2-3b85-4e91-9075-6da777fbaf87",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9ff5b33b-78b6-4fa1-869e-0808354a6b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7bd6de-d7eb-488b-bf26-ea1900a8216d",
        "cursor": {
          "ref": "051c7e7e-8c10-4cfc-bd1b-6f03c4b36a10",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "48c6b01b-d470-431b-af13-650cf59cd528"
        },
        "item": {
          "id": "7b7bd6de-d7eb-488b-bf26-ea1900a8216d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7f93df73-7bcb-4725-bbe2-f816a45dac2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea6f462-5348-4f88-904b-182ed5198e61",
        "cursor": {
          "ref": "ecfd5199-e07e-4561-b78e-ea1df599c554",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "30246389-865a-4860-a527-541e6a7a371f"
        },
        "item": {
          "id": "4ea6f462-5348-4f88-904b-182ed5198e61",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2c6eddd9-0e32-47b2-aeef-7f7b4354aca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c740e69-6624-466c-bbe8-81079643c868",
        "cursor": {
          "ref": "c621e141-8b45-4030-a47d-516b1101d841",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "dcca70a2-ae5f-421b-a0c0-f9a5c3a4b758"
        },
        "item": {
          "id": "6c740e69-6624-466c-bbe8-81079643c868",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "314742a1-4671-4972-909f-0007da85bf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192931f8-6853-4285-a38d-fb92b1611fde",
        "cursor": {
          "ref": "6ba4db1b-ac61-45fd-b05f-14625482ff42",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "892029b2-307d-49b2-88af-fc4c4e0fe18d"
        },
        "item": {
          "id": "192931f8-6853-4285-a38d-fb92b1611fde",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5e883c01-3480-417a-a6f6-588ec32e1d4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33702e46-2afc-4cf5-95a9-38c9cae28ee8",
        "cursor": {
          "ref": "c7820b5b-3421-4b5f-bc4a-2a2b5e2624e7",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f3812200-856a-4d25-99b5-e0435e6eaae7"
        },
        "item": {
          "id": "33702e46-2afc-4cf5-95a9-38c9cae28ee8",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9f832292-d29c-42c1-9e1e-1b66620551dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91118ff-de1e-4d1f-a700-1020c6963b8c",
        "cursor": {
          "ref": "81c60844-56fa-4cd0-979e-5a6d6e074bcc",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1dc076f1-7a97-4b5e-86ce-66845cad004a"
        },
        "item": {
          "id": "d91118ff-de1e-4d1f-a700-1020c6963b8c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f37d54aa-d055-41a7-8bec-a81fb931a540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d46ac8-c998-4347-ba91-d6764ca26eeb",
        "cursor": {
          "ref": "5d9a8cef-15a9-4faf-999a-827a36d1c0df",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1c059df5-b73c-44fd-961b-b9262c638319"
        },
        "item": {
          "id": "88d46ac8-c998-4347-ba91-d6764ca26eeb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "04f72d12-3fc7-4426-968c-a29d840c121a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdbfd6a-6653-443d-a7d5-68bd7d667530",
        "cursor": {
          "ref": "c6019208-d5af-4b81-8726-e79e3d1dfa11",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "11fc8c02-1516-45d8-999e-4e7ad94c1eb8"
        },
        "item": {
          "id": "3fdbfd6a-6653-443d-a7d5-68bd7d667530",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2149ccd1-04ac-4515-9175-f0756c3f59e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378265a2-c382-4412-b7cf-dabea2963de8",
        "cursor": {
          "ref": "125af34e-1b92-483b-9a1a-186067440a71",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d6ec0b84-df23-4e66-9e00-07e73324786c"
        },
        "item": {
          "id": "378265a2-c382-4412-b7cf-dabea2963de8",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "beed0026-7718-4ab9-9543-230599db003f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7a95ab-cf74-4d82-8703-5ebcfb3aace0",
        "cursor": {
          "ref": "76a9366d-a55f-4db4-9775-9a7837c46dbe",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ab57db97-d740-44a0-9de7-0a913b23e437"
        },
        "item": {
          "id": "df7a95ab-cf74-4d82-8703-5ebcfb3aace0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "caff2586-f1d7-4193-9bef-ffc18b1c7b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9872c53b-2f9c-4ccb-a0cb-a71f089de76d",
        "cursor": {
          "ref": "cd768327-1d73-404c-8b71-eef12ab5d0a1",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7a4ffa89-ba75-42cb-912e-7e56c9a2834f"
        },
        "item": {
          "id": "9872c53b-2f9c-4ccb-a0cb-a71f089de76d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0f1de150-6ce3-44e5-a1f2-f56c67e98fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ab24b8-849a-40a1-a842-199e04975923",
        "cursor": {
          "ref": "83fdf992-3a9c-4a7f-818c-ee5064e229ea",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "02b588a7-ffde-4330-9a8f-ff2c28828b3c"
        },
        "item": {
          "id": "a5ab24b8-849a-40a1-a842-199e04975923",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f8a2cbdd-ba23-4e17-b3e9-29db3a3e9196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff9f387-96b6-40d6-b2be-66aaf9d335aa",
        "cursor": {
          "ref": "c63c0bbd-9a3d-4370-8124-4ee784ea737b",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "273feb19-3855-4784-a6a3-ef280d6c7236"
        },
        "item": {
          "id": "1ff9f387-96b6-40d6-b2be-66aaf9d335aa",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3b00cd6e-3f43-4a55-81b2-3ba2d29b7a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9125513-f4a6-4409-9bed-e0b44f658b48",
        "cursor": {
          "ref": "c7c31ca0-7287-4a82-85a9-a87c9bcc94eb",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c806cf4e-f7ae-4d47-a641-a6ace99eaefc"
        },
        "item": {
          "id": "f9125513-f4a6-4409-9bed-e0b44f658b48",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b0ee7e88-61c6-4548-a012-96fb96c2528c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748fba8c-208f-4865-8010-5bcb952c9c5a",
        "cursor": {
          "ref": "381b7fa2-d1d7-4da7-b5f5-1ffc1d6bb70a",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "80123c60-4f0d-429d-a1b6-886c6158ea76"
        },
        "item": {
          "id": "748fba8c-208f-4865-8010-5bcb952c9c5a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "906a2845-d659-4503-92c5-68a8bad5f182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c91a7aa-7a49-46d7-ba82-39db0f240bc2",
        "cursor": {
          "ref": "545afb66-6f71-4f2f-af8b-0039d7f54528",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "88c3dab5-4c0f-40c5-b513-99929f2d9377"
        },
        "item": {
          "id": "5c91a7aa-7a49-46d7-ba82-39db0f240bc2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fbe2240d-ad2a-4c68-b31c-37cdfec0fd4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99953daa-9379-4c84-9639-aecb7d8658c2",
        "cursor": {
          "ref": "e74f0a2c-1e52-4342-b3fb-e899825f4834",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ee40dedc-8b67-4d02-86d4-77aefb63ea9c"
        },
        "item": {
          "id": "99953daa-9379-4c84-9639-aecb7d8658c2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0589f8eb-6104-4046-9145-4c7f872b8955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeef5e32-4272-4d0b-8916-2e2b498f0169",
        "cursor": {
          "ref": "adbf016b-f340-4e0d-83a7-4b428512a5b3",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "32ea5b55-701d-4688-a79d-edc7562bf138"
        },
        "item": {
          "id": "eeef5e32-4272-4d0b-8916-2e2b498f0169",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "305d134c-383d-4565-8b96-fd102fe907f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca9b225-9acf-4410-a385-da8ee8c63a64",
        "cursor": {
          "ref": "80017ad8-aad3-4d71-b32f-8e9279efd659",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "959cc18c-0141-4458-87f6-9d1be7b23016"
        },
        "item": {
          "id": "4ca9b225-9acf-4410-a385-da8ee8c63a64",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f2983933-8100-4fec-a3d1-318dc784df5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "255f3e76-b682-40e6-83f7-bd5a4ccb86af",
        "cursor": {
          "ref": "e2692ee7-6435-4f9a-886f-de3d8019cebc",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b445de91-8ee9-48b0-9961-a708d0246f4e"
        },
        "item": {
          "id": "255f3e76-b682-40e6-83f7-bd5a4ccb86af",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5e54ed81-96ab-4442-b361-f83faa29d3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07740e0a-6f6b-45f0-a0f4-99266b068e44",
        "cursor": {
          "ref": "6fef61d1-fd6c-47af-a573-933efbc48945",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7329a4ed-00f0-4916-8e04-cac9214739e0"
        },
        "item": {
          "id": "07740e0a-6f6b-45f0-a0f4-99266b068e44",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "01c596c0-5598-4a10-97c2-4efa2ac9b531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f4fcda-99d9-44fb-8250-2dae73ec9306",
        "cursor": {
          "ref": "04700a65-d0e0-4932-a61c-8b30bd99a161",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1df60e03-fe28-40db-bdf4-c5569dd36f7e"
        },
        "item": {
          "id": "c3f4fcda-99d9-44fb-8250-2dae73ec9306",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a0371725-6440-48fb-b06e-74634df1aaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d581f277-7047-4a00-879b-9343788b52b0",
        "cursor": {
          "ref": "92350b06-5102-4d31-9681-26d02e30fd20",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5ffcf525-5309-47c2-8b33-582329a9dca3"
        },
        "item": {
          "id": "d581f277-7047-4a00-879b-9343788b52b0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "70666ef1-273f-4ad2-82ee-a4ce2c52731a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137d44ec-7445-4e47-a31d-b7cbf3d273ea",
        "cursor": {
          "ref": "a7ac3ce0-ebb6-424a-b981-fd4bcd652de5",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1b9a51f1-6552-40f9-874c-dff95d0281ec"
        },
        "item": {
          "id": "137d44ec-7445-4e47-a31d-b7cbf3d273ea",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3a3951a7-4c46-44e6-b095-1e44872ce130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3824ccd-4db6-4900-b2a9-fcf92d8864a4",
        "cursor": {
          "ref": "43a8bbad-1c45-4354-8dd1-688a89b903ca",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "50122937-c408-4dd2-922d-1115217f87cf"
        },
        "item": {
          "id": "b3824ccd-4db6-4900-b2a9-fcf92d8864a4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ed47f64a-bbdf-448b-a789-ba8b5f08c72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38207a18-d719-4e9f-99bf-d7c06df4a787",
        "cursor": {
          "ref": "f7e319d9-9f53-45c2-8987-a8783ad2d9eb",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "36cb5c37-bff6-4052-92e2-9d8e0f81028e"
        },
        "item": {
          "id": "38207a18-d719-4e9f-99bf-d7c06df4a787",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8aec1a67-e79b-4373-8a82-fde746ab8f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e267c5c-9be8-4729-a998-96b621330616",
        "cursor": {
          "ref": "39b9ccee-ada2-4288-8a5d-7ecf1d0a15a9",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cad17bcb-5369-4fe6-91ca-7ca1d4d0da5f"
        },
        "item": {
          "id": "3e267c5c-9be8-4729-a998-96b621330616",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "71e2f80e-4a20-4ce1-9b8d-987c404c7add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d29785-149c-464b-9b11-6e507c047759",
        "cursor": {
          "ref": "5f785bd8-0837-4419-8f03-919e7ffdec97",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "4d2f973f-5d01-4f70-89d3-1e5f6d10f1fe"
        },
        "item": {
          "id": "d4d29785-149c-464b-9b11-6e507c047759",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8ba625e1-6b78-46e9-8bb4-3e92e482cb18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b7df26-3d23-40bf-8105-e79f867f73cd",
        "cursor": {
          "ref": "71826879-30ae-4945-b3f5-ab218914ec7c",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "03ff159f-a70a-4d67-990f-206c5d35fda4"
        },
        "item": {
          "id": "c5b7df26-3d23-40bf-8105-e79f867f73cd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "1b4b3c84-93b2-44de-96fa-d804d824682c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efeaa19f-2d70-4949-8ec0-4410489c7443",
        "cursor": {
          "ref": "d09c7f3d-ae92-4881-a5ca-3d202d45a7a2",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "af6a5faa-9188-4c65-907c-b3bd80bb0b3d"
        },
        "item": {
          "id": "efeaa19f-2d70-4949-8ec0-4410489c7443",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a9ad76c8-7783-4e11-a5eb-c21ed7750aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9d593b-72c5-4f06-828e-1675fb95b7a7",
        "cursor": {
          "ref": "f8e37f5a-4672-4782-850f-80d2371a9196",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0c94505e-b5aa-4731-abb7-cd028ecb4df8"
        },
        "item": {
          "id": "1a9d593b-72c5-4f06-828e-1675fb95b7a7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3086d257-1a4e-4244-a2f5-3d09948cbb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480e5d56-01d0-4b61-a5ac-24de0c4c806c",
        "cursor": {
          "ref": "3dcaaeda-0a85-4f4c-af0e-bc05fed2a754",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "09fa5980-4d69-45fb-810a-39dd50d26940"
        },
        "item": {
          "id": "480e5d56-01d0-4b61-a5ac-24de0c4c806c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "35cd3b66-48f5-4743-9be3-77521c5afcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b7c614-2a75-4945-8e89-e5c07bbab049",
        "cursor": {
          "ref": "10fbb149-0edc-4609-bd79-633e79430eed",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "08c5e3fb-08e6-483f-b15d-e1ac406af8c7"
        },
        "item": {
          "id": "15b7c614-2a75-4945-8e89-e5c07bbab049",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "578a51b3-00ce-4532-9ba8-9d0520f61f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9a44cd-84e1-44a0-b0c0-c90020b3df32",
        "cursor": {
          "ref": "ae86b53b-d998-4436-bc34-e51b09cfedac",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e5c9c702-e771-4725-992a-0c86093117b1"
        },
        "item": {
          "id": "fd9a44cd-84e1-44a0-b0c0-c90020b3df32",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ac65d5a2-327e-4b7e-8c1b-3028fafe3f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e00cd73-de11-4145-887f-71dbb0864229",
        "cursor": {
          "ref": "360ccd12-18d3-42a3-bbd5-4731fb54aa47",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2a825ff4-9247-41eb-a959-ab9bc72c8891"
        },
        "item": {
          "id": "6e00cd73-de11-4145-887f-71dbb0864229",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "05c7cbd2-7d8e-4a0f-8911-df26c7adf695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f42eac-84a6-4a4f-adc1-a8db49d01071",
        "cursor": {
          "ref": "401ba3ec-fd4e-4bc8-8bfd-8fb95a534c06",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "03855c53-875f-404f-8e81-57a3474eba83"
        },
        "item": {
          "id": "73f42eac-84a6-4a4f-adc1-a8db49d01071",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "da2b5fbf-4141-4848-99d3-72640b64bae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d194b635-a625-4827-a77c-9841a32002b9",
        "cursor": {
          "ref": "1ef66094-155f-4825-8964-9205abd12ec7",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8d59b0db-5a9a-4f2c-9807-e3e1122b2fb1"
        },
        "item": {
          "id": "d194b635-a625-4827-a77c-9841a32002b9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7b005c51-3345-4605-8b53-16c661f97c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18d8eb0-8c0a-4c0c-915a-4f27f3c44f63",
        "cursor": {
          "ref": "fae90c22-1372-4ff9-8143-30d440ab9648",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "306f52a3-e09f-4466-a097-712f1cef74f7"
        },
        "item": {
          "id": "f18d8eb0-8c0a-4c0c-915a-4f27f3c44f63",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "32cdbc55-4830-40dc-99b9-944ccac39bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02913517-feda-4881-8079-d1402aba0b22",
        "cursor": {
          "ref": "18e10794-411a-42a6-bf54-ce9acea55d6d",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "37f3c61c-d766-4729-9d5c-e16407caee7f"
        },
        "item": {
          "id": "02913517-feda-4881-8079-d1402aba0b22",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "7437b699-fdc5-4579-930d-54cd848f29bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b29bd6-fd81-427e-a185-30ff6683eac5",
        "cursor": {
          "ref": "eacab323-c080-487d-8207-ac7913db4486",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7578da48-1d24-4f5d-88b4-b19fcb3b6a0f"
        },
        "item": {
          "id": "18b29bd6-fd81-427e-a185-30ff6683eac5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8fa2ce23-3522-4eb8-af54-27942b2c3acf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5f2ee5-f8ac-40bd-9703-2d7669f9a22b",
        "cursor": {
          "ref": "f100767b-79d9-4dc1-8c83-f96221ce1a35",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f02dda76-a970-47b0-8870-5fc07feec8bb"
        },
        "item": {
          "id": "cf5f2ee5-f8ac-40bd-9703-2d7669f9a22b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cfecd691-1272-4448-b22f-8118f051d7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7a83b7-1920-4683-91a8-18d947f62f88",
        "cursor": {
          "ref": "1202ed81-f467-46e2-ab20-7d256d9517c0",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "426cfa12-01fb-423d-8358-3e8f1f8814b6"
        },
        "item": {
          "id": "9f7a83b7-1920-4683-91a8-18d947f62f88",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ce8fd228-ebd4-44c6-adbc-736104b8c6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c39a686-a07a-4a87-8a4e-859c7ba0fad7",
        "cursor": {
          "ref": "cc153092-cae8-4bc0-84e8-977ea4c46f68",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a2d494d4-05e0-4331-aa32-a13361a3ca2c"
        },
        "item": {
          "id": "6c39a686-a07a-4a87-8a4e-859c7ba0fad7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3cba29ef-e6aa-4af6-9689-a48e7b43ec0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837a47b1-3f1a-4226-985d-caed85e4190d",
        "cursor": {
          "ref": "55f16074-42cf-4bda-8bdf-201cd25b406f",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "23d9fd62-8f5b-42d6-b135-35abb544bcd4"
        },
        "item": {
          "id": "837a47b1-3f1a-4226-985d-caed85e4190d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "470fffec-e2fd-4d39-bdc8-75756cad9a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fd12d3-3910-4dee-a59b-84e25e1b0495",
        "cursor": {
          "ref": "fa81dc4f-0302-4008-872d-457bd7379809",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b2b55aa3-5429-450f-9e68-5411b9d0088f"
        },
        "item": {
          "id": "56fd12d3-3910-4dee-a59b-84e25e1b0495",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4962bd0a-e9b9-4182-93ac-10c6632c8efe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaec15bf-9d3a-4666-a654-16bb7a4f9299",
        "cursor": {
          "ref": "69cf80e8-3c76-48f9-b944-e5bb70fb8124",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "24256845-7106-4252-9754-59660015caa9"
        },
        "item": {
          "id": "eaec15bf-9d3a-4666-a654-16bb7a4f9299",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "903f927c-4a83-4df6-8f62-526a35642f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d71e3f16-8f46-47f3-8492-378227006831",
        "cursor": {
          "ref": "e3473eff-79ea-485c-b7d4-b235c5f78fc3",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1e69f9e6-8e5f-4ff5-ac05-ac3ec894ec71"
        },
        "item": {
          "id": "d71e3f16-8f46-47f3-8492-378227006831",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "be526999-753f-4a5c-9628-62829cc38a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302d07f4-10b3-412e-bf8c-773c2e8306cc",
        "cursor": {
          "ref": "71bfb263-c312-4ddb-b3f0-3e55d98ca7d8",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f3f47672-a8c4-421b-b097-5e8e0d70b0fa"
        },
        "item": {
          "id": "302d07f4-10b3-412e-bf8c-773c2e8306cc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b263955f-f850-49a7-aefd-416ec57a87c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50542d87-9922-4a63-9a67-7e1863bbfa46",
        "cursor": {
          "ref": "d42b80b8-2ab3-4791-a9ac-fad4651ccbd1",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "03546302-8277-49b7-9c39-a759c62b1205"
        },
        "item": {
          "id": "50542d87-9922-4a63-9a67-7e1863bbfa46",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "32770aa8-caa6-4363-ac51-1e373dc669f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd516be0-4b13-4753-8493-a80fe52dbaa1",
        "cursor": {
          "ref": "b638e2df-2b09-448a-bb86-2a49c3e522ff",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "776fe18a-0d0e-4e5f-b243-4917fc687d80"
        },
        "item": {
          "id": "dd516be0-4b13-4753-8493-a80fe52dbaa1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "33b5ac0a-218e-4374-8121-6be55b2f91f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28bc8b75-2592-467c-b379-541bc447229b",
        "cursor": {
          "ref": "3df6a01b-ca66-42da-bb62-04bc0c164a32",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ee7fe96d-7988-4f59-90f5-4afae7e865ba"
        },
        "item": {
          "id": "28bc8b75-2592-467c-b379-541bc447229b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b8901202-75b0-488f-bb66-ec4398685891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313f9685-fc07-4808-9c81-18553923cb7b",
        "cursor": {
          "ref": "b6f9e205-74ed-4c5a-90b6-df91e6d6ba70",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c0d9c1c4-1805-4926-a172-accce8f234bb"
        },
        "item": {
          "id": "313f9685-fc07-4808-9c81-18553923cb7b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "55116a03-e461-42bf-9e26-8b683f460a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e08537-b539-4a84-b9e1-92109bc34d64",
        "cursor": {
          "ref": "fe2fb0b2-ace2-4d97-a6d9-7c5305d050fa",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2e938da5-4659-46bd-b194-79d3f01fa1ea"
        },
        "item": {
          "id": "77e08537-b539-4a84-b9e1-92109bc34d64",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "35aaf334-9b99-4acf-84cb-d76d5184aa7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6409dfa-fa53-4691-ba8a-56d6f5e8465d",
        "cursor": {
          "ref": "a1ab19ac-61f1-493c-b8eb-7cc5d018f62b",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c2ad979d-efbb-4ea2-99fb-46ec151acfcb"
        },
        "item": {
          "id": "a6409dfa-fa53-4691-ba8a-56d6f5e8465d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e5b6e507-6587-4dbe-a00a-677b9841a735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a89c82-73b2-4f02-bb8a-08900451e95e",
        "cursor": {
          "ref": "1ee74c98-ef72-42c4-a6e6-77d6cb1aef52",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b5555567-5a2a-43f7-a036-8f116dc05d83"
        },
        "item": {
          "id": "69a89c82-73b2-4f02-bb8a-08900451e95e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "335b7433-90de-459d-9979-2ff517987d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff73eb8d-a353-44d8-ab59-fffbe050dc0b",
        "cursor": {
          "ref": "e1c1a9e2-569e-4a47-8baa-adf6e264efd4",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "60d6198b-44fa-4d4a-bb20-5659afb31ca6"
        },
        "item": {
          "id": "ff73eb8d-a353-44d8-ab59-fffbe050dc0b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "60156a71-72fc-4742-bd3c-8c917fa24b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a652b91-ef87-4cbc-9ca2-ac85a3cc8b1f",
        "cursor": {
          "ref": "2a04827a-05d5-4174-a170-3a88eabff55a",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "07be2d9e-d85a-41af-bc95-a50e4f15fb12"
        },
        "item": {
          "id": "3a652b91-ef87-4cbc-9ca2-ac85a3cc8b1f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b4768810-1346-43af-8e16-d064f7dd61d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d65a1bb-e11b-4793-8306-122ba7c191ee",
        "cursor": {
          "ref": "d8ea2ef3-d4d9-40e6-8744-f8263190d250",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c5e07ccc-ef9b-4a8a-838d-11e5b25e09f2"
        },
        "item": {
          "id": "3d65a1bb-e11b-4793-8306-122ba7c191ee",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c32d9b7a-bd9d-4a6f-954f-a98ea62d5958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "773157b3-0cc9-4612-92df-0f4827f0a54b",
        "cursor": {
          "ref": "bdc1bf6d-df50-470d-be84-7317dde6a6c3",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "71ad12b6-1229-48f8-8865-aeff00ece0a9"
        },
        "item": {
          "id": "773157b3-0cc9-4612-92df-0f4827f0a54b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ed449e00-3ce0-4b84-980a-391a83b7721f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71c1cb18-8c71-48c6-a281-3990246edc75",
        "cursor": {
          "ref": "b4dbdcb8-e930-4cb8-b6df-01fcd9b7dbac",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f71fabf3-b8b9-48d2-ac8c-f0996ef1deb8"
        },
        "item": {
          "id": "71c1cb18-8c71-48c6-a281-3990246edc75",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fbc7dc62-8fbc-4353-9d7c-acef3456fd23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6686934-ad35-4e4c-b34d-f852fcca7853",
        "cursor": {
          "ref": "614d7062-a535-4af3-85ac-883afa2bdf40",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1991aad9-44c5-4e1a-a58b-0e01bbae7ce8"
        },
        "item": {
          "id": "c6686934-ad35-4e4c-b34d-f852fcca7853",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "809ac4f2-253a-4232-a2e4-f0a0e8df1a9e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87f477e-5dd3-43dd-92c1-5034f865b9c9",
        "cursor": {
          "ref": "b350a3b2-97c0-42bc-860b-6f5d2013817a",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2238f81a-f9b1-43d7-8446-dda203098b40"
        },
        "item": {
          "id": "c87f477e-5dd3-43dd-92c1-5034f865b9c9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bc26647f-8317-41ba-bb6d-acbefd72e1f5",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "425cab37-913d-4da1-a171-aa5af382a717",
        "cursor": {
          "ref": "0aaf00ad-a6f6-4b9e-a472-571f9de537c5",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3202de43-047a-45eb-8046-b4a24b8ac9b3"
        },
        "item": {
          "id": "425cab37-913d-4da1-a171-aa5af382a717",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f8ce9d72-e16d-4b2d-bd34-62373a6662a8",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ea84e8-6865-43a9-bc11-beb94b78fd4d",
        "cursor": {
          "ref": "401c32ba-9e0d-4b87-b630-b51352cc87ce",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "33077df2-e021-480a-9a81-dc4ce2f41ffd"
        },
        "item": {
          "id": "a3ea84e8-6865-43a9-bc11-beb94b78fd4d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "02197ddc-d7d0-4c6b-8ed6-5a2833d30b4d",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa274b1-3260-409a-b9f2-5ccac16e6a8f",
        "cursor": {
          "ref": "2bcea40e-a9da-4832-9060-0ef1dbc113c9",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "04f751df-b003-4313-8217-df222025b9a7"
        },
        "item": {
          "id": "0fa274b1-3260-409a-b9f2-5ccac16e6a8f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a9a0db2e-7491-4364-a4b3-2bbb1ad56179",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa274b1-3260-409a-b9f2-5ccac16e6a8f",
        "cursor": {
          "ref": "2bcea40e-a9da-4832-9060-0ef1dbc113c9",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "04f751df-b003-4313-8217-df222025b9a7"
        },
        "item": {
          "id": "0fa274b1-3260-409a-b9f2-5ccac16e6a8f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a9a0db2e-7491-4364-a4b3-2bbb1ad56179",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa274b1-3260-409a-b9f2-5ccac16e6a8f",
        "cursor": {
          "ref": "2bcea40e-a9da-4832-9060-0ef1dbc113c9",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "04f751df-b003-4313-8217-df222025b9a7"
        },
        "item": {
          "id": "0fa274b1-3260-409a-b9f2-5ccac16e6a8f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a9a0db2e-7491-4364-a4b3-2bbb1ad56179",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a0a9f9-47fd-4cf2-9088-d6c6079c33b8",
        "cursor": {
          "ref": "f36554d4-573f-4667-b05b-b87867ee341f",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c11e7164-b589-4cc4-9051-50862635c168"
        },
        "item": {
          "id": "79a0a9f9-47fd-4cf2-9088-d6c6079c33b8",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "0a79bc98-3577-476d-8070-d224f1f872db",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d2e7bf-aee0-4807-a92f-011b0a65112e",
        "cursor": {
          "ref": "930e9d80-621e-45d2-8c01-269ac17eeacd",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d0a2cd59-e250-4d3a-8f0e-a7ad382c3bcd"
        },
        "item": {
          "id": "b2d2e7bf-aee0-4807-a92f-011b0a65112e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dc32b71a-2266-4380-b264-14712bac2195",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d2e7bf-aee0-4807-a92f-011b0a65112e",
        "cursor": {
          "ref": "930e9d80-621e-45d2-8c01-269ac17eeacd",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d0a2cd59-e250-4d3a-8f0e-a7ad382c3bcd"
        },
        "item": {
          "id": "b2d2e7bf-aee0-4807-a92f-011b0a65112e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dc32b71a-2266-4380-b264-14712bac2195",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff80936-3125-4271-b1f3-93857f06176f",
        "cursor": {
          "ref": "a555fffc-3993-4b15-8813-db135f7c2f65",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f5346c8d-98c0-4a1d-93ca-c5517e1bd361"
        },
        "item": {
          "id": "7ff80936-3125-4271-b1f3-93857f06176f",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "8b15d356-c30d-4113-b1ee-4aafc21a1f4a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee40ec9-ae06-4321-82db-8e61f0957691",
        "cursor": {
          "ref": "83f39a52-efc9-4703-b000-b11a69e52006",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8d1d8375-aa43-44f8-9277-88c534e12ba5"
        },
        "item": {
          "id": "6ee40ec9-ae06-4321-82db-8e61f0957691",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "04858cf6-fb29-4dc2-906e-fa3d82d6b265",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee40ec9-ae06-4321-82db-8e61f0957691",
        "cursor": {
          "ref": "83f39a52-efc9-4703-b000-b11a69e52006",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8d1d8375-aa43-44f8-9277-88c534e12ba5"
        },
        "item": {
          "id": "6ee40ec9-ae06-4321-82db-8e61f0957691",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "04858cf6-fb29-4dc2-906e-fa3d82d6b265",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fbbca2-465f-4dc5-b8c4-885af2ce525f",
        "cursor": {
          "ref": "ffc87d86-e4c7-494d-afb8-78f8c8eac7dc",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c4e00f52-7c42-42a4-89d2-c49af70786c0"
        },
        "item": {
          "id": "53fbbca2-465f-4dc5-b8c4-885af2ce525f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "e179c3fb-edd9-4238-b382-828af1f80ab7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}