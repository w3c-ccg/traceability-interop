{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "af8feeba-7d44-463d-8d47-d232565f5435",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8b947bc8-a770-4e15-8d3b-1de1c67dd7aa",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "668867dd-e0d0-47e3-8e01-6dae74801ce9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "46714c87-3dbd-4b91-806c-b6187ce4be96"
                }
              }
            ]
          },
          {
            "id": "e3f3135f-1e62-4bfe-959b-15af89e76228",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9b041146-8971-4fa3-95e6-14be45832561",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0fee105a-debf-4c31-8a4d-592381839406"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "efbd897a-a6b0-43d8-a9c1-8c56a7cd130f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8a4dab8b-50d0-42ab-a196-51a99e9714ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a2fb9017-089a-4209-bfe9-c0324bc32909",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed8f8568-d757-4ad3-b64c-21864a684b72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ac9d1560-c0df-4ffc-9543-c3272958de99"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "40aa3478-bddb-4797-8e4d-6eaacb7d836f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7001b777-4381-4723-8216-140594cddcbc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9074326e-cd45-4b11-9eca-f1b2308247dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14db0ca7-bbf5-4331-bbc6-fcbe3e4c3701"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0b800bd-0cfc-475d-8935-13ce81db8ae1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2f97dbde-3bcc-4e7f-adcc-d191370283e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f65de67-601c-475e-8b50-a04f1c3951f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1cfc833a-e868-49a7-b8c9-4248a90073af"
            }
          }
        ]
      },
      {
        "id": "9d7a6e95-8d8c-4a8a-a8f2-ec8262e0688d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4d5acbd2-89de-4911-9989-b4c14677f2f9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7a66238-d260-49ec-8d09-3f674b407f13",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0eb3c9f2-7103-4388-85a7-982fb8ccab3e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f949b33-466a-4fc1-abbf-0c0e97189f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e04cdd2-f4e2-4a05-886d-ca963c174a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2cd331-369e-4f69-aa23-d06cd6521282",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acd4c3b-2b10-400f-a201-6225f91b81cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1f182d2c-f7a7-4079-93fb-7315aaf1dec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e8d24a-ed1a-447c-be1e-3024b1098b25",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a456e110-be99-4324-bdea-7a2a29cd8958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "38d8c0e6-d079-4ac4-8267-e6c8e70c59b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6abff2bb-1c12-42b0-99b3-0b622a5c359d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f671e4bd-dbf2-4358-abd6-ed9d06346922",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edbc323-5793-4158-848b-cfba8770b98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "023cece9-687d-42a9-aff3-bf6104322eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4660ee58-b936-45d2-81b1-2046179fdac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd29dee9-9552-4df9-9ceb-6bbfdd16d386"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "11cba4a6-b161-45ff-b38e-48df087cc1e6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a093d43-656f-4b4f-ba4f-72762d5185f1",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9f401df-685d-49ec-9e20-70d92cc4c2ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6e6e1730-a927-4345-b364-264fd69b2afc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62f1deab-29a0-47a6-84e4-1e3370d5e239",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "86490ffe-de92-46f7-bd06-2ba47883bd0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7157fb4-712e-46b9-8e8e-883525d3a6f0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0a8e61e4-b3ff-43d2-9a70-483402657176"
            }
          }
        ]
      },
      {
        "id": "095ad489-28f4-4b9b-bc27-cc32a1be8d54",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8d7c8184-9850-42a0-8f7b-b07e1811ce05",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dccfd81c-ddb6-40b6-b362-0e76c2489033",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "77ff872c-0606-4077-8659-8090698001b7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce2993a-1c42-42a6-94d9-9b05149132ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2692f95a-6095-4126-86c3-89f49aa4dc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b9d75c-f22a-4ed0-a0b3-c33614a84690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d19b1cb-d2ae-432c-a7e0-4e5a7d23c30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879b5602-8a41-442a-8329-723e1dcd41f9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1cbe27-e682-4c0f-8a32-318cf1ccef18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5b626ff-48c9-4762-99ae-bc9fd3e84cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01c65e2-a153-499d-b4d0-7cfc5feb7c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72d1767a-2b97-4487-ae80-04d0da686ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fe9a9c-925c-463b-91b0-0193ae2425fb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda30ec3-73a4-4969-862c-b7b4c92d3661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35953ae2-b1dd-4713-81cd-00f313ba4ddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841cb617-45f8-4530-898c-31af7fe1d287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb7a6a1c-04ad-48fb-bbe7-7129fd41ad4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084f23e3-098c-48c2-84d8-57613ca408ec",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55b4fad1-8506-4b18-9235-805ddcfa4744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923f7ee2-0473-4136-a24d-875cc72324c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e7a0f2-f071-402a-af98-855d9ee90d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3ce167c-d624-4e57-b7af-b4e001d653af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175cc418-d593-45c4-9c55-2493664dec6f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655149cc-093e-4e89-a2d8-929e996ade20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e91f3b2-a6ad-4d5f-8636-8de43d18a2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc1e5e4-aefe-439a-bd2b-f7f61e2d0625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4970ef96-1aee-4006-be50-25847e8805bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5c4dfd-38c9-412a-a5f8-ea7338354b9a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00df3722-15c5-4b80-a1e3-076880a00756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2427376c-1520-409c-8113-2633f8e3998a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cddc714-538a-4e14-9c5a-0011ca4f7118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5a9b7ac-1725-47eb-b5b0-c9ceb67c50fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe16b227-7969-4592-8c4f-080c2b954ce8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50f25f9-03b4-402b-8b06-19a80b7f7f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c388d23-5af3-4f43-a3f0-a94e837e84b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b9e1dc-6218-46a1-ab62-057db12e5fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "044eb853-6c91-4675-a8d9-453afe9a4034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c78bdd-1347-4463-b9b3-6acd2042a15c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a53875e-ec2e-4db6-94cf-c1f3b313e1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c1d63b-8d88-4b95-9553-de11ecd6a2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6a12ef-5868-4f59-a7d6-f608b91c8846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ac27d9a-4cac-4ce3-ad84-1c1eed1d66b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e99faff-1c33-454d-b77b-c8c9ea3ea01c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74cb221-bf95-43ce-99a0-76cfaf2eaf0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e861ad27-644f-4b74-9e0f-22b234370729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636ed29f-1846-4c61-9f66-e53d4ab64d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc9f2d9f-bc67-4595-9f8c-71e6bf806d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d52db9-5cdb-4345-b456-3f0bd4e92bce",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6035ba-4253-4d8e-bf53-9d86756cf65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20bfdc5b-6fab-4b26-a08f-d0ecbe6e54a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e77467-a803-441a-913c-af12cc76b753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03338122-0078-428e-be5d-f31c40c58773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c04b090-fbdc-4333-bc23-59fb9fbf26a1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e91d86f-0b6b-41b1-b816-7d3c6ec0d782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c327b2de-a47f-44e2-9488-aca46da2dbcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c23c946-1a9c-40b4-80b6-4387eb77adbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f8169e1-7417-439d-b1a9-b1460504115d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4e9e05-f650-4c42-8974-e5a7bc85c28b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13455d43-02d1-45d5-b852-ae77f0904bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b530058e-7216-43da-aa55-2b755266c07e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bcb660-b3f0-447e-afd0-d3031fd64a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef0c2cd9-58f8-4099-b876-b5729c297068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2d3e8c-d6e9-4139-baaa-6b68a753efe7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5d5dab-b22b-4006-b54c-d2f1e7c5a15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b38d4c-6df7-4883-9b36-1f74f8edd1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde096a3-b2ec-4963-8302-eb1f79f87eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a79faa2-9176-4ee2-a7d2-70f42cf032d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa3f6f3-27e4-46cb-8d49-1fdbc30e4006",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec5953d-9b70-41ba-831e-a8045e52e6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcee3579-18ac-4d85-8bb2-aa7540b593c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324b06dc-c021-4948-aed9-88d474728ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56a37c70-68ac-4241-8689-6785eb3f3445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd65bd93-8b9e-4e8b-9ed2-f4d9831d7ed1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf55c28-fbd7-4c2f-a3a1-5be8d091a39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6beff9-0141-46ae-9770-1bdb48722a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0d63b2-0398-4275-a955-fdec06693315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a2c09e7-e8b4-49b4-bd38-d65392e68af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebb209b-81b7-41ae-850d-437381d9a2a9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea2672d-fb83-47de-a24d-ed82da3b8d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce8ba4ca-2e31-443b-a1cd-9cfb446424eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e3fa35-7b43-4d3b-a91d-c6915373e02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e99c36d-ce3d-4355-a302-96898ab7d453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0079d7-b51b-4b45-b58c-dd2e60d56588",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83248775-d713-4e05-92e5-578c20041c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b64ce5-5e1f-42c5-b386-c646d2ddef19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51014085-0a2c-44c1-8daa-5b1b81967116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f0f5208-5d2e-4b78-899e-c4475406f086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f787e7-8519-4a38-98f5-341fa0494d93",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02db2ba-5a02-4a51-a978-d7977a33c34a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301b227b-acfc-4ba1-b77f-6cf45d607962"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f1f175-6803-4f34-ae48-94f8d8592b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "edc0b9a2-c7d6-4db9-9a14-1aa7079e6d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365ad5e9-028b-4a99-9cc7-0bf892da5923",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8583eed6-c12d-4c96-b156-c501dd9c9454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0add04c1-4f2f-420a-ab8a-3252af1cb944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c25dcb-872c-4d9d-888a-e46fca6bf895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5809f584-6ed1-47d3-9a67-ccb07fd581ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc0b3ea-82cf-4734-9d09-d03e7bd37739",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff463065-d111-46c4-af11-94c0c2b71139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99899aec-83d2-470b-8d3b-93376f00eac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f3c641-6497-4c83-a9d8-d521fd67c43d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a03602d8-187c-4e2c-a312-873d7e32d102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b47e99-7554-43a6-bc46-06677b6399fd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b54467a-856a-4cb6-a1fe-e2fdd14c8f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115b1229-9654-400a-ab66-9694b0a6dbf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a929049d-9b38-4cf9-be2b-de6da496cd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac7ba66-2a50-4a21-a737-8dcaf8d3f417"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138a6587-32ce-4d5f-a335-75b0e1ccfcbd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c330817-de82-44a1-ac20-0304452bcf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e630232d-4f3b-4b7a-a4ef-50f1819fffa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50149a7a-c55c-4be4-bc36-5f9df1f1bd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4e0685-c0fc-4a3b-a1f8-243068433814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8085e339-346d-41cd-a70c-6412d5ce81e6",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7a1a5e-308e-473b-8eb2-9e66e5db843d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70891c70-b961-4c2d-93e9-63c578f1568c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ad4128-85f2-4a94-b97d-fe54ff4fd88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65d5bff6-9a9b-4bd5-8adc-1375d7e61dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54c1266-1033-457c-8edf-9471de8a04d6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e03386-76a7-4a04-be67-d6d68db6102c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1784a024-7e80-4391-bb25-6953c5160373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114e1230-7fe6-4bb7-9a9f-80dbb3df0c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c2fc15a-4e38-4ab7-9bf6-5bef33ef4d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47f9d00-a3da-4064-854c-8ffe6bb570f9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1baed019-b501-4337-87fe-a4ee4837cf40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9175a7b-0c63-4306-a68b-f33fd4cc83c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ff38f9-e05c-45c1-b99c-90086c5f7fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c59de6eb-1af1-4c55-89dd-6e9daea247eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85bc91e2-3644-4b22-ac99-c97fd2423ed8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af9eddd-d302-490b-8353-747e274bd032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080b42dc-b10f-40d0-8bda-86f99ce50382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf38e6b-62d9-4008-a190-a141680d2be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6532e2-2954-44a0-ac65-df0f498063c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed49176-1af6-4f49-a997-b92096fbe1b8",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a8556d-3c95-4998-8531-2abdad3d6f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae39944-575f-411e-bfde-e7145403c556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142f7515-18d7-41f7-beba-0beb88ae375a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f13367b-39ca-4053-8b70-9bd7ff4c3321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5169a4-bdc1-4a67-a176-f50f42eb0995",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e976c9-82fe-47b1-8d8f-43e3f3432a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd06993b-f88d-4dfc-aba1-5d9f7ead521e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7516ec47-0bf7-413b-a969-1723a63e4206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "55c6da66-d0f1-447b-be9a-813250e50bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cec67f-af84-4b83-bbd2-a0e70bc656ef",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cc022d-2533-4628-9bee-4b84b19f446e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "062b59e8-a72c-479c-b263-922dfc48ed16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400f809b-c1e9-4406-9054-8677edf0f79c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b06235a1-a4c2-4a1e-9216-877ba01f6a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8624e318-f7af-4c8f-b161-4be4cde103a4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138ba14e-fee2-4281-a30c-f9356bcb3c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a97deaa-638e-4b25-ae6d-ac05c5be4d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7117ee3-5dbb-46b6-87ba-f1ebace8c499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c15db16-93e6-4650-939b-922d840bfb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d02c440b-7431-4bfe-9533-a6b42f206ef0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1746ec5-8710-4ab8-9a73-1d6332d43fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a99615-1207-455d-bf01-e78b1a3445b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ca8d21-d44b-4a07-ab5b-4476f6f6085e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb29f38-7261-43d7-91c4-488f684f601b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3475bab6-534a-4ef8-a697-cae0e07e3dea",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf95ceee-d9ae-4cf2-9d49-a2fab9f05240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4a1cc3-87fa-4b1b-8888-8e04f8894911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa71c76-bd26-4c9d-9b31-94ba6a2d9e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8bb6f9-c3f3-4168-ad0e-ee7e7c544943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35d1c94-78f4-44c5-8f72-bb38af48e9fc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ff3eaa-832e-4773-884f-f62b6ec467d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a08e7f5-db95-424b-b2b9-bedd2f5eec63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4908fda-66d9-48ed-9d09-1a8e3ca3d869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a87982e-c8b8-4921-8973-c6916d12dac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62ed861-f088-4da4-b0af-61dc42667619",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b59cd6b-48bb-41cb-b0fa-84877ac71b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1802ad54-d77a-4a7d-8528-e8ca24f45dfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49d8033-4933-4b53-b596-a0b9754565cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2f520d-0350-4422-b29d-311929d09e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c136d8ae-3dfb-410b-aaba-6435911182a2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65997a8d-fecb-41d5-b15a-8caf0c731dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4eac66-24a9-409a-88b1-afc738cd176f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8fc967-fd22-4c7d-8428-ab7429f584b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "62e02533-315b-4e24-a902-5551408093a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9a3e32-791c-4b5c-bce9-c4b1029d1ec8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999247d9-6283-40f0-a1a5-0a44707d9348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23a6bd82-a809-4cb2-8bb2-5c094d275cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328ced31-a470-4c53-8b50-b8910c8ef6a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7d7107-ced0-4911-8a04-5d0cb4e8ed27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df1e563-8844-4986-9f16-800414a4ca68",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53bd61e-dc73-4eca-8897-8d2c4f543f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d4a24f-98ba-49e0-a246-6e5f4ff14935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c8c2f1-6dbb-4066-9c11-b6c7a261c9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "152ab92d-e435-4d16-bf5d-e147776a32e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6334602c-85a4-482a-836b-78d21953312e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce23c33-f873-4ca2-a5f8-98045be48ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d6a3b4-daef-4126-961d-d1e2cbb385ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c32758a-6471-4cfd-b6f8-34455b2f7aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f21f437-6e4f-489a-bbc2-c62f0976eacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a545d2e4-6863-4d32-9d60-ee2ecdd10d72",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ba6ac1-ef06-46d7-8c57-a00a852d44fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e67c7817-e030-492f-a4d9-239964cb1a3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5a436e-5115-44eb-9b5d-2197b7f80e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0657d75b-19c2-401a-9b04-6ef98276e52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e0ca11-f6eb-4fec-bb76-7f4b8c7c35be",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136ea25d-a018-4d91-ab64-3d0f44a253ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f02bb29-892a-4b03-823d-31f127972d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b187ae-7070-4b68-9c15-3b499152ae2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fccf1be-c4b2-4a8d-bb8f-fd7e39225d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3a6054-98dc-447a-9a0b-f7b367732f8e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a206170-88b9-4b49-89b7-0f83be105bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b995620a-8ccd-46bc-953f-71eab04f976f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45da488c-d50c-47fd-bfc5-aa22b1e08519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b236c15d-7d71-49e9-b3a7-83d29dc80960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2f6206-b9e1-44fc-b920-0a186b4fe162",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd8d15f-a13b-4fdc-8f5f-384559045219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de369f7-7d53-434e-a757-d851d174f560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a06cd4d-5437-4aed-b09b-ba93ad762ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "60ddc85d-05f1-4ef5-98be-ad4e21afa807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04ab281-9cf2-4c19-9b00-66d57bf45e35",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95edd56-59f3-4939-b1ef-1210c361a279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9011cb86-7564-4e74-b429-c0f012483c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3e910d-8219-45d9-bdb8-ec35ef570ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "73666afa-1191-4349-b49a-a87ed010a184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b60e88-64b2-4faf-aea3-4e2e0674b759",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6244e6-b428-4350-8609-d21f4dd747f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205b37c5-110e-42f3-ba4d-140ff5c6c2a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b474e4-11b9-462f-bc86-f7971fcea829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c5a6940-1042-4111-9bca-45bbbe716de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecd1e86-a9e8-47b0-b0fa-b7f4bebaf397",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff243391-c8de-4b16-963f-cb2c9915e0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60863b00-3d76-47a8-bd3f-0b8e015958f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36c5dc6-6c6f-4d65-936a-37803ca01770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "72afa4f9-bf38-46a8-9505-b57e17900964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b1882da-77c0-46b4-af06-b9b1e48b8213",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f293dbbd-51a1-43df-8ad4-32256e45cf6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c0beb2d-c4ab-4a9c-a061-38de8ec5100e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f2d9bd-ed4f-4e95-a0eb-a1c11bf8d408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "341e542f-76a0-42f8-b7c1-b4281fa2f94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2db9be-0b6c-4eea-8eba-32b8ad6edbf6",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55086d8b-dc39-4f7b-8b50-895fbdc29e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e739604-d14b-41e9-95ca-7e87687d02aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01375fce-7e00-46ff-95d6-9870b1466852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5fbfd4-5623-4b5e-9f09-c2e1a37e413a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb662d4-2b98-41b8-8566-1d08018660d5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bc0521-427d-4d3d-9482-017793eab5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631adc91-40ef-4476-b65c-21cf0f98c333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aecf774-146e-4ca3-b065-2b5a16229e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "052ff753-b3c3-4a13-a08b-f199b89307c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3a09a4-8240-44b9-b070-8cc449f5e4ce",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587990ff-95e6-40d8-a5fe-96a456fe1009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5462411-4c31-43c7-a530-6efcbbe88137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5420b9d-81b2-4945-82de-9acf8ee889c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a79e0431-e2b7-4a4c-b1de-3b5f0ec5c980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda7fd77-ce2e-4205-a8d1-6a24eb804ca8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7a8d13-5a73-43c4-92d2-f34ed7be2266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11be3c60-f6c8-47c8-9330-e690af23a230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a58a89-9585-4ea4-8144-398207bfbd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e8729e61-20ed-47fc-96f9-0f6544aeda62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae8481c-133e-4e2d-81dc-07ce7c0281bd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9357e45c-9280-4528-b402-0c386686416e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d852b21-7fa6-4f39-9e88-7ac0504bde69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275f3291-26da-4f83-94bd-15a79b02a5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e707d06f-e309-482d-a36f-97d577aecc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "781990ca-77b6-4209-b2cd-18ddb3f860a5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200682d9-655c-4781-99aa-a266fc0a4d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdd73e0-841e-4fd0-b350-9c8e5c5db86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51425adc-2f18-49c2-bc43-8be8cb13b808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b8d86e-0830-463a-907b-01bb0a18aae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68c0efe-52d0-4222-be3c-4209c1e68fbc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e5fce0-c470-4a0f-aad4-04fc1cb7f3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed2302c-0449-450f-90c4-457abf28fef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65342156-40ec-4b24-85c1-35f451bdfdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1435767-4eeb-4173-bc0d-d557dbe40744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad2ee48-3715-4175-8b13-1a42e396c062",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f8fe47-047a-4424-94fe-c8c29195f541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43b45f3-ca86-40ac-bb82-d65082dc8774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dcde4e-e8b9-42b6-8909-9a2658e1ca09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e499410e-ea25-481f-8300-8e04ce62c6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbf50f34-645e-4db2-9e44-a1fee1affbbb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64adad93-5022-4064-9d12-7ee8f735f75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58cdf99-ce5d-4270-b0aa-673493be370d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c64dee-1588-4e11-ac8d-68e906071b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dad0794-df48-4961-b095-221b220aa7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a2a281-f65d-4f01-b0aa-1158d7ad713c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2c7e19-71e0-4bdb-a5e3-9bb057e07d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f096d41-b80a-408a-890b-2fa4b7d2b1cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2327e87d-30e7-410b-8bcb-16a51d301e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b402d7-26da-4727-9429-f30cd91885da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cb2493-4aa8-4252-90ee-33acbc7aa876",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc602c0-7d0f-4090-9dff-0b54b9286d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12c72a7-e56e-4b97-b3fd-6dec1591df4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ce00d17-2e9d-404d-8ead-66a4a680f768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f718f018-4e67-4918-8677-0e8857f29623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23738e0-3caa-4b31-aa91-b38e5b987051",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5a15c8-9fda-47a6-9c77-d5c266d7a80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fbf68a-25c6-47f3-b8d4-e5f040c932cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9308e43-22ac-4e94-a09d-77d24e145c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "55dbf256-bac3-4853-aecc-b9eb7e1d8b18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d77f33-5c5d-419a-a767-d609a7a90672",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1444e4ab-cb7e-4e7f-90ef-dc51be093280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "771a5ac1-71bc-44a7-b066-9c628034ba97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13911cf-67ba-4c19-bcf5-0dc06510b9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3a4c31-e7ca-4e06-93e9-529c416b1283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f11b68-cdc2-45c3-af32-e22a1f46b45d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16a358f-3f3e-4611-a7e7-6d13d2e9540f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cf58e2-bf11-4798-97a1-ee706f0e41ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f013cda-3ffa-425b-b4b3-5b7801fc25c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "db5c89a8-ff81-49db-a24e-bcea8249c097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8198a662-d860-4ebf-a170-6e53441d37c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470db25c-523c-412f-b60e-b5228b502de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13ae5cf-3c6a-48d9-9126-8701daabac6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd570e6-ec4a-4609-8b66-ee21d72ee083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8cc932-6bf7-4c50-9f82-285146fef324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da71ecc5-5e7e-4159-b119-c915d27a3537",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "699eab00-a9f6-48bf-94d0-4397aa2db5ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b5990f9-7803-4df5-a423-667c14340744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369984b4-e711-44c3-80a7-8dd6d340ce02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "047c823b-c125-4b9a-85ef-53b45e25ba1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f57b7b0-3c8e-494b-b2f7-f5589141c111",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e1eb18-b25e-4e6f-92db-a6321c60d36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ed8c07-5c95-411d-be1b-45429ec10820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cc8833-f456-4148-aa72-9a127f9a7028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0f26de-fb6e-4a8b-a69b-45b65ce1ca8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c6493d-f052-4a9f-b7d7-86fc756cbb30",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4e1d50-274d-4357-8ae2-cff6edf74a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbba343-f5ee-4e14-9332-cb678e5a424f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d401cd45-173d-41df-8cf1-38646d1ad12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf7641bf-8b0f-4e3b-9776-d2b2f3b33414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d556bf74-b68b-4c2f-81d4-c67f2dd45800",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72dcce2-719c-46e3-9d09-b58ac68463e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08136a43-d1b6-40e4-a281-7399926e0943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea3ad4d-39f5-48b9-a6d6-1fd8f962f41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a790691e-e0ec-4e7f-ab5e-5347dc2a3b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bfd7d7-ad0d-4bf3-be70-885c2bb138f3",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1c942d-e9e7-4002-aa97-0fdac61112da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae590e7-e365-44c0-b0e5-c14b7013a330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ec1f1f-79e9-47c1-9c41-61f4dcd0eee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "175db6cb-503d-4279-bd57-bbbebb9df44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87426ece-b1c4-434d-88b5-a29cf54cd44d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c8b25a-86cb-41dc-a4e5-1984a4551e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df98ca7-ab55-4fad-8bd0-feba516693b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd3ff74-d03c-4de8-ab35-49e9a44f8b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d984a7be-57c0-4ac4-83f1-647910c03326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6684d39-dcc9-449e-a276-b3fe17c72e12",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd70266-bc2a-41f7-980a-14ad9003ecc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79cdb442-dfa4-49b4-8ccd-104c87050e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ed1bac-6779-456b-9233-41cccf9c4570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "13963c9e-deae-4773-9f69-0b9cfa4d297b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8115649b-4bea-4000-b61f-58097ef63f53",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab470479-d9bd-406c-80c6-bce4e477af22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c93b7a-da10-4074-8124-37c4c2e64e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0bccde-383d-4032-9902-e9c7f03e0341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "642f2808-4930-4505-ab16-b77fba4c0a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5fc8d0-2330-45cd-a192-3bd0707812d3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c60e12-6b28-41d4-ae08-a0ed939ce2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e188b106-87ab-44d6-b3b1-24858c952ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7507fa-3585-47d8-871b-94e25fec4684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1773fafe-da74-4ba1-9363-52033c4d9ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f94cfb7-78b3-44ed-b716-89642f8dd9e9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51c31aeb-ad98-4035-84da-d7fb85d6c5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2473a82f-4cbf-4230-9b17-496b2b479f55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a83e45-4d2c-4e83-ac42-80023a53e323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d716195f-3abd-4afc-a351-82d29b16b938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bceffd-02e5-4166-84fe-b6eef4884654",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f8b13c-d9b9-4323-877d-b71bce52bd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5887277-09a3-4696-a1a7-7d75e7658bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee9389b-9df7-44f2-82cb-5a9abbc62a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "27e9df35-38e0-4f82-a17a-285945dd98ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a57cb0d-9cd8-4d8a-840d-cb29d7b838df",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3d9d58d-254f-4c95-8711-60b762ec8518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eea43a5-b094-4ff3-b7bf-74ba6b165716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af3dc40-059b-48f8-a122-0b9f3cbe23ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1ab223-c5a1-4c4b-af47-fed02eb721f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f7aba2f-ef50-403b-a196-ba2899b04403",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e375bfdb-ae7b-41a5-9c02-0a9f86f8ce3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2f48bc-5e58-4e2f-9a74-bb093eb547b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb1466c-3eef-4bee-9438-e95174c439f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b1a4120-356e-4880-bc43-12b803c329d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb347bd-5fcd-400a-b304-7c2c0d723213",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19f0981-bbdb-48a1-9e3d-70761e2dfd46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf74cc1b-066c-440d-b20e-2e88a0df86e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafc65a3-a2cb-4da5-8c9c-fc564d0b65e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c59ae38-e8d4-4031-8f24-c342ea14f9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c677749d-92fd-44ab-9af2-e936ec5808fc",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511d2304-4b82-4d01-91b3-485f72aa9e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "970406f0-9f85-4220-b389-9691dbd469d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c0d2a3-b2ea-4a32-8870-c110df66533b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ad79132-431d-4283-a2ba-4a9913aedbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59c674b-51e9-43e4-b26c-5e75eeff33ca",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83a8061-e5dd-4948-a7ba-dad4f2a81a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c4adafa-24b7-44af-9dc1-44d075e454bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c725d0-5e78-4f03-966e-84322d466369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd11e6e7-f4af-4f53-9221-b328c095f196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29a8d0a-e563-4db3-b75d-acebb180a1ac",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976a0e10-424c-41b4-8e3c-19a9e37e1eb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9e551d-2531-4931-8432-582b9e6c31d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43297162-9831-4047-93e6-ca8134b2308b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab1123d-c84d-4bb1-b16e-2a95c5eaf837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59d80af-767d-4540-9b1e-e87bf78573f3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "676c524f-e035-4867-b4fc-6ae17836afbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4600375f-2a72-4332-a843-514c55d99d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f6c017-abed-447b-884d-e072211d3807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0151d1c3-7acc-41c5-86c7-a0a8549368ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e969a7-c632-4a96-a936-fffdc9138f66",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717a52d5-647d-460e-87af-58501bac7b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d32ca310-79a3-4794-8236-b4742c64130a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc2d710-a589-4f01-9424-0a690b70d750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f25cbd2a-a170-4c55-bd4c-030be929f575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16afacbb-8a26-4d85-9422-eb52073aaddf",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19974e1e-83f9-4e53-9adc-7b1975b00c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7b351f-6703-40cf-a982-c8f09a284944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5602caa7-bc66-4483-bfba-0c74ac947179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cd313ee-4fd5-4567-9cff-16bd186544fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b36b5e3-117d-4111-bf55-c10e57d5825f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f53f12b-998c-4fb1-9dbb-36b5621f4a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a66b74cc-c027-4a6c-b40e-d9c63006f54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6469a9b-41dc-4a40-9bb0-28f02d001961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1bbcebd-9d92-4a95-a0f2-0fd67008898b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9fd864-e5d3-4644-9d76-b6d5b7e407f5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2c3b4b-c296-498a-b4a7-539619079f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f53b3980-9a20-4c4a-88c5-e326cf24e096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1debdf1-62c1-4b94-9632-df6a8b2e5f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "622e479a-90e8-448a-a197-3af3f3a22ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae90b07e-ef08-4c14-86ee-22e76145103e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16594edc-6dc9-4697-9db4-475c50ec0d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d38a40f-c34c-48d1-8595-f603c0e3cd61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02516368-f845-4546-bfb6-c8c26cb0d21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9cd5ed0-0da8-485e-a558-6d5e2095b46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "471314e6-d7a9-4663-ad4c-9f7f7c5e37d1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec877919-d39c-4af0-839a-e37f412ff4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ded6a1-2887-4d38-99d4-18cbceb7d650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0b67a9-1250-44c3-9d61-de27121c4d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d96b89c0-5377-48da-8f0e-bb61b3c04da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1038d139-1a8d-48d9-808b-c7b501177ce9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d3ffbe-b414-4e91-be92-3c5188c877c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17bac3a-783e-4e31-b927-2a6b2a0261c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97eb3d74-2dae-4551-b977-c87f3872771d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "68c884b0-3673-450c-b74d-c2fe9cea5e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3eeca1-cf80-4339-8dce-f256ca322fdf",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd31d04-b8b0-4781-8f45-64eca1cf5609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1c6623-ab3e-42f9-b220-5c7df4e2ef3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee201358-572f-420e-97de-69aeeda4c5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "41e05aea-d73d-4810-a157-074c8603d631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f268db4-6949-43d2-a2a8-e543586fc05e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c474ebb4-21b2-432d-9e56-ddb44a344e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1e472b7-53e8-41b0-b5ec-7b9df5f10514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391957a4-f8b5-4550-9994-3d549fa7c461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0022d499-9e6c-42af-9753-11a55d65cb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec196bc4-83a3-41ef-9cb3-b1f2e6cdb324",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d4f3ce-14d5-499b-a460-e716b4ef765b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f04631c-0fbf-4eac-8ae2-aaac95f62980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c68ca32-d522-4029-8dcb-416d324baaf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2f523f-73ca-429a-8db1-e571bfc17d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72166ddd-ddf3-4238-bfbb-a3134af03a2a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0870cb47-494b-4979-a6aa-f700787a7f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb581af-9de5-4d46-bf97-1dc009c0a4bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d8cda4-0788-4af6-9ba4-22f5d74273fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "87e615bf-0185-438f-b47d-a61fdface0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752d3bdf-b910-4251-95ca-53a5a3551042",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a419e6-e73b-4c1a-87bf-63b484ce29a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a4ca05-42a9-42bd-92a3-40cc85b48d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502bb048-8f2b-4415-8f36-43cacc003a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2df69bc1-0ccf-482c-b6b8-50b40c84d039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd20a3a-280a-4660-bd38-3ea7a6f7996f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50d43d4-fc33-4f5d-ae1c-ebfc7d0cc2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5e7efac1-69c1-4001-a4af-5da3761f0d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c38dfa7-db69-470c-83e4-992846bfa27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "27a8f91c-b92b-41d7-97d7-424479c541f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "50945cf6-2448-40e9-be5c-81538e2846d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d03d1e3-90a7-4b76-a724-00f10a2a2314",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dbd7ac7-1a48-4106-82b6-9922e3b80990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6b76d14-bbc2-4d91-973e-e8924c36518e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dea40a2-adff-4828-a995-a9c6f32f5d40",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8e35d65-410a-4f1d-9b92-4f691c1416b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "214cb71c-11cf-4a6b-b77f-56947a066247",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a8b0932-1169-402c-8319-bdd86c9dfd2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dd452bf-5f1b-4aa8-9a97-30b6b16e72af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f295a509-cbda-4988-a9b1-b02121ba2050"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3490247d-90ae-4fb2-aa02-04d48d9b7c80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e99fc6d9-a7ad-433d-880c-9bc560814995"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a6a73e70-36cc-4a81-9c6c-1288e830893f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f06a0d76-5928-41ce-ae1f-42ef1ceb699f"
                }
              }
            ]
          },
          {
            "id": "3d547e9e-cf1c-47fa-97f0-e8449ae00040",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c9227742-31d6-4f0d-a2ab-8ffd65ca98bf",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "89742059-1049-4fd3-b3ef-5758bf8d6eac",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5194c599-cf28-424a-9afe-ddc7f876e0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "03ea1205-dd2c-4d5f-a1b9-9a88feb4404b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910a3929-9650-4aa5-9e84-5c783ee4d6d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05956073-5e4d-41d3-8bac-681210b20505"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "50320308-cd91-4cf6-ae69-cc1abd890661",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a3d446a-8240-4ea0-a3fb-045fff65d207",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ee15e69-376f-45cf-9d1e-9855ddadd264"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ea47580-4195-4f0d-944b-4e5daff867a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f74c8139-1eeb-426f-90bc-ac30d60dad4c"
                    }
                  }
                ]
              },
              {
                "id": "268c86ed-c284-4c91-bfb3-a168430c5845",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3da98bd1-7397-427a-b052-4dd8c8e75176",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85130536-2840-4eb5-8bf9-f36bcc0b12d7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b987d253-622c-48d4-92cd-b731fad204ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "63b65d16-7c9e-4a1c-8981-fbb3659714b7"
                    }
                  }
                ]
              },
              {
                "id": "36015977-5079-458c-a9d9-a4198c82e0af",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a282c77-69f5-448e-bf87-da65f04746be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7617514e-1f63-4050-9770-1440a7a21593"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9a8cf07-c974-4bcf-9a31-32aaf89d9236",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "24597939-9c22-4f8c-a0fe-53c48693d26d"
                    }
                  }
                ]
              },
              {
                "id": "9bf5cee2-de6b-40eb-b2db-8c1f9955d0ea",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cfca53e-c28e-4cb5-bc89-ee0e4ccbe240",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74c10272-a95c-4e47-b9bb-3838b4ec68fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca0f4877-7214-4b52-95db-7568ee364d75",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "94ed8039-1e43-4978-a633-8ff0becd73b2"
                    }
                  }
                ]
              },
              {
                "id": "9336db2f-0ac8-4be7-8a6d-0d4a2a71904b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d4a14b1-3746-43cd-a8ce-e8e479f24bec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "348b1e9d-e6c0-4f51-a701-dd14a9560221"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ae1f997-42dc-4c96-927b-02eabb98af58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "52002878-bd1d-4096-bb3e-52374b379249"
                    }
                  }
                ]
              },
              {
                "id": "b0c7e554-d599-4d8f-aa23-a9ecd519723d",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "220bcc8e-ca8f-41c9-9904-5781a578bca7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3449a81d-281b-4190-bb90-e58f54afdf36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07956339-9d48-4e12-b665-bff20aff08ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "213c424f-b6d9-4023-85c1-b835ceb04437"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d79a0d2e-a36a-495c-91c4-be934576d6d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca3d9ff9-7fdf-4ba5-ba91-0d41a7cfd899"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b7f80a42-49a9-499b-8f14-f8111b2d8020",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "14a8f2aa-aa3e-463a-ba40-2cd63541f68d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e40ab738-4947-4e29-a936-f944e11d243f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c23de597-19ae-44ab-a18b-ef4be4e0d5a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0d70727-441c-4615-a683-15f4d6efb77c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1b3841e9-cf16-4d29-9220-e0432f08e4b5"
            }
          }
        ]
      },
      {
        "id": "d66a741d-3629-43d9-8126-7e37dba01c67",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2c51ca31-25d7-43b7-bd2a-490b40375f25",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d6a3c0d3-48b3-4a29-9b77-74d748750e62",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e6c2eaaa-6b88-4340-af1e-db96444c1627",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b61779e-0875-4f1f-bcca-7ee3bff3d94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd79b567-2fac-4852-8f67-51bf26f8624d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75cb538-e480-4076-87e3-1d2f9dfb7dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb6764b-9247-4f3f-8612-73475e22a025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570ed0cb-06ea-4bfd-ac3d-5d280d81b1d2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccd4770-9e71-4f19-9366-55b543d3043a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4eae74-598c-4064-8bdd-149e25fcb5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131911e3-ec82-455a-93ff-fc144f8bb2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "44cbcbea-24e4-4006-87cc-97c662e75012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa03a564-4b87-4de3-8877-8418efe3e0e5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e788890f-43c6-4c30-9e62-5c13155b4b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bb66a2-2b73-4b4d-9c6c-67a36c5de9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52850b1c-79cf-47a5-bd48-4aeea178661a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0a6205-6445-4882-80bf-f5ef04c6e11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc45d77-634b-43a0-810b-8b15e43f33b0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e038c452-34f6-4c9e-87bf-63914ff17cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27fc2a1-ddde-4e61-b8af-869f8cf9c446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0fc0d5-184d-4581-a57f-765b323303e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "283b09b5-5782-410e-a0dd-d56bc102467d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8244f9-f16d-4aa9-b694-e8e763b64cb7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c94fd6b-8280-4c51-a999-3ddff37f6e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9844a36-de06-4f71-b24e-c78633238483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1b1833-2b39-484f-9ce3-f45917ff7e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "572aaa8d-d8fe-4b59-a978-ebfae6045bd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a0a15f-bd6d-474f-999f-be5805a5d46d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0cab7b-5ec7-43fc-84c8-053675dea38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd747c2a-5ed6-4787-bcb0-c59b8e49b75d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cadf159-0bbb-4505-a695-d37f73373a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6caf28-fc9f-450e-844e-a26b1a49c7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cec748-4f71-4227-ac37-af7602b900be",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27f7c54-8eaf-4509-b1de-c4cba6a3fb45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33b58c6-683b-41a2-b7ba-d8bf8a395b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a957149-51d5-4af8-81a1-87c26e0087a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f574586f-a2dd-4747-b089-1f502058208a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5328f2-87c0-4583-bba8-41739663930a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb8c7d8-e183-4ba3-8716-1b699965a572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf52d25-9326-4c60-967d-c4baa7ee7590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4202e9-7775-411f-a42b-82585121d78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4c88d95-296b-4e2d-a5ed-cb6d90232d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6794458d-874c-49d5-9623-c4cd312102d5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc5b7d3-67d2-4e6e-b854-2d30c95cb875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85091b83-ef29-41ec-8ccd-29dc323142b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c923a7d0-f3ce-4261-b31e-b6bb54f9daee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79326c76-e79f-431b-b1c7-59513bc59f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905f8a4b-8e89-44bd-a660-39aa942eeac2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0b558a-90c1-400f-8fd4-c320edc396ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa99aa5-9444-4471-9db7-835d904b7334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58cb944-75de-43c9-8cd8-1024277ce47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "483b5bb4-3e51-45c9-a6a5-23588f10ae71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855f552a-0fc5-4b25-8413-154ee96d32be",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e914f93-f165-4a0f-b3bb-2783d5508a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c88eeec5-e8f4-4c60-9fe0-044cc8eee7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a628781-33bc-494f-9faf-d652630459ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a6f045-d99e-4db6-b09f-8dfd94412af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49a61e9-ca21-44bb-8f10-4895db07b7ae",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee2466f-a397-41d4-bbdb-8bfd79e80a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2944b0-5d97-4312-bb65-a1173ae0fb06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0e660b-3932-4877-8a28-943f0cb7da81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a871c1d-012b-43fd-be61-8fe32a2ec44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0af727-23a8-4e7f-a1c6-3bbbb5aea829",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0924cace-6e4f-4542-bcc2-09fccb0a33b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e7107e-bd62-4462-aa1b-86f313af7bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "599eb8c3-b155-42c0-a0f8-ab8fdbaf3566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8e8fca-970b-470d-95b9-c686df2f0e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ebd276-c0a5-46ed-b562-c6f73102b1a3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "101dda85-a24c-49ff-aa7e-b0d00c33f5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b3a131-5721-4895-b26a-0e482fa81606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59ecfb1-7a48-4d07-be51-abc1f837a42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "22fc908b-36e8-47c6-b789-093754dca4bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563f1885-b865-4c56-a407-657819688dbc",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d101327a-3c1e-4406-a01d-8436c8b1c54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aac3790-861a-4924-a74e-49f0ad23c759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1663d65-086a-4aaa-bbea-3048d59b9f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef938660-9137-4197-b2c4-93cf45947bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bcb628-1f1e-468a-b119-75817cb69dc1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e5c2ea3-5560-4949-9d6e-07650cc2709e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "061ad083-8ec6-4a08-8f64-fb7522e8ffac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66b1e72-c83d-4ffc-835b-7b36c8ba348c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a94418c-bc41-4e15-9b51-1c7d113eb106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "643e2e3f-268b-422f-8dd2-912ebb2c08e3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497cf0f5-320f-43c0-af4e-11f0a21e9d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d16dce99-d3c6-44b2-85e3-94cdc5672b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b1836e-0a2a-4c16-943d-dcb5e2504f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a591cfa-1bb0-4113-b184-9f1da1edeb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5db4461-c76e-4115-b0d1-9535373bceea",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee79e75-d106-42d6-b009-1e3b57d21859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40cc25d0-38f6-431a-afeb-ebab1ad8afa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4541adb-b30c-4f27-8121-d3425ccc9a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "374c4dbe-2c9d-44bc-98c5-1b7218337d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2db6350-8016-4164-8fbb-877cd8c8c3e5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e257b79-1029-4499-b5b1-cdc37d871019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3535d2d6-7fdb-4fe4-8245-16310c6b1a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d734a9-8a5f-4121-ae42-4b633913a936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9910fa-ff72-4e17-9a5c-5e35675d5feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb13091-7027-4a3e-8ef2-e8b56dd90ea6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d76eda2-6cda-46bb-a71c-2d8a05256567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c55c05-7fe9-4307-ba18-e2df344b1ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc715d0-db07-4fd3-a228-dd77bab1241b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "379783eb-9c4b-4b32-bf9c-d34b7a4e5838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9ce16b-29aa-40b2-95ab-3bcd571faa2c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28596ad6-7c99-4634-a88c-9e4af8a8800b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ba94179-4764-448f-927d-fd2a9acffe52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba4f723-6baa-4ffb-bcec-ce68c036c4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4620eab-fbd3-4346-a04d-07b2ae6f4c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f09d6b7-957e-4d0c-a222-13f9345ce24b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "230d9377-fda8-42ee-a075-b7d2482b6faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a3c1c7-04d1-44cb-80f6-a2f09226479e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc5756a-7d78-4974-8bff-1f497db49397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bd3e5c-e6c7-456d-a909-76b15c644b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8498d2-b11a-40c1-b69b-d31544b4bf33",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc03107-8fd2-45e1-a474-4f816b1a7d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ddc2d4-d25a-412d-9a04-53fba4810bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a5d154-4544-4128-9f43-91854b23f178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a61f7b51-fcc7-4fc7-938b-63a1fcf39f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6546c13c-1e1a-4bf2-a141-826b4d3c5d67",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d04b517-be49-41f8-887a-c9001f11628f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bc11d6b-c28f-4e1a-ad05-6aa04ec53d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50314bde-c050-4383-81bd-4d50c3f24ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "708bed3c-69e6-40d0-bab5-9ea568e31819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14975ed-5298-4318-9b97-3b8a9e748cbe",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c40642-b9de-486e-9b8d-699b96c57f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03ea78bc-91e1-429b-bea8-e67f71bf6a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8608019f-31df-406d-b16d-79f4677f93e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe8bc4d-e8e2-4751-84b7-f0c38c2a7328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8998fe3e-c873-4a39-8697-3b4ebb5032e6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3466d82a-e476-4d29-906e-dfdc9777b187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d6cfbc-6b21-4dc3-84ae-8e929b53451d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629b998c-16f2-44af-8271-72ea061fb0db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49b7a621-f406-4b74-9934-247b8c835399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6547d8c-59a7-441d-b9d0-3233cb826df8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb601b0b-1379-4c2a-addc-d538b67965a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fd0ae1-f9bc-4801-9d80-fbfbabc6ed9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cae143e-ac69-402e-bdd5-2d45bcb234b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "706bebb7-66f8-47f3-bfd4-cede53c24588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b8fc405-051d-4e35-824a-c3092571f69a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba827fe-c44d-4239-8a2e-6ebb5877785d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af889d7a-86c0-4fd2-a6f5-743dd959c526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825ef4d8-150d-45a2-ac53-c6d61e877fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4ea2281-939f-4cf2-bda2-c0b5f0eb6c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6ce8a7-209f-42c2-9e5a-05adee74394c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4640e3-c3e6-4dff-80b0-44e2d1a8deb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322d2ac1-fd46-49dd-a5bb-d2ee3ac34d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85977b4-e051-45fa-9770-1c4f6294552c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6752c8de-e489-4ea9-9bc9-2ef6d833a649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa6b68b-9fcb-4a8f-8df4-2a080cb5dbe0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e158b4fc-02a5-4558-a0f7-e7ce1820fd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53236361-7e2c-4dd5-a0f1-193fdca80c87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a97718-d157-411b-b900-7bf894492be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75ac8009-4d4c-4360-961d-68a6b71aee16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ead058-0599-4dd6-b06d-3604da956500",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b15c5a08-2279-4288-a97a-75e44cf4aa73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f0e523-d579-4abe-929a-e366cf7286a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418eb82f-cbde-4dd9-ab7a-d907048b8dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00222b69-4e41-4346-a731-7a8fd06b39fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3510a73-41b1-468b-b0ea-1ec2aafda2cd",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ddf348-a7f0-4279-b0a4-1b93ea83c2fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b228f3b7-9f47-48cd-be7c-4d5aea049e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6392338-b289-4db2-beff-0ef544b32c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "282494db-5556-4d67-9abb-e484defbcd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f96eab4-8465-492b-be24-7a494550aa2c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745c59cd-9453-465b-b5da-9de707cbe662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbf53cc-738e-4019-84fc-21404e34d6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0b7a60-9575-48fc-b612-b1fff9d44af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d2c9e88-a584-4eb0-8387-9386eebb4c90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7d65b8e-a0f7-4cdc-ba18-571e1efc151d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7c3e82-fa11-4700-bab6-00473681e535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdad6358-e15a-4838-acb8-fb4042084508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e0b10e-bd33-4e47-b6c5-6e80bfbd7407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91d77fcc-156c-4b98-9674-f7081bcb58fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ebeceb-0e39-4039-8398-11f398bd0fa8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcb429d-9f17-4c88-aa6a-cd9ee0cebbb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737ba91e-01b4-46d3-9f27-16199f1688bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79ec905-603a-4c5b-b4ac-d1a0f5446d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6451c4-410b-4c4a-acc5-30c39d48e8e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450b3fd3-8dd5-438d-a110-aa7f3fb87b6b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d02de1-5853-49dd-a53b-e0d2e27d6167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50557ff-95fd-4aee-8534-50b4feed5e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e047ab8a-4d32-498a-88b7-e18ffa8842c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "223b17c9-5522-40fe-a6f9-5b734a7ce08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9447cb8a-956c-41be-b5f5-2adb78dc3ec9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c0e7f2b-e482-47af-8bd2-ad9e2eb28959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d1003e-68e3-42e8-aa78-af5cbd6b8ffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0db0161-418c-41b5-8c09-7047891e1910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15247418-3997-44fe-88ae-06d65dccd512"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bc612687-9141-4b24-be1f-7b268982f162",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1038666-3c95-4f49-a523-fd1ed5cffd5b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89639fd-b90c-4a71-b8cc-00de815675bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a15331-272c-479e-98cb-25656a59fa7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0960c25-d598-4357-9387-b5a493bab0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "caaa3edb-7602-430d-89e1-0d165bd1bd43"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a0cddf9-faea-416b-88b6-58d0503fd936",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89f7f4d8-9b32-490d-897c-ca5f8a1322a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1bc5ca0f-ae66-4759-87c9-8e943bee9e95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd4c20e0-9da0-4764-92a2-b3b76b815161"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d9d8032-662f-404f-b22f-f9a567cba846",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be2b84ec-3338-4dfa-a786-8ff5862be0cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc6b4a27-ef22-4aaf-b452-5229e5ac19d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "38409a84-2165-46a5-bf51-13e545e4e7b8"
            }
          }
        ]
      },
      {
        "id": "2bb1765f-37ce-4fa2-94ae-fc1447933934",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "be345b24-4b60-44ba-bcae-226ad3a03e08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3979266d-d828-4774-8237-e30ee83f03b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c1c37674-20ce-4131-b8d4-0c33bac9d228",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9cfbde-0097-4605-963d-634e7487b12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dba966ba-8494-427b-a19c-7d9e2eb14893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e8b1e6-4eb8-4e81-9b55-09451c0dd32b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e470936e-fb67-4296-8817-0b6766e372bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a012ecc-1aa4-4b38-b641-4b184c013e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112abd6a-74c2-4335-b3af-fde3b1730de5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4ae3c7-8e41-4154-8ff3-e9e508d55db4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f69cf4c-8cc9-4998-9f00-6442525af4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10521193-1402-4289-a046-53e4a683abd6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53934151-a11a-41b8-8371-b7423b7133a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391dd01c-e847-4e8e-9a2f-96d63408e1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5117ef74-56e9-40bb-9873-dc83bc9ffdf1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f470afe-9dde-4418-9a63-739174738693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052a4d2c-daa0-46aa-aca6-759cb8e2e750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c7f8e7-ad28-497b-8de8-26736edfb88a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4d69f2-00ad-4bf0-9b0e-cdce244ef4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024248c6-23cd-40b7-8137-3f6759df610c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9254ce7-9c9c-4c32-b2e0-97ae3700d01a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54edec94-0a6d-427b-bccc-61991bb45043",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36794c1c-9f84-405d-80b5-349717b90514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb0af3d-2621-4eef-9992-6e70ccbee38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a89a7a-83d2-4438-8d4f-2ed3ae4a5f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f65d911-b0f4-484e-bff1-d1092f3f046d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8c9ff3-1c09-4e1a-86ca-02d6bdbad345",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f200a6d5-755e-4785-a266-9ff306888337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f798974b-38f6-4976-bcf7-03dd0e0a7980",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d56708a-0e84-449f-8504-71d84140e805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9f2e4e-c13c-427a-9fb1-6727b5a4cfdd",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2489f8-8834-4fdc-b9ef-37aaab166795",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db7bd685-35dc-4ff8-9525-bedd852d49a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b164b669-11d0-4ea0-b862-aa10f628d78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1745ceae-3325-436c-88b9-9de3b408e3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ba10fa-16ce-4275-bce1-4d1b4429dd12",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b443078d-c5f4-4cce-b51a-ec0477ad7f70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a72c82c7-727c-4221-a9cd-5fd5773a5a17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8018362-f389-41b0-b8c6-20fb9111e34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c9bc2d-dabb-4e65-ac88-221c9431d7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce80092-b61d-455b-850a-379a7a099de4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728a5ee3-b513-4d20-9d2a-f91c043877e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31682cf-d73e-4e8f-9035-37e71319db0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de40b42-9fbc-43e7-9499-8d582ad3ec3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9e9afe-dada-4455-a59f-4644bb7b46be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2d687c-718f-47fd-9042-4a84581dca50",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f5211c0-cd1d-4dea-b7a4-80aca46eaebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "443172d1-d5a1-4849-b636-0de21d4bff63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915c085c-4213-40c6-bd3e-dd91ba5524e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c672f6-5bb9-4f4f-969a-4992351c19f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20732801-ecec-4f63-b766-8570d61ccd35",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04d2e3e-72ff-46f3-96fb-325187afbf79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf17a09a-b594-4aca-a4f3-f970519cf480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a207518-ad2a-475d-9fb5-bbb3662806a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d65bdbf-5c0b-4afe-bfe9-fa2f0979722b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69c20c0-7efb-46f8-ba2a-080392f343e4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c6f37d-5827-494d-9042-ed57c6970787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "336b4013-59f0-4fc6-871b-0fa287ef48e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ccdff50-897f-4240-aa20-715a6d9e8a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee86d72-f0ce-4ef3-a04d-135b9af7f341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf9280e-a9ca-4bc1-9add-af12916f3f84",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dcd67cf-a726-41a6-9c8d-78feb26480bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "582f70a2-6551-465b-8733-706e41b69731"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f485bd-e059-453c-a32e-c578b9a2b289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e48817-2a19-4634-99e5-38a6a56ae8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf104c7-8874-4dda-a18f-6d43056e8cb3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7d6543-51a1-4cef-8b7d-67e67a5b4b45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64e16b0a-3090-42dd-8611-81944881294a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263c4a88-cc55-4f6d-8055-b7fbc7dfd551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a94250-2631-4b6b-824f-73e2008553df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12def02d-e3ac-47fd-9fc2-d73ed1eb7429",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08d4779-fe69-4ad9-bc69-11ba4c613983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1ff681-a03a-4223-834a-625da949fd60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4625109f-d25b-4a21-ba32-158b1c9e8e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0a6124-6d3d-412e-a8ce-937304e22888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1732ad0d-774d-4803-bab3-c49941443186",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7934cd-8214-4bba-82d8-eb680c407a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76a891d9-4cbe-475c-82f5-18b7339f24c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea85b7c5-ee86-483e-a967-2f28a80f851f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223231cb-d780-447b-85d8-7a339ce096e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2d9e30-0190-47f8-867c-1834fcfd5a35",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95caa23-ae47-43dd-962e-0b776846f7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b67a21-4c52-4b5a-8c78-d46dd2f026af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a264b5-0c49-4ce2-bdaa-d3f36c6cde5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e007359-9fac-4482-838c-a5c02e424855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22885e4c-938a-48e1-9450-b3eb065b554d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58696252-d66f-4df2-91d0-9ab795e30879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c75926e2-463f-4ccf-b436-c41c8005e55d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45cbed4-c96f-47a2-9e25-f4ffe78c25d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999c9953-50af-4828-a774-627ba5e07af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009423a5-d785-4529-bf04-a4612f0c98b9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96fbff2-a61b-4070-af96-af02783f2d60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d7bc03-d789-45f2-8ad2-3aff9c415d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2431026e-4818-4127-afee-587c0caddab9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe45740-0903-4993-bf98-bd727f6a76e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d5ca89-2cb1-46d9-b065-310cc21ccf77",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28294d16-a011-4151-af82-ccbfdc6b5759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4555506-5b99-40d6-b062-ca07c30ca983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad68c483-266c-405d-a608-4893e1532f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5243757f-fd7d-487e-9a5a-3381c578cf82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22eb69ea-d3e4-494b-a43a-5457ef6901ee",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f120b987-aa74-4a1e-aca5-5e150fdb78e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55f2044-f3d0-4c72-9658-c7b3754d3565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6373b6a-bd24-42aa-9c31-a2f035d6d6fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a686a77-1658-4238-8a45-1611de0fb424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d96c6d-7572-4f28-9931-a9e5edd837c2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063f80d3-abfb-4c09-a02b-fe37a7b60aa9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1bd5c72-68c6-432f-911b-1c3d2af448f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682e6cd4-5a79-4159-87ac-9e5a09702515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac23bc7-9900-4d0f-8a9e-cd0eb8ab09cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4d0dab2-0e34-419e-819f-b92f5d30c02a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e25524-6810-4cdb-a19c-7cdb8552b0b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7830aeeb-3abe-47a7-a633-ea3af8c927b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a296fb42-a385-4a74-b353-e47659ebde64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45f885f4-5c7f-412e-9573-be54bd9160d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ead82a-e084-41bd-bfb8-7119805a4373",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e673388-7d52-4a2d-acdc-0a752f4ece84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbdd98be-88a0-48bc-90f6-21f6f40142cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c31367b-e3c4-45d9-aaec-cbbcb403e852",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c1f448-4e04-457d-993e-4e399b7fef53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272c94ce-259c-4277-8dc1-ca5e95550180",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548d3c5a-27e2-4c0d-934b-96a7199d85ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8b20ebf-e3fd-455a-ac75-44ee680b721c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f002003c-6331-478a-ae62-cc012d84856e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "022aca04-48da-4f0f-a235-fa0dbb20e3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f826e50e-d811-4293-9728-f52026b53e88",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a04b08-9c27-4684-ba7b-8b41b43b4cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abac8484-990d-47f3-9663-2974d4e9ce45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3a3140-8531-4b4c-8da1-4ee621d64b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c0d334-3c2c-4c23-9b90-c7d59f01c9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e2a3c4-9b8a-45c2-8dc8-659bd59792ef",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9563727e-1f4d-4a69-90e0-ab1e69d8099d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55456fb3-bd57-4f8c-a659-33c025cc8458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a99624b-89ea-4f9a-8e02-160c1486582f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e89dca07-5ec9-46b2-b19b-c0653439269a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d1909f-a14e-44bf-b442-1d02ac1480b9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7127a18e-8ad7-4777-9083-cd90fd537d77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dff88ef-39ac-496a-a096-eb5139dc075a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ce53a55-fd8f-4486-8fb9-4ee6a999c89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37a4468-3679-438f-85c3-9c790638e483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fef704-062f-4f4a-9a2f-85c6900fb456",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3ffe68-953c-44f9-9346-6a2f89efbd93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8124168-ab22-420e-a2a4-97e5fec04877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "729ca9b2-e60c-45e1-8558-aab79c49d286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d317190b-07b5-4824-8a72-13ae32776cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47646009-0952-48f5-92c7-219585e9824b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04990d68-c3f1-4f47-8917-c7f914a860d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4331b3d0-17df-490d-b89e-22f95cab7d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912018bd-daa9-4448-b5af-9895d99d8c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b1bee47-efbf-4839-89cc-4c17ddd95027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b02248-aee7-4d0a-a2a1-299bdd27b463",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9b6af6-81d1-4668-b645-97b4ffad4647",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b33a714b-7738-468d-a979-77b5b3f881fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e6edfd-534e-42ef-b2ff-49b1a75125b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d4b843-43d3-433e-b90e-c32789853a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bd22e6-0931-4e03-ad01-cbd95f17f17d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cc000c-3985-4eba-a270-472ef13e9607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39944068-3136-4b5e-885b-8e9b5e0d6f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ce0691-ef73-4848-856b-f706d8b823e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89ceec1-29c3-4abe-9bdd-b3247f8c5745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97510bfc-c4b0-40b1-b4ba-97862a49b456",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6525d2-1714-4d5f-9964-80e0c34c83bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67aca645-60db-40b5-9098-5af3f6eb2c0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a8d55c-b145-441c-a9b1-95c5c0beb5d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff2aca0-55f2-4834-920b-b9d16c0ace56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b339762e-ad69-4d3b-a19c-7e23e4a7110a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35c5b53-3067-4b9e-9ddf-bee0449ded5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0e9983-2193-45d3-9f8e-7421d39ebb79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3157e1de-f3c3-4b5a-871a-6e276bb747f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e93c038-8f18-4c25-a885-8dbf25903fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb28d48b-f516-4765-8d6f-85b45d052896",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e25cdd-c898-41b4-8707-07b6ca155b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "591fb959-dde2-4c75-a37b-14430a7fef8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "383d5bb7-0668-4270-8811-3848e10213af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db892ffe-669a-4398-b2da-1a8db631ef7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c11949-60bf-4054-90e2-91aa20eea56a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa622be-5983-4088-80a9-af90d2c45f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa1f44c-7806-4b8b-8cae-275f2209b91d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b483648-cecb-4e41-abec-30b163a97b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d2e510-7ffc-46f8-bcc7-87999d378d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851cc21a-d4d9-4033-895f-ef92ca090d06",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd39e9b-27d2-4077-b4b1-dcc281a73d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954d1bf3-0b65-471b-aab9-b9e911b98f17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c9c316-9295-4616-8c93-8b366383e902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351aa722-1ed3-4820-b846-65d52f5ea0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988ef853-16a5-4eec-b3da-a684bb5d630f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92ec5f2-5054-4760-92fd-b48bd50d1324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb64c507-9803-44cc-93d5-b44cfe5b1ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39e17d9-b143-4602-97cf-f764d8c1f69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea89e725-f24b-445b-8265-0791b7275465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f08f58-b652-41c5-a0f3-8b1ac0e4c613",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8173d9ec-0905-4c7c-a52b-0ef648ffbd45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d1384e-eed4-4e62-8069-7d33a4e9ea66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5df415-0f25-4c1a-91ba-63cde6f1fe33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0664cb-7854-4538-92f4-697fdc4685eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476b40fb-f004-4dba-a268-65e3ac37c985",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ccdcc7-90be-4473-82ca-8f92fea007bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f160470-cc88-4ecb-9852-6e695e722024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a30b75a-6e56-48e8-8595-7f8114be7fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b00526-c5f3-4531-a01b-e1ce9a8e21b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1b7057-0cdb-4c28-94e5-b194316bf99e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa32548-343d-42bf-9246-01195af43551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03308221-e4da-49fe-8f5a-5bd045f4576e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a6f990-9682-46f1-879c-8c4d3ebd1081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b069f35a-7e19-4839-bba6-c8395ea8c773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325ac5fc-1a33-4272-835f-8bd606e841d6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a0d181-3b82-4800-b2a6-8eda9133fa6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e369c9f-0abe-4922-838b-299ef8e127fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719ab212-adc3-4f59-9d89-240182d2d463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d680c996-ec62-43fe-ae98-39c27c1f4ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed7d5e1-d03e-40ab-836d-c021e2f9ac32",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c737570-8cb7-4780-9384-a1fee622e2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993587f5-6c0f-48b8-bfac-b471d69f464b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b51bc2-cb60-424e-8284-f0770cbaae3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c554c932-a36c-489a-b286-338676652227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be7a66b-7f18-4014-875e-e0a609f73af5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1a02de-9283-42e7-ba6d-8ba2aa34a66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c705909b-21f0-4d3a-8517-1896a1478525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ca7e7a-e925-459e-89f0-e5ebd9c74614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7bf802-508b-495a-9c70-d04d5a798aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b32535-38a5-43bb-9dbc-ab947bcc9389",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120f4dc3-7ab0-4769-be16-d025b7c663b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a35530-2a27-47fd-ae3c-7543a9360f6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75fa7613-d6bd-4ee3-b13b-9f7e2db30bde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75215d82-b551-41c2-9919-5836e0971458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16bc729-7841-4451-83cc-96359701a7ef",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160cd86c-7fb9-44a5-abb2-7d93b92010c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca478a5-e004-43ea-a46a-4152d8ac7cab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "164c1c02-8112-43dc-80a3-d38b5bfe1839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f795a8d-9f51-47c9-bb7b-784a51f5603f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0336931b-c563-4c2d-877d-81cef81b67ea",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d531ee9e-52b5-4e27-a261-257820daea3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcea6f4-191c-4c9d-bad7-d4dfcb6b0924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb14604-8982-4703-87b4-fde6bf6541b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd9f107-1d2d-4c2d-ba0d-7437cd59c578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4a129e-b033-43e2-89e7-296514bf011f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3f5739-cb8b-4c0f-a683-3fa122bf5dfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd934ca3-8006-4f44-b6e7-83fddf31b12d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fec842a-e3ac-448f-900b-b25ded58fd1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b0030e-a6c4-44fb-bc0d-a97118ea7acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9658a38-8d30-4391-a773-6d0ce4a7270e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae77ac38-056a-459b-b1f4-ff901909d5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436187ec-63c4-4fba-b6f5-fbf2b715af49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef400a3-ed19-4cf8-9862-c9aaaf9c53a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7fc861f-9c77-44bd-bf8b-1e91845e56f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9538b9-e79e-41c9-afe2-aca17c5b8c73",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a4cde2-c0de-46fa-9bee-cf7a139170b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be3fa506-5d4c-4377-8a14-769145c0c973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c67f89f-a2d9-409f-9eff-1b388cd9fd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3fb18d8-8d8e-4e60-967f-99f21e883e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0372818c-4c93-435a-bf5e-b5e650fc8076",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a88bfb6-c3ea-4a3c-bb82-c8542ce92c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66620fdd-f86a-4e3d-809a-9dd9435b6e3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1829be35-756e-4965-be63-3f1af7ba01a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e3b67b-b320-4321-969a-d9daf1b70c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ce24b8-bf24-4aef-bd83-37b63edb0891",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3b5a37-35be-42be-9575-ff9a00d84bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20430739-f1cb-4832-992f-f9c9bfc3d7fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02359f65-412d-4143-912c-9536a35bb420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e003200e-46a5-4552-85cc-055b4fd7add9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818b5bb4-baf1-4b20-834f-2d066074e940",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a94ee0-1ec5-469e-ad02-e4600029ab7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce56da1-3994-4353-b96c-826d09687088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f16da6-c6ef-45fd-b8d8-9dca542bcf37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4eed36-faa4-4227-9dd0-ee44dadc5296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c4a4e9e-899b-4408-ba07-c920f129f7c5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fab64b-07ad-4be6-a4c7-8e032273e6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89693ff6-ef25-475a-980c-a1abb8e60565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2ac82d-9400-4537-a6ee-75c60805be16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9dc8f0-1248-4412-909b-396169108383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192e64f8-a7b0-41a8-8980-234aa359a14a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac9327e-e815-42a3-8dcb-b491777a9f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3f73888-555d-488c-8f5f-44db683a3855"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cc1ef1-eb66-47ed-9ae9-48bc31bc665d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ca38743-9a14-4267-9724-8eb31f3f93d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be86797d-1f3b-4297-afe2-5b3ccd28b091",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3810824c-009b-4cf4-be9c-6650ee47fadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e06cfc1-ce6a-4813-80e1-404c1be570f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d615065-3941-4713-8da1-29b7e2189ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b105c7cd-7152-4197-be70-53a6234bd5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0c7bfd-ae83-4a01-9afb-7f69fe55b829",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a2efd3-012a-4e8c-b526-f41825647287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa756e0-b198-4083-a954-9b2c3b27f0a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0281039-19a7-4349-887f-b1913690875f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dcacf57-62c7-4085-9cd7-3a3bf181c29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5865a5b7-1175-43d0-88f0-db15b11b268a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccf3fbd-269d-4bce-8c6e-6609813217cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ee92de-3db2-4b77-b10d-d3b1e9e70f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166804ff-cf6c-44ec-895a-4376f67e5209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "244735af-ad7e-40e4-8ddf-197424b4bb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22b8e0e-9dd2-49c7-adf8-667a5478296c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b621f4-3611-48f1-bb95-53674848b261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c985df-e0ed-4328-99cd-0e6a13f7f82c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e21779b-1eb0-47b9-b08b-274ad809f8bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c68d62fa-01a8-41ef-97b0-4165deb0ea17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571bf70a-e410-4f39-b166-7bf7160db469",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd3976b-3218-41b5-8f4e-0d9656a459f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cdebb10-79b4-49c1-9ecf-a46af4c7e211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d918146-6a7b-40de-adfa-021f50c0ae5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350bbf95-7768-48e6-b038-932dfe0dd763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848a6919-b9fb-4c5a-90ed-8e642537853a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d179a2-e6d1-4d0c-b1fb-0de4de2a25e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621cd00b-f9ca-4c09-93b1-078377c9838e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86123766-07e7-468f-b80c-fda87ad26b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b27607e-9944-4351-9c60-992ff18cd674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46907995-aed1-4ad2-b869-92b3e3cb5ac0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03ae931-6cef-4f7e-8da8-81efcd7182db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "719bd900-3951-4081-a710-8998f9cefec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b92c81a3-82dd-474d-8e95-b376d7118c39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3563e3-541c-4a62-ab24-bd77dfe6e400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d00ab3-d545-4504-9659-9dd3f2f5ade1",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb48a34-811c-4db1-9074-508694b6a71e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4996d672-e5ca-4d5d-be63-9484fe2322c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08a9c654-7120-4950-bebb-fedaa123bac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030a0bf2-6fe9-42d7-acaa-cdf1cf83c1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7945dc59-70d5-4b51-b032-e3fa93acf5d4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d478657d-8b01-4b96-a7c6-9a9a554a7a23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5799ca14-2b4b-46f5-ad97-6f1248594bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8943843b-7b64-41e0-a447-c95b73f0ebe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee258e5-1fe0-4ef5-80a5-065ba81d9657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc605eb2-8ab3-4f8e-ad9c-2083c3a524d6",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e1c206-440a-4c0e-a911-159c165a8d0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31bef0a9-9ef2-488b-9043-cb6195987de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d08e94-9a4a-41c5-b58a-8234e10f0c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d163abc1-724b-49ab-9ff8-dce4e7f13cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6c41ea-9d91-49b5-8706-dc40a8807124",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cf9a30-a6cc-4b4b-a813-273f0f8440f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a830f87-8ba4-4595-a59a-0c6db892008d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1941b9f-a505-46b2-a319-78759abb1aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c034085-d72b-4c0f-8aa1-0c6b90b94ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af215e5d-fd4a-41ae-a732-3bc36fb0b52a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34576848-c822-4c13-9786-aefd7d452886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9308eb7-5f8d-4f82-b1da-c76990b53961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f0a772-8a90-45ff-b47e-29ea4c52e62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ab5230-f938-43cc-91de-fae96066b491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6649d289-ee9a-42b6-a449-643688cba6ba",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "394575d1-dcd0-4ee9-87de-378442799657",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0d18f8e-2133-4def-af28-4a14aadc6b80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd35de0-49ec-4c70-b2f9-81928cbd79d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f99848-ac12-4221-b99c-80242f7e5b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417f077f-0ca1-4a77-8941-c79f9f5ffb33",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c62e07-afb9-4633-993a-93eb8a326cf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "550d7a8a-8771-4f0b-a764-6c28cca0402b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf31deb-9f58-4cd6-9748-39a87c16c251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9385bbd-116c-49ac-a7e7-9bc5bd50cf4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c679912-606d-4da7-9cb7-9e10a2fe8067",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35746df-3f30-487d-b4ab-f886b46a96a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d84d5c-c01e-4124-8a3c-cc8227727869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3849409f-bafc-44b6-92ed-822a88206534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924adb35-ea65-4aee-9fbb-7e01f938de14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38acb71a-7847-4aed-89e0-a46534d4f8a3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d68d0d-f635-4699-8a1c-1e8eec6f22c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b033493-e064-45f6-9399-f009a7b2e5f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5716aef8-072f-4647-ab09-757580f203d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f4ea51-fc9b-4bad-b7fb-82982b81eac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926a44d8-8a56-45ba-b214-cdef695f618e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70dcd194-fcdd-4d4d-a32c-20e025eeb709",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5fcb252-d8e7-45b7-b1bb-42cfa79a0ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096974d5-5237-4267-8c49-419b418ab3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65f07e3-b339-4bca-bf00-90003bfbe997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982a208e-0003-42d4-aeb8-0911bdc6b95a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6952b2c4-edf2-4c32-98f7-77a0dddb07f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41326f98-c007-4ecd-b657-ef0381b408e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938bc73c-494a-408f-8bdd-c70ae310395b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c94d17e-1bff-438f-bee0-c739fea875a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2b6719-1be6-4f23-8e1b-8ab09658f926",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87008442-9b16-4479-9daf-3919ba7f8182",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "507165cf-6d1f-4c9e-8419-639004f42daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "276f3dbf-c429-4941-9b55-8f227d2f075f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65da613-4865-4469-a41a-1633d7a55a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26e5688-a877-45fc-8b04-8ff4d44f7690",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b735105c-44d3-4a66-8877-c72e454116b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f294e644-6449-4f50-b61f-394aadd26f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f67905-87c2-4220-aded-6957ec13a8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6be48fe0-a55a-4a8b-828c-55d13a02b301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ee35b4-113a-4571-8dae-111c8cc18c91",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9a3080-4654-4301-b51f-f6743972e872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c33eb819-255c-4042-bab4-86e51550c6eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4718ba-1dec-4afa-92d2-93248630c621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347291c2-bf1d-4ce1-9faf-c27a566e2153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee6a99c-ca36-443e-9dc2-9714fde7e265",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19687d3e-7927-4018-9eb7-da29cb3b8793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "989c1848-c861-4ea4-82cd-14d4513625eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e5ef11-9e59-4dd2-83e3-93064de93571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55de27f-a070-4a5b-b5cf-32547eb6d20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4492b4d2-fa6c-4985-bcae-4005c4878d6a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5314c6-906c-4ef9-9c24-5b472d34a900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2f59506-650f-470d-a97d-86e7075c4ad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d804e89-66b2-47b4-987d-aa43325dca7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "587ae2e5-b92d-44c4-a26b-c35597b4304c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02d741b-09f3-435c-982c-4bd10927e97d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "314b7d17-eb1a-4483-9de1-e4ab51d3c8f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c429aa1-c5df-4855-af89-64545e711fc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016ef2d1-dc81-4aad-92f0-239aeddfff4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db481c41-a0d4-41a6-9d06-5d283b3ff8d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af61696-e20a-4488-8e54-dbaecf8f3fb3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdab45b-72c4-40b0-9aab-94f62aeeca35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc9665f6-015f-4ead-ba71-0e4be43f9078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e26ced2-ea5a-4a04-a080-aa644078566d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55dfddc-556a-4953-ae7d-0ee05a89986e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0448df1d-9a92-4551-866f-b2f5e9676c5e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12a9c54-669b-48d6-9361-dba3ecfef158",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaba8fec-6b2e-4756-a3ef-7d315685bbb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bdf037-35f6-4027-bf42-a1b7f1e94604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6bc60c-e6a7-484e-a951-8293d91eab08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12172de-b899-4873-8a8f-e1be065ed065",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24066390-44f8-492e-a599-329eb7f75b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20e21b8d-1815-4b6d-9fbc-5a821acde195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb20c23-f6eb-410e-82b7-c123eb7ee44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a3a691a-7460-455d-9c66-85f8a637de30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fe3381-ef63-4c92-b05f-c33c501f5115",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7da852-4bba-4b12-ba95-92a83b177bf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e194719a-3955-4b47-9160-71d113da8d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9598a3-a857-4ef1-a928-8c3a85cb5b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d75216e-f5b0-44d8-b596-749e7c2b7bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedbcd13-dcde-4ad6-a102-04d04aa69957",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a097581-47fc-4811-a167-a12825b585b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ad7d235-1a69-4204-8a2d-77f53eb60d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fce3e2c-c519-4da0-9cc2-57f3ae9aad27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7903954e-a844-40c3-9245-024303988eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64692c21-3427-40e6-ad65-7f670bb3f29e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147f4d67-cb25-41c8-a883-df14269b0e84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b09d4628-405b-4ae6-bc88-1d7ea3d593ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b3ed9b-a916-4fde-bed3-be27b1acb48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69307632-2b4e-45f0-8ea2-840152ff75f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ecccdf-2cc9-4d1d-85c6-5c374bcb789f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0f203e-23fb-401a-aeab-2055489c7cbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d33235f-3fc8-43c6-a80e-0c1f9e2d5558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684bedde-0518-4666-9523-afa1df8a60ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff03b7f8-0b1d-46ed-a362-4b3d77d716ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22660426-c95e-4950-b45a-2b8511af7584",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd33aa3-8272-41ba-a2b0-e8bb684e95db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "998e4604-a7a6-445c-a4f6-a006173a02bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4f9b14-eb73-4bc6-80ec-9fc2d93c773b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df77f191-bd3e-467b-8322-4fa3390eb3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69791895-4026-4910-8d4b-1f6a0415d43d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2d4f00-94c2-461f-8a4d-8f36f20df37b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20d0c3dd-738a-42ba-b994-86dda2017808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ddb048-aa9c-45a0-bb96-570bfb3a5c7b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439e3a25-02d0-46b9-bce6-224f62c16557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c13b96-d87b-466d-a7de-1bead97eea50",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb0c6fe-6074-4357-acc3-acc1bfba6718",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9d53dc1-4987-43ce-9bdb-330538b87c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48954c1-6230-4513-b57d-b7b8c4054e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08311545-5fcb-451a-94e9-f959523cc55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24fc099c-8f3e-482c-a3d6-34bf4fb2188b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7db1996-9fc8-49bd-8bba-75019021fc0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b2d24b6-a782-4d4b-b69e-e0d52ff61661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "418c3fca-03d0-4385-ba03-b785e6d9a47b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7abf33-30d6-4e57-bc99-b92dba314b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d54dec5-4d05-4c11-96cf-b367d8ef817b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0b8378-e6c2-436c-a19f-9899fbe9737c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b247e326-4508-4a8d-bd93-432a78972fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fd64e1-b71a-43bb-82dd-255624e70ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50390bea-f377-4683-af2b-b92dd434aef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0046424f-38c9-477e-ac5c-467ead235a75",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f096d16-44d9-43b1-a3e4-22f5f547eaaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ea24118-9e62-4bd1-8c41-ad3bc4dc499a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873306fb-7d67-4f28-98ec-20968c479f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b9d982-276a-408d-ae20-e5f60102630a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b013ad42-7cfd-490f-bd17-424774bb5b06",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b4441e2-9993-4e16-a497-117dc0de963f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c443cd7b-5c5a-4ca2-b712-e7bfdf00548e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c8523e-d442-462d-8938-20d73b08dcae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0219096e-0d3b-467f-9829-818e76a49720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ced303-af32-4229-a9af-fb5a33edd8cc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21ae62d-f4e6-46c7-b99f-ff40f20b26f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "108e9298-5000-430c-aeb4-712ec0d16dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfea3ac8-4484-4740-bd80-d858022b0d79",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0e70f5-9eff-4efa-9228-449703662fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bc03af-0ab3-4ebe-9783-48fb5d69580e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d086b00a-385d-4000-9b68-ee04783ee58f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcde5e80-e137-4e2e-b94c-19632e77bccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea118b72-1c88-4942-92d2-e6f4ed03440c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc8d7ec-ba1f-4694-b2c0-68fe8fc70386"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d17ab483-6e4b-4da8-9399-96c3da042b4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f0515ab-8ca1-450c-bea2-e83a0eff2d57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "803b004c-4286-43f5-90f2-556a580b5e7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8c5c8cb-d3cc-407b-9607-b023afb5aef4"
                    }
                  }
                ]
              },
              {
                "id": "1035aade-1612-48b1-87f2-96cafcb017d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d38e4200-3812-4e0a-a5e0-f0da6a4bbb3a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81021828-5f48-4cdd-a1bc-292b44d8ca92",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9a9a5329-fbce-4040-a1b1-607af728f12e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bba556-6605-4fed-9f7c-399f0db6ba0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e09be1a8-6f82-4789-8955-5766c002bdcf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df49e987-5215-4eeb-abb4-1b44cac685e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "581624e6-914c-462f-be4d-d2aaaf15cf43"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "580dcdcc-9ca9-482d-8974-5faf2d0daa0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc687fb8-9132-4637-bff2-3f04e8316128"
                    }
                  }
                ]
              },
              {
                "id": "cc851a84-e6ee-45f0-ba06-e3a6b04b8c70",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c7683628-09ee-495c-afae-bfa1b91ae253",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a1d01c-e3bc-4668-bd7e-51f9837d6921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8bde16ab-53f0-4139-8893-54f385ff4c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c932ed38-cfce-42e6-8a45-b123082d384d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e197452-9bd5-4a4b-acd7-3664ab0ca9d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f4b93894-f332-4c33-8547-8d0f1502aa09",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e4b3bc5-2ea9-4f05-b524-ce44a007ca6c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01922f8a-dbf1-42ad-9075-043ef8b426f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9a945583-e2fb-4c48-9444-808ac740c647"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7887e39-5411-4b52-8540-820a33c1dcbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7135f3f4-410f-4e95-8807-fae22a821fae"
                    }
                  }
                ]
              },
              {
                "id": "e485c908-b3f7-4122-96f1-b32536b67013",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef004615-ab96-4eac-8daa-c19dafb3dfdb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "eac4d530-e4ab-42bb-83ff-9a7a7e6a3b95"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3bcc8ed-54f1-45a2-8ccb-0d61a1b8f1f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "853b92ac-2d2f-4639-aea2-cba3fa1434cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66914785-5d71-4088-946a-5eca0bcb23a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "bee4b9aa-809c-4d1b-aef4-789850ba3d27"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "105b2ad9-6235-4014-8c99-2cd86e303ef0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "940f215c-3c83-4824-a342-bbc93ff0ccc4"
            }
          }
        ]
      },
      {
        "id": "8897bbd6-bdaa-4102-a78c-d6ed16f30bfa",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "489bffed-00d9-4193-bbc2-cc8b0dad0d78",
            "name": "Negative Testing",
            "item": [
              {
                "id": "276ad6d6-0648-4c43-bc9f-d26738628406",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "92e151f0-52c8-4558-91fd-178bbce03bca",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bf0157-bf03-41ab-b147-61e578d95353",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bfd2ced8-7584-4491-9e73-f4bcc6adf795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8ec1d2-b9c8-4289-bd0a-037f52a9f009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0423fd46-4fb3-48a9-93dd-73e5bc61da5d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "900a9931-33d8-484b-91f2-55ace6af6006",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b919ee85-379c-40be-a9c1-7a1cb37a17e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "705e0433-ff3a-4137-a75c-9f27ae25cd7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87c87d93-97d2-4fb8-b9f7-20fef5d3c8ef"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d06bfa1-051d-4d69-a4b2-b8101e87742c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "18e6d3ef-d9c6-4a66-96a8-fe75d53c18d7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed91e2b8-df83-41e9-bc4d-61ac0dc9fc43",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf206a09-c8d7-4e78-b18e-8c169c40bafb"
            }
          }
        ]
      },
      {
        "id": "ccd11d6f-aa5e-4bbf-a076-6625c538564e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3530b2f3-8a70-4273-9c64-d54581bb161b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5500df7-c0ce-4ffb-9769-2a794b7f79a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75b9350c-1f6f-4900-b2ec-97f31199d7dc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f391308-bc05-46cf-a948-f8a725cabd8a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67b87612-87ba-4450-93d3-f66db76602ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019f28e2-d7f5-4fa0-bd72-f91bb3a48acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c83c583-5269-4588-91a0-4cb194302788"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96aff519-f06a-44d2-afa2-d097f5337f6e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15498ddc-e41f-427a-8551-738e0fe0b6b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4cfc1ae-054d-42cb-9f03-8baea14d7059",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68b5905d-2dc2-4712-9bf7-6808b4cb7a8b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95f93423-6cc9-4515-a002-d4c9f3e96faf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a0be2e0a-adb0-4cc6-b41b-5a11ae06f345"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b476b295-527c-43bc-a349-8bcf015a80f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6aff42dd-0cf7-46d1-a4ed-e83652896d9a"
            }
          }
        ]
      },
      {
        "id": "20d891ae-915b-4535-aa20-437493a79f23",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c4fd080f-bfed-4575-9681-14d19d5b6a7c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e49f98ed-4b7b-41cc-8a57-d570399911be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "460b5484-a7f8-4a66-9b1b-16aa47b923f9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edbed6f-738c-4525-8115-e9ae6cca0dc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d3662e6-0891-449d-af3d-db748715c1af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763b59b3-cb37-4316-b111-ea9cfe559dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "501f5654-42e6-492f-8404-3e3ee60e4cd7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa124a85-9f14-4bd2-a61e-50528859317b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9659ecf5-063a-43c8-a92c-5ea0bf63548e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1acc07b8-b4a5-47ba-9844-59ec1c1e9add",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c3b4234-7636-431d-a666-804a8affba39"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e74e7c5-7a02-4057-b834-ab43e5f46286",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "59c7845c-4272-4f0d-a0d3-f91d45e9df8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d642fac6-17a2-4241-aa28-66a6c9e712f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de7ec4bc-afe6-4c29-ac68-69b2262fa356"
            }
          }
        ]
      },
      {
        "id": "ff737116-7e06-4a40-9b31-fd3ffa9235db",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8cf46c2c-bb6f-4351-8054-d086a8e932ae",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "298ead2c-5353-4856-945b-af2af18cd9f8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "621579e1-95de-455d-aca2-d1c8679f00b3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "68857358-3c4e-4b51-b532-9e6de20e7e4e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f71f4ada-1b67-4e9e-9ddc-0c84cf7e5d53",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 26.32539682539683,
      "responseMin": 7,
      "responseMax": 350,
      "responseSd": 26.79295375419211,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723941822211,
      "completed": 1723941837090
    },
    "executions": [
      {
        "id": "8b947bc8-a770-4e15-8d3b-1de1c67dd7aa",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d06c6bf7-7c3e-4924-a7cd-64e452915fd4",
          "httpRequestId": "4f2eeb4b-fa03-44bf-98c0-d2deba55d15e"
        },
        "item": {
          "id": "8b947bc8-a770-4e15-8d3b-1de1c67dd7aa",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5295fbfd-1b85-4530-b655-86141c1dd568",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "e3f3135f-1e62-4bfe-959b-15af89e76228",
        "cursor": {
          "ref": "8cb16fb4-fafd-455c-89bc-f2c4471c91c5",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "795c5f86-2c9e-4896-9c95-77452f000eed"
        },
        "item": {
          "id": "e3f3135f-1e62-4bfe-959b-15af89e76228",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e2e2694f-5cb2-4949-9f7b-acdeca5164a0",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "a2fb9017-089a-4209-bfe9-c0324bc32909",
        "cursor": {
          "ref": "b07fce68-d292-4d3b-a772-84aedb7fb6c8",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f11b28fd-5faa-4a57-a26e-64ee22dd1e1e"
        },
        "item": {
          "id": "a2fb9017-089a-4209-bfe9-c0324bc32909",
          "name": "did_json"
        },
        "response": {
          "id": "66c636a0-cafe-468e-8dd7-781dcb6e5537",
          "status": "OK",
          "code": 200,
          "responseTime": 220,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb3c9f2-7103-4388-85a7-982fb8ccab3e",
        "cursor": {
          "ref": "63260e5a-c0c2-458f-8d0f-1eafe84a0bba",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d1716bb4-941f-4580-8721-02a5bfa69619"
        },
        "item": {
          "id": "0eb3c9f2-7103-4388-85a7-982fb8ccab3e",
          "name": "did:invalid"
        },
        "response": {
          "id": "692c898a-f198-4a27-b75d-ab6d0435c777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb3c9f2-7103-4388-85a7-982fb8ccab3e",
        "cursor": {
          "ref": "63260e5a-c0c2-458f-8d0f-1eafe84a0bba",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d1716bb4-941f-4580-8721-02a5bfa69619"
        },
        "item": {
          "id": "0eb3c9f2-7103-4388-85a7-982fb8ccab3e",
          "name": "did:invalid"
        },
        "response": {
          "id": "692c898a-f198-4a27-b75d-ab6d0435c777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2cd331-369e-4f69-aa23-d06cd6521282",
        "cursor": {
          "ref": "e8e398ac-43fd-46a7-92c3-e64d479139ab",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "14b41d5f-c8fc-4427-a8eb-24019c9b6477"
        },
        "item": {
          "id": "1a2cd331-369e-4f69-aa23-d06cd6521282",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ed45aa94-8b1f-486f-931c-7ce28ab587f1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e8d24a-ed1a-447c-be1e-3024b1098b25",
        "cursor": {
          "ref": "14e8ee67-e48f-4103-a808-c7fd327ac7e0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "39a65d38-8d6c-444f-9288-78cc9f977879"
        },
        "item": {
          "id": "03e8d24a-ed1a-447c-be1e-3024b1098b25",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9190a176-e489-49ba-8cbd-9a34aab06e2a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f671e4bd-dbf2-4358-abd6-ed9d06346922",
        "cursor": {
          "ref": "94435e58-0605-4aff-976b-88f0ee818f33",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "540c80de-f423-4d5c-a252-56280af10bbf"
        },
        "item": {
          "id": "f671e4bd-dbf2-4358-abd6-ed9d06346922",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b7bee58e-d879-4ae0-8e3d-768e9bc1642e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a093d43-656f-4b4f-ba4f-72762d5185f1",
        "cursor": {
          "ref": "6be8d12e-c0b9-4595-890f-b192682ce85a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f17bbc0a-3e73-425d-9568-9124cb1fe362"
        },
        "item": {
          "id": "4a093d43-656f-4b4f-ba4f-72762d5185f1",
          "name": "identifiers"
        },
        "response": {
          "id": "7c212d26-3be4-4ee2-98be-b40a77dac749",
          "status": "OK",
          "code": 200,
          "responseTime": 208,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ff872c-0606-4077-8659-8090698001b7",
        "cursor": {
          "ref": "9c674133-5704-4071-8398-896313226491",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "825659e8-82fd-40d5-8781-289a11428d46"
        },
        "item": {
          "id": "77ff872c-0606-4077-8659-8090698001b7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9bff158a-3c54-4dec-ad9f-09ea482d940b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879b5602-8a41-442a-8329-723e1dcd41f9",
        "cursor": {
          "ref": "5bdea41c-1015-4b83-96d5-769e43353d6b",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "bbb2f2ac-9612-4a2e-bffc-67ddbc442a4d"
        },
        "item": {
          "id": "879b5602-8a41-442a-8329-723e1dcd41f9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d1e9bb7f-8879-48e5-8e5c-340345a465b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fe9a9c-925c-463b-91b0-0193ae2425fb",
        "cursor": {
          "ref": "2211ba8a-1404-4612-b3fe-83cc9f245709",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "84e04406-73f2-4369-a903-30cac63f19ec"
        },
        "item": {
          "id": "30fe9a9c-925c-463b-91b0-0193ae2425fb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3930c274-fecd-40f0-8e23-6821b7fd78ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084f23e3-098c-48c2-84d8-57613ca408ec",
        "cursor": {
          "ref": "ef915070-1ac7-4523-8dea-0a2a828eede3",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ecc3dea4-c13d-43e7-b4df-77995436da2e"
        },
        "item": {
          "id": "084f23e3-098c-48c2-84d8-57613ca408ec",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b7f8be14-9662-401b-9887-ecac80df15b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175cc418-d593-45c4-9c55-2493664dec6f",
        "cursor": {
          "ref": "121f01dd-fd15-45c7-9433-72b99a80b5e7",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1a7d4705-4bd5-4e2d-bb12-11721a2374a7"
        },
        "item": {
          "id": "175cc418-d593-45c4-9c55-2493664dec6f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8663e7ba-ecaa-4623-a5b5-8e4154d62034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5c4dfd-38c9-412a-a5f8-ea7338354b9a",
        "cursor": {
          "ref": "c07def64-a00e-4989-9c21-c515a9ced26f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "a9bb9cec-a066-46d9-a52e-03e195722d5b"
        },
        "item": {
          "id": "ab5c4dfd-38c9-412a-a5f8-ea7338354b9a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "359845b6-07f4-4312-b8c4-f7ebe89762c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe16b227-7969-4592-8c4f-080c2b954ce8",
        "cursor": {
          "ref": "136a2a3c-c9fa-4ef9-895c-fe12280aa6dc",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7ec7aee1-422e-4b09-92e3-9fd6790bad6e"
        },
        "item": {
          "id": "fe16b227-7969-4592-8c4f-080c2b954ce8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "02a30fb3-24e9-4673-b562-de64013b971b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c78bdd-1347-4463-b9b3-6acd2042a15c",
        "cursor": {
          "ref": "9eb76228-27c7-42ab-8cee-69de5511bb73",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "56785892-c635-4bbf-9d45-4a05f505ab07"
        },
        "item": {
          "id": "13c78bdd-1347-4463-b9b3-6acd2042a15c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d4344537-7fed-40a9-947d-d989531b6e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e99faff-1c33-454d-b77b-c8c9ea3ea01c",
        "cursor": {
          "ref": "a75ab055-9f61-4c03-bcf0-3dd93a3bf63d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3aa67de4-c336-4f32-a7c1-5ca4cfe54082"
        },
        "item": {
          "id": "5e99faff-1c33-454d-b77b-c8c9ea3ea01c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "186c7e41-1431-4465-84ee-13d64c3958f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d52db9-5cdb-4345-b456-3f0bd4e92bce",
        "cursor": {
          "ref": "a14ab923-2344-4c42-aba0-a1be1a29ffa9",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a723f95b-324d-44f6-83da-75df029c1c52"
        },
        "item": {
          "id": "e5d52db9-5cdb-4345-b456-3f0bd4e92bce",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "e9a1c6cc-c35b-4c1b-96d7-3f7fd73fd542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c04b090-fbdc-4333-bc23-59fb9fbf26a1",
        "cursor": {
          "ref": "bee52e83-3b65-485b-af6c-474fd4468ab1",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "80790380-68b0-4883-a907-d709ac3a7d19"
        },
        "item": {
          "id": "0c04b090-fbdc-4333-bc23-59fb9fbf26a1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "65268377-d135-4a1b-bf9d-807017993cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4e9e05-f650-4c42-8974-e5a7bc85c28b",
        "cursor": {
          "ref": "2b26dafc-03b9-4ace-b582-328e63a6db82",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2d14f11c-2e5b-4a26-bc95-fa5c69377dd3"
        },
        "item": {
          "id": "2c4e9e05-f650-4c42-8974-e5a7bc85c28b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "db8e4688-1aef-43eb-8541-b63aefc7060e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2d3e8c-d6e9-4139-baaa-6b68a753efe7",
        "cursor": {
          "ref": "74a2daf5-673e-443c-ae96-90a67d0dc8ba",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "53e6328d-b11a-40a7-930a-c685b79aefe8"
        },
        "item": {
          "id": "8a2d3e8c-d6e9-4139-baaa-6b68a753efe7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "68b228b5-9a7c-460c-af35-7627efb0a036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa3f6f3-27e4-46cb-8d49-1fdbc30e4006",
        "cursor": {
          "ref": "789556a7-35d8-48de-b8b4-bbcd666eb257",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "197525bc-6bc3-41f7-a073-aa518b47acc6"
        },
        "item": {
          "id": "eaa3f6f3-27e4-46cb-8d49-1fdbc30e4006",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "4ea41deb-a897-4f71-aaa5-526f3a3b9031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd65bd93-8b9e-4e8b-9ed2-f4d9831d7ed1",
        "cursor": {
          "ref": "69c909a9-d45f-44ea-b1a5-04826aef9540",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0e740d1f-a441-4761-95d2-4e9edd4c26b9"
        },
        "item": {
          "id": "fd65bd93-8b9e-4e8b-9ed2-f4d9831d7ed1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e7de5951-57f2-4753-a001-993397dc6a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebb209b-81b7-41ae-850d-437381d9a2a9",
        "cursor": {
          "ref": "dc3ddd15-a8ed-4d26-85f1-d1819babe277",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "20fe45c2-5025-4cb4-8c94-5839e76b33f4"
        },
        "item": {
          "id": "5ebb209b-81b7-41ae-850d-437381d9a2a9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e163a884-d654-4b6c-a178-4f975ee46941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0079d7-b51b-4b45-b58c-dd2e60d56588",
        "cursor": {
          "ref": "6e7de829-d7c2-45c9-a9d6-28522aa35d49",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "fd069a20-3e9f-4e15-90e8-9f786611a80a"
        },
        "item": {
          "id": "9f0079d7-b51b-4b45-b58c-dd2e60d56588",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e3cce275-9141-4628-b762-8a20daf53c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f787e7-8519-4a38-98f5-341fa0494d93",
        "cursor": {
          "ref": "990948d1-c60b-4298-843b-3e532032cb8f",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c76dfa8a-6923-4fd2-8a70-f243a57abce2"
        },
        "item": {
          "id": "c1f787e7-8519-4a38-98f5-341fa0494d93",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6f795adb-26a7-49b8-9f03-a59326a4dbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365ad5e9-028b-4a99-9cc7-0bf892da5923",
        "cursor": {
          "ref": "bf94db96-95a0-446b-a5f2-311e969266f9",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ebba79f3-acf0-464b-b676-2f583f19f8a2"
        },
        "item": {
          "id": "365ad5e9-028b-4a99-9cc7-0bf892da5923",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "9ab88609-27b7-4e8f-a180-6276155be52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc0b3ea-82cf-4734-9d09-d03e7bd37739",
        "cursor": {
          "ref": "c30bfbf2-d73e-4d51-b1d8-61878ebb1c6d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5dce6229-c224-48ef-91a0-62fe4a885a9c"
        },
        "item": {
          "id": "cfc0b3ea-82cf-4734-9d09-d03e7bd37739",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "86e4c32d-d941-4b24-a364-ade25665eef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b47e99-7554-43a6-bc46-06677b6399fd",
        "cursor": {
          "ref": "9e56452f-cf28-4728-ad18-d306cb63b2f6",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "61944cd3-39a1-4b3e-ae66-b610a94cd23e"
        },
        "item": {
          "id": "48b47e99-7554-43a6-bc46-06677b6399fd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7f3e4669-4991-4d41-bdb1-01d49b709791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138a6587-32ce-4d5f-a335-75b0e1ccfcbd",
        "cursor": {
          "ref": "20d5e204-538f-41b3-bf3a-9b598bc1d1b7",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c9011571-1de2-4d16-88e3-a6d9fc4576f7"
        },
        "item": {
          "id": "138a6587-32ce-4d5f-a335-75b0e1ccfcbd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "327553e8-6568-4c0d-b28c-0ab49a872684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8085e339-346d-41cd-a70c-6412d5ce81e6",
        "cursor": {
          "ref": "9963f610-d227-45a2-93fe-3ab6444685d4",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cd862c49-9f19-47c9-9200-2b96e5eead5e"
        },
        "item": {
          "id": "8085e339-346d-41cd-a70c-6412d5ce81e6",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b73ad78a-e9b7-4c70-ab26-17c7da1165c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54c1266-1033-457c-8edf-9471de8a04d6",
        "cursor": {
          "ref": "577b9d44-e8bb-455a-8f11-3f2868109ee4",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "62d2efc8-63db-42d5-a95e-9253088d5194"
        },
        "item": {
          "id": "d54c1266-1033-457c-8edf-9471de8a04d6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "710b41df-9e09-47cd-9b44-8e4495f8b46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47f9d00-a3da-4064-854c-8ffe6bb570f9",
        "cursor": {
          "ref": "f0fc2e07-f119-46ff-8ade-a35f95c5a2a9",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ea25955a-120c-4aed-9cf0-28442bc56683"
        },
        "item": {
          "id": "e47f9d00-a3da-4064-854c-8ffe6bb570f9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1b438e7c-d146-4a51-99fa-a479c6310d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85bc91e2-3644-4b22-ac99-c97fd2423ed8",
        "cursor": {
          "ref": "6e37b3da-957e-41d0-be87-d2a97949805d",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4696f8ea-7872-4565-a79d-2fa2697ed1ca"
        },
        "item": {
          "id": "85bc91e2-3644-4b22-ac99-c97fd2423ed8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8076cd4e-3f13-4ac9-a099-592fe3f5921b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed49176-1af6-4f49-a997-b92096fbe1b8",
        "cursor": {
          "ref": "1cdb89fb-ef49-459e-9711-d92921296722",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "44247508-9a5a-4b85-9fff-b8c495af7a2f"
        },
        "item": {
          "id": "4ed49176-1af6-4f49-a997-b92096fbe1b8",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c028b051-956a-4165-85aa-5157fdfa292c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5169a4-bdc1-4a67-a176-f50f42eb0995",
        "cursor": {
          "ref": "83fe03ca-6fd4-4e16-a648-1e59689be61d",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5b0d0e30-6fc9-4ef0-9695-1059d76548f0"
        },
        "item": {
          "id": "4a5169a4-bdc1-4a67-a176-f50f42eb0995",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "04868050-e877-4d66-a584-db1ac14e36d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cec67f-af84-4b83-bbd2-a0e70bc656ef",
        "cursor": {
          "ref": "48291b94-2cf5-470d-8f82-25b9e384120d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f3c30069-9464-460f-9ddd-61340b1b650d"
        },
        "item": {
          "id": "24cec67f-af84-4b83-bbd2-a0e70bc656ef",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9eaf170e-cb18-4ee5-99b8-b4eb0744b97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8624e318-f7af-4c8f-b161-4be4cde103a4",
        "cursor": {
          "ref": "e748a787-d6e3-4827-9d7d-318b4fd9f3f2",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5332052b-66df-479a-ab62-c12951ef070e"
        },
        "item": {
          "id": "8624e318-f7af-4c8f-b161-4be4cde103a4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8aa434ac-b5f8-4bc2-a2b8-7d7e393fda2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d02c440b-7431-4bfe-9533-a6b42f206ef0",
        "cursor": {
          "ref": "d3b053b0-7c28-4bae-af38-8053c4b0d8f2",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5f53f789-c7fd-4482-a70a-38d1c9534318"
        },
        "item": {
          "id": "d02c440b-7431-4bfe-9533-a6b42f206ef0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3beb8bf0-991e-49de-bbd0-1da34d88abba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3475bab6-534a-4ef8-a697-cae0e07e3dea",
        "cursor": {
          "ref": "4fdb4314-afed-41cd-8a13-18f660ab0648",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "660a3468-b3e4-48d9-82ba-182efce27758"
        },
        "item": {
          "id": "3475bab6-534a-4ef8-a697-cae0e07e3dea",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "18fd5c94-de10-40c7-bd5e-60430b3b9759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35d1c94-78f4-44c5-8f72-bb38af48e9fc",
        "cursor": {
          "ref": "4e4b9b09-7ccc-4255-b1f0-67a4a42ed205",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "886e58c4-9e66-45fd-83c3-34f751e86edf"
        },
        "item": {
          "id": "f35d1c94-78f4-44c5-8f72-bb38af48e9fc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "308fe56c-1216-4800-8108-626f5acea2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62ed861-f088-4da4-b0af-61dc42667619",
        "cursor": {
          "ref": "ccc1338f-aa46-4ebc-b73a-867e8cb8afbe",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2336980b-1774-4220-8d33-0b0cbcf4c865"
        },
        "item": {
          "id": "c62ed861-f088-4da4-b0af-61dc42667619",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a22b6130-206b-46ed-bdd0-149e9178b701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c136d8ae-3dfb-410b-aaba-6435911182a2",
        "cursor": {
          "ref": "7799d6af-97a3-47c3-bbad-c69c6750c3da",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d4164531-cb4e-439b-bfa4-8062cd7b1d6d"
        },
        "item": {
          "id": "c136d8ae-3dfb-410b-aaba-6435911182a2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fbb8d2c8-2038-41e9-a7ea-befbe5ba9203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9a3e32-791c-4b5c-bce9-c4b1029d1ec8",
        "cursor": {
          "ref": "c712786c-5416-41fe-bdd7-62a28c0ef000",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f3cca66f-6e98-4a01-abba-049bbd6b0d1e"
        },
        "item": {
          "id": "9f9a3e32-791c-4b5c-bce9-c4b1029d1ec8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "05f86462-6411-45b4-b2a4-05e1525b5054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df1e563-8844-4986-9f16-800414a4ca68",
        "cursor": {
          "ref": "995fecca-6b17-4b59-a907-63d27e531254",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "36eae621-7e18-41da-a114-94c8e9b58b71"
        },
        "item": {
          "id": "5df1e563-8844-4986-9f16-800414a4ca68",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8407e10f-d621-4c2f-b407-c53aa9ea3d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6334602c-85a4-482a-836b-78d21953312e",
        "cursor": {
          "ref": "b209b5ea-8417-4603-9eb3-97efefb47a9a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "26082abf-7fc8-4ed9-83a1-6a7666ecd226"
        },
        "item": {
          "id": "6334602c-85a4-482a-836b-78d21953312e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d56fd905-c700-47fb-9978-90fe3740d9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a545d2e4-6863-4d32-9d60-ee2ecdd10d72",
        "cursor": {
          "ref": "bc36b903-e104-4620-ac3c-295c1fb81d61",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c8a6ae10-f9ba-4645-9f0b-7d501b316095"
        },
        "item": {
          "id": "a545d2e4-6863-4d32-9d60-ee2ecdd10d72",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "c4cda308-49c6-42ec-9e78-2aa583c24026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e0ca11-f6eb-4fec-bb76-7f4b8c7c35be",
        "cursor": {
          "ref": "ce7f0a94-bfaf-4a0c-971d-da49dd939aad",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4a21d169-a72f-4c38-b575-92e971657519"
        },
        "item": {
          "id": "20e0ca11-f6eb-4fec-bb76-7f4b8c7c35be",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "76b8d04b-784b-45e5-8dd5-6f1bd8a54a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3a6054-98dc-447a-9a0b-f7b367732f8e",
        "cursor": {
          "ref": "5ec13738-4477-4f2b-9b03-e8a2f35b3250",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f9d0889f-6803-4582-9e65-945c72da85a8"
        },
        "item": {
          "id": "3f3a6054-98dc-447a-9a0b-f7b367732f8e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "72c9ad9f-889c-4784-8e9f-ac644b0623b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2f6206-b9e1-44fc-b920-0a186b4fe162",
        "cursor": {
          "ref": "8e9ec305-90a1-41eb-97b6-f1d991a3c32f",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "3ba3482b-9513-42f1-bbc4-c9e0108b976d"
        },
        "item": {
          "id": "5e2f6206-b9e1-44fc-b920-0a186b4fe162",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "68b9adb0-8632-49da-930e-ecf3e73201b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04ab281-9cf2-4c19-9b00-66d57bf45e35",
        "cursor": {
          "ref": "92d40db2-8d47-4a81-af0a-841ab3630267",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "85e0dfe3-64f3-4685-ae6a-ac995a247f49"
        },
        "item": {
          "id": "b04ab281-9cf2-4c19-9b00-66d57bf45e35",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "69fd7eaa-ea01-4268-84d0-137c86fd06d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b60e88-64b2-4faf-aea3-4e2e0674b759",
        "cursor": {
          "ref": "015e1bfc-0c5b-40ea-91d3-7ddd304aa10e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5e4ee063-cf3c-4161-8f45-bec3860ad182"
        },
        "item": {
          "id": "f0b60e88-64b2-4faf-aea3-4e2e0674b759",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "380513e5-21de-430f-b442-60ed3ff1d4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecd1e86-a9e8-47b0-b0fa-b7f4bebaf397",
        "cursor": {
          "ref": "e652071f-e629-4705-be02-94b613d97629",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5be588fb-a637-4681-969e-c62ffffb8b55"
        },
        "item": {
          "id": "0ecd1e86-a9e8-47b0-b0fa-b7f4bebaf397",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0224258c-a9aa-4816-98db-d929cfc45ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1882da-77c0-46b4-af06-b9b1e48b8213",
        "cursor": {
          "ref": "0b86e113-658c-4d0f-83e1-a0578165684d",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4fcd7a12-964c-4678-b1ce-99187531050b"
        },
        "item": {
          "id": "4b1882da-77c0-46b4-af06-b9b1e48b8213",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "f12c47ca-6739-4ebe-b3fc-3fc96ead863d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2db9be-0b6c-4eea-8eba-32b8ad6edbf6",
        "cursor": {
          "ref": "b28cda5d-4641-429c-b0b1-0660368d745a",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "9eafc016-ed05-4554-a1e9-23cf9b550ae4"
        },
        "item": {
          "id": "db2db9be-0b6c-4eea-8eba-32b8ad6edbf6",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d877d833-ef73-49e8-926e-388f83893b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb662d4-2b98-41b8-8566-1d08018660d5",
        "cursor": {
          "ref": "a2bf4bf0-ed74-433c-bf43-31e11b99cf21",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3012abdc-2970-4b4a-b5eb-07a1ee82ae24"
        },
        "item": {
          "id": "dfb662d4-2b98-41b8-8566-1d08018660d5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b442ac1e-5691-4e7e-8903-3f53df10610f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3a09a4-8240-44b9-b070-8cc449f5e4ce",
        "cursor": {
          "ref": "62e8f0ec-83b1-42db-b014-73502adf2231",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5fa68042-fe22-488a-8644-167eb4c5c599"
        },
        "item": {
          "id": "bc3a09a4-8240-44b9-b070-8cc449f5e4ce",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "aec72bc8-1252-4fde-8bb9-921db93120fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda7fd77-ce2e-4205-a8d1-6a24eb804ca8",
        "cursor": {
          "ref": "d0c27d09-0f30-4610-ba21-7329aa82bf74",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "89eed9a0-fdcf-4174-8b2f-fa2e72f00299"
        },
        "item": {
          "id": "fda7fd77-ce2e-4205-a8d1-6a24eb804ca8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e48ba2f7-4a65-485a-afad-456fce2003fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae8481c-133e-4e2d-81dc-07ce7c0281bd",
        "cursor": {
          "ref": "7752ff2d-0ed0-4690-b463-895b19d11eee",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cfc4cd62-f41f-48eb-b604-479fea6988f3"
        },
        "item": {
          "id": "4ae8481c-133e-4e2d-81dc-07ce7c0281bd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ac996930-9615-47b7-8462-206d38bd395b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781990ca-77b6-4209-b2cd-18ddb3f860a5",
        "cursor": {
          "ref": "fc56d88b-3883-4bbc-a109-db0b9882c0c8",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7d8cefa9-f0ee-46d3-9403-22cff2be7d14"
        },
        "item": {
          "id": "781990ca-77b6-4209-b2cd-18ddb3f860a5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ce89ad47-ce3a-45c9-8271-5b39110a94d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68c0efe-52d0-4222-be3c-4209c1e68fbc",
        "cursor": {
          "ref": "26c8a074-1885-4067-9186-8135ae62ff71",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0003fe15-3889-408d-89ef-5d757530b793"
        },
        "item": {
          "id": "b68c0efe-52d0-4222-be3c-4209c1e68fbc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1d543268-3471-4718-93e4-39d109fe1f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad2ee48-3715-4175-8b13-1a42e396c062",
        "cursor": {
          "ref": "d7c66a91-6eec-4160-a52a-4fd085194797",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "babe2154-0e46-45f2-864d-ef1d1cb340c4"
        },
        "item": {
          "id": "dad2ee48-3715-4175-8b13-1a42e396c062",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e8829f7a-99bf-4c49-9c78-8d1729f1fe5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbf50f34-645e-4db2-9e44-a1fee1affbbb",
        "cursor": {
          "ref": "4fea9ecf-2fee-4611-a3a1-2408bdc7fdbc",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8f3aa1ef-a837-4346-86de-54bf6a6fe00c"
        },
        "item": {
          "id": "cbf50f34-645e-4db2-9e44-a1fee1affbbb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c3088ba0-aece-4efe-9acb-fca261438d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a2a281-f65d-4f01-b0aa-1158d7ad713c",
        "cursor": {
          "ref": "c74c66d8-4e74-4227-9594-e08865ac9b42",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d343dee4-5070-43b5-a798-da32d4cfce5f"
        },
        "item": {
          "id": "82a2a281-f65d-4f01-b0aa-1158d7ad713c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "188175b6-7dcd-409a-b568-ec2c41d8dbb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cb2493-4aa8-4252-90ee-33acbc7aa876",
        "cursor": {
          "ref": "981c1018-1681-4763-b3e9-f63470228c48",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b26de9b2-fbe3-47fd-93e4-e9e823160710"
        },
        "item": {
          "id": "03cb2493-4aa8-4252-90ee-33acbc7aa876",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9d9d5f50-b9d8-4087-9fb0-490fdabbac98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23738e0-3caa-4b31-aa91-b38e5b987051",
        "cursor": {
          "ref": "3c3ed5b5-0b14-4fa3-871b-0d8ef7fe6689",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fa28067d-508f-4d1f-b992-f69cd88dd52d"
        },
        "item": {
          "id": "e23738e0-3caa-4b31-aa91-b38e5b987051",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7f00b5f8-7e7a-43f1-bd43-ab60ea2ffb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d77f33-5c5d-419a-a767-d609a7a90672",
        "cursor": {
          "ref": "27d9a8e4-6491-49a9-9c47-0e92b9e1e0bf",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c539069a-fb76-4e99-a2a1-aa39e6a32308"
        },
        "item": {
          "id": "62d77f33-5c5d-419a-a767-d609a7a90672",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "697b6918-ec61-4415-bb44-2e49980b5c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f11b68-cdc2-45c3-af32-e22a1f46b45d",
        "cursor": {
          "ref": "d554f691-351c-469b-a605-cd641bd7d3a8",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "104c4e8b-8e92-4ec2-8018-33968fff49dd"
        },
        "item": {
          "id": "c2f11b68-cdc2-45c3-af32-e22a1f46b45d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "58c179b2-e520-4802-9b01-a4b7eaea6907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8198a662-d860-4ebf-a170-6e53441d37c3",
        "cursor": {
          "ref": "b4e51c0f-0885-4d57-a6a8-afbc9a6ff0b5",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b5a2abdc-fb0c-48b2-a39d-73f584f391ea"
        },
        "item": {
          "id": "8198a662-d860-4ebf-a170-6e53441d37c3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8634e835-f586-4640-89c6-d878f0653d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da71ecc5-5e7e-4159-b119-c915d27a3537",
        "cursor": {
          "ref": "667618e3-bab9-4107-8fb6-467efd9766d8",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e99b05f7-9987-4f00-91bb-c7a282a71b9d"
        },
        "item": {
          "id": "da71ecc5-5e7e-4159-b119-c915d27a3537",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "74a39eb6-8aee-46dd-9b44-62182fcecc8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f57b7b0-3c8e-494b-b2f7-f5589141c111",
        "cursor": {
          "ref": "a4b7cb4b-230a-4dc0-abd2-14d1ea5d6e6a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "92fec55a-14cd-4980-b45a-0cc428c09d14"
        },
        "item": {
          "id": "3f57b7b0-3c8e-494b-b2f7-f5589141c111",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1a3337a4-aa6c-4de1-b113-0ca0b0fce7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c6493d-f052-4a9f-b7d7-86fc756cbb30",
        "cursor": {
          "ref": "52305fc9-4091-4178-97b0-5c0d92a0f36e",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0f4f3e98-25da-4b1a-9c3b-567d20533287"
        },
        "item": {
          "id": "07c6493d-f052-4a9f-b7d7-86fc756cbb30",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a934c73d-6b72-4014-8372-08eec2e499de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d556bf74-b68b-4c2f-81d4-c67f2dd45800",
        "cursor": {
          "ref": "34168008-52fc-456b-a8fa-3523e86f4898",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d2a35f66-83d0-46d5-b3b7-31886b65a9d8"
        },
        "item": {
          "id": "d556bf74-b68b-4c2f-81d4-c67f2dd45800",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4693b02c-775a-4b45-abe1-8f7b0d3c0589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bfd7d7-ad0d-4bf3-be70-885c2bb138f3",
        "cursor": {
          "ref": "d13e47df-d9aa-42ea-9881-80572ac6e380",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "72b7d6cd-ffd0-4ed7-ac8f-d8bc9c12a684"
        },
        "item": {
          "id": "f7bfd7d7-ad0d-4bf3-be70-885c2bb138f3",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8518f659-97c3-40df-9571-4b4556e8eccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87426ece-b1c4-434d-88b5-a29cf54cd44d",
        "cursor": {
          "ref": "a44df99d-83f6-4587-8ab9-8774d9166c90",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6dea60c6-8c14-4b86-9068-ec30b4fe53cf"
        },
        "item": {
          "id": "87426ece-b1c4-434d-88b5-a29cf54cd44d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6eb49b8d-114d-43aa-b041-e31813740c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6684d39-dcc9-449e-a276-b3fe17c72e12",
        "cursor": {
          "ref": "504811b0-f648-4ad9-9118-bebb8e96545e",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "985431c6-91e9-4364-8c07-e31af21a4c8e"
        },
        "item": {
          "id": "f6684d39-dcc9-449e-a276-b3fe17c72e12",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fa22ec1d-47c4-4861-9908-e9562dfe7456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8115649b-4bea-4000-b61f-58097ef63f53",
        "cursor": {
          "ref": "d2090e88-3a65-449e-bb44-8aeef3bb6fd1",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c948e080-78ad-4b4a-b372-fb3b097a3628"
        },
        "item": {
          "id": "8115649b-4bea-4000-b61f-58097ef63f53",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5057d57b-1a2b-472b-9b21-0fd7203f7f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5fc8d0-2330-45cd-a192-3bd0707812d3",
        "cursor": {
          "ref": "ca8ea61c-c415-45c9-a2a6-86584d5c7df3",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "23c2fb95-8d0a-42fd-84cb-ad2316fd76ea"
        },
        "item": {
          "id": "6f5fc8d0-2330-45cd-a192-3bd0707812d3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9d3552b9-afe8-4878-abb7-94e63688539e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f94cfb7-78b3-44ed-b716-89642f8dd9e9",
        "cursor": {
          "ref": "4010f7fb-7482-4c14-b312-d51e737af40a",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a318ccb0-178b-4913-a8e7-3259808078ed"
        },
        "item": {
          "id": "3f94cfb7-78b3-44ed-b716-89642f8dd9e9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "71bdf595-2842-4195-a7aa-543a66dd5d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bceffd-02e5-4166-84fe-b6eef4884654",
        "cursor": {
          "ref": "c59caa23-0aa4-4925-a78a-1bad5396952e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "db84f242-b2dd-4b18-94fb-2322efb219f8"
        },
        "item": {
          "id": "80bceffd-02e5-4166-84fe-b6eef4884654",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c800a937-b87b-493b-80a7-d5826d9de39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a57cb0d-9cd8-4d8a-840d-cb29d7b838df",
        "cursor": {
          "ref": "1f2bda26-8ee3-4a1d-b819-78fd1a2742e7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ba4d92b0-7c2f-4c9d-81b4-5f87aab13f55"
        },
        "item": {
          "id": "8a57cb0d-9cd8-4d8a-840d-cb29d7b838df",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d878c16a-8184-457e-a0c6-08fb1c2a28e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f7aba2f-ef50-403b-a196-ba2899b04403",
        "cursor": {
          "ref": "3f3f99e4-c1d0-4ecf-ad7f-dc3c356bb434",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "94676617-d941-4e54-a4d8-ddb3a0915902"
        },
        "item": {
          "id": "0f7aba2f-ef50-403b-a196-ba2899b04403",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1346fe64-4d95-492d-bb74-099d7d60bba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb347bd-5fcd-400a-b304-7c2c0d723213",
        "cursor": {
          "ref": "53c7c383-ed88-459e-a554-bffa22bfaae7",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b60e542c-3474-43e1-9d4a-554a4687b88e"
        },
        "item": {
          "id": "ccb347bd-5fcd-400a-b304-7c2c0d723213",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "3ea07826-9115-488b-887f-36588aaf1caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c677749d-92fd-44ab-9af2-e936ec5808fc",
        "cursor": {
          "ref": "bdf29771-e3ef-4168-98bd-f44eb3c75f13",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2fbaf87a-dd35-4325-9e51-8b042df37df5"
        },
        "item": {
          "id": "c677749d-92fd-44ab-9af2-e936ec5808fc",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a74d9d9e-10bf-4552-a0a1-1e8f26cf761c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59c674b-51e9-43e4-b26c-5e75eeff33ca",
        "cursor": {
          "ref": "04019e9c-8d5f-4863-8413-9e4b328fa830",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "836c8d5c-2693-4e95-b5fb-89b29779c6fb"
        },
        "item": {
          "id": "e59c674b-51e9-43e4-b26c-5e75eeff33ca",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b52aff86-e5cd-4d44-b3db-a8635ccf7f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29a8d0a-e563-4db3-b75d-acebb180a1ac",
        "cursor": {
          "ref": "d532d508-3cff-4af5-ac64-0e5f707b4f02",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "70b06c0e-bc7a-4b94-baf6-52236100d781"
        },
        "item": {
          "id": "f29a8d0a-e563-4db3-b75d-acebb180a1ac",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "211dfdfc-bc5c-4048-b06b-8925799c1756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59d80af-767d-4540-9b1e-e87bf78573f3",
        "cursor": {
          "ref": "2b75f406-f17c-4979-87fb-fa85ba0c632b",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "51e80e11-d226-4f46-a365-a73bfb6a099a"
        },
        "item": {
          "id": "d59d80af-767d-4540-9b1e-e87bf78573f3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5a5bc605-3dba-4a40-b8d7-677d7c8bad15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e969a7-c632-4a96-a936-fffdc9138f66",
        "cursor": {
          "ref": "03aad085-b442-473e-9749-91a425be0a0b",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b0b0972c-517d-4bbf-aeb7-b1176eb10943"
        },
        "item": {
          "id": "43e969a7-c632-4a96-a936-fffdc9138f66",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f3e472fa-4fc1-4c57-bf63-107edf54caee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16afacbb-8a26-4d85-9422-eb52073aaddf",
        "cursor": {
          "ref": "8ae3cf24-2410-4965-8105-7b5d0e7d84fc",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e0e4677e-51fa-43e3-a96d-a380ba0ba548"
        },
        "item": {
          "id": "16afacbb-8a26-4d85-9422-eb52073aaddf",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "07120e8c-1a0a-4de3-ad5b-4d4110edcf1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b36b5e3-117d-4111-bf55-c10e57d5825f",
        "cursor": {
          "ref": "1627ac71-ce64-4abe-8104-8516ab76d6f1",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2ca737ad-b4a7-4a9b-a908-f9e830acac80"
        },
        "item": {
          "id": "3b36b5e3-117d-4111-bf55-c10e57d5825f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c9943973-b01b-4fd9-8215-ad6006e9760d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9fd864-e5d3-4644-9d76-b6d5b7e407f5",
        "cursor": {
          "ref": "58376b6d-66ab-4c82-9e81-1623b2456828",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "44fb04ca-0e49-49e4-b1ba-df4937c29f34"
        },
        "item": {
          "id": "5f9fd864-e5d3-4644-9d76-b6d5b7e407f5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9729cda5-b12f-4807-b49b-ec68c0d8b95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae90b07e-ef08-4c14-86ee-22e76145103e",
        "cursor": {
          "ref": "dd9c1610-6018-456d-8ad5-59138b130b89",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "804dcac7-0b66-4df5-bf51-75ba6cecd1e8"
        },
        "item": {
          "id": "ae90b07e-ef08-4c14-86ee-22e76145103e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "69f4eae3-4474-4b08-88a7-b52aa3e53db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471314e6-d7a9-4663-ad4c-9f7f7c5e37d1",
        "cursor": {
          "ref": "9ce0d8c9-9cf7-4b66-a0f6-bb58e214d66a",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1ece2c53-5a7c-4d99-8166-78e83feb3fb6"
        },
        "item": {
          "id": "471314e6-d7a9-4663-ad4c-9f7f7c5e37d1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "47e50f19-a0b7-486b-9bdb-0028f27fa8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1038d139-1a8d-48d9-808b-c7b501177ce9",
        "cursor": {
          "ref": "fb042ff3-ceb6-480c-8c5f-faa3ac844dce",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1a5e03f2-5c4d-48a1-9518-e8dbe1d81ce4"
        },
        "item": {
          "id": "1038d139-1a8d-48d9-808b-c7b501177ce9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6aa12215-1676-49bd-9f8c-b8029faf0cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3eeca1-cf80-4339-8dce-f256ca322fdf",
        "cursor": {
          "ref": "def7babc-c63d-4579-8d79-b41ba928ba9e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "af739446-56ba-440d-bad8-896e714ce540"
        },
        "item": {
          "id": "0b3eeca1-cf80-4339-8dce-f256ca322fdf",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "59f6cf3a-f30e-4e98-b1a5-6f45d502aba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f268db4-6949-43d2-a2a8-e543586fc05e",
        "cursor": {
          "ref": "8eb25353-8c72-4302-9574-694f8f4329cd",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "9b5c78c4-9ffa-46ca-a52a-359c5418ec05"
        },
        "item": {
          "id": "8f268db4-6949-43d2-a2a8-e543586fc05e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ffdac4d9-582e-4f79-bdd2-cbdf4f29b657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec196bc4-83a3-41ef-9cb3-b1f2e6cdb324",
        "cursor": {
          "ref": "fe063035-0ffe-4c53-8d45-54332024cafd",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "45cf0543-69b0-4c9d-a464-8bee116a4348"
        },
        "item": {
          "id": "ec196bc4-83a3-41ef-9cb3-b1f2e6cdb324",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e73e3e6d-ac83-4ffe-ba74-45ef341f6f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72166ddd-ddf3-4238-bfbb-a3134af03a2a",
        "cursor": {
          "ref": "9119a0a7-add6-4ae6-8234-87d976b979a1",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b7652598-1ff6-4d2d-9ffc-65c8ba916693"
        },
        "item": {
          "id": "72166ddd-ddf3-4238-bfbb-a3134af03a2a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b65193d5-4989-4283-a73d-817ccf03e994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752d3bdf-b910-4251-95ca-53a5a3551042",
        "cursor": {
          "ref": "aa939fd2-b35f-4a21-ba20-cab89917ef29",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "06ffcdd7-7e42-4563-9299-3fa5a18421fe"
        },
        "item": {
          "id": "752d3bdf-b910-4251-95ca-53a5a3551042",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b50d6eb5-49a2-4af0-ba78-c1a7ba5da2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd20a3a-280a-4660-bd38-3ea7a6f7996f",
        "cursor": {
          "ref": "94a962a6-8011-4ac8-8030-b489a413291e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b01ac930-97dd-41af-9d6c-b3310d1d4d06"
        },
        "item": {
          "id": "2fd20a3a-280a-4660-bd38-3ea7a6f7996f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "54f97456-fd2f-483b-830a-a2dce0fdb52e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d03d1e3-90a7-4b76-a724-00f10a2a2314",
        "cursor": {
          "ref": "426c9f70-ff3a-43ee-824d-751559d4a620",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "413e7121-2da1-48d0-91f3-25975b3063c4"
        },
        "item": {
          "id": "1d03d1e3-90a7-4b76-a724-00f10a2a2314",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7d74269c-2eb9-410f-ad66-8e3427827969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89742059-1049-4fd3-b3ef-5758bf8d6eac",
        "cursor": {
          "ref": "d3fcf8db-2180-4498-891e-1f9a1178b31c",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2da978df-6306-4ab6-969c-62d02c4774fd"
        },
        "item": {
          "id": "89742059-1049-4fd3-b3ef-5758bf8d6eac",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b208f635-4992-4aa3-bc87-5a48e7a4fdc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "50320308-cd91-4cf6-ae69-cc1abd890661",
        "cursor": {
          "ref": "21fe2905-e8ea-469a-8e43-b4a94051e541",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f99d3403-3822-4f99-a336-788391e870d7"
        },
        "item": {
          "id": "50320308-cd91-4cf6-ae69-cc1abd890661",
          "name": "credentials_issue"
        },
        "response": {
          "id": "13cae229-98ab-4e94-9d0d-26f39ec33c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "268c86ed-c284-4c91-bfb3-a168430c5845",
        "cursor": {
          "ref": "8e9182c3-fab9-4c19-ba60-6cbef89cbb9c",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8c914c2f-daa6-400e-9d34-70f88304b399"
        },
        "item": {
          "id": "268c86ed-c284-4c91-bfb3-a168430c5845",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "271fe64e-8446-487c-a907-f230e905c744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "36015977-5079-458c-a9d9-a4198c82e0af",
        "cursor": {
          "ref": "5cf801ed-27bd-4a0d-8869-c0470eb3183b",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fc0e045d-318c-4ec0-a7e7-5a2967b029b9"
        },
        "item": {
          "id": "36015977-5079-458c-a9d9-a4198c82e0af",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "72411d37-e8a3-4a65-8f4a-f44b12b5ce9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "9bf5cee2-de6b-40eb-b2db-8c1f9955d0ea",
        "cursor": {
          "ref": "ed0718eb-2957-403c-be80-28fbbd4e988e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "24653351-ff5a-4ffc-8b47-52499cd30a6b"
        },
        "item": {
          "id": "9bf5cee2-de6b-40eb-b2db-8c1f9955d0ea",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "50275dba-e924-49fa-b1c2-c26c417e5eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "9336db2f-0ac8-4be7-8a6d-0d4a2a71904b",
        "cursor": {
          "ref": "fd240e78-11eb-424b-a91f-95b2b158033e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f318d2eb-0e24-4b85-ad1c-4f9828739538"
        },
        "item": {
          "id": "9336db2f-0ac8-4be7-8a6d-0d4a2a71904b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "aafdd84d-8b2f-4639-9215-baad8ebdd184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b0c7e554-d599-4d8f-aa23-a9ecd519723d",
        "cursor": {
          "ref": "4f354d7a-0f4b-4273-b7c2-a7f8513aab69",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e67c5b6f-57ea-4ac7-9eb3-a1f5a436ad67"
        },
        "item": {
          "id": "b0c7e554-d599-4d8f-aa23-a9ecd519723d",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8f018587-59d8-4192-b838-1369c48acecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e6c2eaaa-6b88-4340-af1e-db96444c1627",
        "cursor": {
          "ref": "7b868ec3-1bfd-450b-b7d9-98b34a55d09a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "119c3202-9cc5-4d50-8a1f-e061f83323a8"
        },
        "item": {
          "id": "e6c2eaaa-6b88-4340-af1e-db96444c1627",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "21b0ff61-bde6-4ce3-8712-40d3048622bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570ed0cb-06ea-4bfd-ac3d-5d280d81b1d2",
        "cursor": {
          "ref": "b68535cd-dee1-46f8-9d06-6e29f60f77ac",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4197a319-126f-4002-a687-8eb5de74a17a"
        },
        "item": {
          "id": "570ed0cb-06ea-4bfd-ac3d-5d280d81b1d2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "b5fc15e1-89e2-4f1e-8ad8-7402e680b890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa03a564-4b87-4de3-8877-8418efe3e0e5",
        "cursor": {
          "ref": "bdbe6c51-0841-4c65-8470-2a4d49be5739",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c743e499-8652-417e-a9db-d526a70cb9fc"
        },
        "item": {
          "id": "fa03a564-4b87-4de3-8877-8418efe3e0e5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "45b3c46a-2be5-45df-a3dd-6b3b64c7dfc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc45d77-634b-43a0-810b-8b15e43f33b0",
        "cursor": {
          "ref": "d1221ed5-29d3-40e3-abc1-b3c70042972b",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "25b0f0bf-be94-43c2-95af-799ce3b8cb44"
        },
        "item": {
          "id": "ccc45d77-634b-43a0-810b-8b15e43f33b0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "01ee69d7-d8b0-4b8e-90c3-97d78bd13c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8244f9-f16d-4aa9-b694-e8e763b64cb7",
        "cursor": {
          "ref": "c5c506c6-7764-4a8d-8402-e720bbb95eb7",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d1583b12-cef3-4cab-bd92-513950d89330"
        },
        "item": {
          "id": "3f8244f9-f16d-4aa9-b694-e8e763b64cb7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9068736b-8679-4d1a-b21c-5d1a7d09c67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a0a15f-bd6d-474f-999f-be5805a5d46d",
        "cursor": {
          "ref": "8c5d95d0-1938-4f92-8512-0d937dd32bd4",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cb84a7de-3c19-49cb-ad05-99ace7a0a669"
        },
        "item": {
          "id": "c0a0a15f-bd6d-474f-999f-be5805a5d46d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3e06a71a-83c0-447a-a87c-b0265c29eb12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cec748-4f71-4227-ac37-af7602b900be",
        "cursor": {
          "ref": "4f7fe465-1431-4d2a-a179-623bbe83fe2f",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c5cc951e-71dd-4d65-9f1b-b08c32a9c5cc"
        },
        "item": {
          "id": "54cec748-4f71-4227-ac37-af7602b900be",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "17fd6bb8-7046-44ce-9651-7d694f650ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5328f2-87c0-4583-bba8-41739663930a",
        "cursor": {
          "ref": "415113e2-5a54-4df4-bba8-820a9fc3d175",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "397da0a2-a593-40c7-8c43-21902e7f20be"
        },
        "item": {
          "id": "fb5328f2-87c0-4583-bba8-41739663930a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fab9390d-62bd-48d6-b1f6-7100351e2c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6794458d-874c-49d5-9623-c4cd312102d5",
        "cursor": {
          "ref": "f140b837-6b58-4c0c-9fd7-ec28773538f6",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c69b9c91-7ba7-4e8a-9967-0cb7b6af1d4e"
        },
        "item": {
          "id": "6794458d-874c-49d5-9623-c4cd312102d5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3a4a8a18-87fd-4870-bc81-c1bbdb971e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905f8a4b-8e89-44bd-a660-39aa942eeac2",
        "cursor": {
          "ref": "672fa3f2-4f58-45e0-bd5f-2fb8d95225cf",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5047aefb-fb9b-4f85-b021-265a546dfd7c"
        },
        "item": {
          "id": "905f8a4b-8e89-44bd-a660-39aa942eeac2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b248c818-1870-4262-b622-835a34b55c1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855f552a-0fc5-4b25-8413-154ee96d32be",
        "cursor": {
          "ref": "a7493bfb-4332-4f42-9441-180e84bd1c85",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b2b1958b-3579-44a7-86ac-500e6ed4884e"
        },
        "item": {
          "id": "855f552a-0fc5-4b25-8413-154ee96d32be",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f9a76618-9f23-4e17-bd7e-91c4fef7733d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49a61e9-ca21-44bb-8f10-4895db07b7ae",
        "cursor": {
          "ref": "88002344-cb5a-4652-ab43-8ad1d21a833e",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "36ab0851-d7a0-4706-84c4-c78d970c8194"
        },
        "item": {
          "id": "b49a61e9-ca21-44bb-8f10-4895db07b7ae",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b1ad660d-0bbc-4cba-8078-6c5dc3664cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0af727-23a8-4e7f-a1c6-3bbbb5aea829",
        "cursor": {
          "ref": "0358057f-8f4a-48b8-8487-dd59a295bf64",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c5afb420-b6ce-43d6-be37-b74d550c7438"
        },
        "item": {
          "id": "9b0af727-23a8-4e7f-a1c6-3bbbb5aea829",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d1cfd008-5efc-4528-a4cd-aa0b04d9bf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ebd276-c0a5-46ed-b562-c6f73102b1a3",
        "cursor": {
          "ref": "4a78988c-5ed7-4dc0-a84a-d8be78048021",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "50c911a4-5d15-414e-a966-341fcfca3fb5"
        },
        "item": {
          "id": "42ebd276-c0a5-46ed-b562-c6f73102b1a3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "14bcbca0-ee6c-47c5-b1b7-cae066e87861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563f1885-b865-4c56-a407-657819688dbc",
        "cursor": {
          "ref": "f3279656-a0ab-40a8-b2ba-736ea307951a",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d3d9feea-d863-463b-8fd8-f2bb3fb4052c"
        },
        "item": {
          "id": "563f1885-b865-4c56-a407-657819688dbc",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cec179ff-5a8d-4b91-80f7-4990464f743c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bcb628-1f1e-468a-b119-75817cb69dc1",
        "cursor": {
          "ref": "dcd25994-672d-4c0e-94c9-742227437a59",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5a348233-4a91-4617-8593-14e173d5705c"
        },
        "item": {
          "id": "96bcb628-1f1e-468a-b119-75817cb69dc1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "21a71837-9f2d-4f3a-b97c-f6121ce62199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "643e2e3f-268b-422f-8dd2-912ebb2c08e3",
        "cursor": {
          "ref": "9a6ee513-41ff-4c8e-a8cd-e1be64056927",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d658b043-adb1-46c4-af88-d6847255af3b"
        },
        "item": {
          "id": "643e2e3f-268b-422f-8dd2-912ebb2c08e3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5abe04d7-cccc-44d7-a54c-6fb44115ee40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5db4461-c76e-4115-b0d1-9535373bceea",
        "cursor": {
          "ref": "b4de0fe3-36cd-4d91-9d92-2106b178498e",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4dd57879-2977-41d6-a665-b1740fd04dc3"
        },
        "item": {
          "id": "c5db4461-c76e-4115-b0d1-9535373bceea",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b3d07576-7341-46e3-a15d-efcedc59bba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2db6350-8016-4164-8fbb-877cd8c8c3e5",
        "cursor": {
          "ref": "35cdb193-065f-4517-a4b4-f962e9284576",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b834dfeb-1977-41cf-9bc8-06d32acd8c12"
        },
        "item": {
          "id": "b2db6350-8016-4164-8fbb-877cd8c8c3e5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bb67b653-7efd-4cb6-8fd3-f6fdb6d3dc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb13091-7027-4a3e-8ef2-e8b56dd90ea6",
        "cursor": {
          "ref": "0578a9e5-f737-4d38-8bd3-d284bf999646",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "de7eef1e-2c76-4899-b1d1-1ef6341beac6"
        },
        "item": {
          "id": "cbb13091-7027-4a3e-8ef2-e8b56dd90ea6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ccafe93e-c00c-4f04-9019-991498c36591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9ce16b-29aa-40b2-95ab-3bcd571faa2c",
        "cursor": {
          "ref": "de3411a6-40b3-42dd-91a5-a97738cf4450",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "986a440c-ccbb-4b5b-bc7e-878c8be0b6d3"
        },
        "item": {
          "id": "6c9ce16b-29aa-40b2-95ab-3bcd571faa2c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "30b019dd-0173-471b-abde-7861ac8bad1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f09d6b7-957e-4d0c-a222-13f9345ce24b",
        "cursor": {
          "ref": "52353f6a-0060-4b4a-ba5b-19bda6522250",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "290c98f7-6a35-4b25-9254-d24a5fbb939c"
        },
        "item": {
          "id": "1f09d6b7-957e-4d0c-a222-13f9345ce24b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5942c90a-02d9-4e2f-a6e3-7d21c6d8679e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8498d2-b11a-40c1-b69b-d31544b4bf33",
        "cursor": {
          "ref": "b16b1e79-8f08-4adc-9c3a-0c9462b00a16",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7d717502-f679-4264-a26b-67b262b26de2"
        },
        "item": {
          "id": "3f8498d2-b11a-40c1-b69b-d31544b4bf33",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "242a2c99-71e4-4d6c-b0ff-a4c6669ec674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6546c13c-1e1a-4bf2-a141-826b4d3c5d67",
        "cursor": {
          "ref": "4e64b96d-c246-4bfa-ad1d-02333e40b407",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7c59c4c0-b250-44d2-9353-0134dcb1d175"
        },
        "item": {
          "id": "6546c13c-1e1a-4bf2-a141-826b4d3c5d67",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ddc66fdc-7204-4386-a58f-cacbc1fb697f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14975ed-5298-4318-9b97-3b8a9e748cbe",
        "cursor": {
          "ref": "871aa844-a6b5-4cf3-a4d6-05101fdfcff1",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e45e3bae-d121-43a8-8236-2a7f13a7dddc"
        },
        "item": {
          "id": "f14975ed-5298-4318-9b97-3b8a9e748cbe",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e363bf3a-223b-424b-a4ea-7d336d207074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8998fe3e-c873-4a39-8697-3b4ebb5032e6",
        "cursor": {
          "ref": "6ab1bc32-f838-4b77-b20b-f0443b67fc66",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3f0dc316-e031-47d6-9e1d-70c1f80a61f3"
        },
        "item": {
          "id": "8998fe3e-c873-4a39-8697-3b4ebb5032e6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "05648b36-1049-49ad-bf90-16ab6009b782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6547d8c-59a7-441d-b9d0-3233cb826df8",
        "cursor": {
          "ref": "20cc8cc3-7b81-4751-950a-3c3cc7a32fd9",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "034091e8-425b-4d81-adb2-b38e0754e9a3"
        },
        "item": {
          "id": "b6547d8c-59a7-441d-b9d0-3233cb826df8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7cbf16fc-4b12-449b-ba81-96d3071599ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8fc405-051d-4e35-824a-c3092571f69a",
        "cursor": {
          "ref": "18c10290-576b-46a8-afc1-47e4aa1ba570",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6f8a5f34-12f7-46b1-acd2-be420d706830"
        },
        "item": {
          "id": "2b8fc405-051d-4e35-824a-c3092571f69a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bd4f41f8-faf5-4ac9-abfd-a229a12b0249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6ce8a7-209f-42c2-9e5a-05adee74394c",
        "cursor": {
          "ref": "ed5acd0f-155a-40f6-8e42-c6dd292b0ec7",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6c03ae7e-bcea-413c-a721-0cffa33d2e67"
        },
        "item": {
          "id": "db6ce8a7-209f-42c2-9e5a-05adee74394c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "acd7b95f-a3eb-490a-b007-6a616dd4d08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa6b68b-9fcb-4a8f-8df4-2a080cb5dbe0",
        "cursor": {
          "ref": "eb8568b4-9ece-43c8-9d4f-677dcf5edb4b",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "563f484e-d413-4ff8-b95e-e07ebea6c5b1"
        },
        "item": {
          "id": "0fa6b68b-9fcb-4a8f-8df4-2a080cb5dbe0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b1e42389-5b07-4116-9077-62454d9536ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ead058-0599-4dd6-b06d-3604da956500",
        "cursor": {
          "ref": "9072bd69-6663-4767-b8bf-b3ad33de3e44",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e8200661-12b5-4e79-9aa8-2b496445d563"
        },
        "item": {
          "id": "45ead058-0599-4dd6-b06d-3604da956500",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a0755633-3a84-4d38-9a08-ef9e3faa9e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3510a73-41b1-468b-b0ea-1ec2aafda2cd",
        "cursor": {
          "ref": "431a6bc5-5e49-44cf-b79c-6e3db4ed61f1",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6799227d-f26f-494d-bdc0-cfad40f9cac1"
        },
        "item": {
          "id": "c3510a73-41b1-468b-b0ea-1ec2aafda2cd",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e1c86581-a795-4834-b8b9-41011a3af661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f96eab4-8465-492b-be24-7a494550aa2c",
        "cursor": {
          "ref": "13f7c969-10e8-44d9-8cca-ab59c9bec518",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c185872c-c39c-49ac-be16-bff03de3907c"
        },
        "item": {
          "id": "4f96eab4-8465-492b-be24-7a494550aa2c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b92b5f19-613d-49a6-853c-017b9e9f053c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d65b8e-a0f7-4cdc-ba18-571e1efc151d",
        "cursor": {
          "ref": "d5f44a26-0d75-4473-8c7a-62a94d284e44",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "eb95d305-b96e-43b4-83cf-b92e6d299f2a"
        },
        "item": {
          "id": "c7d65b8e-a0f7-4cdc-ba18-571e1efc151d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "67b8c7ec-a401-4bcf-8044-dafc8c59d2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ebeceb-0e39-4039-8398-11f398bd0fa8",
        "cursor": {
          "ref": "79d988fa-b853-473f-a2af-7bfdf7450d6b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "77a47bcd-6f2e-4b12-b5cf-a544753a189b"
        },
        "item": {
          "id": "13ebeceb-0e39-4039-8398-11f398bd0fa8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "26414c90-0a80-4990-b3ad-f4afac2ae834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450b3fd3-8dd5-438d-a110-aa7f3fb87b6b",
        "cursor": {
          "ref": "cc3269cc-b6c0-4050-ab96-1735c7cfea1d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "61839e72-7b48-4565-9d8d-2548308323b7"
        },
        "item": {
          "id": "450b3fd3-8dd5-438d-a110-aa7f3fb87b6b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a1f95472-a6e9-4a55-9427-5c11dfac0d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9447cb8a-956c-41be-b5f5-2adb78dc3ec9",
        "cursor": {
          "ref": "89cb9559-a096-43ad-a722-e7efcb7035bd",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "540406a4-7858-4642-9af6-015f9fd56f1a"
        },
        "item": {
          "id": "9447cb8a-956c-41be-b5f5-2adb78dc3ec9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "63f3f02a-192a-42aa-afc4-bb7f862b9b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1038666-3c95-4f49-a523-fd1ed5cffd5b",
        "cursor": {
          "ref": "cb67c3df-815e-4b93-8529-7144cb2bb8cc",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f009ddfd-d4e2-4f3a-8784-00f02fe26a66"
        },
        "item": {
          "id": "a1038666-3c95-4f49-a523-fd1ed5cffd5b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2b2c0a4a-cd02-4941-83f9-ea1912e2f64d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c37674-20ce-4131-b8d4-0c33bac9d228",
        "cursor": {
          "ref": "2d5ea582-0d7f-4998-9eb3-6c57832e5cc3",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "044fea45-4fdd-4bc7-864f-030b5bd7bf44"
        },
        "item": {
          "id": "c1c37674-20ce-4131-b8d4-0c33bac9d228",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "153bdd9f-e4bd-408c-a8a8-c60547d2e2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e8b1e6-4eb8-4e81-9b55-09451c0dd32b",
        "cursor": {
          "ref": "e64a2179-b761-4afd-9944-d39f50f5045f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a644c7f1-26de-48a7-b7b4-9abd28ccb7cb"
        },
        "item": {
          "id": "92e8b1e6-4eb8-4e81-9b55-09451c0dd32b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "972a5325-4a56-4667-ab6e-c3f5c51855f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112abd6a-74c2-4335-b3af-fde3b1730de5",
        "cursor": {
          "ref": "1ebeab9f-b3be-4add-ab7c-e18b0398b7c9",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5d01736b-4abd-4b9d-aa84-6762db0e2dba"
        },
        "item": {
          "id": "112abd6a-74c2-4335-b3af-fde3b1730de5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f40656f0-abf7-4a84-8f59-4dcd8ca506cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10521193-1402-4289-a046-53e4a683abd6",
        "cursor": {
          "ref": "8aac2cc7-0914-49c4-8e04-9a79980dfe7c",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1c5621d3-6979-4090-ac57-7c8a10f04b34"
        },
        "item": {
          "id": "10521193-1402-4289-a046-53e4a683abd6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e8a9b782-c2ce-4156-ab29-5e395679a822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5117ef74-56e9-40bb-9873-dc83bc9ffdf1",
        "cursor": {
          "ref": "12d4434b-c11e-4f03-9136-e2a225f67cc9",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9bb55fcb-89fa-463f-91f2-4458d722f977"
        },
        "item": {
          "id": "5117ef74-56e9-40bb-9873-dc83bc9ffdf1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a17dd2ef-6115-4ee9-9948-42ef658eaff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c7f8e7-ad28-497b-8de8-26736edfb88a",
        "cursor": {
          "ref": "20955da7-7a53-463e-b6d8-5023658e0cb6",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "922860e2-0a58-4a56-86a0-98a8778dd70e"
        },
        "item": {
          "id": "83c7f8e7-ad28-497b-8de8-26736edfb88a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1e494f89-d975-497e-9c78-dd044b475103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9254ce7-9c9c-4c32-b2e0-97ae3700d01a",
        "cursor": {
          "ref": "288280cf-2e40-4631-ab1a-661d5ee7c345",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "aa3c6d93-2818-4c5f-ae0c-7225bace6f11"
        },
        "item": {
          "id": "e9254ce7-9c9c-4c32-b2e0-97ae3700d01a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "27dfb04a-8270-4d98-9f8d-9280c42797d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f65d911-b0f4-484e-bff1-d1092f3f046d",
        "cursor": {
          "ref": "94352e59-7e96-4ee9-9996-6a4f332b3971",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8a0dcbd0-092f-48ab-a26d-a123dd4ac968"
        },
        "item": {
          "id": "8f65d911-b0f4-484e-bff1-d1092f3f046d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "838767a9-9046-4ed7-b236-cbaeaa1f7bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9f2e4e-c13c-427a-9fb1-6727b5a4cfdd",
        "cursor": {
          "ref": "061837b7-90b5-47d2-9186-4f21883f6daf",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "50f9ca52-a5f3-4d7c-a626-9efeb32a9a87"
        },
        "item": {
          "id": "5e9f2e4e-c13c-427a-9fb1-6727b5a4cfdd",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "20529baa-d45f-4a3b-9df4-edbefda43f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ba10fa-16ce-4275-bce1-4d1b4429dd12",
        "cursor": {
          "ref": "a46464d6-9f2f-4217-8211-0a1188b63c49",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1ef72abc-4fa8-45cf-affb-1fd7bf381867"
        },
        "item": {
          "id": "b1ba10fa-16ce-4275-bce1-4d1b4429dd12",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bbf066a7-8d43-44a5-9879-91cbd04f6db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce80092-b61d-455b-850a-379a7a099de4",
        "cursor": {
          "ref": "82ff4d14-4286-4108-8d21-0c8d81c54d4e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "445b2515-53af-4055-9bd2-b51e12adb0f1"
        },
        "item": {
          "id": "cce80092-b61d-455b-850a-379a7a099de4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9d1ab6f3-9de4-45a1-bc25-49394e2c6c4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2d687c-718f-47fd-9042-4a84581dca50",
        "cursor": {
          "ref": "9ae767ba-7f87-49f9-8226-4fbbb1e27a4c",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d3a5e222-aad0-43a9-a8ba-17c851dc7bc5"
        },
        "item": {
          "id": "cf2d687c-718f-47fd-9042-4a84581dca50",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "62fa5eba-c041-46eb-9d6a-3ee3b7efebcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20732801-ecec-4f63-b766-8570d61ccd35",
        "cursor": {
          "ref": "889194e1-99ef-4570-9ef8-3f2089da6c7b",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "466aa8f4-7224-4d7e-8c0b-170d0176e93a"
        },
        "item": {
          "id": "20732801-ecec-4f63-b766-8570d61ccd35",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "10faed40-6e9d-49e8-bc80-05bb2234aeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69c20c0-7efb-46f8-ba2a-080392f343e4",
        "cursor": {
          "ref": "ffc8fbc8-0b87-4a27-a04f-f1ffdf79d80c",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4aaaf283-1465-4631-9502-ee6bcf3845da"
        },
        "item": {
          "id": "c69c20c0-7efb-46f8-ba2a-080392f343e4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ec25df3e-b53f-4a67-b89e-b87453224677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf9280e-a9ca-4bc1-9add-af12916f3f84",
        "cursor": {
          "ref": "fd76c62b-c440-421b-8294-e3626be1c17b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bad9c46f-b9a3-46fc-a433-538d24b3818c"
        },
        "item": {
          "id": "dbf9280e-a9ca-4bc1-9add-af12916f3f84",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "58c42ab0-a19d-4a1d-a2b5-5c7be69d262d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf104c7-8874-4dda-a18f-6d43056e8cb3",
        "cursor": {
          "ref": "48e4a501-f26e-4804-9b33-3a660d73ddea",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1846ca7d-faa4-47b2-ad8a-dff0ae9da0f6"
        },
        "item": {
          "id": "caf104c7-8874-4dda-a18f-6d43056e8cb3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b2992654-6209-472b-8b40-294e378eb45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12def02d-e3ac-47fd-9fc2-d73ed1eb7429",
        "cursor": {
          "ref": "b3fdbef3-403c-4384-a8a2-be9f62d64340",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d30db637-3f34-4321-a6eb-f4808f35e684"
        },
        "item": {
          "id": "12def02d-e3ac-47fd-9fc2-d73ed1eb7429",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "76e3d09d-a0aa-4826-9305-9284c49597ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1732ad0d-774d-4803-bab3-c49941443186",
        "cursor": {
          "ref": "cb9f01fd-1f8a-4a90-9c4d-374c03e71981",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b512b0ea-0234-4367-b72f-e074524a2a16"
        },
        "item": {
          "id": "1732ad0d-774d-4803-bab3-c49941443186",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "10d23481-8f57-4000-aebd-75ff2d781602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2d9e30-0190-47f8-867c-1834fcfd5a35",
        "cursor": {
          "ref": "0581be5d-ccab-4b6c-a928-6a134363968a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f33b2f73-b401-4f63-8800-d8f4f2717ffc"
        },
        "item": {
          "id": "ab2d9e30-0190-47f8-867c-1834fcfd5a35",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6d5716fe-c67a-41de-9ace-055d57db3421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22885e4c-938a-48e1-9450-b3eb065b554d",
        "cursor": {
          "ref": "f01da7f6-b36b-46f4-8377-4097dfb91aff",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b25bca3d-a7bf-420f-a267-4273fa21c0f1"
        },
        "item": {
          "id": "22885e4c-938a-48e1-9450-b3eb065b554d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "06188914-63ff-4398-a6b4-c388f38fb230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009423a5-d785-4529-bf04-a4612f0c98b9",
        "cursor": {
          "ref": "0df007fd-06cc-433e-a9fd-8b2b94edd211",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "495adb3f-2a73-4899-b29e-1170a1c408bf"
        },
        "item": {
          "id": "009423a5-d785-4529-bf04-a4612f0c98b9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7d70a609-7207-4b7b-9ba8-77b726d91383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d5ca89-2cb1-46d9-b065-310cc21ccf77",
        "cursor": {
          "ref": "1a462e60-03e3-49dc-9727-1436f0f82713",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a22fdacc-5e05-4ed1-b8db-5ca820c02b0a"
        },
        "item": {
          "id": "23d5ca89-2cb1-46d9-b065-310cc21ccf77",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "2a8e98aa-301a-49b6-8a86-dfd6cb080278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22eb69ea-d3e4-494b-a43a-5457ef6901ee",
        "cursor": {
          "ref": "9eb662ce-4069-42af-aea5-b9c55612c8a5",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "21675980-9f8a-4c48-bac9-0c40355af514"
        },
        "item": {
          "id": "22eb69ea-d3e4-494b-a43a-5457ef6901ee",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6fee86db-1132-4233-ae50-8ff2a21277bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d96c6d-7572-4f28-9931-a9e5edd837c2",
        "cursor": {
          "ref": "a1474a19-c8ac-45f4-9dc8-2db19e703991",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e2cb5ba1-b41e-4d61-8a66-c2c4958774f6"
        },
        "item": {
          "id": "e0d96c6d-7572-4f28-9931-a9e5edd837c2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "86100d33-dcbf-4a26-b08d-fa83803d5200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4d0dab2-0e34-419e-819f-b92f5d30c02a",
        "cursor": {
          "ref": "28dc619d-1822-4bce-8bca-a5db8e1836c8",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0d0f42ff-2582-4fc0-81df-a07666acbaa4"
        },
        "item": {
          "id": "e4d0dab2-0e34-419e-819f-b92f5d30c02a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c1658432-7bc7-4867-a00b-11a4b07c0978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ead82a-e084-41bd-bfb8-7119805a4373",
        "cursor": {
          "ref": "42cdad0b-5b7d-4790-b63d-2efa7a243ad3",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b00d00a5-fa11-454e-a22e-ffae30ac89bb"
        },
        "item": {
          "id": "94ead82a-e084-41bd-bfb8-7119805a4373",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "353e8f4d-3930-45e3-bec8-5e5c4489cf6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272c94ce-259c-4277-8dc1-ca5e95550180",
        "cursor": {
          "ref": "3ab9f876-7b3c-4503-8c58-c2f301471baa",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "47c515ef-0b05-4b1f-b331-ed8197c86d8d"
        },
        "item": {
          "id": "272c94ce-259c-4277-8dc1-ca5e95550180",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c0db9ac3-2a99-4985-950e-1d1f7405d0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f826e50e-d811-4293-9728-f52026b53e88",
        "cursor": {
          "ref": "39551d19-4447-4391-85db-148bb76ab4bb",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "cbeac96e-4804-45f8-85da-908a2d9addab"
        },
        "item": {
          "id": "f826e50e-d811-4293-9728-f52026b53e88",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fd9012b0-70f3-43fa-90c6-b4bd535e61e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e2a3c4-9b8a-45c2-8dc8-659bd59792ef",
        "cursor": {
          "ref": "8563cf90-d9ea-4d38-a764-a4ef9d935966",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2da66323-609f-4459-9eac-04b56e174e38"
        },
        "item": {
          "id": "71e2a3c4-9b8a-45c2-8dc8-659bd59792ef",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2f0f5479-0a03-465d-81fd-d1cb0102ef4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d1909f-a14e-44bf-b442-1d02ac1480b9",
        "cursor": {
          "ref": "ec6a1ac8-cefa-4f1f-882a-22cbfc8a9b80",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "31d00dff-7942-4d13-9654-1207adf23494"
        },
        "item": {
          "id": "95d1909f-a14e-44bf-b442-1d02ac1480b9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f2b7901e-ce69-4e53-a7f6-eb3c2b006cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fef704-062f-4f4a-9a2f-85c6900fb456",
        "cursor": {
          "ref": "d0f0bcb5-487f-4841-b9ef-c3199034900f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "05ce31a4-12ce-4206-aa45-3c833af70f70"
        },
        "item": {
          "id": "53fef704-062f-4f4a-9a2f-85c6900fb456",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b1dba723-f525-4ac7-9153-b9d1aa0d45a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47646009-0952-48f5-92c7-219585e9824b",
        "cursor": {
          "ref": "244dd073-7e47-4e66-9083-b8714a24f620",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c7e7b9d9-6c5e-479a-8afe-432f0185ce22"
        },
        "item": {
          "id": "47646009-0952-48f5-92c7-219585e9824b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "334d36b9-e982-4a0b-a73c-74a60fa7fb58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b02248-aee7-4d0a-a2a1-299bdd27b463",
        "cursor": {
          "ref": "77611894-d04a-472f-9a08-01ce923853a2",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1b37b942-a9ea-483d-8162-9faabaa22fe6"
        },
        "item": {
          "id": "a5b02248-aee7-4d0a-a2a1-299bdd27b463",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1edb990d-9aca-4a38-824c-5dc778f6e025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bd22e6-0931-4e03-ad01-cbd95f17f17d",
        "cursor": {
          "ref": "c2320198-1e0e-4651-8045-5cef50110618",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2b044652-83f4-41ad-bb94-8a634580a396"
        },
        "item": {
          "id": "98bd22e6-0931-4e03-ad01-cbd95f17f17d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "62e5b47d-2144-4aeb-b42a-cb3df6702e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97510bfc-c4b0-40b1-b4ba-97862a49b456",
        "cursor": {
          "ref": "d011cd8d-c1c4-4072-8547-b1e2fd0dff4a",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6ff5f0e9-81a8-449f-beed-caa8c065c600"
        },
        "item": {
          "id": "97510bfc-c4b0-40b1-b4ba-97862a49b456",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0e7d56de-dc67-43ce-a199-3f9e4d433bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b339762e-ad69-4d3b-a19c-7e23e4a7110a",
        "cursor": {
          "ref": "ce3b5dfc-2a8f-4a2b-91bb-6d0e6191210a",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "99882c41-6eb1-48ad-8bf3-2ad8ce13c7a5"
        },
        "item": {
          "id": "b339762e-ad69-4d3b-a19c-7e23e4a7110a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "eaaa347a-016a-4fe5-a939-607585d52479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb28d48b-f516-4765-8d6f-85b45d052896",
        "cursor": {
          "ref": "edf3e506-920f-436a-b69f-d9c0f0980228",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bec7d1ea-62a0-4105-a42e-671cbfac5cab"
        },
        "item": {
          "id": "bb28d48b-f516-4765-8d6f-85b45d052896",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f568f083-1c4b-4313-9a9b-9836f75f6ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c11949-60bf-4054-90e2-91aa20eea56a",
        "cursor": {
          "ref": "e29eefe9-fb8e-4051-8c7f-71f65e6640d8",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "939f104f-270c-4fb7-a958-1f9dba015a82"
        },
        "item": {
          "id": "b1c11949-60bf-4054-90e2-91aa20eea56a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5af84093-5910-4f16-b831-fce4ce21a9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851cc21a-d4d9-4033-895f-ef92ca090d06",
        "cursor": {
          "ref": "b4ebc5af-046a-4823-af20-519400e5048d",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7aef9767-0107-4de1-a46c-3466b71b1070"
        },
        "item": {
          "id": "851cc21a-d4d9-4033-895f-ef92ca090d06",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "808fdc51-d210-4cac-a520-a83f9771bb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988ef853-16a5-4eec-b3da-a684bb5d630f",
        "cursor": {
          "ref": "b218997c-2a79-4d6a-be8a-efe073acd80f",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "87afad1e-769d-4fe6-9f36-5af4e6c6fff0"
        },
        "item": {
          "id": "988ef853-16a5-4eec-b3da-a684bb5d630f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "16434156-c59c-493f-b43b-a3ba309e2bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f08f58-b652-41c5-a0f3-8b1ac0e4c613",
        "cursor": {
          "ref": "fffd2168-08ba-4662-9e6a-476ae788a955",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1872889e-da71-428b-86e2-e95e54c87d27"
        },
        "item": {
          "id": "e4f08f58-b652-41c5-a0f3-8b1ac0e4c613",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f708be5e-f089-4a13-957a-f971217ce946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476b40fb-f004-4dba-a268-65e3ac37c985",
        "cursor": {
          "ref": "d96f7d1a-0cb4-46c7-b712-585518fce6d5",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "792017d0-d530-4697-9888-260a0a5dcc09"
        },
        "item": {
          "id": "476b40fb-f004-4dba-a268-65e3ac37c985",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "661a4ce7-785e-401d-a2f2-60d97fb11d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1b7057-0cdb-4c28-94e5-b194316bf99e",
        "cursor": {
          "ref": "f44e62d8-ede6-441c-8f2f-2393c0183a6d",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b0415858-1fb1-4490-b50f-75885f21137a"
        },
        "item": {
          "id": "5c1b7057-0cdb-4c28-94e5-b194316bf99e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ba9b22fe-12ff-4ed4-a648-1c9331d13208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325ac5fc-1a33-4272-835f-8bd606e841d6",
        "cursor": {
          "ref": "4cbd5335-49c1-4396-964f-ca840a8f5e26",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5647966d-2088-4153-88c1-9727d98eacd5"
        },
        "item": {
          "id": "325ac5fc-1a33-4272-835f-8bd606e841d6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f366f0e0-4037-4440-adfb-631320b596c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed7d5e1-d03e-40ab-836d-c021e2f9ac32",
        "cursor": {
          "ref": "19623d71-b5f7-491b-a69b-9234a2ed6e73",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a475b0b5-cda1-4ac5-af6d-cd1ec737aa50"
        },
        "item": {
          "id": "5ed7d5e1-d03e-40ab-836d-c021e2f9ac32",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "04df190d-2f5d-4fdd-a66d-1143a8f6892e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be7a66b-7f18-4014-875e-e0a609f73af5",
        "cursor": {
          "ref": "4576303b-f767-4594-bb5e-91f27c831853",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "85bec03f-2bc6-4b74-a2e3-64a65f92e28f"
        },
        "item": {
          "id": "5be7a66b-7f18-4014-875e-e0a609f73af5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2f076ae9-9181-4571-9870-53dd54bd46c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b32535-38a5-43bb-9dbc-ab947bcc9389",
        "cursor": {
          "ref": "f6d4aa8f-5179-4b43-9ce0-93b4a9308dd1",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "ff156720-3f7a-4ded-a9a2-e49500c83952"
        },
        "item": {
          "id": "69b32535-38a5-43bb-9dbc-ab947bcc9389",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5bdbe269-6a2f-4e35-9b8f-c7ea8980b2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16bc729-7841-4451-83cc-96359701a7ef",
        "cursor": {
          "ref": "f846582a-a2f8-4a2f-b08c-8951a479ae6d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "755e9ec8-1397-44a6-8abe-eb4cda9f9b58"
        },
        "item": {
          "id": "d16bc729-7841-4451-83cc-96359701a7ef",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "983c113d-0cae-40c8-8d13-4b42df5d3ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0336931b-c563-4c2d-877d-81cef81b67ea",
        "cursor": {
          "ref": "9fd10acd-b74a-4564-9079-dbce1a6073df",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "914e73aa-d77b-4ff3-89b4-e6bc3622f5e4"
        },
        "item": {
          "id": "0336931b-c563-4c2d-877d-81cef81b67ea",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5338da8f-7535-49ee-884b-992f921bbffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4a129e-b033-43e2-89e7-296514bf011f",
        "cursor": {
          "ref": "16465227-1c1d-49dc-bb2f-ea909bf95e0c",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fc7f4229-4521-470b-b73b-37982810b075"
        },
        "item": {
          "id": "5c4a129e-b033-43e2-89e7-296514bf011f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d2a2f83a-a5ad-4b00-a822-6bec8ddcf2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9658a38-8d30-4391-a773-6d0ce4a7270e",
        "cursor": {
          "ref": "550dfdcb-fe69-4e8f-a0b6-1963fae1a65f",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a9be9859-1393-42f7-a87a-c644c4537a84"
        },
        "item": {
          "id": "b9658a38-8d30-4391-a773-6d0ce4a7270e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "149c9838-12fd-4d59-96ef-e7b6209071b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9538b9-e79e-41c9-afe2-aca17c5b8c73",
        "cursor": {
          "ref": "e0327350-f47e-4b1e-9125-864e1de420a2",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ab6da383-add5-4b44-802a-f10ede4fc374"
        },
        "item": {
          "id": "bc9538b9-e79e-41c9-afe2-aca17c5b8c73",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1cb763c1-f309-48de-af17-f779194c4fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0372818c-4c93-435a-bf5e-b5e650fc8076",
        "cursor": {
          "ref": "0d860037-6f0a-4319-aac9-c8e60e9b3d62",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "214b5dc4-c1f7-47c1-a0ce-35897c35f1e4"
        },
        "item": {
          "id": "0372818c-4c93-435a-bf5e-b5e650fc8076",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "93210e32-cf0c-4076-844e-0e68625c48af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ce24b8-bf24-4aef-bd83-37b63edb0891",
        "cursor": {
          "ref": "c817681f-1f4b-4143-b3ee-fef2bdc766aa",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0ae3d207-2fa1-447b-aa9d-38cd54286790"
        },
        "item": {
          "id": "84ce24b8-bf24-4aef-bd83-37b63edb0891",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6bed3864-cadb-4190-92f0-702ec2a82a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818b5bb4-baf1-4b20-834f-2d066074e940",
        "cursor": {
          "ref": "338a8937-910d-4caf-8e6c-7f1268006151",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c468a9e5-3be2-45b2-a437-8ac8027d3ec3"
        },
        "item": {
          "id": "818b5bb4-baf1-4b20-834f-2d066074e940",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9cd097fa-eae2-4f38-bc99-fe82ee62b6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c4a4e9e-899b-4408-ba07-c920f129f7c5",
        "cursor": {
          "ref": "dd8f2625-0ce8-457d-ab69-352f5c62eb9e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ed61d21f-88c3-4366-a655-7f0192fa3317"
        },
        "item": {
          "id": "9c4a4e9e-899b-4408-ba07-c920f129f7c5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "037e4329-c407-4f5d-a557-5b3a2e185d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192e64f8-a7b0-41a8-8980-234aa359a14a",
        "cursor": {
          "ref": "34c0dc57-f8e1-4abf-86ca-afad9dca4788",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6051bdbd-a33a-4251-8ede-db32bc1751b0"
        },
        "item": {
          "id": "192e64f8-a7b0-41a8-8980-234aa359a14a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5380fa15-edcf-4676-8435-fab4d0a457c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be86797d-1f3b-4297-afe2-5b3ccd28b091",
        "cursor": {
          "ref": "4c2ce47f-fbe1-46ac-bf62-c7a1521135cc",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b523a36b-7076-4679-8ce4-a38b8e6b1bd7"
        },
        "item": {
          "id": "be86797d-1f3b-4297-afe2-5b3ccd28b091",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "dc36c281-945b-4bc4-9dc0-87e2fd95ad57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0c7bfd-ae83-4a01-9afb-7f69fe55b829",
        "cursor": {
          "ref": "8f07ada7-d66a-4dd6-a5a8-13cc0feb3d4c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4082fbf2-ea81-4fbb-be44-f83b760e74d6"
        },
        "item": {
          "id": "8c0c7bfd-ae83-4a01-9afb-7f69fe55b829",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fddb5298-3695-4894-a47e-bd58c65111e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5865a5b7-1175-43d0-88f0-db15b11b268a",
        "cursor": {
          "ref": "7de455ff-3e7f-415d-9f12-5c7ff5eadc2e",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b4987151-97bd-47b5-951b-74140f20d574"
        },
        "item": {
          "id": "5865a5b7-1175-43d0-88f0-db15b11b268a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b5051547-8187-4ca9-9d81-fb048838ae0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22b8e0e-9dd2-49c7-adf8-667a5478296c",
        "cursor": {
          "ref": "eb7ea694-f154-4b8b-88d2-7a0cb8964560",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e81c68e4-837d-440d-9a19-a3187373ea06"
        },
        "item": {
          "id": "c22b8e0e-9dd2-49c7-adf8-667a5478296c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9921fd64-7040-48df-9234-726a08498cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571bf70a-e410-4f39-b166-7bf7160db469",
        "cursor": {
          "ref": "6a0f1f2d-16de-4c10-9de0-57ece2af33c5",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0fe85ae6-5c94-4e85-85d8-53df89390eaa"
        },
        "item": {
          "id": "571bf70a-e410-4f39-b166-7bf7160db469",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a552935f-21cb-4b05-9985-4a0382947d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848a6919-b9fb-4c5a-90ed-8e642537853a",
        "cursor": {
          "ref": "d7de0a84-8697-42b2-8902-1d2b9ccaddbe",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "340b741e-6efb-4df4-8578-13c8c008103c"
        },
        "item": {
          "id": "848a6919-b9fb-4c5a-90ed-8e642537853a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e9ec3a79-4fba-434f-83be-9c0c5974e111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46907995-aed1-4ad2-b869-92b3e3cb5ac0",
        "cursor": {
          "ref": "87131ef3-4cad-46bf-9355-b402cb5dbfb8",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "76339bb2-8f32-4d1a-997d-7111db7597ba"
        },
        "item": {
          "id": "46907995-aed1-4ad2-b869-92b3e3cb5ac0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "647ebecd-0b11-44a2-a429-55d93ce46039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d00ab3-d545-4504-9659-9dd3f2f5ade1",
        "cursor": {
          "ref": "d160c3cb-5a57-4f28-8f10-8b582b89ec9b",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e8b30d9a-5864-4386-8668-f4dfb4950f3f"
        },
        "item": {
          "id": "d2d00ab3-d545-4504-9659-9dd3f2f5ade1",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "27204df5-f624-46d3-86b4-a8bdf9c50677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7945dc59-70d5-4b51-b032-e3fa93acf5d4",
        "cursor": {
          "ref": "efe9bec0-24cb-4112-99e6-6defa0ada58c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d466b26f-549b-4a94-bbf9-fe5ce46fc271"
        },
        "item": {
          "id": "7945dc59-70d5-4b51-b032-e3fa93acf5d4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "557c0604-9c3d-4d91-8fc4-65b72831cc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc605eb2-8ab3-4f8e-ad9c-2083c3a524d6",
        "cursor": {
          "ref": "da02cb0c-8381-46f0-8504-230cca74b608",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5e8ea770-ebae-45db-be45-ce8a05273202"
        },
        "item": {
          "id": "dc605eb2-8ab3-4f8e-ad9c-2083c3a524d6",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "36f888ad-29d0-4c41-a798-26702a020a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6c41ea-9d91-49b5-8706-dc40a8807124",
        "cursor": {
          "ref": "e83f9870-75f0-4289-a108-0e13ccd2cf18",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f62198b3-4a4a-4e63-a5d4-b2f131d3ad90"
        },
        "item": {
          "id": "6a6c41ea-9d91-49b5-8706-dc40a8807124",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "eb7784a8-729a-42bb-95ed-78c89908e416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af215e5d-fd4a-41ae-a732-3bc36fb0b52a",
        "cursor": {
          "ref": "a916476a-6577-4cd1-948e-b27a083c9675",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ab865255-d016-49a7-bec3-37da746f6362"
        },
        "item": {
          "id": "af215e5d-fd4a-41ae-a732-3bc36fb0b52a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f01e8e86-4bff-4d5f-a575-f84254ea9e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6649d289-ee9a-42b6-a449-643688cba6ba",
        "cursor": {
          "ref": "6ab4fd7a-49b4-40cc-b020-c0775c4e611b",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "43943b59-32e6-4b68-acf6-55ce8b144724"
        },
        "item": {
          "id": "6649d289-ee9a-42b6-a449-643688cba6ba",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fb28942c-8474-4a96-b2cb-c1741f1af3e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417f077f-0ca1-4a77-8941-c79f9f5ffb33",
        "cursor": {
          "ref": "4fc2a00c-be64-484f-a864-073dd2378e31",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4fe11c22-86ce-4d9e-9c22-f0117f26949e"
        },
        "item": {
          "id": "417f077f-0ca1-4a77-8941-c79f9f5ffb33",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "07443d96-95a5-4d0f-9ddf-fb395c0f9c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c679912-606d-4da7-9cb7-9e10a2fe8067",
        "cursor": {
          "ref": "725dc6c6-4b9c-4ed8-b698-48d6eb5a0c3d",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c61dfa5e-5064-4f10-bd7d-453ac7622eb8"
        },
        "item": {
          "id": "7c679912-606d-4da7-9cb7-9e10a2fe8067",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3519f340-c598-4e9e-a435-362d24959640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38acb71a-7847-4aed-89e0-a46534d4f8a3",
        "cursor": {
          "ref": "c636267a-9f19-42f3-a904-b4ec8afa2288",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ba19e742-20a6-44e6-8972-54cdad31a189"
        },
        "item": {
          "id": "38acb71a-7847-4aed-89e0-a46534d4f8a3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "378221ab-bc03-444f-98b5-0df1fa988a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926a44d8-8a56-45ba-b214-cdef695f618e",
        "cursor": {
          "ref": "01e90f95-a142-4c3c-ba5b-7c65170fc7f0",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d083b2ac-eb7c-447a-a201-93ee61213226"
        },
        "item": {
          "id": "926a44d8-8a56-45ba-b214-cdef695f618e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e64486b1-521a-47f0-b85e-63e1e38256fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982a208e-0003-42d4-aeb8-0911bdc6b95a",
        "cursor": {
          "ref": "48a24d20-6054-47c3-96ad-d863e7cd3f55",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4f9cbca7-4243-447f-ad93-b64117490594"
        },
        "item": {
          "id": "982a208e-0003-42d4-aeb8-0911bdc6b95a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cdf49c44-e2ef-41e0-acde-648438a6e3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2b6719-1be6-4f23-8e1b-8ab09658f926",
        "cursor": {
          "ref": "6b7a42bc-c3ba-4374-b85d-7a0d06d04c52",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "afe1bd26-948a-44c1-8bff-66cb5784648a"
        },
        "item": {
          "id": "9a2b6719-1be6-4f23-8e1b-8ab09658f926",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0196e24c-9cba-4236-be0e-786100529d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26e5688-a877-45fc-8b04-8ff4d44f7690",
        "cursor": {
          "ref": "2b781b98-78ca-4735-bf5a-6b7dcc9879db",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d6a3fc7e-02ac-47b5-8dda-ec11ae1cad52"
        },
        "item": {
          "id": "b26e5688-a877-45fc-8b04-8ff4d44f7690",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d22b2d00-54f2-4cff-936b-ce3988c934b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ee35b4-113a-4571-8dae-111c8cc18c91",
        "cursor": {
          "ref": "4fe2d713-b2a9-4639-8dae-5283a0ec0840",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6a57d34e-3814-4f69-85d1-540aaa999287"
        },
        "item": {
          "id": "49ee35b4-113a-4571-8dae-111c8cc18c91",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "15aee55f-8320-441a-ad65-520bf536b93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee6a99c-ca36-443e-9dc2-9714fde7e265",
        "cursor": {
          "ref": "e4563172-8b15-4e21-9a7e-9e6b13275483",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9b5ee837-adc7-43be-9c21-e61892070c35"
        },
        "item": {
          "id": "dee6a99c-ca36-443e-9dc2-9714fde7e265",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "78d7432c-043f-418b-8902-97522c570af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4492b4d2-fa6c-4985-bcae-4005c4878d6a",
        "cursor": {
          "ref": "8f581b56-cb2f-45a2-a1f9-81c6dd9d414d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f69be4ec-0c12-4a50-b8df-a9ff6e3ead54"
        },
        "item": {
          "id": "4492b4d2-fa6c-4985-bcae-4005c4878d6a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2f5c59dd-ca07-4ed6-9559-f2f6b077fa7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02d741b-09f3-435c-982c-4bd10927e97d",
        "cursor": {
          "ref": "04983b01-c258-4cdb-90d9-c79dc385797f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "40913759-5185-4ff4-a8f7-88ec252995cb"
        },
        "item": {
          "id": "a02d741b-09f3-435c-982c-4bd10927e97d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9c052137-0266-4bad-b8a9-e40d8ad6f03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af61696-e20a-4488-8e54-dbaecf8f3fb3",
        "cursor": {
          "ref": "b398873c-ffce-497a-bac4-5fa8bbc7cf44",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "46ec82bb-8af0-4f8c-88c6-193440e8bb5e"
        },
        "item": {
          "id": "6af61696-e20a-4488-8e54-dbaecf8f3fb3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "07b269b6-2829-438e-a176-e1d517ce9678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0448df1d-9a92-4551-866f-b2f5e9676c5e",
        "cursor": {
          "ref": "0d905338-30c3-493c-af85-cd3f2e470fc5",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1f15a7d3-4cab-42f5-a406-90998a6755ed"
        },
        "item": {
          "id": "0448df1d-9a92-4551-866f-b2f5e9676c5e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "45e278fe-a58a-409e-b2a9-72ca6eb84fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12172de-b899-4873-8a8f-e1be065ed065",
        "cursor": {
          "ref": "b4810124-e788-42d2-a20d-c6718b8cbc21",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "769c827a-6495-44c9-8717-b6981253a924"
        },
        "item": {
          "id": "e12172de-b899-4873-8a8f-e1be065ed065",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "245a86a2-8a3d-46e0-9954-dc3f5b65aaf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fe3381-ef63-4c92-b05f-c33c501f5115",
        "cursor": {
          "ref": "1f3ca3c3-b312-4267-a172-c5daac894347",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "991d2595-2c87-4817-8dba-af127a89c5cc"
        },
        "item": {
          "id": "42fe3381-ef63-4c92-b05f-c33c501f5115",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "03dd2beb-e984-4889-9b29-31180a7ecc12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedbcd13-dcde-4ad6-a102-04d04aa69957",
        "cursor": {
          "ref": "a199024b-a9bb-4464-bd40-a656e165c9c5",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f20dda70-4f7d-48b4-af25-55adcfa0f8ef"
        },
        "item": {
          "id": "fedbcd13-dcde-4ad6-a102-04d04aa69957",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1dd2fee4-e638-4fd2-b490-0211c199177c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64692c21-3427-40e6-ad65-7f670bb3f29e",
        "cursor": {
          "ref": "5909d657-ab15-494d-8881-9eca207b531d",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4f0c8eb7-fc04-4d26-9020-922148a1dc78"
        },
        "item": {
          "id": "64692c21-3427-40e6-ad65-7f670bb3f29e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1b9ad2c2-ec6d-4501-bbef-fd738625fca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ecccdf-2cc9-4d1d-85c6-5c374bcb789f",
        "cursor": {
          "ref": "cffa3a76-3ff5-4e7d-963f-d1486dd2762c",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8a03c8ec-2799-4b7d-b2a0-2f547857187f"
        },
        "item": {
          "id": "d2ecccdf-2cc9-4d1d-85c6-5c374bcb789f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "43fe4f43-875b-439e-a025-177a5f66f803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22660426-c95e-4950-b45a-2b8511af7584",
        "cursor": {
          "ref": "16a84099-b40f-48be-b1dd-6bf582b10325",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f227788c-5b7d-49eb-9570-2b87c748ce97"
        },
        "item": {
          "id": "22660426-c95e-4950-b45a-2b8511af7584",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1862e86a-5349-4fe9-b0ec-947c0e1a1c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69791895-4026-4910-8d4b-1f6a0415d43d",
        "cursor": {
          "ref": "fa6712bc-1709-4ae2-b851-b64fb1e80de5",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a0ea6cf4-9f3a-495c-8fb4-266f7690eeb1"
        },
        "item": {
          "id": "69791895-4026-4910-8d4b-1f6a0415d43d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ae982af0-6d07-432f-aa92-a180048b5f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c13b96-d87b-466d-a7de-1bead97eea50",
        "cursor": {
          "ref": "0876b6b1-62ea-4637-a8b5-54c7fbc552d2",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e0f38499-f706-4cdb-98d4-55db5cd7b8f1"
        },
        "item": {
          "id": "75c13b96-d87b-466d-a7de-1bead97eea50",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a909caa5-556d-49a1-a1a6-956c29f6976d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24fc099c-8f3e-482c-a3d6-34bf4fb2188b",
        "cursor": {
          "ref": "a58b2886-8983-4063-a5eb-f17f62c9eeb8",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9c43168e-6788-411e-82f8-8e0973820d74"
        },
        "item": {
          "id": "24fc099c-8f3e-482c-a3d6-34bf4fb2188b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3410e953-5284-468b-bb78-3836f05d753b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d54dec5-4d05-4c11-96cf-b367d8ef817b",
        "cursor": {
          "ref": "e51d0f53-acee-4526-b13f-517bbe028ca3",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "3bccea38-4986-43f4-b958-f43c2e8a6ee7"
        },
        "item": {
          "id": "8d54dec5-4d05-4c11-96cf-b367d8ef817b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "df09b929-7a4a-4275-acd5-e8ce1a1a61d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0046424f-38c9-477e-ac5c-467ead235a75",
        "cursor": {
          "ref": "e350ba74-48b9-4e6d-9d4e-523747bc9881",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "81f9ccaf-7fcc-4349-9047-e17028db7489"
        },
        "item": {
          "id": "0046424f-38c9-477e-ac5c-467ead235a75",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "000ed494-4fff-46c3-a47d-4c642db7e77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b013ad42-7cfd-490f-bd17-424774bb5b06",
        "cursor": {
          "ref": "d40eaf9d-9db6-4ecd-b353-076e02d37468",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1ddd897f-d98e-4a2c-be14-016c8d164c14"
        },
        "item": {
          "id": "b013ad42-7cfd-490f-bd17-424774bb5b06",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cb6b85ad-5b72-4b02-8d8a-7d9c62e40d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ced303-af32-4229-a9af-fb5a33edd8cc",
        "cursor": {
          "ref": "b8dbc4b0-5c3d-4bd0-94e0-6402c3846957",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "60474ae7-df9c-43f8-8efb-33fd7b8f6d95"
        },
        "item": {
          "id": "b6ced303-af32-4229-a9af-fb5a33edd8cc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "09f9ce28-722c-4f4b-b937-21198063951c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bc03af-0ab3-4ebe-9783-48fb5d69580e",
        "cursor": {
          "ref": "06dd2ab4-6d98-4432-bd48-5a44044a24ee",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0a9c7a0c-1511-4810-81ee-a06f139ee7b3"
        },
        "item": {
          "id": "86bc03af-0ab3-4ebe-9783-48fb5d69580e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3f12caf8-b104-43f9-a328-68ee442c2995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38e4200-3812-4e0a-a5e0-f0da6a4bbb3a",
        "cursor": {
          "ref": "5e82bd6a-8a63-4327-8337-373afd7cb82b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0b794cfb-6609-4a8a-8f67-568bc280eeae"
        },
        "item": {
          "id": "d38e4200-3812-4e0a-a5e0-f0da6a4bbb3a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "058239db-d1f4-4626-9fb3-f52c4ca999ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7683628-09ee-495c-afae-bfa1b91ae253",
        "cursor": {
          "ref": "79ae48c8-c671-4b21-885a-8a40cbd7befe",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a080293a-e33e-4ca7-9c72-89736949f715"
        },
        "item": {
          "id": "c7683628-09ee-495c-afae-bfa1b91ae253",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e4a6bea3-63c7-491d-89d9-12a52c75aa51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "3e4b3bc5-2ea9-4f05-b524-ce44a007ca6c",
        "cursor": {
          "ref": "55f6d0a9-6644-432d-8800-15e0c705fb84",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "adcf5d07-fa8d-41bc-8a86-a4c7d8dd038d"
        },
        "item": {
          "id": "3e4b3bc5-2ea9-4f05-b524-ce44a007ca6c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6d2af602-5dc2-46ed-9e45-c367ef4bbfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "e485c908-b3f7-4122-96f1-b32536b67013",
        "cursor": {
          "ref": "6c3842bd-4d46-406c-85ae-dfcc776600f5",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c00ec8d9-0568-4f4e-8233-30983bd8245a"
        },
        "item": {
          "id": "e485c908-b3f7-4122-96f1-b32536b67013",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c4abec89-8fd0-4431-a102-3add0b23dedf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "92e151f0-52c8-4558-91fd-178bbce03bca",
        "cursor": {
          "ref": "cc3ad385-a1a7-47bd-a20f-0bc854381dcc",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a76e8e38-ec8b-4c9d-82f6-6f22c702672c"
        },
        "item": {
          "id": "92e151f0-52c8-4558-91fd-178bbce03bca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4ae8587f-d542-4088-93b3-834ccbacb53a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e151f0-52c8-4558-91fd-178bbce03bca",
        "cursor": {
          "ref": "cc3ad385-a1a7-47bd-a20f-0bc854381dcc",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a76e8e38-ec8b-4c9d-82f6-6f22c702672c"
        },
        "item": {
          "id": "92e151f0-52c8-4558-91fd-178bbce03bca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4ae8587f-d542-4088-93b3-834ccbacb53a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b9350c-1f6f-4900-b2ec-97f31199d7dc",
        "cursor": {
          "ref": "47569f66-1a44-4cf9-9cc0-f09617e26a52",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a504505b-b816-4fad-9f2d-1c400f92ce06"
        },
        "item": {
          "id": "75b9350c-1f6f-4900-b2ec-97f31199d7dc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "70c9d5e0-8317-4abe-a82e-a2e9900232b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460b5484-a7f8-4a66-9b1b-16aa47b923f9",
        "cursor": {
          "ref": "ccc3b202-2171-4e49-97b5-dff065f709df",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6f3f6f76-0b89-4767-a9e8-af24f55ec094"
        },
        "item": {
          "id": "460b5484-a7f8-4a66-9b1b-16aa47b923f9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3911cc47-d2f0-410e-a4f4-8ed08e7f803f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}