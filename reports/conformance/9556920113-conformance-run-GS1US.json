{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9dda045a-d3b5-4dd2-8baa-a7e1c8799ed0",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8f87a16c-9dce-42c3-81b8-734cd90b8cb1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8e6ec266-6e3a-4ca3-8ce0-2813c309ca1c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fdb5ee22-5f2e-4422-9ba9-a6a8e190f53a"
                }
              }
            ]
          },
          {
            "id": "09647b0a-3008-441a-9b19-da85c27d6ec5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "de6b1468-ae22-4921-85db-fd1cdbc0787a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9f701474-f67e-4375-9a3a-6312e9a0dfcc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "be07921b-db10-4529-b652-03a4ecf4ecdf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9afa48ac-3882-4b79-808f-853a2ebf6974",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d0eb4c2c-47cd-4215-a4c0-1c8851681bce",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97ecbbce-351c-4bd0-baec-49e0e622b09e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3df989e0-1daa-4d8b-9c12-9ed2e7aba6ae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84406447-b9fc-40ee-a8fb-3fa1f6ad6d76",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "581d5f2d-b0be-418c-ab2b-ec8605d03989"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1dc1db4f-7c72-4418-ab61-4f962096ebe2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7c3cb3b-1ca2-4fa7-977b-f6e062ecedcd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2330a5c6-6b04-4771-9bab-5febe271a8f4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a8dac4d9-16b6-4a05-9a9c-000e762ed8e4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2e1665d-a48c-432e-aa55-975947278b4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "27bd4ad8-7d5b-4693-9cac-9e4efc0be698"
            }
          }
        ]
      },
      {
        "id": "b21199bf-f6e4-486e-ad09-f44841ec0181",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "93354513-dc44-4b6a-b1b0-8f68762ab39f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6f214476-c0a4-462e-94b8-ba9e1d7f694d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cf050cfe-41e5-444b-b9ca-216c99e5a0e3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc23604-a007-4b45-aac1-fdc72ca40bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f84111e7-e083-437a-bb59-623c25596bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc8eeb0-3cd0-420a-979f-59b8fdba1135",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2a6ca6-447c-4139-8645-3d4200e40a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49f32bf6-c53f-4b7d-b163-28f6dee0e359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8271a62-ed48-4390-ae89-8ad3a2d2df6a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a528cd4f-67f1-489c-84e1-e46bf87b2683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab15cc39-ea06-4cc5-9990-5d804df41993"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a5a4f8b1-0cc4-407c-b9fa-fc28c3a4f383",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bd47b523-d2f5-412c-983b-1ce5b4cbc584",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3807960d-a4c7-4fb7-9ffa-76249d6f948c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59feeae1-5b16-4a02-818c-e4e5448b5031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825e5133-daf0-4d52-b75d-056e7d1e26a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9139decc-4705-4473-8417-8b4a3e64672c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "98accaec-31a5-4b49-9496-5af553870bd9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f13afa49-0cbd-4102-959f-090590b90805",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7d8640b-702a-4954-95d3-93eb24a58787",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d7dc0c1f-60ae-4600-aa07-8ebe84065287"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8ed25e9-ce69-470d-9181-ad61ac0a9bc4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bb2681b3-32c1-4d86-a5a2-922e68478941"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07db0f04-0104-4d90-868b-9fca3a6d75d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8476d29-6187-4aea-b0aa-c2cbf00270fc"
            }
          }
        ]
      },
      {
        "id": "dc6e0c08-0937-4944-b00b-76ea9aa2e26e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "28888a80-eb0e-4455-b34c-693dd2b2a24b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3208d211-c9e7-48d1-9762-c95d89e80a15",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4cf2125a-6b60-47f3-8a96-12d4c2fea49f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a944a6-53e9-475c-a745-8b265d0b89ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794b6399-049a-47fd-8ce7-1fe5a020b7dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7b7a69-8d40-42cc-92c8-8d9c2f8d8d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04005999-7a65-479a-ba24-61ad966becfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6478b449-6f38-470b-a936-b410e1f69d3f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd42f7b-a12d-48d6-a8ad-01c122876ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eafb0662-c79e-4aea-a09f-54e182b6e14f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b04e009-c288-427e-b917-76b189257f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07059cb5-bd89-4968-bd16-4cc1251aae87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956ffe46-2e66-4642-a690-6a5ca87f80d7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d8e036-ff65-488b-b821-c65855c2e16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ee6e32-e45d-48b7-aadb-3fa072898f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b3d613-76b4-45ad-ab68-82832b970705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5925b8b-acd5-4a65-9bad-4f0d16d843ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a594ae5-97ab-4b80-83ae-253e6a03339f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55f0762-5022-4053-80a8-a54a0738a8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d030a453-ddc8-4f32-b668-5939d59ff8df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9582f074-d901-4b10-b9f7-11301acde2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ed0cfc2-1460-4812-af80-128bc754a220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b22f7a4-54a3-4c24-9073-c55fe9295801",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda1c9fa-e92e-4444-af24-135a6a384e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4f1904-bae9-4ba0-a3ba-10fbdceaff2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799da5ff-a244-40e6-ac25-8d4e024836e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "482262d5-fb2e-4004-8bce-82342d87efaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76eacf32-09a0-42be-8c09-c9312fa116af",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b8c55d-f908-478f-bf29-5d359f274bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a9d6eff-b41c-4c23-b030-02ae7b111a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c318518d-5c18-4e44-8cbc-96c98d286eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf8540ff-d0d4-4d9e-8bf9-5335a6c673b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3a8505-8532-4028-bc57-2b0bd87a516e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37576b72-cf7b-4e7c-a3aa-6b53a893a1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c884568c-74a8-4432-b4f9-b773a49c5b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9310a0a-e95a-429a-a3a5-64686834842c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1292f5b6-2a29-4a1d-a2d2-44d339202e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076eaad7-5b5f-4166-83b8-ef08b6c308f1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dd20c3-d848-4f62-83fb-d5e0bfc3d200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42ab84c-5f98-46d4-89f9-1ab7d5d77523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240f0713-4fc1-4fa6-ac38-283bee497492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "385700eb-e983-4da1-a310-a1f1f856bd36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de3dc5e-01b9-453c-b4bf-242fed4261c4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd43c9e2-beea-459b-bec4-6235f99bcbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8168e8e5-8711-4412-9a79-fc9cbfba771f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5def86-bc7c-42b6-94a2-bfb95c482351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3aa203fa-8483-4c58-b8a1-fb1b964caaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39a15ce-f74b-4a07-8ac4-e1df616ac9ed",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3baf575-c26e-455d-b315-47e478c3b2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e7697a-a908-4a42-aea5-b6f7cf887ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b14bc0-84f0-4ca2-bf73-082823cba73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5bc68fe-1c53-4b6b-9255-9e6b0098b276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70994b6-1fae-4c19-84a6-2b304a3b1acb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078cdc0b-0e89-40cb-8258-ac9d6509929c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa75745-abcd-4256-bb80-8dd557636030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b8771f-4d78-4cca-95bd-e7580bdb2955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ac04e3a-37ca-47ee-af02-a96d5d8565f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0934c143-92f7-45be-87d6-cd2f2ed95ffc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf5ca74-4826-486d-a151-6018e17a5695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f687a692-b8e9-43a6-acd7-59f29ec70c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ce3c0f-8200-412a-8a58-6e21b606666e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93a77ff1-c9d5-4181-b7f5-1d381c7970ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25a3d86-f92b-4cf9-a78b-00c433589ada",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc6188e-ad94-4063-8076-e634c9914d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d340fd-758e-46c6-9833-f3850625f28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62a7f0d-2ec6-4d65-8433-22b6e9914d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4a46e41-145e-4513-9077-00937ca8b105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e204db66-e66a-4450-ad51-b434ee329b9b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8bf027-f48b-4e92-b30a-5b28c012c1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0e383a-add9-4114-b745-cf152614fe9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69415488-a8a0-4eb9-bda6-0e06a57d37af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "877fcbff-f748-46ca-a49f-10d657102e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eeba533-7ce0-4c5d-885b-b77314d3b5fe",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa9cd3e-bc9b-4022-b633-84484bea0137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2bad22d-587a-439a-bb54-19000f4089da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239ef427-3dbd-4da7-8f75-0c170aed38e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db482010-accb-4044-85ba-73f24a1cde72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6db0f4-9d9b-4ae3-9f4b-19b825ce9ac6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5219f07a-f283-475c-ab1b-2320471d3ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158bc0c8-a335-42f1-84d3-dc018d2d8dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8f65f9-8aed-4e52-9ebd-4719b8995302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc31a1fa-0818-403a-b68e-40b0c36b7803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f560bc55-85d4-426c-b4e1-e2f2aad57911",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbe7ffe-293b-4b0b-8336-b46c78bbddb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d426ae-88e8-4b9a-92a1-a0e2c140bfdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b226a8-0160-4ffa-adb7-eb8e88ed03ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f4eb35a-ffff-48bc-84e8-c2c91cfb3ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc5c639-2d81-45c9-98ba-d38143ca5ae2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78e09d8-3fc8-4c55-b26c-d1adb1a05eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "459dff12-a59a-4691-8db9-7ba9e1e2f867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d8af27-76d0-4168-9b67-78e7b1f808a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "25cbdaca-e3ca-47dc-a41e-c467ef884c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae54027-9b29-4713-bdfa-2a9b8fa8c544",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc4ae82-106d-495d-880d-ecec02278b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b6a19c-f2d5-4680-9045-a4d45c1d9b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eab5a1b-174e-4b27-b153-758f9b542ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7d6246-787b-4eb7-a5e0-981bbcdbc31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fddda4-8764-4ad2-b5a9-227516f360fe",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710586ca-8367-4398-98e6-0dc0e51475a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4de8b17a-dd55-4bf9-b3f7-a10836898f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5791c4-1b39-46fe-8e72-7856e26ad057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceaa8caa-9634-4b2a-8bd6-78dc29eaee2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb859c03-145d-4ba2-a80d-d7b1fdf9bbea",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7004d10b-973d-473a-b72f-1c6bacab73a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58bba327-d91c-48d4-92e4-5bed52bea56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5376d8e9-99a1-4d65-afda-800fc8f73c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d68ece4-12c6-422e-b411-f9b6d9af8e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef88f89-7e66-4010-bd3c-712f18c1a0e4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197aeafd-98a9-4410-a006-a10991114445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c977818e-78e0-4018-a426-26af1c0628d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cfcf5c-0505-4327-809b-fb3304f0f356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37451763-de17-44bf-a06c-d2d186bb7975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7a1538-8d4a-49f1-9db8-df955fd88641",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "328230a9-c0cc-4cf5-82d1-dda4cf65c1f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cf88a1-f771-407b-ae59-bdce4242dbc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5768f00-38af-45d4-b12c-5750d0f33d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bf34e3b-9861-4a05-b182-0cbe4fa621d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53180c6-0432-4f5b-9450-560ac06e870a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3a6d35-3fdd-4a24-9d01-eeb58cf9f1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "156d17e4-243f-43f6-aa49-8f10bc4945fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c79013e-8e6c-4566-b64f-225e72bdfbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebc719c-5fda-4b37-9ebb-eda857be067d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c1499b-b43c-444d-85ee-c67009ad411e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442096d9-b8b4-4c16-9266-f7235ec163ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02055351-c5ce-4fc9-a541-393b0ad43a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f03edd-356a-40f6-9d0b-e009ca3b8f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "32f5be18-cbc9-49b0-bea6-fad64505d73f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a66e46-4dee-4581-bcb0-2a63db9d5569",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9c2241-70b2-4a1c-aebd-45c9fdf31932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534c42ae-db81-493e-a57e-ff3e2fb8e2fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c83a43-b1a1-42af-adda-2260322ddbca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a61f90-c307-4bae-baae-fce0f321beb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4579668e-b0e4-4e32-9a29-65519d891e52",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125530ee-f17e-4c5b-a1ff-e803afd3c3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11f5916-9304-4ef5-a660-1c4d95b81245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c992326b-0778-4245-816b-67498f98f7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "25d3ecd1-f66e-4ae7-b979-a29c616fd1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd82d593-6f5f-4c8f-8c64-f679ea1b1684",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ec34b06-0ccc-431c-b6f8-db01539e5f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c2b132-5a41-4f04-887d-b4ca0bb7664f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9b0746-7a48-4455-b912-b379c4ee801d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff144038-0d55-4560-acc5-a541e9b21970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29943c3-fec4-4ad6-a48b-d625cb30b0c5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bdfb121-e2c1-4542-b044-d7b62b311d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbf8604-b8a1-4a80-905a-d684263a4e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9079839-fa25-4ab0-96cb-db160047f028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1130ea4c-e8c0-4fb6-b52d-d0407ae8d0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf12e229-d61d-445c-837f-0397bfc67c13",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ca8e92-cfb5-462b-a2bf-6cc6e1f77b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736c9075-5b4c-43f4-a38c-e2df5c58567f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f1d482-8d4b-4e52-a209-8313c0cb2f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "71a84d0d-dbbe-46f2-9152-8fac3562a949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022519e3-5164-4224-a291-81677001705b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0108740e-6036-495d-963c-a881e7110da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51cade48-fc67-4c87-823a-6b122280f6e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a5e7d0-547b-484e-9e05-575b16a6323d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f21447ff-1106-43e1-a31f-f6ea2586943a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57827fd6-7e6e-40b1-b482-c8bc3d4e194e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55d8d0a-f0be-4f07-9f9c-6d16e3b1c14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0236d52e-0c48-4d49-9581-9d13e52ccbe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d8fa86-49b2-4dfe-8bae-28528d90b13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c146a30a-3a93-4ef6-ad2f-4a8c32658078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae30984-b25e-4cbd-a764-414c54645d2d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174a0ba4-afb6-47e1-ae84-7af7c586972f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0bdc7c-9b84-4243-ae27-f823ce0ee96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66cf75c0-a30e-4fe6-955c-f8b8ddad977a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40f0dfa4-80e8-4525-b01a-2f7b43411db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e972308e-eae8-48c7-81bb-2ed15b3a21cd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f662a4-1429-43fe-956b-f98f9fa9d6ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52a69bb-c54d-46c1-8463-7765a78f44df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b260be9-68f1-4b3a-95a2-ef73e7578f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "afcd1387-91f5-4f46-811a-cef1a03bf263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5051cd-c97e-4859-84fd-c738d50d5900",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e01f7ef-b1ba-433e-97ce-4c3bf02f49ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f9aa61-67a4-4c4f-a978-bdaea751ce7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73acafe7-0c84-4783-a652-f05387984d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cdc9f5b9-432c-4d76-8b26-730d2cb8e8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ccfeb8-2bda-4097-843d-190dd9aa8d74",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22c9422-2560-4e0a-b325-e9b3bb14d918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "129461c1-5bb0-4201-b8ab-dade1c4213ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1903d6d-f00f-472e-a8ac-3897317df446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b4dbfe8f-7ff2-464e-a8e9-87b2d27bea88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eadf825b-b553-4b52-aa30-329c865e0a08",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa111b4-e935-4228-a9dd-070e9d68c86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b96cc4-09a3-4e1f-948f-da42c2d0ddc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069065f5-88e8-4009-92d6-ef618975acab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "79e0a5e4-e5fa-45db-81c2-66ac96f60fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a181aba5-664b-452f-8b93-1680e369d1cb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e513a758-01fd-454c-a520-702a552deab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04548f16-6e91-4ee1-9b86-dac7fd7943b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7662fb68-272d-460a-868f-4d643c2ada9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "df2ac51f-4b7b-45a3-b641-5ddc8b8473ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed38b3d5-e2de-47a6-9124-05e01aa7fb36",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcca59ea-0110-4993-8cb4-7d2bcc43f10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab8dffc-a1ed-467c-bac7-cc873829351d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9036ecdc-3ef4-4b49-91bf-34a74f12661e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "df3be451-1332-458f-a378-9d01de07ea40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a29810-5f9b-453e-8bb6-8d97109fd5c9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2949b52-32ac-4247-8545-7c6deb9d105c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f412cfa5-8152-4c8e-9aee-07ac92372ba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5f7498-3c85-441a-bdbe-7966ae8be793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "de8bbdef-a395-42b3-b2fc-0860ef2cd256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ef725d-eb0e-4504-a67a-edabc2ae11d5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d6ef72-6aed-4a42-a664-7591cdcd6015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0b6bce-a590-4664-acf5-f25eef907eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc58daf-c00e-45e0-8158-975f601dac31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3db70a-b589-4d9a-ab0c-dcd1116322c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814037c1-9e25-462a-b19a-e628ee595871",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a90ced70-6797-4bcb-b86b-62eb5047b3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4f3357-f382-4264-987e-c38be9bc2702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4aeb1a-7fb1-4a0b-806d-7fbef7e6e827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ce7273ec-b87a-4a2d-a0d4-02af46f16cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4e42fb-32db-4d9f-a368-9b9b4ccf5d6a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f09e0e5-b6af-4691-8050-cfba970e5e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6822bdfa-15f2-4f5a-a8ad-91245ed1d90b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2838c4c0-dee7-4ba7-a918-d57ca5aba222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2c398a-07cc-4735-9822-738c3e311384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef116fcc-27ec-4ac7-908f-502744d62d05",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2b5a0a-79d4-4b16-9c7f-a389a1662fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3ee791-45ac-410d-ac91-768bce1e118d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81baf06e-c31c-42ae-8926-608e55b1c1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d184ce5a-abbf-47a2-bc54-76c8d1e4be23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8a5c9f-c272-4e72-a769-d3ce7662369c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28262fe-e9e2-4ce2-87e5-20a20010085c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e58b0e1-e894-4cc5-94af-8659db868c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e28cf73-10a8-4d71-ae8f-24a2004568ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b296445f-c0a3-4c7b-a588-85588c2d2bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bd1964-d8fd-4379-8f94-edea644a675c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb301f96-200a-49f7-94cd-9a67029d530f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b64595f-e964-42dd-8671-a1534daf4ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb7bd7b-048b-45a4-92d7-7c35e40292b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cae6dfd3-e5c5-4a93-964d-e80246df51a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32827aeb-a30b-4f93-a425-c4bca2c8b1f4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b44b987-0691-4ccc-9d1c-63f56be99d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f701d1e3-6b05-4021-80c4-59559f443ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec476076-e2fc-4dba-b4d4-ae910615638d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36a4dcbc-8c32-4196-ada4-8dbb9036e73a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c5fef5-7986-4c5b-85c5-a265c7a8f927",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e71be3c-b8c0-4f39-be3c-1075117b3903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5f557e-b7d1-4195-a164-26d23defc3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59a4b60-ff68-45aa-874b-3a7988e76c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c1ed0df-cddb-4c3d-a5f0-4e38aec60c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9dbd3a5-4e76-40c8-8b0f-29e8b306ab0b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e2ebfb-279b-4739-b8d3-679240feae69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025f00a4-3aba-4b42-94ec-7351f2181bf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deeda9ee-fea5-4307-9e54-5cbd772930c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3911d7c5-afa7-4ef0-b07d-9a99a5acbf5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d53a88ef-99da-4a09-a504-1ca1c6ec5051",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9537b7-4370-47b2-bd2d-327ee5c8ce32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0dc4c00-78c0-4eb1-b82f-af6231ae0a0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e285d9ac-ac1e-41a5-b620-33546b0673f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d0100355-fa15-4c32-b1e8-206edfe57bb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b564d923-f2c5-4c05-8bd5-258ab7a84df9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "450b91af-83fa-455e-a260-291be9c11e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff004297-0cbb-4dc0-b161-c804b426250d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b05233-0960-4e3e-ab95-2cb91789247a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3940ad-78bc-433c-9f5d-cc670f05721e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fef18dc-faf4-4a57-af70-fbd521448ab8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42335051-49a5-4ae0-8950-4a5eeaadd40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17739c23-36c4-46d4-8653-a5d6cdd0a32c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52027093-d1d7-4f8d-a375-cfe54a9a52eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c34926a-0814-4773-a79b-b2d74d8bd346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2acae93-5169-4d15-bbe9-6bac858ee101",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d70b2df-39ee-4908-88c2-1537b380a890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42edf2ae-a235-415c-9dc3-271fa043bd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe67303-b904-49c2-a9f9-7a16ff7b0655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78ced22b-eeeb-4630-9971-4c1bcd9b242d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e41227-8a07-4c30-9a64-505b106adf85",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f68acc9-053b-46cd-aa6f-5daddd77fa47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33bc2212-f252-40e1-a431-94dede474691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99750f1-a1a8-4db9-bba3-3d6bf76a5713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa680dc-00bd-4c9e-a200-d9f3fae29a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90758622-c100-4e5c-99df-6664a7f72b77",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c04c234-6485-43ea-9516-8facf6cccab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3d5116-1dd0-4cdf-8c3e-ffcf291ff52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b534a69-354d-434f-a766-438a8562f1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b9369e-2808-42bc-92aa-0efe08f1cb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f1ef69-d7f2-433d-a42d-79a207cba658",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8de06e-fc90-4112-8338-a5ddad36900f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac223dc-f3b7-44d7-8d63-90284ffe1b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8232d00-715c-45a8-8420-62840e6949dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7c26e025-cbb8-4f07-832e-0406a5e0580c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe6daa8-e6da-43f2-b31a-fdb2fc8a9fe9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c70dac7-3dd4-4126-b060-aa0219ac8ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3f738c-9b87-4c72-882e-36757b6380f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c666dfc0-9d72-45b9-bc57-6d80120ea67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f673530-5ed8-4a7e-ac93-f510999e560e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9862a56c-4ec0-4fe7-8d3f-d45a6682d016",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c8b961-ab69-466f-8eec-95615946b1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b3d2ed-9e99-4832-8245-ce14ee145a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7f03f1-60f0-4df5-adb9-5a1f9a1b5fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b297c757-f514-4180-bc0e-e9152cf09cb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dabc956-a186-43f0-8f8f-092da12d9895",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdaf5d2-50af-44d2-aa32-bb094aaeb050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8889864-49ad-43f6-a452-c0f3efafffe8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcae4ec-f003-483e-ab45-9ae1fcdb3611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d128a01f-44b4-4f1c-afa3-4cb963cc2e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c742f2-e2b7-470b-b498-98166c05c29b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffc6bbb-835d-4fdf-9b4b-df5e62a63f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20070bb4-7af9-4dc2-b2d1-2e72b95af683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59212642-772b-4ae4-956f-692f4f29187d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "78697187-9c0d-45ef-8985-7ccfd08f88c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0806f45-533f-4750-bcaa-874679e4136d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4659fc85-2cd1-4f2c-9140-5806be12db9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab48293-cc84-4d57-ac1d-15ee7c70b45e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8031821f-d261-423e-8a5e-c6e1bf72dd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a48468ae-08ac-4eed-9cef-9e6baccfc4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da8e793-fb7e-4346-8fab-f0341c445db1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397aa36e-90a3-4169-acd7-48a154c3b557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4494d57d-90f1-4fb4-9625-1eaddedc6925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b60e38a-6930-400a-a219-ecf904c84e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff678c3e-1dbe-46c2-8e6e-adf5cdc33c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f182b56c-94d0-4cab-b7bc-7f7b3c025560",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99773ae1-5542-4809-9967-bfa1709feca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8142b92-a934-4ac5-ad0e-49dfc05266f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58099156-7be5-4655-8d86-7185deed5b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9284e56-d529-4724-9669-b79e7c29501a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48258e99-5bad-459f-b7c6-d9130292939d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d16abccd-f127-4c81-9b25-90373e4b6467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cc6baf-46b4-4356-a90b-05b36e51f1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3a50c4-85cc-46cc-9031-06f668e603f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6102c9-9b27-41ea-bf63-3bf6246cb16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53800341-732b-459e-aca4-f04be5a1b78e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3359fb57-3194-41d9-a2de-293a9302b1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82018881-da2c-4e20-a9b8-c0560e974c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b26217-437c-4c4b-876e-f33b196daa33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6118020c-7bc6-40c2-8f4a-6499b1b5951a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c936b367-9656-460b-ac0a-df4dac6861d2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed269c5-7005-43fa-b63e-a0869856d4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1d4f20-6547-4ac0-8efe-bc0d2aa9b2a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5291b13-bc38-46ca-9630-1a48369ef2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a648c479-c69a-4a53-b1a9-116e9e68c3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83982e3-b039-4b1f-b652-1bba5fcfa3a9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1754bf-54dd-4fb8-85ba-9174447c8bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c073b32-f1d9-4766-ba10-3b977eb2cf23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d93fce-a17a-4e46-b5fe-2149ff80b30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7630f3-2fd6-457e-9161-1a3e2889984c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913ad611-ada3-4294-8af3-135ea2aa5032",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aab5851e-1881-4dc1-b8b4-5a3cff6c966e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13869d5-2612-4af3-97ef-9959d2c35d61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603ed8d7-0ad2-40b0-ba87-83a016c71320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a40c9c3-d539-4610-b79a-24e8238674b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9189a4-a463-49e5-be3b-5abafe45fc7d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660c1675-9782-4df9-8ec4-e56076fee28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbfefde6-780a-4909-a17b-a8ad6a5d3ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d468d30-9bdc-421c-ae5c-7cd724898f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "67323646-6356-4639-8637-8e376415b5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71210364-69c1-473a-9429-7e72f632c326",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5326a5ad-ccce-45f4-9a74-ce2666072649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97ebfa8-63ae-454b-aab0-e0f82f6cc689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969eae1c-8fb2-4afa-980a-15fd5654208b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2077525-d338-4701-a0ee-ff261f58e676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe51525-bb3b-4d63-a900-020aea348d88",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770b24ae-24aa-4212-9009-51d903f9beb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8865dd1e-2712-4658-824a-fb78420a2cde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c7b7be-6ef4-46ad-9f74-796d7e6a464d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0dd6e42-ef3a-4aa4-b81a-461e3639133e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5bffd8-57ce-424d-8b6d-459bddb6b7a0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5c7e62-087a-4560-b9be-ab2fc92f9bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55178502-9536-434b-a4e4-9365e44de01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99dd4361-9155-4b5e-8fef-17172d550ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7f3b7eb-06ff-4826-afaf-d9cb286ee32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115aaa31-382d-494d-bcd4-e483fa7dcaee",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c90af48-5955-4039-94d3-e15940e04cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2410a249-2745-40c7-b305-cf0c24e28c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622d2b27-113d-423e-b278-12895c14ebb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9395d1-10c8-44be-b90e-85724c98ccbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fc3877-5628-4885-963e-41759e663b50",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b790837e-30c8-4f73-be9a-d9eb9f9c22b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f221a0d7-135c-44bb-a37e-4c13ab143b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda3b314-cbb2-4c46-bd47-b997d63ebbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1fee12ef-6ea1-4fac-bd1a-8a93201aa3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01c1ca5-c6a3-4860-93d0-d78c18d1dae2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9660b3b7-26bb-4791-8fb2-2abfe22d73f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab9c2e1-ea1b-4d84-997e-6323d3be6af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df00c702-0033-44cd-a67e-e4cd0141053d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bf5508e-b854-440f-87cc-2dab1fe2c826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82ccc92-9844-4db8-9e71-9f30635b1dc4",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fc8669-d9dd-406f-a6b5-b48023469752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256cbc3f-90e5-43d9-a42b-11a447bde0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac21986-0aae-4d66-a0ed-b9ba2fb7b5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cab966d-133e-43ac-a898-14a6e77acb5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e14deb-4269-48e4-80aa-4f5216b80a7c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2647964d-987b-4538-91c6-8f54176a51c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d37a9fc-ca2f-4928-a2fd-ffc6f046965d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be12799e-5072-4649-b054-e1f1b18ca64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "055f95d4-99fe-4ad6-8191-85e87887c8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bb07a3-1ba9-4a0c-a67f-88eab5f95841",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301dc88e-db20-4bd6-9117-48f3429b547a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b820d0d-dd98-4eca-bd11-e95b81851983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6830a6f3-5b99-4334-90ce-a33fab06cadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0001ce9b-8a2b-4a77-9c57-1d23a7d437d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c6f46c-13e3-4535-be4f-804c36797582",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b242805-718b-41f5-9952-3da0334f0647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995fab18-fb58-4fea-ba3b-4de12cf076ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d95b719-277d-40f8-8471-b99a17cca5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fb91256-d4b2-4c34-8392-782f57de345b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8350172-1bdf-44c9-87a0-13de2ef72702",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe37664-9ceb-468e-9b0b-d49a7a2dc2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a5e461-0dfe-409a-8e9e-388aa679a6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a178402-06b0-4daa-accb-fb751aaf4a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5c0be9-88da-460f-a687-3018caafcd87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f585dbd9-6fed-4aba-b33e-83acaf2700b3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0ea23a-b9d7-497b-b037-159e06fc1d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ae5335-3de2-4708-8da5-75c9d0d286ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7937cb84-7c0e-484e-b5bb-23d6839ce76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "141e7e8a-f766-4d29-b517-8a506129ba2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d05900-26df-4336-8c11-913a97ecfe10",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f12cbc9-b509-44fb-84a9-1d767497f782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fd425b-1a28-47fb-aa46-5048345610af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd4b5a4-7b42-43cb-bc84-883c8d56c35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "419bb9c3-08d7-4f3c-9f77-fbdcf8c26a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5526c74-e6c7-4d7b-8d13-13829b20d7cc",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbd890c-0337-487b-a933-a11d019204d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8eceb91-f47a-4de5-b88f-e767ea46fe00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c169ebfe-2330-4074-b84c-6471536bae97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "365255e4-14f2-4161-a61e-30c521677fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfd4ca0-ecfd-4af6-9e97-c63a3b8c45c3",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37021ad-8f7a-4863-b801-613f1055d425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f70a467-1bf6-41c7-abd8-6589c3e4285d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12d3cae-a1cf-4f47-a33b-45be556ada7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a77fb01-6e8a-40e3-ba4e-ee7495f7dea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5e4a23-2b7b-4c0c-9589-5ca22f35e0bb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b336be-626d-4f53-8aca-5f3216f34d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f52da1c2-006f-4b01-bf5e-5003354f774f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0876253-e5c5-4e8b-8fa9-fe48743a51ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b0bcc3-667f-4d38-8a20-26d84ee2e0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0293aa0f-4ebe-415a-b701-16a59069ccd8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892a147c-2cab-4a5d-8080-7a7503be59ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64935cf-41e2-4b5d-b804-b647eb390a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7edd4f-d9de-4ad3-aef3-09544af98784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cceb54a6-1d18-47aa-a65f-6c575168c976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e532f2c-3b11-4eee-aa1d-06f326bc839d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e43400-4287-4e8c-bb44-d42da4e4ee0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2411d8c-a233-47bc-88f1-0e630637f9d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ba2c22-6cab-4879-a781-0b96f01895bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd0e0380-a310-4c66-9c95-d3cc2d00f15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a948ce-ec5e-47ca-ab2b-9f1055f445a3",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb202576-ea9c-4202-b570-38536dd89df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9395cf0a-870b-4905-813c-0b5519cfccb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc337e02-2639-42d6-9291-b8e07a41a12f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e64b85-1c93-4d3e-acb9-d5b5623f56d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e413d1b7-81a8-415f-a792-80128052f5cb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437ab7f3-6c78-4b54-8cc5-8be2b945dab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3162bac1-b3d8-4edb-bc4e-452402a0b34e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22adbeb0-7761-4336-80d2-626d70f3ebe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc5b4176-b6f6-42a7-b4bc-90b515d70aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1801dda2-c4db-4b87-a187-88cbfaaa8406",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6b532f-639a-43fd-bc41-5af92ad8367b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54d9c3e-23bb-4d35-95de-77eb7414fbf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcdaf53f-fe9e-432a-a65f-880a637c0d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2769a053-db7f-4ec7-8c43-7e07817d3a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af8465f-1c99-4e7e-8bda-7d63df383152",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cff976-887d-4e51-a67b-813c637ce7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3cf4f62-3aca-45e9-87a9-7fd4c995c08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac6e532-daa2-47cd-a117-e7e2c5a15e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "39e2913f-9da3-4e18-9458-fb8fb6e3d6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a558764-d8ca-4b58-8dac-c05da0ae8e5a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5761d6c9-ebf9-4d20-bd82-d690c6b6e645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b82b48e6-737b-42e6-b8bc-256f9af997d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9226e959-b6bd-4019-826c-5b1025356420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f39004a2-a19b-4360-8760-26cf48a13721"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1c37e1de-36bd-44e1-907e-2d1a397fe8db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d0b187d-3697-4ae0-96ea-05deee90b6ad",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd1c2b6-c338-4266-b0d8-56619a05b872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17d32b9e-5e57-44bd-8ef0-4c15b1c47746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccdfb15-0dbf-44fb-b472-aaab513a2b79",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3953ba88-2060-4bfd-97a4-ccce6e8214a8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78adc1dc-9bb9-4374-8390-e79f39befce8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc223b24-bc57-4411-a3e3-6451090169a1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fa41988-f7b4-4f17-82e9-e033a389d351",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "19b07958-c16a-4e08-a186-cd92bfecbadc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "52beb45c-29b3-4eec-b8e3-931b36014f6b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6565ffe-4941-4efe-ba49-05064af4cc01"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "79a38396-235e-4a7b-83af-bad5e52a1bd3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd3ceefd-8098-4725-8df9-89cc7a9d5e99"
                }
              }
            ]
          },
          {
            "id": "42acb1bc-1ae0-4d0e-a6bd-c1532b247ea4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "471c1edf-f752-4b7e-b22c-7710b89e90d7",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9a0c6399-aa0d-42a7-86dd-a6b9733f15cf",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d388202f-a6d8-4fc8-80f9-08fbd6c5971e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e0db3b42-f6e9-4495-8a96-a02af1f8c022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904f5470-afb2-4457-bdfd-e5f57d39d632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf5a9762-02ab-4a84-a744-cef61469cefc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e7d5ebd3-c55d-4b3b-b7cb-2852aa79e8b3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3834bb0d-4dfc-4f6e-ad8d-7e86dcc1ad9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "447f48e5-afe2-4ad6-bb58-78dffb08c893"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1a3b6e6a-53f3-4650-ba1d-6182f44ca197",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d340dd3f-9eb3-44db-8410-534e66a0ba1f"
                    }
                  }
                ]
              },
              {
                "id": "8a709335-3f42-4c68-9d01-19501541d5a2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9371048-0559-475e-8b71-8d2a4dc4f71a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "837e3bb2-d31e-4d27-8860-d6b355d28988"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b75595e-5ad0-41e0-bf3c-f4d8eb541214",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c9d2f42f-78da-4d1d-bd93-1c7274840c6e"
                    }
                  }
                ]
              },
              {
                "id": "0bc990c6-d8ae-49a1-8a7c-e418147d95a3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "56ef3075-6198-4e03-af8d-baade46b3a20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "070dd193-be85-4572-9cb4-4716ee88cacd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc2c0be4-636e-44a9-8a2a-ab4427e92eb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "534a57d7-dd8d-4a46-adf1-5bba05927ade"
                    }
                  }
                ]
              },
              {
                "id": "c39eadd9-2e53-424b-88f6-3d54cbd63c42",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97a4dcd2-9538-46fa-ada2-4a3e394b42e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c873a0e5-8740-4aef-beba-56125fdd60f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2aa2757c-06ca-4aff-bf83-878fba85d0cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8d75bd60-9db4-429e-899a-d2f24bb8593c"
                    }
                  }
                ]
              },
              {
                "id": "ca1f517a-a4ed-40b0-9a6c-6f92dfeb3a46",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10275a26-07bd-4b82-a49c-30903801079e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f6a86ff-1b40-4b5e-a73a-6837cd746364"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "efa4e537-07f0-481a-8fc3-e774274f70eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4d79744a-4629-4ba5-83b4-15e82b5a1f72"
                    }
                  }
                ]
              },
              {
                "id": "384f4821-32ea-4ac2-bce7-f8e2b53fae11",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "054e4365-c690-4c9f-b853-2c9b39f9e43c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cad2b24e-0be6-49d2-92a8-d0624a691b6e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9063dae1-b942-4df8-93ef-cea2d113f7ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e03fb562-4c27-42db-a75d-8f6423314b1b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e47a3427-8dbd-46a6-b447-41a2da067845",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "793518b7-ea46-4e5d-8330-08aa91ff4857"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fba0eede-9fea-4239-8beb-cc05bd7d6b6b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f79f926-01f7-48db-8cb8-caa6d5f71f1e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "88c00acd-730f-41fe-a88b-5de7d58c69c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c97bf35c-4b83-4342-8f92-6c91d5205c5c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dda48b0f-1aa8-4bd7-a903-ddb5be43b68e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "913cd71e-d3bb-4a9d-b7bd-d43796ea7b4b"
            }
          }
        ]
      },
      {
        "id": "de26d8c3-e1f2-4ca7-89f1-8f9947969700",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b44c809b-59ce-45f1-adea-7e2099e32eda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49d51840-6723-4783-86ea-e67afb0d3e80",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "edc6c2a4-9897-4eff-ac4e-00567b465254",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "165b42cd-cff2-451e-b0d0-6289f3e23d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "666ac1a1-7db3-49dd-8a2d-039211cb4b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac90fb24-8f8c-4605-b93c-a16083cd748c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "62ce214d-d67a-433c-a8e9-baaff65c09aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6344a44c-3fd2-4709-9ddf-9fbcd934eb89",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb12fc8-9f29-4ca2-9285-7bc8caf1b78d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f840e59-6655-4535-9b6c-d0b99e307592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82c62693-811d-468e-9d07-0208ada47e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3864cf5f-9aa8-4f30-829d-82d46ebad2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce1a20e-351f-4b6b-a014-1e04d60822f7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add9a143-82a0-4c2d-a574-2d05622de4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0be4bbb-ad9c-4932-9e4b-88de3dd8ba31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55953e3-f01d-454f-b41d-08f9c4852525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e30fdfb4-78ee-4178-baa3-4864f7883d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38272470-bd9e-4e97-a6bf-5ed737d8f19d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e453b74-d751-48f6-8d15-9a89e9d5c6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9fa8f9-582e-47c2-8110-d69de27203e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d903953-852e-4a1f-a480-c1b39728d700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0087b113-33db-4a3c-9459-43a9947b24ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c909280e-723a-489a-827b-181a8093315d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b38acd5f-b647-40ff-bc51-139cd0869fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9947b1e9-3f79-4f77-8e07-beb3dee7461a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75bacfb9-efb9-4e22-9dd2-dcb03e47ebdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28c46826-77f8-4137-a631-ee434c04620f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad1886e-0232-4806-9ff9-276e01632b1d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b1cc73-47a8-46df-a47d-02ff76a32fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4631d9-f58c-4fc2-8c70-481d36f2cfeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8d85ef-464e-4da3-a509-bfa5ff150d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ca6e4e-19cf-4436-9cff-7cd0ca987107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5200fb42-38c4-4083-825b-5e8fe2a6f3f1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f3fd32-0231-494e-8835-ef1c64bc679c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2279197a-6afa-4b68-9579-e26afa927c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a825a8-4f97-47d1-85e1-991c76f775fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fcbba7d-e39c-463b-baf4-10e844e9a70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de798174-6286-4562-9253-0ec2a3a3589c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f737e58-881a-4c67-8c53-d945ec305c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fbe5b21-36e6-43af-bad5-c9ea6a5a5e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216c3ec8-9c2b-4330-90dc-39011d3f021e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0be853bf-6bc3-434f-95a6-91737608136d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345915b4-2161-4b34-a9b1-325af586ea08",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7e65a8-3f72-4c63-a76f-74d193c15bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b29f56-5d30-4f62-982c-f15420a300b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd820869-32b7-434b-ba8d-5db319c7f0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "497c9b1e-a3f3-414d-a06c-a43ba1f4689e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24a7dee5-e10a-484c-8be0-10ef666c6992",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ad6b02-9cc0-4165-a46d-9f91cbe8b4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8dc56a-5e37-468f-bcb7-147a2b4dd33d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2073ea-fbd7-48b9-9f4a-629d53522824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "609d84f5-71bf-4242-b972-071f027b0939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2b1017-06eb-42aa-8c8d-55fe2fba9156",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cb18ee-24ba-4761-9276-e5f0deb7d042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69aeb8a-3a21-46b8-8860-108bc9d0254e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3d18ce-c92b-4b75-82ce-b0eb24a6f04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "368c1f18-bdef-4114-958d-10cb1b4790ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8872a67c-e3b7-4d91-ac17-16178c74f7e6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d231cf-11cd-4656-b68b-ba64e814bcab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda37e6c-b448-4694-87a2-51dbcf420ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a93588-c31c-47f0-8ef5-9256cf60756d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35d4cf8f-fc1b-4855-958b-7eff21771d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87e1162-e4e6-42b4-9bd3-a23fc1c05b5e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbc668f-70ed-49c5-ae1b-6f7f629a0183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd941e19-72e3-4922-831c-4fa133c1ee14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c424279-1420-446a-b320-107096dced00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "18eb981e-eb06-4aaa-ba34-8adabf1ed237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db15f32a-97de-40f7-a023-d95f361c69c1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c87e55-81e4-4ca5-a0cf-c1633c6a7df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1c8074-10ab-4d2a-8e3a-5d92a4df6173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6224d43f-d360-4f23-84b8-6588e2e6946f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e27c690-e20d-4a9d-a659-d1e6fc326181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcb6541-d82c-4074-ba42-81fbe2ecf619",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26b82f1-bacd-46dc-970e-7b6ee89f9986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c92405-9584-4294-9358-7cd383e66b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f8148f-4eb8-4e9d-954d-a6fdf03ad28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "18bb1b1f-ab01-4fb6-b045-1b3f4add7816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323da655-8873-4514-abbc-aacded0a364a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e583fa7a-0044-48b4-8bd5-134f28da6afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecba230f-76d4-4883-b023-eb60dd67a166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7038323b-03ca-480f-a4a3-e86e29dd1bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "7573f269-1718-4ce1-9775-c4412b76b427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405edd7c-58fb-43a8-b2d8-9d8b6c05b702",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de435082-5cd6-405c-b5c1-b618d0dbcd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f426204d-1b21-4801-a4c7-9ebf6acf598c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22941dc8-a6fc-482b-8cce-4177215eb932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c93d02c7-77bd-48de-aab8-78220d2c5474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e381d6-e913-45ab-a934-7065dedbe9e5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "363b0765-e696-43c1-8fc2-a62a9b03745b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09676acc-709e-48ae-afa8-a364e420925d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473eba3d-7b32-45e7-8adb-ff3ac9a0b385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "afbdef9e-3d43-4f9f-add8-98b69741c24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9fdaef-58a5-4555-ad23-b56e6d478faf",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb550b4-9c28-4977-8ccb-eebabdd6824f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5cb6613-e749-43b6-9480-4187a920593f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38afc6e4-3d05-45ef-b611-8d8b048b995f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96ee4fa4-b9ff-44cc-99cf-803dc613e45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ed8a62-20bf-4074-9b8d-21540bdb0f8f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d5848c-99f8-4d77-9bfa-ff4854a502ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d40b72d0-955c-495a-9458-c297e980dd04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5a2a81a-90ed-45e7-9788-3490c62f381e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80c8d394-7980-4b28-adda-7fefabc1adee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b589f11-d365-4ed3-9bc0-14555cccdab2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0847d894-b12f-42fa-bc07-e29d82395ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8afdda3-9c37-4328-a50c-95c795fdcbb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a5f44e-bd19-4f77-9d55-6f3a38ce0309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5543c075-7be2-48f0-b8b1-63ba55a50460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0652f03-db75-4812-83e0-717c4913754c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72803b0-8c45-4974-bc23-cbd7dfad8226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b107a9-2f86-4ab6-9ce5-5e64cfa25485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f3e188-a16c-4b9c-94a5-a2ae5e9c9330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b47d7fe-d0be-4ab6-8e32-5eff2b91fcad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b7bd75-8bc9-4f4a-9472-9430226fb09f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce918581-4aad-4a4e-b1d2-66c35d242b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f4d616-ed07-4ed9-beaf-f0db4591c102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9f8574-3e1e-470d-8db8-bc4b8fd19170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccdef8de-5de6-423f-95f2-183230fe2247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5171c881-a5a0-4ca7-8cf7-a882db99cf58",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d81f774-3a9a-41a6-9be2-69aca6456ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5120f5c9-2330-4467-9af0-c00c34a07c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20bf415-45ce-4f3a-848f-9e2c26a48317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72188de5-64d9-4ec8-90ef-31d95a2a8863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "102e1201-bd12-4d48-b7d9-8f2e55be7fcc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "208f8e6c-e13f-4840-b001-8256fa032bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbe1f8e-2c6f-4824-b9f0-dd3adddc1ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc016ce5-1e1d-49e6-974d-8c6aedea5d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fbb0a52-ef42-44d9-993b-12d43ee634e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79404fc7-b92f-4df5-a654-2c0eaba55c2d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89302f02-e70d-4081-b199-263b2ddb4fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d80cee-ce26-413f-a864-243aeb748c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4496e42f-a59c-4807-95b6-f64080256aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ab28930-eb3f-431c-8e52-7580759f64f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea12bf6-1ec0-44db-8cc1-2df66fc3e2f5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d73e9101-2bdc-47d2-9cbd-100539156a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "175a5482-276a-4d60-98a0-e2a65ab778d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5f3b71-c958-4ee9-a661-e37eb1bd5f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ce8ee5-08ba-4dac-9e03-87fbf053610d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73800687-7cfe-427e-aff6-d08a4b511d7a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68798a11-a05a-4f8a-a323-350f3b894b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac76ceb-c7e9-4dec-a5cd-81a0e5fa48e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c309a544-025c-4450-b037-f0ad3fc5a99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34ebd7e8-4ade-4ef5-8e49-88829fb521ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9961092c-0975-4047-8021-8135420fec71",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8529e6c1-b527-48ca-a863-a2612d3fc9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dc2edf3-d948-4a09-aafe-64d714983136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fa0793-7358-467f-8025-37eaa81e861d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b912c33-7e1d-42e7-be4b-706bcef9d885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f11754-2437-46b0-b04d-6678bd27ade8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01285362-28c8-4df5-ae53-c7b0f780cc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b796de2-7561-44fe-9b97-4b8a7d56276a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8e1ccb-b931-4a7c-aee8-d7dc501a675f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22a0a842-59d9-404c-8253-76174b216e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec3da46-4149-4140-a41d-3262ce199550",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff00e7b2-5701-45e4-a2f0-98920230af96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bf5aca-2c9a-4a2c-9bac-63f330d284eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0a1f73-3646-475a-92e5-35ff8ae1d9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "749ce89a-2188-4295-913e-d1e115b4858d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b34bbef-0dca-47c9-988c-f90a7c7d6a08",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75615963-7e62-411a-858b-e1d2ef76cb03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db05f1f3-ed07-4930-806c-26acacbf565d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640b7a49-bd4c-4604-94bf-2cef273358ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4caa1b-025b-4085-807b-c202183c08ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67cbbc7-215f-4c89-b5ea-b516332cb9d8",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26eee29-8754-4715-9370-075c11bc9737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "683186f9-e36b-409c-97c3-fa28ebbe6e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59924dd7-9b2c-4656-ac27-7caadf3909ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "933314b2-b2c7-4518-8b96-c9cb630113f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383619e0-65b4-4777-9bdf-adc46aed2d8f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ad8b56-3523-413f-9bdf-0b2d25831080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59844fdb-53c6-4c72-b9e7-eea7e938a575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2759974d-a6b4-4179-8986-c5eeaa371dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4d23df-1c12-4b4a-bad7-5f831072e2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ae8842-b867-4fa3-9fbf-798dcd3fc080",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63fce7a8-ef15-4968-ae6d-e035da58129c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713f1c72-f761-410a-9fa1-4a14e8b7cf5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc73290a-db74-4129-967a-fc2b92c1334e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "758b8b6a-3b48-4c2a-ba46-348d9634d120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26a71e1-f409-49aa-956a-141a4712561c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d83632-867a-451f-9e3f-2303d9d199ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774654a5-fa85-499b-a38c-0ec1a629f2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca95099f-dc86-4dcc-ab9d-624a3e728857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acb19260-a0cc-46d7-bcc9-38499973a232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0557d791-5184-4d3b-9e83-9e6123c4a9f2",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f51c3f-c5e7-48fb-96c3-d72fd2ace533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5beeb1bb-7f3a-4040-b7d6-4cb7e394a8bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3331a7bd-89c6-48a3-a37f-1b9a6cba6f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80e62e3b-79d9-4708-ab05-93144213314d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae0ae3f1-5a22-443e-be9a-6cc25ce26bfd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "24a52ba0-767f-4643-acd7-e2e5b24456c6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d719e095-0118-4eb7-ae11-cf50f066eab8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dd18b8cd-e47e-4117-b9b8-2678f662da2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b22048-51c9-4182-9ff1-7d0acfc4ada7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cae01e0d-4bdf-4ed6-9d3e-2e7591659ec9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b2fca0b-e468-412b-8fb2-bb943be431c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88fa705a-9d6a-4b0f-93d5-d9a4a7616d27"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d338f286-4593-486b-bf03-211f33af2c15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91bc7b30-a574-491d-a702-563813db1a6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fb0e94e-c489-41f8-aaf6-41980d076b9f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "689cd2d9-7782-488e-ad52-a6a12cc9381e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d3ecfa1c-ea1a-4b9f-b9a9-83c39ad48bc9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ae364016-efce-425d-beab-b0bb31098df7"
            }
          }
        ]
      },
      {
        "id": "17dc34f1-d916-44bf-97c0-2e82323924e7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0cb176ec-0195-43d0-bff5-ff112260588e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "487a326a-e359-4bb4-abd1-f76c8e5da62c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5acf2de7-d58d-424c-8b95-356dcde8989e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf0179d-322d-422e-b0bf-34dbcf1c999c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d64ec0c-ae05-46b7-9a22-16a22dba7f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cec6c28-da38-4ef6-ab25-63a0fa80b1a8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f5f039-3361-46a4-9355-2eea2b6163b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c354377b-8b2b-4cae-b067-125faa1aacbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03438de4-4963-4a8a-97bc-92cf797e197b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbca29d4-bbb3-45e3-a1e6-7342a558c3ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efccbfb3-32db-4030-826f-5dedea4bbe6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48fccfb4-5d4c-4189-a096-0be089b1026d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c38c90-c0ea-47bb-93c3-276f960371cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b29fdd9b-9caa-4a0d-b507-27f1da4abf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b686475-c9a8-4c32-a3fc-750f222d0cf3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20435d7b-2de0-4362-8edb-0d5b28bf6554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d415f674-fc17-477d-aa51-edf92b15c88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f8cf13-b17d-4e62-add7-94555161f549",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36fde8d-6d8d-4d1f-a1ec-2680def2ee1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d8a81d8-0c21-4ffe-a315-f0de61e64c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95327839-fe42-4b22-927a-086cb55bdeed",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d94251-c9be-4d23-bd2e-ccbc6bbb43bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e058d3-41ce-40df-b642-fbbbf18bc6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "963183a2-c0ad-45ff-bf91-35a9a21f992a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6a74d5-aa0b-4b5e-881d-6a0838fc5ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b9c9b9-b743-41ce-8913-a623c1451d78",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd096ecf-6acd-442d-93a7-8112f8e31a58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5dc856c-bef1-4696-a86a-c7dd854a7c7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0399fd09-fcb4-4711-bd08-a78670efd0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337aa7d0-5e9b-4a60-8bb6-cd009b044a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2836601e-0799-4ce0-9a7e-0d78ed45340f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0c76b2-6d6a-4ddb-a6af-c34a763a38fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8d645a8-c4a1-4c4d-83f5-2afe79f02f80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3d7754-888c-4fa1-b025-ffd8448acf5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ccbb7e-36dd-4f8d-a3aa-5a025c916f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f2934f-8b1a-4cd7-b729-814784214817",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d289dd4f-433c-4694-9649-f0c00e7e66e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf7dec40-4543-411a-b128-99be79e05a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7613650-0f58-44d4-acf5-826b9ef7f7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6da0f6f-cde4-4892-901f-0ff793c22f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9098ed-527a-4a6c-b3d7-4251682ec3b9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1089acf4-ee67-482b-8968-c3a34ec229a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ddb290-b250-42a1-b745-36a04683dfbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c07822d-11f2-41fd-9dad-708f1cbb319f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458403d8-c73d-4cb9-889e-4f1b5426f857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6523aef-24d8-40bc-9650-a621cc8e5b25",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771dfb4b-f19b-45cf-b5c7-52f00cc132ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f56eed-ad83-4e5c-acc6-67569dace415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67201c46-ade4-4e8e-8e0c-0249141d4eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4bb9720-6a63-44f3-a88a-227c2141f953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbcfaa2-519a-4bcf-bdc1-ef1c4b3ac64a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea85559c-4f0c-4309-a8c1-e06f9463c341",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa1f8af5-0df5-49c3-91f7-fafe775f49cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd4214f-ffb6-405f-bae7-0953db3c1b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e0c742-21e4-4478-97db-a2e69a505212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b06171-9ea7-4924-afca-fd8e29506a29",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a909030-82ff-4113-8be6-3bf48887d3e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa7c0c2e-299f-4238-aee0-b4237ef0f87b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4597b37c-6fe6-438d-9b7a-448c27c68ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8f9329-f5e9-4a98-8463-c660ce59d098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8dcf344-7987-48b5-8f75-d82b7fa5e157",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20823a39-7477-4d59-ba71-0490254cc378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f927f25d-95fe-448d-91f6-038a9da09c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3e81c1-a1b0-41cc-b07a-50ae4c7fba06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95880c4e-3af6-4b9e-9630-be0312e5b495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190f9fc8-0a6f-454d-921d-156eab1b8fb8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d890dc-d38c-455b-94fe-71672eb84930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "850d1195-d954-40ec-ac3b-6d1c7024c90a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fffb64-9057-4ea9-a38e-3e356d70da9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5089924-4462-44ed-89d1-69c0468374f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e25774-1517-4e97-9a31-19e0b9146e34",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16d27ca-3dda-40e4-b1f2-50c4543e81c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a0e9bb-4d09-411e-b7d8-016ad28d75bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81275e7-b694-4582-9510-0fe021428d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b23484b-7516-4a87-9678-e7669562ac38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420d4fe9-33f9-4732-ad09-4590c35840f3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f267a99-c36a-42a6-9a32-ddf764813c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306a3c54-1a3d-4369-9723-34377597bb08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5e99d4-3ea0-4319-8b43-70e214dcc671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "333d9a58-ea84-43ac-a9d7-23286c196ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a1f566-040e-4d20-97dc-d9ae8c64c9d1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fa1690b-97e5-4de9-b945-ee21c7f3f582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42a29728-451e-4d9a-a583-dcc975a709cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "864dcc90-694d-40f3-ba8b-56c31ed27a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514d129c-d4c3-4b27-b52f-e96365bddd60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6556e8c8-e7ad-4b33-ac46-181b79967727",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e670884-2a06-4e6d-af49-683b2cad183b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133867a9-dfcf-4e3b-afcd-ca0799ba61ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1cb8196-a2ac-48a7-a72d-41f5903a6962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a117a8-2d74-4969-b8d1-051b7ac80b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb2db4c-3943-4cae-aa8e-b888aa22eae2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1efb5a8-b80d-4d9e-80e0-e73d4d7f64b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74c20bf9-3a90-4a25-a544-a2c977e39312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe9a64a-a530-44aa-a7bb-c059ec5a7cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c952f43-ace2-4f11-8607-a35645eee728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b11e7b-68ef-4069-b640-81aa8ef274d3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49ffd62-edb8-42d9-bbd5-47b3872dae32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb648c0-daea-49e6-bbd8-a22717ac4557"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4fee20d-447d-4a15-9cab-74637b6f29cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559e1fcf-dc46-4d6e-986d-91d4ba11f45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41b0b7e-8d2d-4ff5-a978-15e6cbf0bbdc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff2c1b57-95b0-44c2-81bf-d2946fef0b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df830fba-1b13-49d8-8839-e93691e9ac8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb9dfbd-dce7-4618-a50b-6c357aa5e6af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d507028-e5c8-425f-b599-707464d1ba03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb89609-1749-4459-b890-953eeaa10255",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de2074f-b5f1-428c-a227-72cf539371e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "077299d9-9c82-4f06-bcc9-1b195bb918eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5c36893-0252-4b29-afd9-f7bc357d0ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99317011-43ec-4e27-8494-253b31e76372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4ebef49-6ae0-4778-bc23-5376274fc462",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "722bcd44-4325-47cf-9aba-8925c86dac1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5666f6f6-8ca1-47ef-bd19-2175b43b6445"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b75514-0b44-476e-9cb1-245927030e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2375fd7-86d1-4792-8954-b9691f426ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aeaf914-def0-48f1-873c-437b7c61a919",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdf2f36-ae8c-40f3-a925-56d212503898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f708fde-1047-4603-8cd4-ebe597e560f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b3c2ab-c650-4a96-a26a-98f23a65f292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fdd1fcd-7f30-4c2b-831f-27b62369bc66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d12efa5-224c-477f-bc53-3187195a273b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ff71aa-cf3d-45c1-879b-fb8e10a052cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f57eb8a-04cf-43b5-82f3-515b4c9a02f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3356146-39f8-42c6-abeb-4a71079cbe4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ebbc1f-1def-4a67-91b5-0ed12a9e8a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc12efe-d85e-4eac-9ed2-faa85d4f84fb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4933bd6-1d64-4534-806a-3ff2b4c9bc32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7184ac04-0f0b-4eb9-8885-4d7ac34a5322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43cb3d0-c0f5-4673-bd64-d2909d141376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bfbceb9-1f99-4d03-87d9-b1f353fd827e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772a5c3d-3179-46a8-b1d0-20259ce2f812",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb101801-fe00-4869-a6f2-b21137f56741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "691e0a57-61b8-43f4-af5e-528d43105f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e847dcb6-fc77-48da-9861-52e67193e7a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9728d91-6757-4a84-80b9-5dd27bdfbb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661f43a4-1ab7-453c-bb37-da86e6185fd5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d46628-7117-4978-a54a-55145038c9db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adbac5ef-f242-4c36-9537-6cdce35a6ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d987073-ac18-42ca-804a-293a7aefdf5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1d976fd-fe1e-4c55-8c77-937bbb9acf04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5dee634-6b51-4569-bf7b-d5eb1249046e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91e328a-b76f-47e8-933a-c31d9d4dda0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89bb63be-49fe-4e85-af01-016bbbf9bf97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5cd640-8c0c-44f1-818e-e749fbb921b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a508cf8d-c033-4a59-bd5f-490fbbab19b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "641a0fde-e5c8-441d-bd1c-2f78124daa44",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b2bcfe-e888-4419-880a-9e92f3f56ca9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ec8b694-5515-4390-9bd1-564cc26081a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084ec439-26b4-4086-a570-9b574b7930ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d63637-66f1-42ba-be43-eb03cfc5a030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2dbf24e-1073-4a2f-b8c9-3657076c7fa3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6653a5-1780-440b-97f8-ab3d9f60169d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11c1a63a-70cd-403d-97c4-174081506684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2aad64-8c3f-4ed9-80aa-706a19333682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d606aaa-9d85-4fb6-80f4-3c8867289078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541ecbd8-0c3e-485a-80d6-66204704d8f8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f520ebf7-f8d4-44e9-9285-c8c3fff87fbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "647432b3-476f-4df7-82d2-6ada4126316f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1bf802-4a69-441e-8fa4-3ede7414b691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e84afed-d4f2-4d0d-9503-5dfa5865c6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47499adb-f574-43ab-b07f-37c1d4dabda3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23c91fe-ce46-43f7-9ec9-e5ec1d7e2639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe7f7da-50dc-4373-a1a6-14dc2fa7757f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11a81bfb-74ec-4375-8515-b5693f354a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd8f89fd-aa14-4904-9804-51493c36ec49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4db00d0-8c58-4122-bd7b-b317c86abbff",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2243b7-eb31-4632-9a7c-fdb27d3ea1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeaadb2f-4b1e-42cf-9ae5-3d617aa66e53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1924c5-df9b-4d57-ba40-f84549ce3f63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2254b0-ca9b-4a51-8e48-559d4705ed86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b426ba70-33bd-4f66-9f09-8fa313a9bdba",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227c830c-e0d0-4921-8a19-c1394383d3f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98a34383-cc5b-415c-a77e-f15aa403b0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5315c85b-4782-407f-8324-ac75605d9de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1408b4f9-a686-42b7-a652-db0c95dd4e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8477cdb-42c8-4eae-ace8-1d2a375558a3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc27558-863a-431e-b376-12f44aef3456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd614481-cc1e-489e-a906-9c3d96a91cac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d035b512-548a-4ac8-bb8f-70e28ef1691a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d79b3552-1c46-45d3-870b-6c2da4998d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3733efb-57fd-4f95-bcc7-2e8f61976fc3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450bebbc-aa9e-4814-b363-b3c02b13cc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931a7ed4-6f6f-42e9-ae2f-3780c9fcdb6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f09616-23a9-4bd3-972d-af40c284dd72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1daff3-5816-4fc9-b37e-048a0e95aa28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9b3e7d-aa55-445a-babc-bc3ae52ada16",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00dd9f2-5a25-431d-a19c-04a955796093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67576fd6-c406-4774-80e8-cc86d4394612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c05669-94e7-4598-a56a-e9aee95eccc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424bcd35-1079-459c-a3e7-e6e5fa83873f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedc6a37-18f3-428c-9d15-7e179bb16149",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc483a51-e2cc-4711-90fe-064333af2193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c91c21-83ad-4f00-9190-47f9039c1f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6ae847-798b-4a80-92bf-d28e56b5c2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728a81af-a1ed-4856-9fec-4c6ed70819a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ab96ac-5b45-46ec-b3b5-dafd253030a9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff34732-3827-4f8e-9a1e-b6d1e903c8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d94bc4-2224-4540-8c48-1ef33825b450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7126bbb0-9db8-4267-8d31-46d3b395c6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b34eea3-8771-4827-9700-dcdcc09383f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dd4f34-f348-449a-ae83-85cd1ea204d4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7166eb33-4dfd-41e7-b986-d0774fe703d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9fb68ae-683a-43f1-b435-f175a136ae8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5ec518-cb8a-4ad6-acf7-c56320154a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "664ba8e1-289c-4715-802c-103c6b41b957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967ae95c-6c84-4b16-8f38-5a46bd82082c",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6edbec0-930c-409c-a51a-aa1b0c1bbe57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb5cfd1-45f0-4181-8a04-cd19f077d677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f649df3a-8074-40df-87ef-a79157d3483b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180c014a-4454-48bc-bb01-93176e23ac58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125e363a-dc12-42f2-b9ca-d90c6b45838e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f91a7dc3-79c7-4ee4-b92a-718a2478197e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ea82f9-7885-47f5-9b25-c63c1487db2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5763d77-b341-4547-82be-35207bfbb6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d2361c-f787-43dd-a151-8fbc520a2352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e459af1-34f8-41e6-a062-c6f66497b49e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c394bc-f8dd-4487-bbce-a02ec1a9ae0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87103864-2c87-4747-96a4-ff28e65e789e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d4a888-1313-4951-a110-47508ac757bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "659a91dc-bc62-4060-957c-cadd3d2e9576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c74225-0a78-48ef-9780-775e4a1925f7",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d4c2a47-81eb-4ea8-a293-4f060592f2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9c7ff7-6efd-41ff-9a29-d777605587a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f308fda-811b-4115-b394-0d6e941b1066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d15bdc6a-13f5-4eeb-a79b-ff9ef0ac5a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccc35be-c191-43b0-8d6e-7975043b6809",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efeaf0d7-2c1f-4370-8d75-d17278be9436",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c939ccec-1a94-4912-8c60-8adf57b7d177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f415065e-dc3b-4589-9cb7-4cb041775258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8757d8e2-239c-4037-8b3e-31c4bf85c88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99570e9-50c7-4835-b3ea-66b659ba7e42",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396710d0-3475-4c06-a054-095384277abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d01a3e6e-1796-4653-b29a-8196a01f7c4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125579ed-d4f9-478e-a66f-a6fb37409e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0435e6-6d07-4a85-8f1b-653a8f4ab0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bf8b62-3494-4e34-9d2e-cfebb993c6a8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f7814b-1550-4d1a-893b-c812fb220d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7afd7d-75f3-48b0-90ef-d28b1e0a0560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9cfff5c-6e7e-439e-9360-2ceadf63905f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14141e4c-f8d5-40fc-b645-b1ad29b540cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b117bd47-c90e-4940-ae45-221d49d828f7",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3292662-e26c-4330-8ef4-489d67cce570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0490b3-163f-4012-b056-e3d870766809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd148cf-c586-4016-920b-fac3f395de6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d691351-0c9b-4dcd-9728-aa72baebf49a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210088f7-06f5-4d6d-9573-c8f5b9a55267",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd00fb98-b0b8-4111-b11f-3e3fbf6dd4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "037a7eec-f4f2-4c6b-b917-2344cfac902d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6b0f9b-2105-4ea8-aaa9-5c54b5e84f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4c4cbb3-126e-4b6d-8a19-72b1d29b9463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404b87b8-ad3d-4d81-a46f-403c552a992e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f78e79-7f50-4022-946d-7049d0cb8b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67660f04-fabb-4331-ac6f-78eda4edc1f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32fb64d-f32e-48cc-bfa5-ca8be7cb952b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7714ffc1-c34a-4c32-ac53-890c7b64e920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed0e6d0-3994-4dba-981b-93372a3afc8d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df6d691-941e-4808-ae0c-05c5f36bf441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6341587a-969e-48be-a1cd-9006499209a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04c5e08-718f-4338-81c5-2efb20f048b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c144b114-b113-4d69-8d30-65a009f50496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487c788c-0801-48d9-9ac9-83efb806fd91",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889d25e8-bd7c-43ab-9fb4-67b18ae07cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc69c7e7-c8f7-426e-ab2f-71fba1348f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "947afe8f-cf9f-4ebb-af11-615ff00954fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb38234-78ad-451c-a77a-ae62cd928ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f890be2a-4325-43db-8b8d-2601db7d168f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ba480f-a623-4f19-ae6e-d7d214e81b3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "842c5886-d5d8-462b-bf62-3ea47831ee97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a884e479-8068-445e-bcde-b56f94eeb993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6654ad84-0f06-4589-9183-b9395c034952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa68b1c2-d080-4f92-b042-42f4d6bf2c39",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427c4b38-fa91-4eae-87dc-014047a0d191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca426f1-7e59-49c8-9414-db6d40c899c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfae567-04a4-4944-9dcb-a6972773a677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7fbe694-445e-4cc2-b524-584d925fd014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8539d367-b6f2-49ea-990e-c1f99e6b2ca2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba290518-b69e-44a8-ace5-ebe21a61ccc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7b5607-fcd5-4b07-80b3-b5c9d5179b40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8a20be-f66a-4324-b6e7-84475b640857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed0ffd2-6a68-484b-a7da-126c95021583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0d5d69-42d3-4352-a371-6b980512f2a3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cd32df-925f-4a00-a508-7ab4a08426fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5204872c-a915-4f55-9ab5-d40e498502ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a3e467-ca24-45b7-bab7-e6f49b9b04b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e60886-8bb8-44f7-9119-1618a0fea6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57de7560-7e6f-4b4a-b99c-4acdc3e078ae",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684e66d6-7ed3-4613-93b6-21e3e4e285be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfffd526-d977-45c7-baaa-5a2fb106126a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d884e70-0601-4d96-858e-f688b4fc2595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98d8358-ae79-4982-aec4-867cdc5c5b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ae99a4-6dc4-49c7-89f7-6d3664be2147",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628f44fe-e8f9-41cd-b0b6-85f814131643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d449d457-026d-428d-8623-9f9bd6f18dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f257588b-c8ed-457d-ab91-751a8bc4fe6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "177eafc1-0ce7-4c2e-b7c6-16a4c024b3cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab45d17d-f75d-4c62-a80c-7be3d13836c6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c56504-ef9f-4f51-83d2-ec5a6b3d7c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e19fb6-b169-476f-8f30-b9d3af7c3740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea621b5-6f12-4ca2-a900-86a61c2177e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c792dc-686d-49e8-815c-86e016410e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1856123f-4d0c-47c3-b00c-15bd29a67530",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c73d90eb-6831-46b7-87bb-a1319750d2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2d4fa7-8c11-42d1-b0b2-3bfcc1097d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be77daaa-1b2c-4324-9d68-e9bda72b5b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c8ea6b-76a8-4cde-8845-9cdea4923ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ef5c75-99f2-49b0-921e-ee43d3ce5112",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2015b91e-2bc9-4f26-9f97-c7077e60c402",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7c7af86-e23d-4f35-b17c-8a2ab1ddd8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2433cf1-4ad3-4780-a1bc-bb3ae6258da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c812802f-2ed1-48fe-a078-7c4efe43cae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22ed086-7986-4e4e-b24f-e7596e75d409",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bb4cb9-b1af-4662-b528-b2b6cbf95625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b687957-d24f-42fb-b76d-896db2c70290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b8c9e6-cf83-416e-afd5-528b1c605d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f8ff10a-6694-460f-9900-6ea73b836602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bbcc32-a2c3-4b1b-899c-a0ab20e2e781",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f90259-6d1d-4f48-8b47-3c00e4bbee29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02d1668a-d221-4779-9432-83b0ba13a395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a725569-09ff-47d4-8f62-ca38ea918267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "994921aa-ae8b-4c09-9969-0797dc94b3d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc2bbcf-cdd0-473c-bdd2-714c083270df",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c4db9d-80ee-46a5-aecf-6c88787f6c1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ef3e2f0-8df3-4cf8-baba-7e097bc1163d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3d18d0-2e0c-4ebd-8d26-49c1193dc909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98080aed-a984-4e30-9e66-ac3e08b5662e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c3c719-3f44-4662-88ef-e4c59fd53ed6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e1106b-3a3d-4103-a3c4-94afa1f8050f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59e96c0f-5bad-4e3a-8392-939182b7f0d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "183fe4d5-8d98-4981-8469-45be504c17e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f102f860-9541-42da-98ed-8231f613b10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b6148c-73a3-452e-b979-ae34984f19b3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93a0d2a-6edf-4cfd-809a-2258fd6b6442",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeac4446-5bb3-41c1-9ec0-fa9bb3c33e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df2cab5-9c74-49ed-8d35-8d00a54e2547",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a96c553-8484-4625-a41c-fa91c687f595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aac7cc9-fdc2-4952-a2f6-863f9aadfcbc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c43a61d-f650-4af0-8dfb-400ad950646d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ff86a9e-2e67-4eeb-a0f8-8232520eb199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912447b6-9b51-4080-bf98-dded59ee4f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1752b5a-b5ca-4f94-836d-1c58b9b68a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb82ab39-5c03-4bcf-a830-f924a5e5cca1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8189b64-d8d7-452f-9b15-e4714e26d93f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a6e41d1-7dcc-4d6f-9776-daf2dcd1e64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15c7a9a-e0e7-4091-838f-9ec7281540f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0b5fb1-32dc-44d9-a71a-933f3ce0ca30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a35880-e6b0-4c4b-9535-5a3cd3603d3f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d721ca0-e18b-4e60-81d0-adb17060efc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8afcd01-6854-441d-8a2c-d46bb88c48c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8995d0c-100a-47eb-b0f5-ba6e2fb076a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7656843-1cce-4317-a934-4fbde077ac84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaf8207-4d43-4478-9d5b-30bce639bad2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb114bd9-00f1-47a0-8cc9-026a41ca9ef2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27bbff49-7ef0-4831-bd4f-a2ea7502ff27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d4cd66-c21f-4e3d-8334-232b23c807d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322b1b18-2b16-4270-a18d-e1ea2b1c2904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63429b16-4504-4bd8-9f74-ac1c3cb7a591",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b771206-9ee1-4738-ac2f-d55af7445be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58d6bfe0-ee35-437e-a80a-3c6198603047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0925c96a-f001-4cc8-b6f1-fd52dd580235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e324dcd2-5f69-4b79-8c0a-67637372e224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be26123-93d5-4f16-a099-ee01a2b5c05d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ee3940-c8fb-40d3-ac0d-2957e9511c0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14d3cf85-e6bc-430a-bfeb-8f7b85458ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb0aa6e-6904-4a26-ae4b-471909257621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fd1d49-ff3a-40f9-abc8-d2007ac066ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9ae94c-ec6f-429b-aa3d-174be45ba688",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceae123d-2681-4c10-bcfb-c04e0447a482",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a910fc8-00d3-4ec2-9dfc-3568141ee7a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2719b3fb-aed4-40a0-ab4c-75f0261489fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23db6918-309b-4ace-8b78-8a10253e847d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40ec757-017a-4629-ad05-726ea40f7a91",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e80a1c-6842-415f-a629-235a247fe6be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6614986-6458-4ccf-a218-a1e72a336eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85c9278-57ae-4aee-8d3f-ae986d0701cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccaf6eb-8723-47cd-9e17-60b27607b5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f6a530-2733-4883-bd2e-6dbc0c7a4ef9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb83651-8637-40fd-a9bf-7e31a201a54a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f364a4bf-7535-4a7d-bcbd-757701db4e30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d797300-a9ad-47e5-8c2a-65bf2ff3d850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a8f057-dfb5-4703-be5c-db3f7eabab0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff30ee38-d53e-43f2-9eb4-52abda083004",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f22481b-7fa6-48e4-87fc-7a68243377b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c5da9d8-fae3-4c2d-8fe4-1b641d223586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc95f616-e2b5-4dc7-bfb7-98979dc115e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26854ea1-3e99-4e4d-89f6-f820f5463e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42737e66-0e87-4429-bc72-9be7b46d380e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345caf25-6ba3-4d72-a912-93bce36f0932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95d2b480-6cfd-4ce0-b47c-06019f2f85fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33cddbdb-74ec-45ca-97a8-65aee1532a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588951d2-251f-4289-8e9a-abf55f36b9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87078942-14e4-4b3e-880f-80f22205218e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d83547e-0973-4e02-b866-03f31c6af5b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbbd0079-0ab2-4e1c-bdce-d40cf37d46ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42324cb2-1702-4214-85ba-ef2da98458a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc22e74-cf2d-41dc-8b03-d368c347d558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef649cd-931c-47e5-a5a1-157e7943c4a4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20489d99-51c4-41c8-86ca-9441396b1c8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38bc9506-b897-4e1c-a99a-f6e042fe57a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be628a3c-b529-44ee-b97b-012b0084d5ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e50067-57a3-4732-8572-4919593de8b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf55761c-25c5-4b3d-805c-f73b7aa45778",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4ebc04-3608-4158-8beb-d871e26e4f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84b221d3-a9cc-4d08-bb5b-2384137e6979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce40166-a177-4de3-b39b-01f23cbf9745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d25725-cc88-49d1-bddd-b00e669dae20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a57e9aff-3e72-46d8-9cb3-dc62dbc446c1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e31c68-9b7e-43d7-b11b-f2a81805d97d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4821a91-e4ac-4045-a8b2-630d9890159b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "955812ea-9bb7-46af-80c8-728d89aa5936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a4d237-4b8c-4897-a9c6-998e8bb7d508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c6beb3-40e6-43fe-9e93-cae7e556f9b2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463bae66-293f-44b8-8f63-48345d892522",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a2f125e-8ada-4129-a81e-e19420ce8270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b6ea2c-c015-45ae-a111-eae1300b3656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da450ab-ac9e-4066-85d8-a65b98be5f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050aefae-302e-440b-9a44-baff391e3d9c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3a556b-86c1-4c1a-b888-2ded36b6c70c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d56a16dd-393a-42df-b807-baffe6aabefa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7750d9-161f-46e8-ac45-88bd9bbe4be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63974882-0082-447c-947b-db084926be69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e23e88-d9ad-447c-8a83-c11ef06ebf70",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2464221-c51e-41b2-9179-185d042412f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86e3cd6b-6d94-405d-9116-47e94613c4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c6efea-e640-4762-8d6e-ce13b996320f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dec10c9-96b8-4913-8113-754c79aba14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb52f1f9-1066-46b3-a600-1369fb61b5de",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede3e234-10ba-4a32-9883-00a89a53b8d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "686a501d-0019-4949-bb8e-90fa81cf1dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279eea79-4ab1-4e29-8a77-42ba5d28c2a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56041faf-b4bb-49ca-8663-7dbb5be1ab87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e02c445-5f6e-498d-a0f1-d89e142e4fb4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ababdac-b72c-403f-8ced-b12dfb6db016",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4944e87f-3cc3-4ff1-898a-41183d850600"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb484fd4-8876-4e30-8e82-402730f80b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "149aaeab-fc28-4a35-b8af-9f802ce9b16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfbc78c-4d73-448b-ba72-195b39df57cc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87abbbe-d5c4-44db-837a-b83e804ea913",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6d62417-aeba-4ade-8cf4-4564cd917c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c549d964-b6f9-4672-aba9-ee6a6a20096e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544c5d19-0a05-476a-8fa6-8fd7598fff2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9171a5f0-1395-4c6c-987f-5f779d2d5aa2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c920c95-724f-4283-aa59-3d4528109ac2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fd02c2a-7603-4f79-8268-9b84203dd519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d422dc5b-ea08-4acb-832e-ca5b0a4d5989",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66815a22-7044-411e-b1ee-ed740c44cf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a068d70-760c-403f-a8df-72adedc08db8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925d2ab3-c790-46f5-894e-0c5ca97ec9ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0035556-e681-4a1b-9e8f-60ffb375aca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be67b7b3-38a0-4e9c-b3fa-ccf5cd5104ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92cb13a-7872-442c-8e1d-f0ae1858026a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1eebf8d-28f6-44cc-bea0-4ae2e0613c33",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17409a87-f9be-4971-9014-0fd1398687ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc382b22-c0e0-4e88-b2f8-319784db78d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88df32b5-9c81-443f-aa3e-b279e2b6ed9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbac977a-52f2-44e2-b7c8-f19d95f519ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a3e9d3-ef1e-4560-adba-aedde776f72b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca72060-e33c-432b-8fd7-44b2ecb360d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b463ed5-c865-44cb-afcb-55cf38908771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "150b8e7d-372e-4da7-9cd7-29daa6f54b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d433b89-aeb6-4507-86a4-07607dd62203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452fb0f5-8ea2-4f6c-b3df-9e48d9ef603c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660cc99f-0f79-401b-975d-e2f41c10b61f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "195303cb-0bb3-40ad-8b37-dd7bb0281b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4536990-d82a-467c-8c6c-a98ce70e1b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d78dcbf-9472-4e91-b8e4-c37ce6da48ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f1908c-b5f3-4d44-a5dc-6fb58a1c9b53",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a418c0c-3043-43cf-9847-0b2c761d635f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c266679-c88d-41b3-b200-e33e0baffb07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6367c43d-ab4e-411d-a0a1-b19f662f0557",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5034a368-56bb-4851-9a4b-b06cae3d4b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989f8113-808f-4d9b-870b-8d42c7bc50ac",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e734f34e-25f4-4374-a264-c53b34e13804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9a9a050-32b4-452f-ad36-7c2a81dd5ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c78a3e-4c7d-44c3-a70e-9a05edb6fd2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e671e278-cba8-4527-8391-f6905747e46c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0a2623e-d9b3-4cee-bd1f-f926f0459075",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e74ea5c9-e9bb-410c-b045-49e887ace7de"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3e6b7b1-5398-41a9-91a0-7c7b4019d33b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f1660e58-2486-4cb2-8efc-248171a47bde"
                    }
                  }
                ]
              },
              {
                "id": "6dfbe2d3-4dbc-44d5-b45f-d2d54f9d119c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "154aaf0b-6bd4-4cbb-9a0e-a45b42d67b13",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d29ab46-7cd9-4835-8996-c57ee5f8ad46",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4220e8bd-bfea-4eba-8748-fac107b3b037"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c451b25a-7596-4dea-9c88-7e29d8a8ec9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "101ab142-fa6b-4056-a59c-bc37704ecf7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80e79e00-8488-4d2f-90ba-fc169b06720d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f147506-8c24-4b1d-bb1d-b957c665e01d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f57f576-af6f-4dd4-808c-23208f504e66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef886f14-00e1-4bf5-b6c1-1a931566476b"
                    }
                  }
                ]
              },
              {
                "id": "c8c9fdb3-e8c0-4d9a-ac58-5634d7e4f7ee",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "59a5a46f-b952-49a2-a5da-b54f9d6390d7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e87812-3f29-48d4-911b-4aff85e92d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "af989318-eb93-4902-bd70-48a2b029fee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22086b25-82d5-41c4-bc19-bcb2953fc2e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5efd077-d48d-4970-b588-cc23535a1258"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "559cd4fb-f884-4ef3-957e-a51b1ea91d56",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2d8d820-9ce3-4bc4-9864-7e66896bc5e8",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3ec9360-3ca7-4832-8628-06982776959c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c144c728-aefd-41b1-bfc4-94f4be03c507"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd8bff93-f023-42c3-80da-fa5fceb96b69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ccbbebea-52d8-4243-876e-48cdde498205"
                    }
                  }
                ]
              },
              {
                "id": "6712b769-738c-4df4-84b7-f1a681d2237e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebe9c28a-d987-4558-a564-b52140170532",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "91cb0d08-f50c-4db7-bdce-e58db6f5b89d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf2d6cf6-3c18-4643-b487-5577449b98b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d127c0ab-6184-44cd-b0e0-d67d89362ba6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9937691c-fde6-45fc-87c4-a33dc96a0744",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a2c3a652-e282-4a31-a7f1-f8f587caf8fb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79694fa2-a1f4-4124-9581-facd71a2df25",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad10d6b3-779f-419f-bb8d-6cc81dd055e8"
            }
          }
        ]
      },
      {
        "id": "2fd3f173-820c-4d39-9466-5fcf4b19d239",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c4acd246-3390-4cdc-b73d-db9d101c1813",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dd9ed725-c8b2-404d-b881-7aa32189df5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93e0cbed-174a-4e0a-b5ec-02d969fadd42",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0e6541-6b24-4044-b435-eb1c6901aa3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "60152e7c-2b06-4738-8ef9-62d416052748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46227629-f5f0-4c8f-b20b-23a4b45fd68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bebbcd04-6c80-431f-a9c4-abc78a0aa108"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "86b72a77-508c-4dfe-9994-ad4f47b08384",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "956f7dd8-9df1-44a2-bb92-9f58c82fd264"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "88df41a5-d363-46e5-941f-ebf1b809b155",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "221a0f00-0175-4184-8066-4849409c9c51"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "351fd98d-d877-4398-9c27-db4613d9d409",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b82cef52-5a92-461d-a47e-6660c5901631"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a51d12a4-bb00-4fb9-96e3-0e0238682c57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fdbd01d1-e365-4a42-a285-20621104b88a"
            }
          }
        ]
      },
      {
        "id": "025ad6f3-4a6e-4ba3-a6dd-e272215245ef",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e0525ef5-dae2-4b46-9b61-77333e707f1e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "666afc43-c69f-4d6c-88c7-40c69ddbcda1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b44a1039-3752-4fb8-a7ee-fd0fd6f2eda9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a25434-d48b-4247-aa80-71da66f6fc32",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a34c1f1-5c85-4c7e-bc07-78797d541c26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06127bdf-3311-4ab9-9355-1a4417ec93d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c8555884-1dcb-4c37-b9ab-aa58cdcb95c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5badb184-c80e-4584-b987-d2b5688fe4ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7faa6ab7-1401-4471-b115-104df6d2480a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3dee84a-6c3b-4c17-a6fe-f5e1171aa938",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97416832-ea27-4dd3-ac8a-c51449843584"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3afae97-1f5a-4f79-9e34-2259f4a52604",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7e4d5c45-9811-45f8-b40a-0f42964eeb86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20e57765-3ce2-4391-ac53-fd23241b1597",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "367ca6c2-9d0f-4311-b4b9-86a45d9729fa"
            }
          }
        ]
      },
      {
        "id": "5d292bb4-859c-4255-bd3d-da1bbe6635f2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bf997a7f-682e-4db0-b5c4-c6617889cb92",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf1e252a-151c-4191-9144-ee5e03aca970",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d4b294d3-0cb6-4976-9762-fa0fabb41535",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00c9653-b77b-4111-bb87-609c05d04ab1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4fd726f-b288-4ae4-85d5-03b7c40b03c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d6180d-8faa-4ab9-b491-94e907d87080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99ad0aef-0013-4027-95e7-46556c1b0dbc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1a399be-f557-4036-97bd-faddacfa2439",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7becd16b-9976-4efa-8fc1-a59d0f52ed21"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "180ca22b-2f23-4d11-890f-967ccb82eb65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5faaebda-0ff6-455e-bd88-7458dc674ef3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e339aee-5ed3-44ac-94b2-e5d8ff025020",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aaba9395-eddd-496b-a4a1-cf7956b4ed1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "298c5825-b378-4a4f-a8b6-07c63bd1080d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c83109f5-ff48-4e12-b1b2-59f8a648245f"
            }
          }
        ]
      },
      {
        "id": "bd31fb76-c2ed-4764-80da-8700746a2b5a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6152b07e-b76a-46f8-a251-3d895d16f03f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7617e6b-cbad-4596-a0cd-7826fbc3b0f2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5020628c-3c55-406d-8166-09c61db3ce1f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b78840b1-445a-4190-82c8-020a077ce914",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ba04046-1e8f-4bed-ac8d-a4d962a15213",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 115.34920634920636,
      "responseMin": 12,
      "responseMax": 10101,
      "responseSd": 707.4582865874669,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1718671133452,
      "completed": 1718671170877
    },
    "executions": [
      {
        "id": "8f87a16c-9dce-42c3-81b8-734cd90b8cb1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5e3efdfa-fa36-4ed4-aa3b-34f7506ac407",
          "httpRequestId": "26847a49-6a5f-42a0-bf1b-d01a919ecbc2"
        },
        "item": {
          "id": "8f87a16c-9dce-42c3-81b8-734cd90b8cb1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d8f81cf1-ca29-4216-a2b6-b376e1bc037c",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 0
        }
      },
      {
        "id": "09647b0a-3008-441a-9b19-da85c27d6ec5",
        "cursor": {
          "ref": "bb00efa7-b0f6-43f1-a7a3-62392d786079",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "503b4106-52a8-4c84-a111-b206ecfbb812"
        },
        "item": {
          "id": "09647b0a-3008-441a-9b19-da85c27d6ec5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "706287ff-c9a2-4cbf-9489-c02a9810df36",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 0
        }
      },
      {
        "id": "d0eb4c2c-47cd-4215-a4c0-1c8851681bce",
        "cursor": {
          "ref": "96bde0e3-1665-4620-969d-13472b2d06bb",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "279f067a-4246-430e-8ed2-53fdd54c0d52"
        },
        "item": {
          "id": "d0eb4c2c-47cd-4215-a4c0-1c8851681bce",
          "name": "did_json"
        },
        "response": {
          "id": "6aff666c-670d-44c3-9932-3ef087c26024",
          "status": "OK",
          "code": 200,
          "responseTime": 339,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf050cfe-41e5-444b-b9ca-216c99e5a0e3",
        "cursor": {
          "ref": "f646628d-2b94-4d65-a0bc-6e817cfb2c09",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1cb4cc6c-7cf8-4cf0-bf70-f091511dbd1a"
        },
        "item": {
          "id": "cf050cfe-41e5-444b-b9ca-216c99e5a0e3",
          "name": "did:invalid"
        },
        "response": {
          "id": "fa2c8a6a-a7da-4032-bdbd-ae798dc56b90",
          "status": "Not Found",
          "code": 404,
          "responseTime": 407,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf050cfe-41e5-444b-b9ca-216c99e5a0e3",
        "cursor": {
          "ref": "f646628d-2b94-4d65-a0bc-6e817cfb2c09",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1cb4cc6c-7cf8-4cf0-bf70-f091511dbd1a"
        },
        "item": {
          "id": "cf050cfe-41e5-444b-b9ca-216c99e5a0e3",
          "name": "did:invalid"
        },
        "response": {
          "id": "fa2c8a6a-a7da-4032-bdbd-ae798dc56b90",
          "status": "Not Found",
          "code": 404,
          "responseTime": 407,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc8eeb0-3cd0-420a-979f-59b8fdba1135",
        "cursor": {
          "ref": "ce7556c7-56e2-4580-9740-cd3b156ab11c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "678f0a82-2876-4781-a3dc-ad169be8f7c3"
        },
        "item": {
          "id": "adc8eeb0-3cd0-420a-979f-59b8fdba1135",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "50f90860-3307-41f3-b1fc-1d88322c6a64",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8271a62-ed48-4390-ae89-8ad3a2d2df6a",
        "cursor": {
          "ref": "23c43bde-89bc-4880-aa98-ce1ce5f7da5c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a16da516-422c-4907-885a-410baf3a3fcd"
        },
        "item": {
          "id": "e8271a62-ed48-4390-ae89-8ad3a2d2df6a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4ba349e0-0041-4310-a90d-8965be5e32d5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd47b523-d2f5-412c-983b-1ce5b4cbc584",
        "cursor": {
          "ref": "d43e5bd6-bed5-4c4f-86e2-bc62017f8f39",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e58477ae-30fd-4e36-8bc3-2c4e13efbbe8"
        },
        "item": {
          "id": "bd47b523-d2f5-412c-983b-1ce5b4cbc584",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1caa5caf-a429-4d5f-a5e9-14f42c3fc922",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13afa49-0cbd-4102-959f-090590b90805",
        "cursor": {
          "ref": "188ca30b-61a8-4e4d-9395-3a697b7d7b53",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ee131e45-833d-41f1-9d0c-4a355e84db43"
        },
        "item": {
          "id": "f13afa49-0cbd-4102-959f-090590b90805",
          "name": "identifiers"
        },
        "response": {
          "id": "2ac19a3e-55d4-44cd-b986-5019e3cbffaf",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf2125a-6b60-47f3-8a96-12d4c2fea49f",
        "cursor": {
          "ref": "1afc7b9e-0a3c-43f5-9bdf-f56d32134dba",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e06a8cdf-0795-4463-a811-7dd8d22ceede"
        },
        "item": {
          "id": "4cf2125a-6b60-47f3-8a96-12d4c2fea49f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0e80bb5d-c5d2-4ea0-a422-d75625367874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6478b449-6f38-470b-a936-b410e1f69d3f",
        "cursor": {
          "ref": "77ffe992-6036-4e3f-b478-f75e91f7bbf0",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4aea1f46-d1b5-4687-8a8c-75bcfec5dc70"
        },
        "item": {
          "id": "6478b449-6f38-470b-a936-b410e1f69d3f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6429f560-c665-42a3-8d0a-a7251d02fea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956ffe46-2e66-4642-a690-6a5ca87f80d7",
        "cursor": {
          "ref": "cf16109f-c761-4e74-8c2a-4045add33485",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "28da2835-8876-4dc1-abf3-477141e83d55"
        },
        "item": {
          "id": "956ffe46-2e66-4642-a690-6a5ca87f80d7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e4799d7b-cfd8-4659-9a7e-b520c3dc1dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a594ae5-97ab-4b80-83ae-253e6a03339f",
        "cursor": {
          "ref": "12f8391e-d38d-477b-9140-65418726241b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f25efb7b-3219-49b0-8b33-a784d44addc7"
        },
        "item": {
          "id": "2a594ae5-97ab-4b80-83ae-253e6a03339f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0f685289-9ab6-4b6f-880d-1a327a2a29c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b22f7a4-54a3-4c24-9073-c55fe9295801",
        "cursor": {
          "ref": "d880b7f4-3c1c-47e8-b553-3333fef519fd",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "759a1e1f-48a9-4327-9d82-7a4f66d6e35b"
        },
        "item": {
          "id": "0b22f7a4-54a3-4c24-9073-c55fe9295801",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4666307a-63bf-4071-a46b-cf0a967b8a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76eacf32-09a0-42be-8c09-c9312fa116af",
        "cursor": {
          "ref": "b89ee5a9-e477-4ee9-9110-b82ff96d2d42",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "cb7b87c0-de74-4f35-a56a-be10f3194b6f"
        },
        "item": {
          "id": "76eacf32-09a0-42be-8c09-c9312fa116af",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "55dcf9c6-8076-4f89-88eb-681bdf32cfc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3a8505-8532-4028-bc57-2b0bd87a516e",
        "cursor": {
          "ref": "038c0ce0-45cc-43d2-8bca-bd49677ef17d",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "bd36b105-a8ff-487c-84d9-090062454efa"
        },
        "item": {
          "id": "dd3a8505-8532-4028-bc57-2b0bd87a516e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e4881021-a97d-4dee-94b7-e28153f1393b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076eaad7-5b5f-4166-83b8-ef08b6c308f1",
        "cursor": {
          "ref": "926c71d8-ef24-4b9e-b04a-86999cceeecd",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ea935a21-0f2e-4782-8c7a-4decd6fa2635"
        },
        "item": {
          "id": "076eaad7-5b5f-4166-83b8-ef08b6c308f1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "98b204db-5510-4a2d-badd-c2ebb5716564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de3dc5e-01b9-453c-b4bf-242fed4261c4",
        "cursor": {
          "ref": "fea69946-0dbd-4b94-892c-7d13df60f3f8",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8551ee35-499d-4b2f-865e-3f57f1d1b34e"
        },
        "item": {
          "id": "6de3dc5e-01b9-453c-b4bf-242fed4261c4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "02d383b2-5817-480d-86ed-fda5ba2540a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39a15ce-f74b-4a07-8ac4-e1df616ac9ed",
        "cursor": {
          "ref": "f396f834-1917-422e-aec7-42ad8e152083",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5d41d4c1-d6c4-4bc2-89c1-83a1a7790cd8"
        },
        "item": {
          "id": "a39a15ce-f74b-4a07-8ac4-e1df616ac9ed",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "19a24822-d65a-4de6-ba5d-a90e18eb32f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70994b6-1fae-4c19-84a6-2b304a3b1acb",
        "cursor": {
          "ref": "9510ea39-a0d8-4d96-9fd4-631a5fddc8ef",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1fddc46e-3a8f-41d1-b05b-36c27b92fc93"
        },
        "item": {
          "id": "b70994b6-1fae-4c19-84a6-2b304a3b1acb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4f9b3bb9-1ede-4066-94e3-f460852283e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0934c143-92f7-45be-87d6-cd2f2ed95ffc",
        "cursor": {
          "ref": "864c3598-c0c9-4ea0-9846-662dd77e5b37",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6cd39760-10ce-4cc8-a4a6-35b02edd445e"
        },
        "item": {
          "id": "0934c143-92f7-45be-87d6-cd2f2ed95ffc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ab386ff8-b5bb-41d9-9463-bda58eb9aeb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25a3d86-f92b-4cf9-a78b-00c433589ada",
        "cursor": {
          "ref": "6fbbadcf-9cd0-424b-a3ca-ff5b35436d57",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9403ebae-c7f0-41d3-a538-3fff0d03b024"
        },
        "item": {
          "id": "f25a3d86-f92b-4cf9-a78b-00c433589ada",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c524de9c-f83b-4e2c-831f-ff192702fef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e204db66-e66a-4450-ad51-b434ee329b9b",
        "cursor": {
          "ref": "8ab75d10-7e34-4e49-8f14-d89734db1c2e",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ce4caddc-cfde-474f-ba3a-8cde37ba7f7d"
        },
        "item": {
          "id": "e204db66-e66a-4450-ad51-b434ee329b9b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "87e94cdc-a2bf-436e-b2c6-63bbc6d47f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eeba533-7ce0-4c5d-885b-b77314d3b5fe",
        "cursor": {
          "ref": "ff60f0d2-b086-41d7-922f-4a44bbb227fe",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a5e55499-629d-4fc3-a5d6-4c9bf954978e"
        },
        "item": {
          "id": "3eeba533-7ce0-4c5d-885b-b77314d3b5fe",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "287d4d58-60ea-445b-bff5-884619529644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6db0f4-9d9b-4ae3-9f4b-19b825ce9ac6",
        "cursor": {
          "ref": "12ef422c-2f66-4bcb-ba7b-2cb6b742d97d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0cf07cfc-57aa-4913-8d04-22e63c397eae"
        },
        "item": {
          "id": "fd6db0f4-9d9b-4ae3-9f4b-19b825ce9ac6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2cd57200-7ff7-4a03-9da6-baf50249a8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f560bc55-85d4-426c-b4e1-e2f2aad57911",
        "cursor": {
          "ref": "5465cb63-2a17-41c1-8380-ccf0b45d8dcc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4d0be76c-0dc1-4aa7-9f9c-8f15fc25b8fb"
        },
        "item": {
          "id": "f560bc55-85d4-426c-b4e1-e2f2aad57911",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "dfe5030c-28cb-4e9c-b0c3-246ff9f5b8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc5c639-2d81-45c9-98ba-d38143ca5ae2",
        "cursor": {
          "ref": "389146bc-7443-4414-bc58-84d1fa88f7c1",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "478ac386-b30a-4462-b3e9-392974938049"
        },
        "item": {
          "id": "2fc5c639-2d81-45c9-98ba-d38143ca5ae2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c5e01020-2107-45b6-9d45-c98366f01ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae54027-9b29-4713-bdfa-2a9b8fa8c544",
        "cursor": {
          "ref": "36bd0227-b43b-49d0-8bc1-5d396b9441be",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0e3ded16-ab18-4d97-a072-88a083cde3d8"
        },
        "item": {
          "id": "3ae54027-9b29-4713-bdfa-2a9b8fa8c544",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "65b361a0-73f7-474b-bc95-5d2483a903bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fddda4-8764-4ad2-b5a9-227516f360fe",
        "cursor": {
          "ref": "00893de8-f6cd-47c8-af65-3d1ee8b912ad",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "39969f26-48e7-4a76-9c2c-a53e02504c11"
        },
        "item": {
          "id": "46fddda4-8764-4ad2-b5a9-227516f360fe",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b7332241-27c8-457c-b936-71b5ffb703b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb859c03-145d-4ba2-a80d-d7b1fdf9bbea",
        "cursor": {
          "ref": "f1afdeb6-8e68-4b8a-be45-058514bbdef8",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1551dd94-017e-4280-9f42-0adce0d9b27a"
        },
        "item": {
          "id": "cb859c03-145d-4ba2-a80d-d7b1fdf9bbea",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6f18ea27-093a-44c5-9d2a-dfcfd86f18a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef88f89-7e66-4010-bd3c-712f18c1a0e4",
        "cursor": {
          "ref": "78f50cff-ea54-4468-a066-cb330ae90810",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "13266b97-c13c-4d38-831e-34e41e8ecd74"
        },
        "item": {
          "id": "1ef88f89-7e66-4010-bd3c-712f18c1a0e4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "76a69a3f-9a87-439d-a7cc-4a9ff2b618e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7a1538-8d4a-49f1-9db8-df955fd88641",
        "cursor": {
          "ref": "3ee4212b-f0e0-4914-82e9-409cd3f64f80",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f00111b0-38ed-445f-bec2-8dcbb4544a1c"
        },
        "item": {
          "id": "bb7a1538-8d4a-49f1-9db8-df955fd88641",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "46a0262d-a64f-43fa-934f-6325a8c4e4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53180c6-0432-4f5b-9450-560ac06e870a",
        "cursor": {
          "ref": "98da89e9-846b-4b3d-9a64-da4decb8bbcd",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "751a8f22-96c6-45ec-b1f0-a82f4633ccb7"
        },
        "item": {
          "id": "a53180c6-0432-4f5b-9450-560ac06e870a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "94021b05-7cf4-45eb-9008-246191ca41c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c1499b-b43c-444d-85ee-c67009ad411e",
        "cursor": {
          "ref": "bf63f81c-9358-4790-a0b7-ae469c33f4b6",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7314b227-bede-4ca7-8663-ccc4065af084"
        },
        "item": {
          "id": "d2c1499b-b43c-444d-85ee-c67009ad411e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c9ccc858-aee6-48ba-aea9-7ed3e9d07930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a66e46-4dee-4581-bcb0-2a63db9d5569",
        "cursor": {
          "ref": "1b0f9ab7-e46d-4085-a57d-19699adbc56c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d39d3193-a096-4b64-a6cd-91c2e1a4a233"
        },
        "item": {
          "id": "e9a66e46-4dee-4581-bcb0-2a63db9d5569",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4c6f5349-22cf-4c30-b243-56adbf01cd6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4579668e-b0e4-4e32-9a29-65519d891e52",
        "cursor": {
          "ref": "62a173e7-1b18-4d2a-841d-0a43d375b3f3",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d4d35410-2f71-451e-95eb-80adb4a56450"
        },
        "item": {
          "id": "4579668e-b0e4-4e32-9a29-65519d891e52",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "63738772-24b8-4b78-92b0-e549a7fb63f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd82d593-6f5f-4c8f-8c64-f679ea1b1684",
        "cursor": {
          "ref": "8914a77b-a9ac-46d1-86e8-730a49cb8f2c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e03ae24d-8a3f-458a-b720-8b5b7680dac9"
        },
        "item": {
          "id": "bd82d593-6f5f-4c8f-8c64-f679ea1b1684",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9bf47136-3b23-4bea-b1a9-07267d6b1187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29943c3-fec4-4ad6-a48b-d625cb30b0c5",
        "cursor": {
          "ref": "e57905cc-3d02-44e9-91d9-1e9f001db288",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "83aee4ce-6939-4bfe-8b47-b1e91a58eb5e"
        },
        "item": {
          "id": "f29943c3-fec4-4ad6-a48b-d625cb30b0c5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4a9a9b32-394d-42f5-9bf8-a5ad10875bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf12e229-d61d-445c-837f-0397bfc67c13",
        "cursor": {
          "ref": "5c130597-0717-49b0-9c96-c2250e07c326",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "19ad26c6-d8e0-45a3-9237-80d8be22b639"
        },
        "item": {
          "id": "bf12e229-d61d-445c-837f-0397bfc67c13",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3d2fee05-4021-4cb2-bc50-341e7ee555b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022519e3-5164-4224-a291-81677001705b",
        "cursor": {
          "ref": "cde1b6b6-fe6e-42e1-9537-d3dd51034b48",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "198ad95e-bba7-4d9d-aeba-6dcb95873da2"
        },
        "item": {
          "id": "022519e3-5164-4224-a291-81677001705b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "20481702-622a-4422-ac3e-226b85fb3fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57827fd6-7e6e-40b1-b482-c8bc3d4e194e",
        "cursor": {
          "ref": "db784732-6b19-4c05-9779-934202b23e30",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9048d549-0f01-46a6-9f34-d92544ca3d2a"
        },
        "item": {
          "id": "57827fd6-7e6e-40b1-b482-c8bc3d4e194e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "68a1b87a-ee9b-49f5-849d-d9daa6a49084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae30984-b25e-4cbd-a764-414c54645d2d",
        "cursor": {
          "ref": "d76a063f-770d-41fe-82d3-92e8db4db15a",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "eb1563f9-dff5-492f-bfd8-77aea228972a"
        },
        "item": {
          "id": "7ae30984-b25e-4cbd-a764-414c54645d2d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1f05f251-cb8f-476f-9165-799f0bbfdde6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e972308e-eae8-48c7-81bb-2ed15b3a21cd",
        "cursor": {
          "ref": "aaf3f87c-cd7e-47a4-92ea-697a1f34a09e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b93b750c-2798-4d70-beab-5d66b7c96b92"
        },
        "item": {
          "id": "e972308e-eae8-48c7-81bb-2ed15b3a21cd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3dd03df7-082d-429f-93a8-ca2840069b0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5051cd-c97e-4859-84fd-c738d50d5900",
        "cursor": {
          "ref": "5579414e-7ecf-4faf-83d0-94cbabf59383",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "f4d27079-c3a1-4f18-b1cf-0f3bc03719ec"
        },
        "item": {
          "id": "1a5051cd-c97e-4859-84fd-c738d50d5900",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5d7bc41b-3592-433f-9c8d-cd252c1185ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ccfeb8-2bda-4097-843d-190dd9aa8d74",
        "cursor": {
          "ref": "9c3321b4-abd1-4346-83f7-34fd89a2dd28",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5e47da3e-5999-4aed-8ceb-69f21e23ce57"
        },
        "item": {
          "id": "b2ccfeb8-2bda-4097-843d-190dd9aa8d74",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ebc83f0e-7326-4de2-862d-8a387ea9191c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eadf825b-b553-4b52-aa30-329c865e0a08",
        "cursor": {
          "ref": "8e090acc-56b2-4149-a828-7620c889c33d",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9d38df60-6258-42f1-9cb6-951ec7db315b"
        },
        "item": {
          "id": "eadf825b-b553-4b52-aa30-329c865e0a08",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f9dbd587-e6cf-4fe7-8ca5-117910b71b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a181aba5-664b-452f-8b93-1680e369d1cb",
        "cursor": {
          "ref": "05c414f8-7a99-4397-abda-bb56c819048b",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "26e9c462-bf01-4ae8-a41d-2cad85e8788d"
        },
        "item": {
          "id": "a181aba5-664b-452f-8b93-1680e369d1cb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5ed98700-9d06-4c71-ad9c-f0f1bd3c546a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed38b3d5-e2de-47a6-9124-05e01aa7fb36",
        "cursor": {
          "ref": "3d8829ca-3553-42b7-9182-ba3d81504e74",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "802e2213-8bce-4313-b082-c7e52cbb0092"
        },
        "item": {
          "id": "ed38b3d5-e2de-47a6-9124-05e01aa7fb36",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4d08a506-1b88-4168-aae6-c3c80ea7e6e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a29810-5f9b-453e-8bb6-8d97109fd5c9",
        "cursor": {
          "ref": "b4955580-4d47-44ac-8a39-7b73f7bd6786",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4e557a19-6de4-4882-906c-81ca2a05917b"
        },
        "item": {
          "id": "a5a29810-5f9b-453e-8bb6-8d97109fd5c9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "07298861-9961-49a7-9354-cfd1f2915e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ef725d-eb0e-4504-a67a-edabc2ae11d5",
        "cursor": {
          "ref": "8ad5121e-cca9-4900-9618-31d3aa34d871",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c45980f5-31a2-4dd1-beef-587543cadabb"
        },
        "item": {
          "id": "54ef725d-eb0e-4504-a67a-edabc2ae11d5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "43b6eaf6-18cd-4641-98bd-83d1a2fee6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814037c1-9e25-462a-b19a-e628ee595871",
        "cursor": {
          "ref": "ab1eda94-509c-489a-a1bf-2d7929d43cdb",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "03bceaaf-4bb7-4804-81ba-547ee9e00cb1"
        },
        "item": {
          "id": "814037c1-9e25-462a-b19a-e628ee595871",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9474b25c-4382-4412-a285-fa7302425e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4e42fb-32db-4d9f-a368-9b9b4ccf5d6a",
        "cursor": {
          "ref": "06d4135d-2e85-4f61-be02-967305719671",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1022b1c1-908e-49ca-9193-7676dc6444ae"
        },
        "item": {
          "id": "3c4e42fb-32db-4d9f-a368-9b9b4ccf5d6a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b6c83b93-c624-479c-9106-e0cadb5a34f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef116fcc-27ec-4ac7-908f-502744d62d05",
        "cursor": {
          "ref": "a943c03f-7204-46ab-adad-d829994aa1b6",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f5188c22-9f0f-4a96-8c74-1ec4e39e4550"
        },
        "item": {
          "id": "ef116fcc-27ec-4ac7-908f-502744d62d05",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9ce96695-9abb-4fd1-9d9f-16277654f89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8a5c9f-c272-4e72-a769-d3ce7662369c",
        "cursor": {
          "ref": "7ecf984d-cd7c-4ec7-b2ec-76078d2a6b6d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "58c3f89d-2964-4512-876c-81fea2c4f475"
        },
        "item": {
          "id": "2e8a5c9f-c272-4e72-a769-d3ce7662369c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0fb737c7-d4c3-4780-8bfb-d7634b0ed322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bd1964-d8fd-4379-8f94-edea644a675c",
        "cursor": {
          "ref": "9348d078-02ce-43aa-a4b1-01c2c045eb16",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3869722f-1c40-4dc5-8ac0-76fef925fb82"
        },
        "item": {
          "id": "54bd1964-d8fd-4379-8f94-edea644a675c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "14c38952-1f99-409a-bd36-b07bffaf0772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32827aeb-a30b-4f93-a425-c4bca2c8b1f4",
        "cursor": {
          "ref": "0c3f8b2f-96f9-44af-b7a8-994f8cf9f43e",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "00b4c49b-4752-4807-b4f5-51fb80c214ce"
        },
        "item": {
          "id": "32827aeb-a30b-4f93-a425-c4bca2c8b1f4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cf87affc-a161-42d8-a3b0-c3517f501986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c5fef5-7986-4c5b-85c5-a265c7a8f927",
        "cursor": {
          "ref": "8fa80fc8-b00f-4cef-936b-1a89be0c166f",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "488dbac7-2e13-4aa0-938d-ee94c3557172"
        },
        "item": {
          "id": "69c5fef5-7986-4c5b-85c5-a265c7a8f927",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1c62d7a8-2457-4b28-bc2e-0ebc839ded3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dbd3a5-4e76-40c8-8b0f-29e8b306ab0b",
        "cursor": {
          "ref": "a9d16da3-22f6-4fc6-b0fe-1bcd2512245d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2df12755-adc9-417a-9f65-206fc49abfed"
        },
        "item": {
          "id": "c9dbd3a5-4e76-40c8-8b0f-29e8b306ab0b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d6f811a1-ed10-454c-9d87-80e28316f262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d53a88ef-99da-4a09-a504-1ca1c6ec5051",
        "cursor": {
          "ref": "cdc06d75-12d7-435e-a5ea-d9e8ed28ad5d",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e2109437-fd29-483b-81ad-4e75bddd04bb"
        },
        "item": {
          "id": "d53a88ef-99da-4a09-a504-1ca1c6ec5051",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "de37dd99-203b-494e-be1a-baee0920747e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b564d923-f2c5-4c05-8bd5-258ab7a84df9",
        "cursor": {
          "ref": "755723cb-c8f8-4718-b423-771727404d24",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "f2fb4971-24c0-43e4-84ee-f9307207d680"
        },
        "item": {
          "id": "b564d923-f2c5-4c05-8bd5-258ab7a84df9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "43fcf319-6730-4ab8-89e2-5472956ca69b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fef18dc-faf4-4a57-af70-fbd521448ab8",
        "cursor": {
          "ref": "321af853-ae8d-45b4-a402-60d276ac73a0",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e8c9b8a5-cc50-4e45-85a6-0fbc9ffceb58"
        },
        "item": {
          "id": "6fef18dc-faf4-4a57-af70-fbd521448ab8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "74435b4b-19d4-4f50-8a30-b7f011763acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2acae93-5169-4d15-bbe9-6bac858ee101",
        "cursor": {
          "ref": "4e1a0b50-dc5e-42c3-855e-927475e7f880",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6511cbd8-aa0f-4df7-8a9e-8d05d676322e"
        },
        "item": {
          "id": "e2acae93-5169-4d15-bbe9-6bac858ee101",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b1c45f83-fd81-4c5b-acb0-83be0990ec61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e41227-8a07-4c30-9a64-505b106adf85",
        "cursor": {
          "ref": "3cd6900a-4f28-4fb6-a6e6-d8400dec2c70",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f78f3279-d2e2-41da-80d5-ad55b54cec4d"
        },
        "item": {
          "id": "54e41227-8a07-4c30-9a64-505b106adf85",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d4c4415b-eea3-405a-a195-249d56f3c7d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90758622-c100-4e5c-99df-6664a7f72b77",
        "cursor": {
          "ref": "f9b6fdf8-1b90-4d26-a6fa-3d1599c50e73",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0d89a950-725f-40fa-9f4f-0838072abd46"
        },
        "item": {
          "id": "90758622-c100-4e5c-99df-6664a7f72b77",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d19ca19d-4c1b-43b3-94aa-aaef99ac9d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f1ef69-d7f2-433d-a42d-79a207cba658",
        "cursor": {
          "ref": "770bc4fd-6cf0-4428-b7cd-40ec1f5d688f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "92e40dd7-d85e-4c55-9537-737ded864519"
        },
        "item": {
          "id": "47f1ef69-d7f2-433d-a42d-79a207cba658",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b3c052f5-58c6-4b77-aa34-14b2e6ff5df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe6daa8-e6da-43f2-b31a-fdb2fc8a9fe9",
        "cursor": {
          "ref": "789f07a8-e39e-41a7-9fb8-e1ee3de3ee8d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3563ac6b-0181-40f8-96e2-1798cf099c66"
        },
        "item": {
          "id": "9fe6daa8-e6da-43f2-b31a-fdb2fc8a9fe9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "58f3de56-7c79-4219-a7b0-1d3b574bbc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9862a56c-4ec0-4fe7-8d3f-d45a6682d016",
        "cursor": {
          "ref": "1b7d0f8b-e4d6-4f54-8197-52284fdb0b47",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b5003898-51c0-4160-909d-dc07202d43a5"
        },
        "item": {
          "id": "9862a56c-4ec0-4fe7-8d3f-d45a6682d016",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "475603b5-58e6-4254-9f24-b39fd83a3922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dabc956-a186-43f0-8f8f-092da12d9895",
        "cursor": {
          "ref": "6b66e5a7-b831-4b6d-ace5-177ddb6745c3",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fe229f79-b1fd-40f4-bd02-d1722f242733"
        },
        "item": {
          "id": "9dabc956-a186-43f0-8f8f-092da12d9895",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "826f0e65-3dfb-4bdf-afca-cecf7e2d7291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c742f2-e2b7-470b-b498-98166c05c29b",
        "cursor": {
          "ref": "53bd6ebb-0815-4e3a-a7d0-7df95c194f34",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "58dfaa2a-71a9-4320-b87f-612663d6bb1c"
        },
        "item": {
          "id": "c4c742f2-e2b7-470b-b498-98166c05c29b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d27d2fc2-1855-4b2e-a764-97a8879a4d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0806f45-533f-4750-bcaa-874679e4136d",
        "cursor": {
          "ref": "62cdf13b-bd19-4df1-8002-f8b1398d8813",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d93727e7-c9a5-41a1-82b5-f56203cb3381"
        },
        "item": {
          "id": "d0806f45-533f-4750-bcaa-874679e4136d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bec10461-99c4-475f-8fb2-7dadbb13f2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da8e793-fb7e-4346-8fab-f0341c445db1",
        "cursor": {
          "ref": "fa2decef-d0f2-4fe6-aaeb-2450d789ef9c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "792f64c1-d3ee-4053-8a36-16967f58bfd5"
        },
        "item": {
          "id": "3da8e793-fb7e-4346-8fab-f0341c445db1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "04d9576e-143f-4fc1-9e87-93fce7f9be42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f182b56c-94d0-4cab-b7bc-7f7b3c025560",
        "cursor": {
          "ref": "bee6b67a-7379-49db-87b5-bad46d5d106a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "52df975d-f1c2-4f8c-9583-39217adc54bb"
        },
        "item": {
          "id": "f182b56c-94d0-4cab-b7bc-7f7b3c025560",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "95032fba-e59f-45ed-b4fd-ff056c90fb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48258e99-5bad-459f-b7c6-d9130292939d",
        "cursor": {
          "ref": "afbf0782-3f24-402b-a00f-f35bc7062673",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1d8e23c3-b2ed-4130-b5b3-e321fbb1409c"
        },
        "item": {
          "id": "48258e99-5bad-459f-b7c6-d9130292939d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7206d3e2-7a5c-4cde-81c6-151fc7fb4d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53800341-732b-459e-aca4-f04be5a1b78e",
        "cursor": {
          "ref": "ee3b7010-b5e7-4056-a524-5e6042d0cb2a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "89dbba91-9bdc-4f71-a7b3-0b57a63f1af0"
        },
        "item": {
          "id": "53800341-732b-459e-aca4-f04be5a1b78e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a6cfcb76-f6cd-46e3-af8e-50ad2baea5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c936b367-9656-460b-ac0a-df4dac6861d2",
        "cursor": {
          "ref": "a0b63f81-0a2b-4a49-af33-7b4a8b5562eb",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bb889710-26c3-43c2-92a5-227bbdd253aa"
        },
        "item": {
          "id": "c936b367-9656-460b-ac0a-df4dac6861d2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "30fee3b0-cd08-4510-905f-d570d1b0e52d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83982e3-b039-4b1f-b652-1bba5fcfa3a9",
        "cursor": {
          "ref": "8920eed8-fc94-461a-b51e-896a25edaebe",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6792922f-393e-4cd6-9fab-5e3e3e48358d"
        },
        "item": {
          "id": "f83982e3-b039-4b1f-b652-1bba5fcfa3a9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "abafd048-612a-4848-95d9-9fa24ac2caae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913ad611-ada3-4294-8af3-135ea2aa5032",
        "cursor": {
          "ref": "e604e2a5-cb73-4230-b7c1-87d3d8a94421",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "3a424243-fb6a-4de2-ad8f-f411bfe818d1"
        },
        "item": {
          "id": "913ad611-ada3-4294-8af3-135ea2aa5032",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d913bf04-29ec-4c16-9d2c-0e0e664c8856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9189a4-a463-49e5-be3b-5abafe45fc7d",
        "cursor": {
          "ref": "a51ebdbf-f823-4060-9a03-c0f9894444a4",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bea52592-5666-446c-9f71-d06e9ff52b5f"
        },
        "item": {
          "id": "5e9189a4-a463-49e5-be3b-5abafe45fc7d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ef4a90a6-1cee-4f76-b959-86185ca7175e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71210364-69c1-473a-9429-7e72f632c326",
        "cursor": {
          "ref": "59825b68-f011-4263-b00c-d7239e3db384",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e83c7bb5-7115-4d10-93b2-17c17e72ecf1"
        },
        "item": {
          "id": "71210364-69c1-473a-9429-7e72f632c326",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "73f2cee7-75f9-407b-88f9-95769e4c26fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe51525-bb3b-4d63-a900-020aea348d88",
        "cursor": {
          "ref": "fa8628a2-6760-4ca4-bf8d-04dba88d27b5",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "60a8d7dc-78bf-40f5-88f1-6f6ca0569708"
        },
        "item": {
          "id": "8fe51525-bb3b-4d63-a900-020aea348d88",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f79234ae-dc3e-45a0-b083-ac670a213a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5bffd8-57ce-424d-8b6d-459bddb6b7a0",
        "cursor": {
          "ref": "43cae3f3-53ca-40cf-96b4-be44f2258866",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "02ddc079-ebcd-4674-8f1c-8878697b2840"
        },
        "item": {
          "id": "1e5bffd8-57ce-424d-8b6d-459bddb6b7a0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6306d476-61da-4784-a3b7-473fe40bcdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115aaa31-382d-494d-bcd4-e483fa7dcaee",
        "cursor": {
          "ref": "4dc8d63d-6c1d-4709-bc03-ccbff8209551",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1cfad11a-282f-47cb-9ed7-f1ee3adfa443"
        },
        "item": {
          "id": "115aaa31-382d-494d-bcd4-e483fa7dcaee",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e7a8adc3-6702-4c4e-977e-01635dbaa436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fc3877-5628-4885-963e-41759e663b50",
        "cursor": {
          "ref": "e6849718-3d49-4349-874a-bb7ff6040057",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "31295890-ebee-4d79-83f0-0f99a2a408ad"
        },
        "item": {
          "id": "62fc3877-5628-4885-963e-41759e663b50",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9153fa19-346c-4f2c-95cb-c8e6a1aed9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01c1ca5-c6a3-4860-93d0-d78c18d1dae2",
        "cursor": {
          "ref": "8f417e22-6ed1-48b6-b401-a15e3dd7bf6a",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "a7ee7726-c410-45a7-8dba-37e2637ad10a"
        },
        "item": {
          "id": "c01c1ca5-c6a3-4860-93d0-d78c18d1dae2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5c6077ed-1027-4040-98be-537e93ae53d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82ccc92-9844-4db8-9e71-9f30635b1dc4",
        "cursor": {
          "ref": "478791c1-c6cc-451c-b696-a5221b25782f",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ce0e6a57-0a27-4178-bdac-59c9fd1bf58d"
        },
        "item": {
          "id": "e82ccc92-9844-4db8-9e71-9f30635b1dc4",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e6c0294f-8803-481d-84ff-11a601df7cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e14deb-4269-48e4-80aa-4f5216b80a7c",
        "cursor": {
          "ref": "99f7e8ce-e069-4511-8053-6073a36fe2c1",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "362750d0-b0f3-4d43-91c9-a50cb60ebad2"
        },
        "item": {
          "id": "52e14deb-4269-48e4-80aa-4f5216b80a7c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "4f5fee9e-b2b3-4e50-89d9-1ba17b5f6707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bb07a3-1ba9-4a0c-a67f-88eab5f95841",
        "cursor": {
          "ref": "039b7cad-d413-40f5-a695-89675f4ae065",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "961c4cec-b372-4645-975c-2fdb92746eab"
        },
        "item": {
          "id": "62bb07a3-1ba9-4a0c-a67f-88eab5f95841",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c6d13d89-518c-4c23-a36e-a3ddd9f3ce0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c6f46c-13e3-4535-be4f-804c36797582",
        "cursor": {
          "ref": "c4721a1b-fb2c-449f-9780-97fab8ab2b4f",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "30cd52c0-bde0-4cf9-afc6-5e984a5338e2"
        },
        "item": {
          "id": "b4c6f46c-13e3-4535-be4f-804c36797582",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4c04100c-704e-4d57-8a29-22d9d5bd0099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8350172-1bdf-44c9-87a0-13de2ef72702",
        "cursor": {
          "ref": "9c134f03-0144-42d7-a900-44feddc7a06c",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f91adbd7-4dfd-4c70-81b4-88db72ee5ec4"
        },
        "item": {
          "id": "b8350172-1bdf-44c9-87a0-13de2ef72702",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "02c602fe-d05d-4cca-abb6-f5fbee5a149c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f585dbd9-6fed-4aba-b33e-83acaf2700b3",
        "cursor": {
          "ref": "3eb3c6c6-919b-4aa6-b0f2-45bc28078561",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cc74c53d-aa72-46b5-b4f9-1781ee4883b8"
        },
        "item": {
          "id": "f585dbd9-6fed-4aba-b33e-83acaf2700b3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "300c39ba-7e6c-424f-a5ce-d0ed7952d0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d05900-26df-4336-8c11-913a97ecfe10",
        "cursor": {
          "ref": "b859a105-2a24-4e61-8d1c-717b4a8e9918",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "97df5e1a-a667-41c1-baa6-ce4a272b2a3d"
        },
        "item": {
          "id": "b5d05900-26df-4336-8c11-913a97ecfe10",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "91b490de-57fc-4044-9632-aedd8f2525b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5526c74-e6c7-4d7b-8d13-13829b20d7cc",
        "cursor": {
          "ref": "0ef3c521-4809-4b62-9037-0c0d8bf3cc6e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4d25cc36-4cf1-4f77-aac4-fb59d2ba14ba"
        },
        "item": {
          "id": "e5526c74-e6c7-4d7b-8d13-13829b20d7cc",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fe30af42-3aa4-44f4-814b-d8ed077b229b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfd4ca0-ecfd-4af6-9e97-c63a3b8c45c3",
        "cursor": {
          "ref": "c12572d6-804e-4829-bba5-98d7aefde4b5",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6a202b22-8945-4ca6-bb65-a2763f927326"
        },
        "item": {
          "id": "5cfd4ca0-ecfd-4af6-9e97-c63a3b8c45c3",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "62a169e4-d99c-48a4-bb0a-9d9eec23b706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5e4a23-2b7b-4c0c-9589-5ca22f35e0bb",
        "cursor": {
          "ref": "037d649f-f5d0-457c-832d-f1f508d8997c",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "19043add-c650-4c79-9922-346f8d34a223"
        },
        "item": {
          "id": "2e5e4a23-2b7b-4c0c-9589-5ca22f35e0bb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "31e2b22f-707b-41d8-9d85-e89458141266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0293aa0f-4ebe-415a-b701-16a59069ccd8",
        "cursor": {
          "ref": "011caf6e-8a0a-4b8d-9a38-7e749dcf4257",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6aae03c6-adda-4ed9-bc51-c8d3662c71ab"
        },
        "item": {
          "id": "0293aa0f-4ebe-415a-b701-16a59069ccd8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bafe9bce-0b28-409d-9332-dc7631c1f8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e532f2c-3b11-4eee-aa1d-06f326bc839d",
        "cursor": {
          "ref": "5b789534-1b36-4702-8b51-3da6d5bb7198",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ed9ef85a-60be-4f62-b347-d40b0973da7e"
        },
        "item": {
          "id": "4e532f2c-3b11-4eee-aa1d-06f326bc839d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "02aa532b-c5e2-472f-9234-71412d3753b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a948ce-ec5e-47ca-ab2b-9f1055f445a3",
        "cursor": {
          "ref": "562d85d0-95d7-46f1-992b-bd2d7777d877",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ced12d5c-c1d1-4f2e-8f56-e0984d8d6dc0"
        },
        "item": {
          "id": "02a948ce-ec5e-47ca-ab2b-9f1055f445a3",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3935d8da-a4d4-4137-8c04-44558d85fe6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e413d1b7-81a8-415f-a792-80128052f5cb",
        "cursor": {
          "ref": "6fb96a71-5cbc-4936-a9e1-df22e75842c0",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "75095aa6-1606-410a-aabe-675388874c04"
        },
        "item": {
          "id": "e413d1b7-81a8-415f-a792-80128052f5cb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "170c5dd8-c6b7-4536-bc30-104bcce1e194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1801dda2-c4db-4b87-a187-88cbfaaa8406",
        "cursor": {
          "ref": "335ddb3c-e080-4fab-9188-f7efb5394e5f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2928e0e7-41b9-485a-a604-2a60c87f25a4"
        },
        "item": {
          "id": "1801dda2-c4db-4b87-a187-88cbfaaa8406",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8a3f7418-63d2-43ba-8971-9928846c1889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af8465f-1c99-4e7e-8bda-7d63df383152",
        "cursor": {
          "ref": "00dc4b16-7894-47df-81bc-12a47029d364",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e75e36c9-dde3-403f-b50b-7621f4da4fa3"
        },
        "item": {
          "id": "5af8465f-1c99-4e7e-8bda-7d63df383152",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "aa47581b-4630-463f-b064-029afd2f0e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a558764-d8ca-4b58-8dac-c05da0ae8e5a",
        "cursor": {
          "ref": "d268266d-6a7a-4b49-856d-911dcb4330c8",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d8a2dd32-e921-40ce-8dc5-dfcf2570fe4b"
        },
        "item": {
          "id": "3a558764-d8ca-4b58-8dac-c05da0ae8e5a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "01d41d07-b0eb-4af5-adba-f102e11aba99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0b187d-3697-4ae0-96ea-05deee90b6ad",
        "cursor": {
          "ref": "472befe5-7c8b-4844-8d48-fa3c654322c4",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "71d841a2-0a0c-45d2-90d8-5620ec7762f1"
        },
        "item": {
          "id": "0d0b187d-3697-4ae0-96ea-05deee90b6ad",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "769dea26-f93e-4ecd-86ea-969ffcf323de",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0c6399-aa0d-42a7-86dd-a6b9733f15cf",
        "cursor": {
          "ref": "c7bcdaeb-0f3b-407f-9978-d5e45c8059b6",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "97412bba-3d62-4e55-b946-03521ab68d1b"
        },
        "item": {
          "id": "9a0c6399-aa0d-42a7-86dd-a6b9733f15cf",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0766a9d7-0e3c-4a37-b0ca-0adeab37fa58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e7d5ebd3-c55d-4b3b-b7cb-2852aa79e8b3",
        "cursor": {
          "ref": "8daea1e2-16aa-4518-95d3-9eb2b034a117",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "efceea95-6a3f-48bc-be66-4cc5539828df"
        },
        "item": {
          "id": "e7d5ebd3-c55d-4b3b-b7cb-2852aa79e8b3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6ea64e00-799a-45a3-8215-d928621e7167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "8a709335-3f42-4c68-9d01-19501541d5a2",
        "cursor": {
          "ref": "c53207fb-c055-4ebc-85e6-1c468f791196",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "786f7061-af13-4085-bda5-30dfb7f6be5c"
        },
        "item": {
          "id": "8a709335-3f42-4c68-9d01-19501541d5a2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ca721c8f-47de-4604-865d-3131b1197387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "0bc990c6-d8ae-49a1-8a7c-e418147d95a3",
        "cursor": {
          "ref": "56926a29-4bba-4bb1-a866-a354d892657a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "928c47e9-fd7d-4117-ac72-81a405318987"
        },
        "item": {
          "id": "0bc990c6-d8ae-49a1-8a7c-e418147d95a3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "30c6ae6f-e37b-4e9d-8fef-40489132b9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "c39eadd9-2e53-424b-88f6-3d54cbd63c42",
        "cursor": {
          "ref": "2973562d-86ac-4367-9e50-83243be92a53",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a6d65e16-cad0-4cf5-8e14-c61231e935ee"
        },
        "item": {
          "id": "c39eadd9-2e53-424b-88f6-3d54cbd63c42",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fc96ea9f-7d92-457b-ac7b-338a3fc650de",
          "status": "Created",
          "code": 201,
          "responseTime": 10101,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1f517a-a4ed-40b0-9a6c-6f92dfeb3a46",
        "cursor": {
          "ref": "a32c7e2c-c379-4901-8c45-b206d55b7898",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "48efff0c-0b75-4205-9220-3e914f975d18"
        },
        "item": {
          "id": "ca1f517a-a4ed-40b0-9a6c-6f92dfeb3a46",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d19c5d8b-23e4-4148-ac53-09262ca84a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "384f4821-32ea-4ac2-bce7-f8e2b53fae11",
        "cursor": {
          "ref": "cdaf8359-c8e6-4223-9035-e57b748d99bf",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b3c1461e-7473-4aef-b08b-43cc967ff480"
        },
        "item": {
          "id": "384f4821-32ea-4ac2-bce7-f8e2b53fae11",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e99ba395-d06c-491f-9756-769a98190bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "edc6c2a4-9897-4eff-ac4e-00567b465254",
        "cursor": {
          "ref": "ff7c5026-a6f4-4cac-b107-f1061cb06911",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4336b70c-0923-419c-93d4-279059379e2c"
        },
        "item": {
          "id": "edc6c2a4-9897-4eff-ac4e-00567b465254",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "63ab87cb-8eb2-406f-a25d-bc124175ebc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6344a44c-3fd2-4709-9ddf-9fbcd934eb89",
        "cursor": {
          "ref": "104db235-de1c-435f-9bfa-cac1af9b7309",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "992af917-7a9a-48ec-825c-a1cfc191bd1f"
        },
        "item": {
          "id": "6344a44c-3fd2-4709-9ddf-9fbcd934eb89",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3440b2b7-0e0b-49a4-b6e3-a093c5374425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce1a20e-351f-4b6b-a014-1e04d60822f7",
        "cursor": {
          "ref": "ffd23e14-3431-4ec9-b863-8a79ce869d85",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "94744bc8-1c08-442c-81e8-535f3046674d"
        },
        "item": {
          "id": "1ce1a20e-351f-4b6b-a014-1e04d60822f7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5345aafe-75d9-4f8d-be76-6a6c067dfb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38272470-bd9e-4e97-a6bf-5ed737d8f19d",
        "cursor": {
          "ref": "b282b38c-2959-4ffd-b27b-5028fa4a588f",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9b737821-be60-4ef8-aeb9-0c4717626e39"
        },
        "item": {
          "id": "38272470-bd9e-4e97-a6bf-5ed737d8f19d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "24d6a7e7-9d17-4962-905d-ee677ede3916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c909280e-723a-489a-827b-181a8093315d",
        "cursor": {
          "ref": "3b4fcf41-d3d0-4d4e-973a-462bd6e974a3",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f5508f62-186f-4391-9bd3-0898e1f868c3"
        },
        "item": {
          "id": "c909280e-723a-489a-827b-181a8093315d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dfd2c692-a8c4-4d14-a865-6a92218b6291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad1886e-0232-4806-9ff9-276e01632b1d",
        "cursor": {
          "ref": "91d68fb9-74f9-4524-a133-fe9737a5eaa5",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "547e50b6-0cb7-4331-b65a-e05a59065e84"
        },
        "item": {
          "id": "fad1886e-0232-4806-9ff9-276e01632b1d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "08f706a7-7404-454e-a127-676cb9f06f30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5200fb42-38c4-4083-825b-5e8fe2a6f3f1",
        "cursor": {
          "ref": "51580ca9-5396-4a43-8b94-f4ecccfaa98b",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cd78837f-1631-4089-9c0c-9f9e12ccb225"
        },
        "item": {
          "id": "5200fb42-38c4-4083-825b-5e8fe2a6f3f1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0a68f834-1e90-4ed6-9687-b30e6bd33ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de798174-6286-4562-9253-0ec2a3a3589c",
        "cursor": {
          "ref": "ef035f8b-7524-4914-972b-a38c84f1675b",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9c8924fe-0123-4b10-9851-5e4a056e6f4c"
        },
        "item": {
          "id": "de798174-6286-4562-9253-0ec2a3a3589c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fafa579c-1057-4043-8091-e4f5021a1414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345915b4-2161-4b34-a9b1-325af586ea08",
        "cursor": {
          "ref": "f3b2d6ec-e35e-4629-83b1-af1c9abf8322",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5698cde9-8825-4471-bab1-ca03f5260b2a"
        },
        "item": {
          "id": "345915b4-2161-4b34-a9b1-325af586ea08",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f0be142e-95ed-47c2-a6ec-eacf8fab38a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24a7dee5-e10a-484c-8be0-10ef666c6992",
        "cursor": {
          "ref": "eaeae7f6-a898-460e-b190-0aa5f93f0038",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8fb5c26e-444b-4dc2-9625-2e24a33652ce"
        },
        "item": {
          "id": "24a7dee5-e10a-484c-8be0-10ef666c6992",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0eba4f46-3b34-460a-8b83-2a72373d58a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2b1017-06eb-42aa-8c8d-55fe2fba9156",
        "cursor": {
          "ref": "47dab364-ed4d-4a2a-8f2d-dc1fb74e2884",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e1d278e1-6a0c-4ed2-bcdb-c8beaa126bda"
        },
        "item": {
          "id": "6c2b1017-06eb-42aa-8c8d-55fe2fba9156",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dac8e5c5-ca65-4074-98f8-f81af91b486e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8872a67c-e3b7-4d91-ac17-16178c74f7e6",
        "cursor": {
          "ref": "5c5f7ecc-13ed-4eec-a1e6-b696094f75c0",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a798e4dc-848c-4509-94ef-9533a2ee3138"
        },
        "item": {
          "id": "8872a67c-e3b7-4d91-ac17-16178c74f7e6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8e5b3eb0-1a80-4b54-9bfa-8be67a629b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87e1162-e4e6-42b4-9bd3-a23fc1c05b5e",
        "cursor": {
          "ref": "fb1ba74e-41d7-4a27-a979-af66db2be990",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "9020452c-1494-47c2-9e0d-cc91e7675df1"
        },
        "item": {
          "id": "f87e1162-e4e6-42b4-9bd3-a23fc1c05b5e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8327a7ff-53ff-4259-82b5-ea44005c34a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db15f32a-97de-40f7-a023-d95f361c69c1",
        "cursor": {
          "ref": "407fc9f4-c043-4985-b9a0-28db5efba9f1",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9b6078be-6fb6-4774-8580-7bc198600948"
        },
        "item": {
          "id": "db15f32a-97de-40f7-a023-d95f361c69c1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "39f81a5d-595d-41f2-a83f-f5b56cebb118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcb6541-d82c-4074-ba42-81fbe2ecf619",
        "cursor": {
          "ref": "7be9f9bf-f345-40e5-b7d2-112b86b978fd",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1c31f9ac-7fb5-4cb9-a75f-798ea57e4534"
        },
        "item": {
          "id": "9dcb6541-d82c-4074-ba42-81fbe2ecf619",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e2ad918f-0f47-4ab5-b080-f7c3ff7900cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323da655-8873-4514-abbc-aacded0a364a",
        "cursor": {
          "ref": "b28fe011-0083-473f-b488-4d89819d374a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "428d755c-5c72-4b00-92f1-b118f273c36e"
        },
        "item": {
          "id": "323da655-8873-4514-abbc-aacded0a364a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4210cece-79d1-4cb0-b6c7-e9bc487ec5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405edd7c-58fb-43a8-b2d8-9d8b6c05b702",
        "cursor": {
          "ref": "148a216f-c932-44e1-b323-eac78509dbc8",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c2f6d728-7ba1-4429-bc65-8adab540064c"
        },
        "item": {
          "id": "405edd7c-58fb-43a8-b2d8-9d8b6c05b702",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "222275cb-2c54-4b65-86c6-5ec435f81325",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "a6e381d6-e913-45ab-a934-7065dedbe9e5",
        "cursor": {
          "ref": "6d8b6536-f077-4a12-bbd1-cd52738e9929",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "64f8e12c-2a5e-4c6d-b749-afc1b5eca552"
        },
        "item": {
          "id": "a6e381d6-e913-45ab-a934-7065dedbe9e5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "cdc20416-2197-4907-90a7-f6dac549f800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9fdaef-58a5-4555-ad23-b56e6d478faf",
        "cursor": {
          "ref": "fe238abd-4247-486d-b8c4-6efab083837d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f201405c-d63a-41bf-b887-434983c7c436"
        },
        "item": {
          "id": "da9fdaef-58a5-4555-ad23-b56e6d478faf",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c045e9d8-a5d4-44c3-9d6c-fca8b4e3baac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ed8a62-20bf-4074-9b8d-21540bdb0f8f",
        "cursor": {
          "ref": "29bb131d-0348-44f9-ad7a-5222a80d21ab",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b2019c76-8ac0-44fa-8acb-d5fb94473030"
        },
        "item": {
          "id": "68ed8a62-20bf-4074-9b8d-21540bdb0f8f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3b200b27-e102-4cc7-bec3-8b1cab02455e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b589f11-d365-4ed3-9bc0-14555cccdab2",
        "cursor": {
          "ref": "83fd77ca-ef78-4411-ba1c-fd5601309902",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "821a0ee1-e179-49e3-9c19-69108be74f14"
        },
        "item": {
          "id": "2b589f11-d365-4ed3-9bc0-14555cccdab2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bc9a4583-e3a5-48a2-a26b-9fa9d691d409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0652f03-db75-4812-83e0-717c4913754c",
        "cursor": {
          "ref": "f0cfc774-4fbe-4280-8504-7acea4281df2",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "72695be3-ec7f-4715-9e55-a09412544e3b"
        },
        "item": {
          "id": "c0652f03-db75-4812-83e0-717c4913754c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "11950ef7-c642-4345-9697-5b870a3cfa20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b7bd75-8bc9-4f4a-9472-9430226fb09f",
        "cursor": {
          "ref": "1dff0768-77f4-41e9-a0b2-ccb851ffcc6d",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e3f0fdd2-08e8-4f8e-becd-1257766bc213"
        },
        "item": {
          "id": "27b7bd75-8bc9-4f4a-9472-9430226fb09f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "45a8b3dd-4491-443b-8489-71c0cc17b743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5171c881-a5a0-4ca7-8cf7-a882db99cf58",
        "cursor": {
          "ref": "bacf971e-dd67-4442-bbb8-fba86fd5d9a7",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8b587ca4-9e1d-4a2e-b1a5-8667201e3708"
        },
        "item": {
          "id": "5171c881-a5a0-4ca7-8cf7-a882db99cf58",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e63c3d57-0e34-40f7-a9d7-85236976b4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "102e1201-bd12-4d48-b7d9-8f2e55be7fcc",
        "cursor": {
          "ref": "852c5f5d-dc48-4b88-9c8a-6ba85be5de5e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "968eda5f-a824-4961-84de-978fd12837c9"
        },
        "item": {
          "id": "102e1201-bd12-4d48-b7d9-8f2e55be7fcc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "068314a4-c3e4-4f4e-b197-86923722125f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "79404fc7-b92f-4df5-a654-2c0eaba55c2d",
        "cursor": {
          "ref": "a6aa56ca-d8d6-46f1-a04d-6f00e55f5a87",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "02e7f094-3b74-4801-b7d4-30f777179823"
        },
        "item": {
          "id": "79404fc7-b92f-4df5-a654-2c0eaba55c2d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f1eb7553-9703-4878-853a-a843d2af9fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea12bf6-1ec0-44db-8cc1-2df66fc3e2f5",
        "cursor": {
          "ref": "dd993685-d3cd-4654-bfe1-d2846b73a6f2",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3c4ba714-20b9-4022-8356-ef211152949e"
        },
        "item": {
          "id": "4ea12bf6-1ec0-44db-8cc1-2df66fc3e2f5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1253f9fc-12ba-44e5-b159-c54234139d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73800687-7cfe-427e-aff6-d08a4b511d7a",
        "cursor": {
          "ref": "d50d76ca-ffad-461c-8908-4292cfb90084",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "68d1ee59-1bcd-4661-afc0-eb06d9f62e46"
        },
        "item": {
          "id": "73800687-7cfe-427e-aff6-d08a4b511d7a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8d527a6a-24c1-4208-8e76-8ae24ff27022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9961092c-0975-4047-8021-8135420fec71",
        "cursor": {
          "ref": "acf726bf-9bfe-462e-821f-9c548a3e5170",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c198b293-0819-45c7-9940-c8862418f191"
        },
        "item": {
          "id": "9961092c-0975-4047-8021-8135420fec71",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3399de90-b070-4e23-bf17-cb2d7306b8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f11754-2437-46b0-b04d-6678bd27ade8",
        "cursor": {
          "ref": "bb294391-4b7f-489b-98e7-219fa3d164e4",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "337eb14f-3755-453c-a30f-ef602d736524"
        },
        "item": {
          "id": "44f11754-2437-46b0-b04d-6678bd27ade8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "04a1b8dd-667c-4f7d-9c45-e17865bf16b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec3da46-4149-4140-a41d-3262ce199550",
        "cursor": {
          "ref": "7604c414-cc7f-4067-9370-d9ec6cf749c0",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "eb475d3a-276f-412d-84d3-5c27c89aae27"
        },
        "item": {
          "id": "0ec3da46-4149-4140-a41d-3262ce199550",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "00130ed5-c844-4d5d-881a-4236385edeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b34bbef-0dca-47c9-988c-f90a7c7d6a08",
        "cursor": {
          "ref": "87adaee7-79b2-44bd-9074-fc0a15d051f8",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c5b4fd53-5be2-462b-b4d2-52791d90a536"
        },
        "item": {
          "id": "2b34bbef-0dca-47c9-988c-f90a7c7d6a08",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d86f1ebf-3170-4302-bbe2-80c746285b24",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 94,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "e67cbbc7-215f-4c89-b5ea-b516332cb9d8",
        "cursor": {
          "ref": "ec34190b-e16d-4b88-be5a-1f389c46928c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "12bd6016-0599-4365-9ece-1bd89b8a32a0"
        },
        "item": {
          "id": "e67cbbc7-215f-4c89-b5ea-b516332cb9d8",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6fb50442-ecaf-46cb-ba42-73c4aacf754d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "383619e0-65b4-4777-9bdf-adc46aed2d8f",
        "cursor": {
          "ref": "c8c660a2-b23c-4637-9e15-252fe70735cb",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d89d2b71-b721-46f6-bb97-e11589a38d2c"
        },
        "item": {
          "id": "383619e0-65b4-4777-9bdf-adc46aed2d8f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3e525784-592b-4712-90d8-9882a2cb3b47",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "69ae8842-b867-4fa3-9fbf-798dcd3fc080",
        "cursor": {
          "ref": "332ca8eb-6b1a-45f9-aa6c-bf47635b738a",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "359a89b6-7a1e-49b4-869e-744bc31587ea"
        },
        "item": {
          "id": "69ae8842-b867-4fa3-9fbf-798dcd3fc080",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a55de635-a664-4a53-af59-4da8886b994f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "c26a71e1-f409-49aa-956a-141a4712561c",
        "cursor": {
          "ref": "d94a101c-05a9-4bc0-a974-9ba4e1d9483b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5a8e9e04-535d-47d9-b176-388e90856317"
        },
        "item": {
          "id": "c26a71e1-f409-49aa-956a-141a4712561c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ed157730-a93d-4331-961c-4fd3beb61835",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "0557d791-5184-4d3b-9e83-9e6123c4a9f2",
        "cursor": {
          "ref": "7d7514f1-f5be-40ba-ac1f-24c835f61269",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "be08eebc-7597-4cc8-a3fe-1bcdd0ec1c8a"
        },
        "item": {
          "id": "0557d791-5184-4d3b-9e83-9e6123c4a9f2",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "65cd275c-6f63-4a97-b231-2244e28de3de",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "24a52ba0-767f-4643-acd7-e2e5b24456c6",
        "cursor": {
          "ref": "abd53940-ec4f-408b-8cca-eea2a42eef52",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "eaed877e-b56a-4042-b1c7-814200b2f59e"
        },
        "item": {
          "id": "24a52ba0-767f-4643-acd7-e2e5b24456c6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "52bb3e4f-252e-48dd-a21b-0a8458aeb0c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acf2de7-d58d-424c-8b95-356dcde8989e",
        "cursor": {
          "ref": "f4ab38b4-de89-4c51-85f6-c81a2a5e2cf6",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "32276e91-5afb-4c95-95e1-9f1a198bbae2"
        },
        "item": {
          "id": "5acf2de7-d58d-424c-8b95-356dcde8989e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5bf31d01-91d7-4543-91fb-01de7638fcc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cec6c28-da38-4ef6-ab25-63a0fa80b1a8",
        "cursor": {
          "ref": "f73438e8-6d22-4d69-bbad-228c93d89398",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "079c121f-7f52-4470-b54d-0af435727e46"
        },
        "item": {
          "id": "0cec6c28-da38-4ef6-ab25-63a0fa80b1a8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8ae51e40-a709-468a-bbdb-780d6a7e70fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03438de4-4963-4a8a-97bc-92cf797e197b",
        "cursor": {
          "ref": "c6ef95d4-fc52-4eb0-874f-7e2aba736f94",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4ee744ba-d37d-46bd-b750-132c451e0241"
        },
        "item": {
          "id": "03438de4-4963-4a8a-97bc-92cf797e197b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "85dca8a0-ccda-4ff6-b6cb-9f77a5b344db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fccfb4-5d4c-4189-a096-0be089b1026d",
        "cursor": {
          "ref": "7f650356-e865-4179-81b4-08d5e511083e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cf919272-c996-44c3-98fc-be58c4a6ad07"
        },
        "item": {
          "id": "48fccfb4-5d4c-4189-a096-0be089b1026d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a8ee3d4b-50c8-465a-b8a4-b806c65f69b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b686475-c9a8-4c32-a3fc-750f222d0cf3",
        "cursor": {
          "ref": "fc0db0dc-f124-4f57-8ba9-c3e2ff7163bd",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "df40d599-0d81-4f39-9f06-2986c66f8308"
        },
        "item": {
          "id": "7b686475-c9a8-4c32-a3fc-750f222d0cf3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e9f0f081-20fd-4b5a-94bb-9a30b914b93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f8cf13-b17d-4e62-add7-94555161f549",
        "cursor": {
          "ref": "b7308a56-c1cc-4e53-9a0c-20ea98fd3aa0",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "883edc94-a5d2-40be-8a14-1a3b8b7ec05b"
        },
        "item": {
          "id": "c1f8cf13-b17d-4e62-add7-94555161f549",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b7c0995f-e1e0-4be5-baa5-d81b8b27fb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95327839-fe42-4b22-927a-086cb55bdeed",
        "cursor": {
          "ref": "a9d3912c-f3c3-439c-a9f3-3e6c728e436e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "42e1ad18-8311-4f1f-a4bf-eca06d3b7241"
        },
        "item": {
          "id": "95327839-fe42-4b22-927a-086cb55bdeed",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "20a43d4c-cb5f-495e-bce7-29262a1f4a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b9c9b9-b743-41ce-8913-a623c1451d78",
        "cursor": {
          "ref": "0e8f6adc-d30a-4565-a410-a70390bb5e72",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b89c9bac-7457-461f-8482-9429801cdc50"
        },
        "item": {
          "id": "36b9c9b9-b743-41ce-8913-a623c1451d78",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7540b123-6139-4d15-a964-a5611aeced70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2836601e-0799-4ce0-9a7e-0d78ed45340f",
        "cursor": {
          "ref": "660e0527-6d66-452b-9210-62ccb7e04e63",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "fbf4c8b8-2800-4928-b79a-b4aef4b8ca11"
        },
        "item": {
          "id": "2836601e-0799-4ce0-9a7e-0d78ed45340f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "2b19258c-de5f-4253-86ac-4b9811c2e33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f2934f-8b1a-4cd7-b729-814784214817",
        "cursor": {
          "ref": "3fbee071-221f-404e-8b72-714c38330f31",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c553e850-ae9d-4843-b97c-28318466031d"
        },
        "item": {
          "id": "f4f2934f-8b1a-4cd7-b729-814784214817",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e1ec2f1a-0341-421f-a6de-b1fe81dee857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9098ed-527a-4a6c-b3d7-4251682ec3b9",
        "cursor": {
          "ref": "85c1df57-e825-4407-bb54-b94168325ab3",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8929f23f-8591-426f-b525-473f795b0b4d"
        },
        "item": {
          "id": "ff9098ed-527a-4a6c-b3d7-4251682ec3b9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "355632d0-220b-47d9-b94a-52d89347fd5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6523aef-24d8-40bc-9650-a621cc8e5b25",
        "cursor": {
          "ref": "9256c5f9-ff88-4de2-bf2e-73b7befd2202",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4d94af5c-41d2-4a94-9594-10218aa85ace"
        },
        "item": {
          "id": "e6523aef-24d8-40bc-9650-a621cc8e5b25",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "8ecc2c16-35ba-4e92-afbf-b0ce44fa596b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbcfaa2-519a-4bcf-bdc1-ef1c4b3ac64a",
        "cursor": {
          "ref": "d490c79e-b821-4bef-8feb-fe69bcd8a40e",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0c3c6aa9-992a-4ba5-a6ae-387c5ee951ae"
        },
        "item": {
          "id": "9bbcfaa2-519a-4bcf-bdc1-ef1c4b3ac64a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2b2773d7-61ef-477d-9d37-eb62be94f4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b06171-9ea7-4924-afca-fd8e29506a29",
        "cursor": {
          "ref": "749204cc-7b72-4bf7-8ae6-c6da1db09ca8",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "43c20901-af7f-4870-ae74-efd8c83d1408"
        },
        "item": {
          "id": "87b06171-9ea7-4924-afca-fd8e29506a29",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c3fbe85b-5bd4-42ff-9fa3-ec3eccea7069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8dcf344-7987-48b5-8f75-d82b7fa5e157",
        "cursor": {
          "ref": "4f28b32d-9f8d-4144-a281-bcd21d6da140",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "09251c04-d0ed-4749-8973-a30d32e0a182"
        },
        "item": {
          "id": "e8dcf344-7987-48b5-8f75-d82b7fa5e157",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0da138b5-6987-4306-a4ac-75b88f6606ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190f9fc8-0a6f-454d-921d-156eab1b8fb8",
        "cursor": {
          "ref": "cb39c559-1a88-4cc3-9c8b-52d6618c57bc",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1c503504-6ad0-4cb3-b4a2-a4276ff5bca2"
        },
        "item": {
          "id": "190f9fc8-0a6f-454d-921d-156eab1b8fb8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "70007c48-950a-4d69-b0e9-1b3911d12ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e25774-1517-4e97-9a31-19e0b9146e34",
        "cursor": {
          "ref": "d8f5fcf1-83f4-421d-ae00-24d83d28f03d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b333b006-e2d4-4382-88e6-d25d8911eb9c"
        },
        "item": {
          "id": "44e25774-1517-4e97-9a31-19e0b9146e34",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "86344d69-fdce-42ad-b30c-85f59bc3c3cd",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "420d4fe9-33f9-4732-ad09-4590c35840f3",
        "cursor": {
          "ref": "5f39fce2-4057-4f33-8120-2ca2aa355dca",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5f85a464-6458-40dd-ab06-3091053ad609"
        },
        "item": {
          "id": "420d4fe9-33f9-4732-ad09-4590c35840f3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6fadbd00-1d8d-487a-a5fe-67444ddfe4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a1f566-040e-4d20-97dc-d9ae8c64c9d1",
        "cursor": {
          "ref": "330e6ea3-7c93-4e05-aac6-d82e66bf9d31",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "60dd4b7e-2356-4dbb-a186-66185ddac7e1"
        },
        "item": {
          "id": "48a1f566-040e-4d20-97dc-d9ae8c64c9d1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "23e0b67f-cb1c-4caf-889e-5fec8d4fc179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6556e8c8-e7ad-4b33-ac46-181b79967727",
        "cursor": {
          "ref": "152ccb92-b578-4414-97e3-f50f52d17982",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "7775d8ee-2254-4ef5-b7c8-179fa485257b"
        },
        "item": {
          "id": "6556e8c8-e7ad-4b33-ac46-181b79967727",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "10fa483e-4287-4f34-a8b9-537db390a6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb2db4c-3943-4cae-aa8e-b888aa22eae2",
        "cursor": {
          "ref": "0c8fdd8c-0ecf-46e2-abae-29ac660af2ec",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f6400b95-b772-42ce-b49c-91c68db1585a"
        },
        "item": {
          "id": "acb2db4c-3943-4cae-aa8e-b888aa22eae2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b6a89a30-34f1-4eab-ac4e-eee28eab1245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b11e7b-68ef-4069-b640-81aa8ef274d3",
        "cursor": {
          "ref": "6cfcf760-11d3-4fd9-9602-6c04ef5f0436",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "615ff10b-a901-48f0-8947-cd318d916ec0"
        },
        "item": {
          "id": "72b11e7b-68ef-4069-b640-81aa8ef274d3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cb8c3098-d4b4-4e22-856c-8d107a2e14ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41b0b7e-8d2d-4ff5-a978-15e6cbf0bbdc",
        "cursor": {
          "ref": "a09365c6-a499-48a3-9781-4834790d50f8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "18a7c1a6-f7e7-42ec-a029-02eb305fd7da"
        },
        "item": {
          "id": "a41b0b7e-8d2d-4ff5-a978-15e6cbf0bbdc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3ca83088-ec24-41e1-a1d3-9515004123a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb89609-1749-4459-b890-953eeaa10255",
        "cursor": {
          "ref": "f026c47a-8500-4c5a-8388-35dcfb0130a8",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3dd42f84-8a44-4739-b0b3-0ef4624ccae3"
        },
        "item": {
          "id": "3fb89609-1749-4459-b890-953eeaa10255",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7be7edea-c334-4405-a2bc-36316d264c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4ebef49-6ae0-4778-bc23-5376274fc462",
        "cursor": {
          "ref": "59e6b3b9-da8e-4ad9-b522-88ebb78b4c4e",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "00036a90-eea6-4d4e-9d0f-9cc4f984cb35"
        },
        "item": {
          "id": "f4ebef49-6ae0-4778-bc23-5376274fc462",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8d81eb96-d247-482b-ba65-2addcb8c56d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aeaf914-def0-48f1-873c-437b7c61a919",
        "cursor": {
          "ref": "89cfbab3-e82e-4306-9d45-ec6374653b13",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "6d6abc1d-2130-4f72-b972-14b407b81381"
        },
        "item": {
          "id": "8aeaf914-def0-48f1-873c-437b7c61a919",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "053e6741-6e14-4f1b-b76a-434a6c10bfa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d12efa5-224c-477f-bc53-3187195a273b",
        "cursor": {
          "ref": "52afe433-1e11-4f3f-b0ab-8fd5f46262ff",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9a82409a-e1b4-4761-8c60-8bcec5c8f54a"
        },
        "item": {
          "id": "8d12efa5-224c-477f-bc53-3187195a273b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7fc121cd-c056-44db-95c8-4682e5ccda10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc12efe-d85e-4eac-9ed2-faa85d4f84fb",
        "cursor": {
          "ref": "86f5979f-5c3c-4718-a3dc-81778dbdc215",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fd21b3cb-8295-4028-b940-ae49445046ed"
        },
        "item": {
          "id": "2cc12efe-d85e-4eac-9ed2-faa85d4f84fb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1a619ab2-8614-4e9f-ae94-71d02d62944a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772a5c3d-3179-46a8-b1d0-20259ce2f812",
        "cursor": {
          "ref": "9108ea34-d3ef-47a1-a72e-bba0a15e8710",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2ec35158-ee28-400f-ba4d-494427746df1"
        },
        "item": {
          "id": "772a5c3d-3179-46a8-b1d0-20259ce2f812",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b12fbb59-69d4-41bf-b01f-8244b0388b5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661f43a4-1ab7-453c-bb37-da86e6185fd5",
        "cursor": {
          "ref": "c1ea4325-e77b-448c-aabe-6e75e58b8383",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a2c3fc7b-55c9-4acf-a353-16cc33a0ed19"
        },
        "item": {
          "id": "661f43a4-1ab7-453c-bb37-da86e6185fd5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b0b16bd3-2c98-4305-b9b2-41fdec3e2304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5dee634-6b51-4569-bf7b-d5eb1249046e",
        "cursor": {
          "ref": "1addc7de-8941-4cc4-8e66-604f5e4b2f94",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "82d50579-c748-420b-b83d-d39ede9bdf1f"
        },
        "item": {
          "id": "b5dee634-6b51-4569-bf7b-d5eb1249046e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "28ed3db5-771e-466c-a088-256e9caf15a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "641a0fde-e5c8-441d-bd1c-2f78124daa44",
        "cursor": {
          "ref": "ca9a3e39-4ddd-4c2b-94f1-60f8c6e6ac56",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c3b41022-81ce-46c9-8046-9ebc1372529c"
        },
        "item": {
          "id": "641a0fde-e5c8-441d-bd1c-2f78124daa44",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "71b09a93-1249-4b3e-8053-e46588454cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2dbf24e-1073-4a2f-b8c9-3657076c7fa3",
        "cursor": {
          "ref": "90b91695-8bff-42a0-be55-2fa3a8478361",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "93d133ba-38cd-4847-a1a8-80c18e3edf49"
        },
        "item": {
          "id": "a2dbf24e-1073-4a2f-b8c9-3657076c7fa3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6ceb709b-283f-4e58-9b28-494c536268f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541ecbd8-0c3e-485a-80d6-66204704d8f8",
        "cursor": {
          "ref": "6b578701-81b6-4134-80b8-6759e3fc3f3c",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bd55a708-e14e-4ba6-bc9c-9e153083fc8b"
        },
        "item": {
          "id": "541ecbd8-0c3e-485a-80d6-66204704d8f8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "78d8da15-a320-4835-81cc-d18117998e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47499adb-f574-43ab-b07f-37c1d4dabda3",
        "cursor": {
          "ref": "2a1ab66f-a4c4-4c40-a0e5-3f9ca077b96a",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5cd6bfc8-b222-437b-86a3-a19405ac6963"
        },
        "item": {
          "id": "47499adb-f574-43ab-b07f-37c1d4dabda3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b356a647-6239-4bbb-8b0b-f2b92901368e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4db00d0-8c58-4122-bd7b-b317c86abbff",
        "cursor": {
          "ref": "9edd465e-0f5f-4299-a11b-de1711c54cab",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7bc05309-23b0-4ca3-b262-52404498e105"
        },
        "item": {
          "id": "a4db00d0-8c58-4122-bd7b-b317c86abbff",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cce56ac8-bd5d-44b8-826f-83ad9695d2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b426ba70-33bd-4f66-9f09-8fa313a9bdba",
        "cursor": {
          "ref": "4a32dd27-7215-4152-81c6-45df5a9b21f7",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cd6d4339-fb19-4a60-add4-a4ed78ebe497"
        },
        "item": {
          "id": "b426ba70-33bd-4f66-9f09-8fa313a9bdba",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "abdada8f-0243-47d7-a29a-8573a147512a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8477cdb-42c8-4eae-ace8-1d2a375558a3",
        "cursor": {
          "ref": "c1856274-eff2-485b-be22-c53d7202a2c5",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2d9794ed-482d-4cfc-ab2c-8000b2fc3981"
        },
        "item": {
          "id": "b8477cdb-42c8-4eae-ace8-1d2a375558a3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d44184ec-4775-4726-8898-63ce852ff18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3733efb-57fd-4f95-bcc7-2e8f61976fc3",
        "cursor": {
          "ref": "9041e6a9-9353-4f10-842c-285593aed28e",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "71dcdd69-998b-4999-94e6-214fd0ed1353"
        },
        "item": {
          "id": "c3733efb-57fd-4f95-bcc7-2e8f61976fc3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "986eaa97-c316-40be-ba5c-61a737522e1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9b3e7d-aa55-445a-babc-bc3ae52ada16",
        "cursor": {
          "ref": "f15654f2-7630-4b7a-8291-e1eba10c6a5c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4ca57642-26d7-4c30-a0a5-0e0dbbcbafda"
        },
        "item": {
          "id": "7e9b3e7d-aa55-445a-babc-bc3ae52ada16",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e2e28e5d-c489-437a-9c92-049b26799978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedc6a37-18f3-428c-9d15-7e179bb16149",
        "cursor": {
          "ref": "bc716a8d-24aa-4a9f-b071-bf6ed3149351",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cd775ac6-d315-432e-bfc9-cb121fb0c105"
        },
        "item": {
          "id": "fedc6a37-18f3-428c-9d15-7e179bb16149",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "29983d60-0f83-4f88-bd5b-e56272762fc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ab96ac-5b45-46ec-b3b5-dafd253030a9",
        "cursor": {
          "ref": "684a987e-955a-41ec-8192-27e71c295161",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8a516eee-e8a8-4236-af4b-84129b3ae237"
        },
        "item": {
          "id": "72ab96ac-5b45-46ec-b3b5-dafd253030a9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "64b5bc50-7406-4375-8a5b-106177485afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dd4f34-f348-449a-ae83-85cd1ea204d4",
        "cursor": {
          "ref": "a3f2f604-fdcf-4012-affa-f3e31d50d834",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "48dc604f-a851-492e-a355-07927e445aa9"
        },
        "item": {
          "id": "32dd4f34-f348-449a-ae83-85cd1ea204d4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d4736177-2f90-4cba-bc64-d6ff49814de5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967ae95c-6c84-4b16-8f38-5a46bd82082c",
        "cursor": {
          "ref": "8d1cc786-43d7-418e-9ddf-7232d8a17ab0",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1c88b728-92a0-47d5-8dfa-81be0a37e720"
        },
        "item": {
          "id": "967ae95c-6c84-4b16-8f38-5a46bd82082c",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "dd4e2418-dadd-4f1f-b298-ce3a49df6a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125e363a-dc12-42f2-b9ca-d90c6b45838e",
        "cursor": {
          "ref": "598a9529-c7de-46f6-8499-1800b4ed8abd",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "918444b3-bdbf-4b16-a18b-0804ec0c7033"
        },
        "item": {
          "id": "125e363a-dc12-42f2-b9ca-d90c6b45838e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7c3cd6d4-c412-453c-a53e-2298ea9c5202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e459af1-34f8-41e6-a062-c6f66497b49e",
        "cursor": {
          "ref": "12c536bd-ecdb-492d-a294-441988da1119",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9fbaebfc-5fb7-44ea-8cb0-441bac15f09d"
        },
        "item": {
          "id": "5e459af1-34f8-41e6-a062-c6f66497b49e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fa3b9f21-d765-40e7-893a-db897f1ee9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c74225-0a78-48ef-9780-775e4a1925f7",
        "cursor": {
          "ref": "dab724a4-709e-4734-826c-f64f984f3317",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "52f31096-e47d-4dc1-b709-d0aa77675f3f"
        },
        "item": {
          "id": "40c74225-0a78-48ef-9780-775e4a1925f7",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1a035053-70e6-47ca-8832-371efdf09d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccc35be-c191-43b0-8d6e-7975043b6809",
        "cursor": {
          "ref": "d48b4eb1-c2f8-41c6-b7a1-1f36ae1b19d9",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3c0452d8-0d6b-48c0-b23a-98b34885fadd"
        },
        "item": {
          "id": "6ccc35be-c191-43b0-8d6e-7975043b6809",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d67d2dd1-b5be-47d0-b10c-056cc8dea258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99570e9-50c7-4835-b3ea-66b659ba7e42",
        "cursor": {
          "ref": "74bea83a-37f4-4618-a8e7-22e703070b5a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5ef7ee8e-0dfb-4445-b60a-f8ae07ed43a7"
        },
        "item": {
          "id": "e99570e9-50c7-4835-b3ea-66b659ba7e42",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e9f332b2-2d45-4b9a-a86c-b07d29f55cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bf8b62-3494-4e34-9d2e-cfebb993c6a8",
        "cursor": {
          "ref": "5a6a5972-f76a-42ee-9dbc-fee46fc43198",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2a258922-9584-49e0-b30c-3ae32e685857"
        },
        "item": {
          "id": "c1bf8b62-3494-4e34-9d2e-cfebb993c6a8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "645237dc-af2a-489d-bd98-49a25afa45b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b117bd47-c90e-4940-ae45-221d49d828f7",
        "cursor": {
          "ref": "3f2c4e91-a310-4876-af67-37bf491096be",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "aa44f99a-1a30-4bcf-8bc6-176fe207c25e"
        },
        "item": {
          "id": "b117bd47-c90e-4940-ae45-221d49d828f7",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "feeedba9-1a15-4d32-b05e-ae6eb7aa5e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210088f7-06f5-4d6d-9573-c8f5b9a55267",
        "cursor": {
          "ref": "6845719e-cb06-4da1-8d40-c62fc8d0f978",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "161c47d8-d2d9-4665-8579-e36f9ed24c63"
        },
        "item": {
          "id": "210088f7-06f5-4d6d-9573-c8f5b9a55267",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "72eda419-4b4b-47b5-ae63-5c8847c25ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404b87b8-ad3d-4d81-a46f-403c552a992e",
        "cursor": {
          "ref": "8f80ef46-f91b-43f4-bc2d-d3e832a08b0d",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "89c199d2-6cfa-42c3-a414-ee963606ca38"
        },
        "item": {
          "id": "404b87b8-ad3d-4d81-a46f-403c552a992e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "194b0280-2f73-459d-9214-0a899535b53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed0e6d0-3994-4dba-981b-93372a3afc8d",
        "cursor": {
          "ref": "85bbefc9-c787-4f54-90f8-f773aab60950",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f25d5a12-2581-4a33-9716-0085f04dfe61"
        },
        "item": {
          "id": "4ed0e6d0-3994-4dba-981b-93372a3afc8d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8c6a9c8a-a471-4035-8920-94408bf0b0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487c788c-0801-48d9-9ac9-83efb806fd91",
        "cursor": {
          "ref": "103e660a-29f0-4817-b413-3da4f2da1927",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e8ed5016-bba2-493b-8789-bd7a7b0cf113"
        },
        "item": {
          "id": "487c788c-0801-48d9-9ac9-83efb806fd91",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4840227e-e013-48ef-95bc-3de463430930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f890be2a-4325-43db-8b8d-2601db7d168f",
        "cursor": {
          "ref": "bc96c069-81fd-4696-add7-7d92379aadd5",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a24d8f08-b3cf-4470-96d5-4830a01f6725"
        },
        "item": {
          "id": "f890be2a-4325-43db-8b8d-2601db7d168f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "74969390-88b6-4764-87b5-726cfcf7c1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa68b1c2-d080-4f92-b042-42f4d6bf2c39",
        "cursor": {
          "ref": "13fd8f6a-ff1a-4975-949b-65457f11025d",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d6078400-54bc-452f-b00c-ffbd893cb530"
        },
        "item": {
          "id": "fa68b1c2-d080-4f92-b042-42f4d6bf2c39",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "62e97f18-fcb0-4ad8-9853-d99f3442d77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8539d367-b6f2-49ea-990e-c1f99e6b2ca2",
        "cursor": {
          "ref": "8319ad7a-3c51-4318-b72f-f1a9cbb5ec45",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3c9d0390-2798-47bd-ac3e-df0ea0b38cb8"
        },
        "item": {
          "id": "8539d367-b6f2-49ea-990e-c1f99e6b2ca2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "dad9aaf3-1507-4a5a-b08c-2f221601421c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0d5d69-42d3-4352-a371-6b980512f2a3",
        "cursor": {
          "ref": "76419468-72f1-49f0-be5a-4d32272cbda3",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0f863bba-b85c-4719-9a0c-e8cfc4bb4e79"
        },
        "item": {
          "id": "af0d5d69-42d3-4352-a371-6b980512f2a3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9a48e471-0942-4580-9ea8-fa17ce0a566b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57de7560-7e6f-4b4a-b99c-4acdc3e078ae",
        "cursor": {
          "ref": "4c818018-b27e-4a8b-9607-fba3f7434474",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3ce66f26-f6bf-40fe-9667-7c1cdbd70d2f"
        },
        "item": {
          "id": "57de7560-7e6f-4b4a-b99c-4acdc3e078ae",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8bb980eb-444d-47b4-aa7f-52b24b64b45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ae99a4-6dc4-49c7-89f7-6d3664be2147",
        "cursor": {
          "ref": "43d71887-18a4-4a93-9a3c-ccbc678e1a6c",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4a8cbd0e-aa7d-40b6-83a9-f3431c6b8dc2"
        },
        "item": {
          "id": "b7ae99a4-6dc4-49c7-89f7-6d3664be2147",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1050bb09-3a46-4c97-9e2b-d04d76d687f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab45d17d-f75d-4c62-a80c-7be3d13836c6",
        "cursor": {
          "ref": "4218b3cb-8106-4385-938d-3e19f9b3be71",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1e34793c-1a30-4633-b1f2-0f1195253d28"
        },
        "item": {
          "id": "ab45d17d-f75d-4c62-a80c-7be3d13836c6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "51f292d5-ba42-4bd2-99b3-87f044f0513c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1856123f-4d0c-47c3-b00c-15bd29a67530",
        "cursor": {
          "ref": "20ba7ac2-dead-4974-a7e4-7d1fec486afa",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "500f2b79-3f8a-474a-af11-e4d7cb0e27a3"
        },
        "item": {
          "id": "1856123f-4d0c-47c3-b00c-15bd29a67530",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a07435f4-843c-4e25-9637-3050d4020b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ef5c75-99f2-49b0-921e-ee43d3ce5112",
        "cursor": {
          "ref": "ed3bf6f6-659d-4f82-a61c-4c37680b909a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "541b8321-80e2-42ff-91e6-18689b0e1b3d"
        },
        "item": {
          "id": "a0ef5c75-99f2-49b0-921e-ee43d3ce5112",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "17b9d0a7-fbe3-48cf-aef6-6e78266b03ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22ed086-7986-4e4e-b24f-e7596e75d409",
        "cursor": {
          "ref": "829146f2-0a4d-41ba-8d41-42f1b2d1e562",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ed151db3-3271-4232-a450-ecf45b0de0c3"
        },
        "item": {
          "id": "d22ed086-7986-4e4e-b24f-e7596e75d409",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e6cfe0ad-75af-4fe0-ab58-fe319f9219df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bbcc32-a2c3-4b1b-899c-a0ab20e2e781",
        "cursor": {
          "ref": "79e54973-bd3b-46c5-91ec-1b8bfc1bac28",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9617e0f2-b9ee-432c-8d33-9f252fecde7d"
        },
        "item": {
          "id": "53bbcc32-a2c3-4b1b-899c-a0ab20e2e781",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "488a255a-2940-47d1-bdc9-669b40dffac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc2bbcf-cdd0-473c-bdd2-714c083270df",
        "cursor": {
          "ref": "5531d0cb-89ae-4c7f-9ba1-7c269a8ca680",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0b8d4045-a614-4888-97f0-fed64585c0b9"
        },
        "item": {
          "id": "2cc2bbcf-cdd0-473c-bdd2-714c083270df",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f99ac83f-c97e-4f42-93ce-8571703c3ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c3c719-3f44-4662-88ef-e4c59fd53ed6",
        "cursor": {
          "ref": "7a120f3d-3429-4e0d-817e-e97f9777a41e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d2dc5e25-f338-47c6-a07e-25d315de5eda"
        },
        "item": {
          "id": "33c3c719-3f44-4662-88ef-e4c59fd53ed6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "54b19d92-8c24-4e2d-89fd-02e9812b6aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b6148c-73a3-452e-b979-ae34984f19b3",
        "cursor": {
          "ref": "ee22d60c-c253-4a09-bcc6-f04e9c16bdda",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5458d151-b879-4310-a6b2-fbf8687e8d39"
        },
        "item": {
          "id": "02b6148c-73a3-452e-b979-ae34984f19b3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "56442050-bb4f-4d96-8ea6-bfac830d5b99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aac7cc9-fdc2-4952-a2f6-863f9aadfcbc",
        "cursor": {
          "ref": "3031eb2b-7dae-406d-a8b1-36d5db69b46d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3ebeef0d-21f3-43b5-9240-a8397144e612"
        },
        "item": {
          "id": "6aac7cc9-fdc2-4952-a2f6-863f9aadfcbc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cd7b2039-1455-40e4-9ab0-9b8005819a7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb82ab39-5c03-4bcf-a830-f924a5e5cca1",
        "cursor": {
          "ref": "6eb4499b-ef09-4661-9bb0-8506de51537f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d2d85de1-e52f-4791-8b94-1979f649664c"
        },
        "item": {
          "id": "bb82ab39-5c03-4bcf-a830-f924a5e5cca1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "434d0cc6-0740-4aad-8c45-2dab38d07cac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a35880-e6b0-4c4b-9535-5a3cd3603d3f",
        "cursor": {
          "ref": "07ca3426-2564-4b55-b72a-9953964dfdc2",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ee065de8-739d-430b-ba55-efe3c1f46a7c"
        },
        "item": {
          "id": "26a35880-e6b0-4c4b-9535-5a3cd3603d3f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "691b4ab4-99df-463a-a9c4-8a4d71b9ed65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaf8207-4d43-4478-9d5b-30bce639bad2",
        "cursor": {
          "ref": "6ea0c098-eb45-4386-8900-0e4ada49718c",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "9b302545-ced3-4ec0-876c-346aac15380c"
        },
        "item": {
          "id": "baaf8207-4d43-4478-9d5b-30bce639bad2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "2a355aaf-fce5-47c8-b984-2a27408f2096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63429b16-4504-4bd8-9f74-ac1c3cb7a591",
        "cursor": {
          "ref": "89be8620-5c41-453c-919f-6558c15d643b",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "60c8772d-b44c-4aa2-97ce-f22d81a3a892"
        },
        "item": {
          "id": "63429b16-4504-4bd8-9f74-ac1c3cb7a591",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "bb0b8e7f-9583-41cc-b13f-0fdd94d94987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be26123-93d5-4f16-a099-ee01a2b5c05d",
        "cursor": {
          "ref": "cd3390b4-4b4c-4031-bf43-a1104f30e087",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "96f4d1a1-4184-44f9-aa53-07b7c3e6501c"
        },
        "item": {
          "id": "2be26123-93d5-4f16-a099-ee01a2b5c05d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fae2850e-28f4-40e0-8642-eba3e565fc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9ae94c-ec6f-429b-aa3d-174be45ba688",
        "cursor": {
          "ref": "5ce05947-d3dd-4ffa-8c87-62e71dfe8648",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b3bd5845-71ee-4473-bf3f-701367dbea58"
        },
        "item": {
          "id": "5c9ae94c-ec6f-429b-aa3d-174be45ba688",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "171d4cfd-990a-4695-b153-45b7449d051c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40ec757-017a-4629-ad05-726ea40f7a91",
        "cursor": {
          "ref": "32fe7a56-e85f-428b-8eb4-98c1b1f80fcc",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4c73e650-7549-4d18-8005-a527c1988be6"
        },
        "item": {
          "id": "e40ec757-017a-4629-ad05-726ea40f7a91",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "dd820e55-aac9-4bc0-afb6-7d06b87de671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f6a530-2733-4883-bd2e-6dbc0c7a4ef9",
        "cursor": {
          "ref": "4e2ba3b0-daed-47db-b526-e1ffecec10e4",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "131097e2-6dd4-470c-aa80-cedb9380906c"
        },
        "item": {
          "id": "81f6a530-2733-4883-bd2e-6dbc0c7a4ef9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9c89b45a-820f-4605-bc87-448c58afec4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff30ee38-d53e-43f2-9eb4-52abda083004",
        "cursor": {
          "ref": "22cd3d81-42c2-4d91-8e68-3651298c0413",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "8e2067f0-8306-47c3-b866-fb1b8ffd95ec"
        },
        "item": {
          "id": "ff30ee38-d53e-43f2-9eb4-52abda083004",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "867bed1c-0a00-477c-b74c-49637831e983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42737e66-0e87-4429-bc72-9be7b46d380e",
        "cursor": {
          "ref": "5f77691b-9f37-43ba-996a-6646e02fdb7a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d9acc1ba-24d3-47f2-9222-6107ecabac91"
        },
        "item": {
          "id": "42737e66-0e87-4429-bc72-9be7b46d380e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "6dec6faf-dd80-45af-bc0d-8cbf9a30ed5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87078942-14e4-4b3e-880f-80f22205218e",
        "cursor": {
          "ref": "2486a4fa-8f03-43ca-aab8-81bd4afa3669",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7c61bc7e-eb60-4883-8817-e94f74606a3e"
        },
        "item": {
          "id": "87078942-14e4-4b3e-880f-80f22205218e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "bdb5ee36-7ba1-4adb-9405-4fa1ce703bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef649cd-931c-47e5-a5a1-157e7943c4a4",
        "cursor": {
          "ref": "136c7b07-5cf8-44e8-9381-0c3f5c2b558e",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a0c48473-d1cb-4ccf-b7af-346b04eb5e7f"
        },
        "item": {
          "id": "fef649cd-931c-47e5-a5a1-157e7943c4a4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "dbecc6fd-0853-4bbc-97be-43616d046abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf55761c-25c5-4b3d-805c-f73b7aa45778",
        "cursor": {
          "ref": "b287b178-b202-415a-a645-dd5497ceb28e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2404e95f-1b2f-4777-96db-9aea2dab1fe6"
        },
        "item": {
          "id": "bf55761c-25c5-4b3d-805c-f73b7aa45778",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "59f8bf13-adea-4840-a3a8-f542d1f3afe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a57e9aff-3e72-46d8-9cb3-dc62dbc446c1",
        "cursor": {
          "ref": "6c57bf51-926b-4745-9408-b22be0e28d1b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6bcd1a96-b698-4370-a193-06e36561f10e"
        },
        "item": {
          "id": "a57e9aff-3e72-46d8-9cb3-dc62dbc446c1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "20a16f56-6808-4104-ba32-0e52d54a0f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c6beb3-40e6-43fe-9e93-cae7e556f9b2",
        "cursor": {
          "ref": "43d8a692-38e4-492c-bd74-f2db4b1b65cf",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0acc94f1-9934-4acc-95d8-660d7c55b713"
        },
        "item": {
          "id": "47c6beb3-40e6-43fe-9e93-cae7e556f9b2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "27c8f370-35eb-4f71-9b6a-b00ce948f81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050aefae-302e-440b-9a44-baff391e3d9c",
        "cursor": {
          "ref": "d1e4d22e-1a62-464d-a114-ac12baa7bd89",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ce86f27c-0ff9-4bc4-9b60-cc513cedf498"
        },
        "item": {
          "id": "050aefae-302e-440b-9a44-baff391e3d9c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6fc770c4-b276-460a-a5c7-da52d0c61305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e23e88-d9ad-447c-8a83-c11ef06ebf70",
        "cursor": {
          "ref": "158f1369-edc4-4e0e-9b93-24cb80002a7b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2c87f853-a69d-4f25-bca7-488c1bbbc1f5"
        },
        "item": {
          "id": "99e23e88-d9ad-447c-8a83-c11ef06ebf70",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "631daa10-5e8d-4ec3-8d94-832056d4cb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb52f1f9-1066-46b3-a600-1369fb61b5de",
        "cursor": {
          "ref": "196bdad7-6ba3-45b4-ae76-a15dc53d7fc5",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8dd1fbc1-64ec-488b-8312-8103978cece6"
        },
        "item": {
          "id": "eb52f1f9-1066-46b3-a600-1369fb61b5de",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5c957a40-1549-4d22-9eff-484f8cc4f16a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e02c445-5f6e-498d-a0f1-d89e142e4fb4",
        "cursor": {
          "ref": "d40051ee-35d3-4d67-8df3-f6c41fc2ad16",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d8e4a550-3115-49a0-92e9-ef6960999b08"
        },
        "item": {
          "id": "8e02c445-5f6e-498d-a0f1-d89e142e4fb4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "50154744-38e6-46d0-9b3d-a879df7f2ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfbc78c-4d73-448b-ba72-195b39df57cc",
        "cursor": {
          "ref": "9ca49afb-0522-47c1-920d-7987b5b06cfd",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "13d11b83-6b7c-496f-b77f-7c6465d2fa8c"
        },
        "item": {
          "id": "bdfbc78c-4d73-448b-ba72-195b39df57cc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c2e08ce0-0e55-4f9a-9899-89641229c40b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9171a5f0-1395-4c6c-987f-5f779d2d5aa2",
        "cursor": {
          "ref": "ce6ae61b-6268-4361-8b45-c62ee737997e",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d4f04a95-5cc6-4cfc-b81c-8492bbf5acea"
        },
        "item": {
          "id": "9171a5f0-1395-4c6c-987f-5f779d2d5aa2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "291da1e5-d57e-4045-aac5-1afb3c378018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a068d70-760c-403f-a8df-72adedc08db8",
        "cursor": {
          "ref": "b138ffb2-a219-4ef1-b164-2672ca1c45cc",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8c9a9058-6cd9-43c3-9102-60720ae57388"
        },
        "item": {
          "id": "9a068d70-760c-403f-a8df-72adedc08db8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "73d0a100-7439-4820-9e38-d5a4bda26e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1eebf8d-28f6-44cc-bea0-4ae2e0613c33",
        "cursor": {
          "ref": "4a2ee792-8cfd-4995-a338-f19193e91fdf",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "50a63bb8-5083-4a07-86b3-1ddad01a9d8e"
        },
        "item": {
          "id": "c1eebf8d-28f6-44cc-bea0-4ae2e0613c33",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b2ffd6cd-ae12-4266-a6f5-2fa64da70bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a3e9d3-ef1e-4560-adba-aedde776f72b",
        "cursor": {
          "ref": "917787a2-0be2-485c-bb99-fc117083ea56",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "258f27b4-e4b8-4020-93db-7703b8be7801"
        },
        "item": {
          "id": "00a3e9d3-ef1e-4560-adba-aedde776f72b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c0f84bb0-e182-4fed-ad8c-bfbd136f1ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452fb0f5-8ea2-4f6c-b3df-9e48d9ef603c",
        "cursor": {
          "ref": "556fa3da-9069-420f-bb07-e71e064024a3",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e1370341-9058-48de-ba74-504ebd0f3d59"
        },
        "item": {
          "id": "452fb0f5-8ea2-4f6c-b3df-9e48d9ef603c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0ffed19a-a845-4f72-8636-70fb2cae6577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f1908c-b5f3-4d44-a5dc-6fb58a1c9b53",
        "cursor": {
          "ref": "424d59ed-d741-45ad-8e57-e67669dcbbb5",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "2fe5868e-1b4d-4961-a8cd-2c4d7a88ea97"
        },
        "item": {
          "id": "86f1908c-b5f3-4d44-a5dc-6fb58a1c9b53",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "21b881f2-be5e-4985-b5cf-1cead249d913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989f8113-808f-4d9b-870b-8d42c7bc50ac",
        "cursor": {
          "ref": "449ad6c7-9ff7-42bb-b347-9f5e30f61d55",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c5a9c3e0-aa2a-4073-8db8-f656241b95bc"
        },
        "item": {
          "id": "989f8113-808f-4d9b-870b-8d42c7bc50ac",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c6886bca-786d-405a-984b-898300cca0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154aaf0b-6bd4-4cbb-9a0e-a45b42d67b13",
        "cursor": {
          "ref": "e0336657-55c1-489a-bb07-64261925613d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c156947a-ae9c-4cd7-89d5-994a2f2b334b"
        },
        "item": {
          "id": "154aaf0b-6bd4-4cbb-9a0e-a45b42d67b13",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "713d2c8f-4b3c-40b6-a3e6-dadc75ac8cf0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a5a46f-b952-49a2-a5da-b54f9d6390d7",
        "cursor": {
          "ref": "90e40e8f-a5eb-42df-8086-a6e16b9ed1a7",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9471c5ed-256e-4f6a-b11e-692af886f340"
        },
        "item": {
          "id": "59a5a46f-b952-49a2-a5da-b54f9d6390d7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "46cb00bc-90f6-4476-a5de-0334f02ae001",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d8d820-9ce3-4bc4-9864-7e66896bc5e8",
        "cursor": {
          "ref": "085dda42-cbf1-44f1-90cb-db3e460ad56e",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1865a056-34ea-4996-8151-28fb17004b7a"
        },
        "item": {
          "id": "d2d8d820-9ce3-4bc4-9864-7e66896bc5e8",
          "name": "credentials_verify"
        },
        "response": {
          "id": "33b3be93-0eb1-4bae-a1bd-f08719298f43",
          "status": "OK",
          "code": 200,
          "responseTime": 3698,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6712b769-738c-4df4-84b7-f1a681d2237e",
        "cursor": {
          "ref": "bb26649f-1ff8-4f32-a3ab-61a4e53bc296",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "573b145f-a610-4292-b32a-ba6604015228"
        },
        "item": {
          "id": "6712b769-738c-4df4-84b7-f1a681d2237e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c0c8ef84-963c-4051-9311-e831b8052ad5",
          "status": "OK",
          "code": 200,
          "responseTime": 3470,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e0cbed-174a-4e0a-b5ec-02d969fadd42",
        "cursor": {
          "ref": "80fac3b1-0e77-439c-ad57-55bee680d06d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "514402cc-e5da-4c80-81b9-7ec1fd68c0cc"
        },
        "item": {
          "id": "93e0cbed-174a-4e0a-b5ec-02d969fadd42",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "797d0ad7-cc40-45a9-87aa-9053b744f6bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e0cbed-174a-4e0a-b5ec-02d969fadd42",
        "cursor": {
          "ref": "80fac3b1-0e77-439c-ad57-55bee680d06d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "514402cc-e5da-4c80-81b9-7ec1fd68c0cc"
        },
        "item": {
          "id": "93e0cbed-174a-4e0a-b5ec-02d969fadd42",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "797d0ad7-cc40-45a9-87aa-9053b744f6bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44a1039-3752-4fb8-a7ee-fd0fd6f2eda9",
        "cursor": {
          "ref": "851d3ec4-a4ed-4c1f-9975-20b748bb32b9",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b592c4da-aa7a-46bd-a6cb-6ce6586977dd"
        },
        "item": {
          "id": "b44a1039-3752-4fb8-a7ee-fd0fd6f2eda9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1d6a61ce-bc25-43ba-91df-7b0bac56c040",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b294d3-0cb6-4976-9762-fa0fabb41535",
        "cursor": {
          "ref": "39f5de0e-2edd-4001-bc77-3592f1c18f07",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9f193ef9-6e4f-4959-8933-3d6a1cdd4927"
        },
        "item": {
          "id": "d4b294d3-0cb6-4976-9762-fa0fabb41535",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "574fe726-8ab5-4095-9ec9-96a3677c2e49",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}