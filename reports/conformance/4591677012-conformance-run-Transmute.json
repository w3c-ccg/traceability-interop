{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a994410c-5fa9-41e2-85af-6fa7db5b19a2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "41eb1a9d-bea5-4dda-909e-a0443bcd8aae",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9abcfd6f-6ffc-4b7b-a952-5329f2869f20",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9d5749aa-7961-4355-b21f-8b5fd5fc568e"
                }
              }
            ]
          },
          {
            "id": "c98d7405-a54c-4d25-a6b7-f218ea3d90ca",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "46002736-7c8a-4b5c-9365-1934071974dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e2a4abfc-2110-4af3-bd66-a15a21f1a8d3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2b6cba74-7814-471b-8e33-419b3e45a2c6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b7399e40-dcf7-4a30-9a6a-4a7dba078f92",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e6fe7d6c-af18-4d6d-92c1-c895e1953c69",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2914491e-d038-42a1-9105-4449feb7b7b6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "014acdfc-2994-44b4-8152-73e825205861"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "adb73b28-7b59-4397-b1d0-bd0b8d441216",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dc51a7ca-78bb-40d8-a5c3-9d6f754f96a9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e7f44ad9-77fb-403a-a644-6a9526644757",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f601f96e-2691-4bad-b200-3d1360aa1197"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10295292-b2d2-4384-9efd-dd5bb2112def",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c48f645c-5163-47ba-9ddb-d1c6af6a1ded"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7197a5d-9ffd-4106-9244-d6f9c30211c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb8dee5b-b747-411f-8c9e-b37cb357e69e"
            }
          }
        ]
      },
      {
        "id": "35319c83-8834-44d9-9aa7-13c545718061",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "27fa74aa-c496-4607-ae82-5156ff835a0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64532a27-5774-42d6-97da-01c792ad3f18",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8fbb0ec5-79a5-4df5-8420-d5ca0e4b4ad2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d8ca8f-9a14-425c-a57a-6f6cc531ee07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef878921-e7d0-4d98-a038-668ae2214576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716325eb-fe14-47ba-a27e-3c93f8b62812",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906564de-bbd9-44a4-a0a1-62c8113b3d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83256333-672f-4604-8457-a057d5cb76fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9ecc7f-fbec-45cb-89e2-9a61ac8122ad",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae777b2f-d8fb-48d2-acae-079fd28d5129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91b84938-68e7-4e95-be44-4cf631124465"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0d0a5e75-85dc-4b5c-ba2f-eaad092de55c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6b09948f-911b-440d-9b24-218291be6004",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6a7a1a-539d-4a45-869e-97a3bf350152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78df2a38-fc1f-4641-a260-e4d10fd5b66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7505ad25-e424-46b1-9113-a7d4c70c1327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260c2de4-b1f4-4565-ba0a-8c572e7e570e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb9c209-2f76-4577-afc1-40c187073cf5",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c20e72-a985-41bf-9913-96996b6d50e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b0f217d-832d-4fda-81ff-d70845248cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9222ef-4c95-42aa-a998-f095cfed1755",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "23918b83-3774-4fc0-8d8a-dbef0ea780af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4790c2c6-9df1-4432-bed8-f65b09c41e2e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba366a49-0ce1-47be-b280-9262956998dd",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a35e8783-9b61-44f0-b2a1-cb53036221d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2f92eeb4-eae7-4b6b-914e-286bd348325a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41375bfc-9712-41fa-8c50-0cd724a52a8e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "98f067a2-f2c6-4718-b551-cb22f5b88405"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81198a2d-e793-4fe9-8fd9-9bb37faa8c8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "035a5b26-18eb-4f6d-8910-db73b1dfff3c"
            }
          }
        ]
      },
      {
        "id": "6612194b-a2fb-4839-92ee-5bbf0b744f5a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "89fb6e65-1f15-4e1f-a46a-63e3f1d56266",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e2b5934e-6013-4019-9d80-3911c8e4a88c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9dea45b8-f6f7-49c5-9dd8-b27799023d8f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cf9408-4ec5-4379-87d9-b54aa225f1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46079793-bbc1-472e-b897-d5837cd47ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2859b0-0883-4320-9150-20e2eef9755e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b98fb9a0-3429-49e2-9d4b-d0a76435eb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3755a960-fe0f-4040-b1c7-973faceb1589",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26df935a-a46a-43a4-88d2-ba1103c7f821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6144d8-2b58-4296-857f-536dac3c67e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38c8355-e981-44c8-90cd-43994ed84587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0375008b-ed21-466d-9ce0-eaf6f6175edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbeb044b-0fb6-4ae3-b36e-f5f5a211459c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ad7d4d-7685-4e56-bc67-45fad267542b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551fc0e6-b4e2-4c68-8791-6aedebd58639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d49e1e-6fd6-4398-9218-fcfc250024d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16fe5319-8983-4139-b39c-1cf86474cb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31baf8c-5203-4deb-91a0-c722f2fb4f49",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703b58e1-975f-445c-bbee-135ebb509a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c673185-4f68-4fe6-a786-915c4e8996ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9128bad9-3a6f-4d88-a014-030bf3794188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a8b59a0-c27e-4aeb-97aa-ac49fa5d544d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e33e324-94b0-458f-9bcb-7046a5a24355",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd201c4-3f31-4f88-8f44-6f9e893e1cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835b207c-2913-46b6-9e40-ce1a110ecfe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae75cc47-c871-4dbe-b833-ec7f508b8509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "562d000c-6eff-438f-9295-700d1b6a02fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb5ed29-6344-4e71-a047-d2d0553fb169",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d4b735-2324-44e2-8e45-c5da1c60917b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cec3f3bd-0460-41f1-9599-ab9c956823a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c81acca9-8e11-433a-b2be-54ff136687fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4998bb1b-65d9-4d71-a44e-5075f62e91ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ea7d63-6a92-44b7-83d4-b2dba463a9cb",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48756ccd-dbab-4647-99ba-27e4cc53eac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88431889-6347-4e97-816c-a3c766adae4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938d0f86-7e3f-4d9a-b133-129046cd8c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de02490b-9a67-47b4-9e41-b40bc4992bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec386b11-3921-476b-94e1-19c1f5d535df",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990fa2f2-4920-443a-a58e-f117bd6205d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858b07e1-7d26-47c7-858c-46e5489fbfc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ca1075-cf59-4a2f-bade-7df8532150ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "057acc7e-d1ec-433d-99f2-d4a0069d40ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9749388d-cf5f-450e-b7ac-b0cce1ad0100",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17981e9-6a16-4b44-a8dc-283057bcd659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "638e07dc-adb2-4827-99f6-3476dbe79bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9409493-0e68-4825-b914-6fa688a410a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7207e717-8d1d-42c9-a6a5-bf961f66210b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e7eae7-717e-4748-8a13-865b7aaafcce",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f07f6d-6d4c-4813-8420-dc95460535c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac16fa2b-4e89-470c-b48e-b894c6c2bcb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e6d589-34be-472a-b59f-2d46cf94a104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee3435a8-8017-40b5-8b8c-011056fe0fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee896338-9649-4bb2-ac95-00d2762ae5f1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cf9efb-1692-4ca5-904b-c87d95cfeec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87103c8e-f207-4f91-a8b5-e29e0c2535b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9fd5fe-7587-45d5-a9ab-7b159016159a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "799eb289-d2ef-436e-97e3-0173a7786614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8d43fe-a2c7-4dac-aa6f-4f159b3531d8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02af51c-a4a0-4228-93ff-6d9150304868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7669f9-3030-4942-a7ac-ff95226f53a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4d8e22-56b3-4da2-994c-344028c920b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "398e600a-128c-4d20-a872-497d8652e0a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392b8f48-c9d2-4fac-a668-e8ae67f6931a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9784f01d-67a1-4159-a52d-88559f558b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2214faf9-1caa-4071-9929-92ae082b08da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c1fdea-0f1f-4bd6-ab52-2e22f205e13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5c976cb-dc54-4759-816e-91682f48db8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d7a1b1-0f38-4c7a-8ccd-ffb236d935b4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e51740-8d5c-4a6d-a967-10960bc00918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d12b46-3595-42df-96c0-622de809618b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd923dd-8eef-4337-92b7-1c718f2b9a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8295d7df-deb9-4b4a-91cf-c657162152c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19eb993-de77-44cd-adb0-c5c93aba7347",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb9de2e-2626-49cd-8a4a-83558dc32831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b60faf-2552-4589-9271-f2081715c441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22850d90-39d0-43c3-ba91-b87d6ad5ae8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c63b7fc-97ff-40f4-84d2-c932b8590c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9690b4ca-a76e-4ad1-aaaf-34aca36d7ba8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5a1dc8-d3c4-4639-83b4-9fb36d9dd195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8045787-f1df-4d05-8af4-782353bb3e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23df45b-1f21-44a4-86ba-584938f3ce7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "256255af-1188-4aaf-91a7-96c97454f805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0861bf9a-ef78-4ddb-be7c-7962dca679ca",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5ae417-ba78-4002-9d66-1076e3858d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57dedc4-b86c-4499-a2c7-649e4eae5f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a78178-9e8a-4af9-a205-3a5e1e024f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af620a74-e4cf-4d73-bd50-f0fe4d837419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea505e40-f936-413d-a49c-e7b38582d3e3",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3977c11-1580-49d2-88f8-8573a777eab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea7e9a7-61b1-4605-8118-9a6c451bb462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7addb2-15cf-4ffa-8f21-667c8e58aee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dcccca6-c8ee-48dc-afc8-59d7fed7bac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a5aa2d-eaad-47e8-9267-222730010ffd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6665e830-12ac-4c2a-a90a-7e5475b1ced4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ab15df-b270-4a1d-bfd3-354bc9090b4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a4c0f1-edad-4189-a70c-32bb27fbfc90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0aaf332-c99b-4138-815c-5cd6dbafe6ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56076636-354a-4d98-856a-cf9be444ee87",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ab5b6e-2b72-4cbb-9f78-1224c4bed87b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583195e4-af1f-4267-8cbd-b574b35ea0d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5348a698-f6ea-4c81-98a8-39354f59881e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "24fb5a04-7661-4803-8e0f-1a76c31d9e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b3ad36-a765-402d-a395-d432249929d7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b0f9bf-60fa-4a9c-a016-1906e422b0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13844fc1-ba12-4154-835b-27d1b7f33368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff9e1d6d-1cec-425c-bd74-62500307e5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfc15d35-0af5-430e-a537-bbe476a3ad4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b1d9e9-23e0-4b2f-b1ce-78e1905ec891",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c36eacd-d5ea-40be-8302-ca967887ac96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02400e9d-31c8-4974-b70f-112944c2a2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61839227-05ba-4733-9f94-404537864280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0af78ddc-33ea-4ce5-8e04-8cad5e18f515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1f3647-8d65-46b1-938b-0461b149b29c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b58422-a8e8-4e8c-8995-4ccfa9926068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c875d8-3e51-4e5c-a429-4b4af064c263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4671e249-8e09-4900-832e-c16a022109d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5652ca7-48a7-4518-bf5d-cade8aa1e59a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf75875-1dae-404e-9595-4c34a19c54bd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b82e08-720e-4791-873a-301539f4a58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74d78943-c354-4943-9a0f-2bba4bf52512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68ab29c-f9ff-4808-8fa3-605d554a373a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f7715f-2c04-4825-af9c-f54bcd22d8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abb3d42-7de9-4c6e-a11a-12562ef6ffd3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caff5e32-2ab4-4e47-a6d3-10f34a28ac97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4a8678-4414-4735-9b96-56e2eb2a742f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b5d01ba-6fe3-4a68-bd64-4939ec3d9055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aec0d21e-71aa-457a-b798-ee15cd712b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f781461c-55d0-4601-865d-be083c0a9493",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6421415-ade9-4195-881c-fe7fac9cdb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09981d4-aa7c-4fcb-8fca-69236c2c501f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2787758-1d64-4a50-a17b-85f5f5864699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "880ca110-07df-424a-b020-f5d26dfc9268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe4d0b15-9a3c-409f-9977-cd34a86a4f00",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a601ea2c-1fee-4966-8f29-1fa126298070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb8f1523-d445-430e-8733-68d526db23b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9b27c4-57aa-404d-9db4-c835659d40fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbeda2d3-cfad-4d2a-85d4-00ff04628570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ddec37-a724-4552-9555-c3f2b2b117c5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1300f6d-245e-4106-a70f-152967b39207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679ea13b-0d56-4ab5-9fe0-792ff165827c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3f255e-88ab-4b4d-a542-bcbc4b9833d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d0f246a-2b8f-4027-af76-ff09d8f0e3bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d137b533-2ade-46b6-88b2-5c25f9a7cf76",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9729e405-e92b-429c-826d-04f80b265789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c061a2-3716-4920-b01e-ccf8b74d13fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0860c406-2ac7-4047-8fb9-758ed41d2833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4afe4d5d-d9e4-4f93-8115-76e0732ef686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff11cc7-a16d-4695-91e4-2b450d2f3254",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269f83d4-2276-499f-8e9e-9dae7a2b877e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b69aea-a2ac-463d-8574-3dbaf23dcbea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915697ce-0e46-4c0a-a9f9-8bed2cdd232b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0bb855a-80dc-4c2f-83ab-a21d7410a7ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c7cebb-f79d-4372-930c-b08589baa395",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1cde081-2571-4e40-be40-b7bf3e9ad8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a07462a-7730-4e46-9742-eafed2423d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60865c4d-f787-4f58-b934-bcbeb9808591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24af4689-74d6-4bd6-a8ed-47333d1f1a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a747f7-1174-4df5-80bf-6d13e7e9cc86",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386b9b61-a597-40cb-a9c9-83672ab5b0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad6f436-27ff-4d9b-a3c1-b596b86e3a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1dd13b-eb81-424a-8f09-1ed6abbe6725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e4622d4-e0e4-4f82-aca1-7e4b2f6c5866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8823ded-bf71-428b-b0f1-78e0e1a4cd25",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74aced13-2904-4861-a728-549f199ddc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "393b53b3-302a-4eca-b1d5-d8778a4e6cd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b0b944-86d1-4e1c-a867-b94a3a04b784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11427abd-3d68-4a99-a029-4c248e2fdc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867c01ae-84f5-45c9-bf47-0c74e8c43a47",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a33b26d-69f1-46a7-b051-5312187ca058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5ca7b2-96f2-4290-bf13-04eb2c0398d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c586278a-78f2-4a20-9003-5c3d6d652fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "faccd4ce-4a46-4818-b038-7f4f26c48d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46a82a3-022a-4622-9a94-c00eb64fe754",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7955de1-154e-4ba9-85a2-e8640faab4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f568d26-f917-4678-9e6a-8b42160b9cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00fb860a-982e-414e-b569-74e960379500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "893280f1-4c53-4eaf-a99a-bd26b34aadfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e9f1dc9-ffde-4988-8dc9-61af92fbfb9b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4a5a2a-c23a-4e8a-96bc-cbbdcaf1ecc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63e9b711-515c-4198-b748-705ce68fb72f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d8b69c-2c8f-4ba7-a85b-6d3478e64148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce35493e-8320-481d-a3dc-2d0aba940b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d4459e-3850-4df1-9732-08e95843f272",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34749a40-7a9e-4069-a27e-ecab12e779c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03832b2f-78d3-4085-973a-7ff7629e1dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733c436c-eabb-44a6-bf74-8b1be042be7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "57ed9b7b-1fc5-45a5-84e1-3642421f8481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8264f3c0-a1b4-4a41-af93-5473473f88aa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e57327-bf6e-4608-a06f-22c3c540db33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6528ffed-e04c-4664-aceb-f4aea0de02f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cd3c1b-7ed0-4e74-9a64-d03164874b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a39c2b-82af-46d9-bf52-836d311563e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb25f551-2aa9-4b53-9831-9a9de3c72a87",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94134d8e-84b9-4e48-8f2b-ac8ad5676d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda978fd-941d-42dd-a61e-83b493662e55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "027a0132-e172-4fc5-890c-f10004ed5195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67b164b3-e501-402b-99f6-35b59e34c3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba28d853-126e-47af-a781-6f71f2acc23d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba8fe07-f1d2-49fa-b2a0-253dd4db7250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5451aa79-2b03-435b-822e-07a2b5c738ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61bf956-b07b-4eda-8c96-3d832d3eebcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf5cf63-603f-4120-bd0f-ac5624066cbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687696cc-7311-4203-9d0f-1fc1a18521c7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7152d0-3cd0-4cad-ab92-db914140948e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574c3f46-3788-4388-9e7e-631f0da61b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a59c96-d5a8-467f-ab47-053ec9c536a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8ed48c-6c9a-42a6-a962-2c66dc20fa1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a975ac-06f4-43d6-9116-43fddbc0b14a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af8dd56-6910-4db3-af33-fea060c3f2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4064bd8b-6eb2-42c8-ae9a-5369732a24a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585475d4-224e-4ba1-aae9-1d1072a1f31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "eae55482-4526-4d2e-ad60-ba19121e682c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4800e15-1145-4c00-8821-db42a71064fc",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "010d9052-1151-47d0-8bf6-67af3b9a6e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31150fc2-09d7-404a-8e48-b4e3f6b0dbe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61dedc9-2c13-4c71-b7a9-534a30a3a386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1508fcf-e03e-4988-981c-0ade052b744d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a779be5-aa3a-4442-9aa2-47bbba3e7d33",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0058c6-b6c2-479d-8918-aaab38c51c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb629089-a259-4838-887b-fad974bb0f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f1ae36-9f0d-4d47-bf44-e6f0876139aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d55d9cdc-f749-4439-b778-527bb9e46086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc3f6a7-f5da-44fe-ac35-4e4bfb0d712d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3dfe469-23ab-4bff-a03a-edd64478e4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01412aaa-3676-42e5-a650-fc91b8f11ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5daade6a-318f-40e9-8940-87c450bab3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a07ab493-cfda-439d-98e0-c70a2495570d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be60aaa1-9e11-4984-9225-5f38719fce72",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695a909b-cb73-4894-99e7-b34f3b69ca89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a36fc0-bcd3-433c-a5ca-5ff020f1d496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1edfc66-acc7-4b1f-af2b-e93a9579b254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfff97cf-a148-4bef-bda5-052622cde0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361f3203-9c59-4c0f-86b1-e2ed08e94a8f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea90b078-406c-441e-8536-a650314c2e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd923e19-1c29-43ca-8444-b40ec5103cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419fe8e0-998b-476c-adb7-45c619f79a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "053405ac-550a-4ae9-927b-c25bc9e08b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdefe822-d5e2-44b4-a0bc-b8180489df62",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed879cc2-2a17-46df-acbc-2c35789a94c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5821f416-a726-4097-976b-bc4a57353465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448ca145-b943-4019-8ed2-d3c9a4bfe0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59aa2b1e-2cdd-4903-afec-9f2b6a1f14db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ddb75ef-0c7a-4382-80ff-2fffda09ac41",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc914f3-ff8d-4154-b2a3-1c56c034562e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578cbe11-40ef-4816-a4d5-8f55c9a5dbe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285fffac-32b0-4bb2-abc8-bb1b04bc998d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ab3887-e80b-4048-b7c4-c3a7e3dc37b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d824885a-1b6a-481f-8789-cc63d2fa92ec",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3e35d9-ded1-4e70-a1ee-5211fb2187ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52acd5b9-0e47-49c7-bab2-3f4338a5a8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e084fc-9bc4-4228-a5f1-3e68a2719813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e4fdeb-5eb4-42dc-b71d-ba9f04e34d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f0ab99-34ed-4ed4-a2e7-80724b7d9b2b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64ba6c8-e3c2-456c-9504-e0c9cf632b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1e9a08-35f8-4840-87de-9a718f290f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "356a8512-81d0-479f-bc60-49bc9da08e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b15f1475-8024-41ee-8261-6bad416effce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44eb21bc-457e-4461-bc32-0ff28c0164b7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9412e8da-3166-46a5-8633-8ca5ba921fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab8a595-2372-4a30-9e56-427962ff9d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3488274d-b843-49a8-9713-e89fcce384de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3047440-0747-424c-9300-183e2e1757ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0471fca-9c16-4825-8533-8151c202748e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6413ec-2438-4ac6-8cef-87c4484603ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baecf0c4-46ba-4a9d-b533-9640f3f488cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87023280-ad78-4c3c-baa0-9470711cf608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfa3edda-cba4-4890-a4ba-e000d629b084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d44b19-225e-4d21-8bde-915143a0ea5a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614ae599-1cb7-4336-88fa-33c507ae40a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f0440a-d3be-48c9-b022-6da752bc086e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d1305a-af59-4da1-bfb0-4108de48ffbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6cc11e2-82d4-45d9-be65-732b66cc61f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "148c7732-29da-4db9-a65a-f2d3d1ae468b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b946bf8-29af-4ceb-9e26-d2434d874a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb26dfe-57d4-442f-a59c-54b017efc6e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9c1cb6-ecc3-447a-80bd-102ec4090fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e537937f-78fa-45af-b97d-95e57fbbe303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcaf5a9-be3b-426e-865d-eba93985b5b0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6bdc5da-7bfe-4310-babf-e2303d5b0dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42fd8d1-88a2-4e8a-bfe8-5a0ce73a1cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4bcda0-b516-4661-b68f-dd188fa6e1c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7c2f06ba-20e4-4614-b0d7-3ea344757b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55dad29f-e55e-435f-938a-dbd2ade9a46c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce37ecb-f098-4f64-a4d1-f1a3839ff783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1cb8758-d345-4cad-9c02-dbff43cd7263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a2a2bf-cfb4-467a-aa44-5acfe557bce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "de22f0b2-6d99-4a09-9f51-1edc62bdab4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48ac5d0-ae3e-466f-b5d8-1ae63e3faf8f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2e8524-2c8f-4d9a-9054-212bd1fb035a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9169c8-bfda-40c4-9d86-18b5fa47476a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6574acee-f9b9-436b-99ba-9c3b1da753cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4a2119-de07-464e-a336-41925014ebf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572bdc9b-b68a-48ef-8c40-e2614a02e44f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7020262-1fca-47bb-acf9-fc370b12f6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa39271b-34d0-4328-975e-870eb5608fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67d1a54-58b1-48bc-b340-10c1862ef8d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d16694b3-3fc8-40aa-83fa-f73648eb2036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531f22fc-7f3c-4b03-af8b-bc4e3e97046c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8727be56-4d8d-470b-a610-bf41eb85960e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214a49e6-0339-44e3-b7d7-5b345948686c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bd3d0d-061f-4ea6-a054-95c5a104b68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cf09587-039b-4355-898e-b43e3ee82ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0adfa1-733c-4309-89b1-60d726fc998b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a9e8a1-4550-4e5a-b60e-304b833c1b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "441035d8-fc76-41a9-afdb-fd047f57c8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69ceb8a-a78d-46fa-99b5-547e02c60389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc19614-f14b-4747-a151-dc2bdc3f182d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b610e801-9ec8-4e9c-a4d6-c0bf2accc310",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42273d23-71d0-4165-9bab-ddd1819e6c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8705744c-d31e-4ee2-b7ab-96892cc0a699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06e6b8a-7338-4dd4-9442-093e4d25b68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "32abf79e-dc46-4664-934f-fde017d2bcc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81854780-25d5-48f8-b9f1-227c787273c3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793a1b4a-064d-48c0-8521-28901d99f207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162785f8-0183-46a8-a2e6-359045795acc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ed3c24-5c2b-4db7-933c-8a699507b9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d738d1-7fde-45de-9edf-71fa04d5f7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a504388d-736e-484b-8b01-a69e2222a345",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8846f22a-ebc7-45d4-a288-47429f7299c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4905814e-c17d-41b7-b525-7441e5ac81ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18730ec4-3ee4-459d-98ab-a9a2541cf104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd07e7d-567a-4820-ba15-a0c802d7850f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1036ee44-b0d9-4c9c-a1ce-d528da9d4d29",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9ad372-e0d8-4caa-bd34-20c5cf1a20a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65a25ab-3e34-429a-acd0-c5dae3ca4fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0759f4f-9c9f-4a5e-977c-ebbe598790fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fdef183-759d-44c8-bba8-6569ad6e118b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3382875-cf61-439b-b5bd-56d798922ffa",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb557db-b788-462e-84dc-556848c07dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f15d48-6f4f-4cd5-b9f2-bb50da573384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b200f6d9-4462-4f1d-85dd-28564d7dd527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "574463dd-6b5c-42af-b1b1-dfa1989ebb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd9c106-0ea9-4783-b56a-81d5d979d961",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4fcfdc-e9cf-482c-92ae-80ed6f6cb5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d86b4bb-fd44-49ba-9ec9-4477958c1600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3e5d82-fe88-41d5-8856-671965dd441e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac311d2e-f1c4-4d50-96e6-d2364c5dcb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af7b1a7-886e-41b3-8da5-3f0c7323af9d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be7ca94a-cc09-4d98-aba9-67a195ccf429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "059229db-1c46-46b7-ba59-bc9691257a85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b53ec65-2853-4942-b2f6-59afa4e2e581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f407b41f-a609-4765-a5d9-636a0077a568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d5d4bd-1292-42a9-b920-fd6bb862abf0",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53295184-d53b-4cec-ab4c-a1c9f8bb8ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60db21bd-2fea-4ebd-b3e7-e7cb4c840782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f744c69a-539d-4808-8247-02d2dbf2bdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbe46f3-990a-40e9-8c7e-9fa23b86c917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45c4ba4-08ab-4e30-8cb0-247a456aeaaf",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e179ffe9-5c80-439b-b092-324bacfc1fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21b7832-d9bd-4eb0-adc0-c866b23a15ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3266da3b-1db6-404a-8a71-3a0450d154cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df35c975-7513-49c2-b776-84d24b30b6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89a3545-704e-45c9-bc99-72999425479f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c971dd-ccb6-4dcc-8737-5bd6eaa69b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd72c21-08c6-4648-a254-9d518311ecaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcbdf64-0e5c-47c9-be97-9632e7e7f041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "638964d7-189f-4aa2-82c5-a2cce584b310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f6d8b8-b3b9-4586-a19f-e839730b67f7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03fe0bde-0d88-42a7-9120-7b6d658f6087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b9ee1a-069c-4c58-a37b-459dcc1131d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b6c739-dcd5-4e96-9781-509419e8220f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e343c2e4-dfda-4297-af36-bd232bf4e5d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a816c3d1-0426-4e28-9d95-3ff1870b4bc8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1d9bf5-8065-4595-a4e2-0ac22ee0d92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4cd154-3644-42c4-bce3-08b9bf87c9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0aed90-6dbd-4043-aeb5-80f31889fa22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c79ee597-aaef-4020-be91-f8f8c8935770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497378da-61c8-450f-9259-1e54d68a4ead",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542288bb-8050-4fef-807b-8f02e6c90c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730209a3-790a-421e-9338-bd5a5132dcee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dfdf60b-ec95-409b-b48e-3fc82545ebd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cc0a52-5ddb-4331-9568-b314d361262e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4a8375-2532-4820-b504-ee0289c904c7",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3064f0-11d5-4502-9fcd-abb2984695a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff499d5-5054-416b-b6ac-d5ed5ed7d5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5300c1-fb38-435c-b6c1-b0cab527d56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ced7a6b-2ce6-4915-adc6-de80db8f403d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf50c383-c492-4b06-b5fd-ea83be87ace3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1ad7fd-c557-450d-81b3-9569acfbfdf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfa5f97-ca9d-47b0-bcd1-ac24d9784aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb58d7d-5135-4b1e-a883-5604b2c7797a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95f329d9-1d3e-43d6-b16a-ba2cbb6d0ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eabccd7-3e91-48df-81c6-cb0be07b955a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfa8718-715c-496a-b9a8-8d045e696bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ec7d5c-4171-4ab7-8f99-46547ff8e6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b7fdd3-42e7-4a85-827c-a917d6cf6dad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e047778b-cfa9-4631-874f-0d70cd8eaf22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb76737b-38ee-4ad8-95fc-eac0a53b9abb",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea11c941-ac7a-414d-a3b5-f0abfa037177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349b3961-9c3a-4fc9-9173-1c7ccafed214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67cda17-3d12-4994-83cc-c004cc120242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d1e52e-f32d-4958-aab2-9033da381a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233b7bcd-4256-48c6-a4e2-210e47e55f3c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd80ecff-0fba-464a-9629-d62d9325cb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a86f67-37f3-47c7-ab70-45cfb169b979"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741b28c1-8493-49a9-83be-30e6de1c9445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb636d2-7479-4e97-a314-abf15399e8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "535495f1-e3e1-4f5c-a9a5-e36183480625",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f89c906-57c2-4e88-98d0-565f9882a28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0a4f34-f085-4b4d-abc5-6e7819429be4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc575dce-a740-42b0-812f-e8b2cbccf75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8da39fe-1b58-49d2-b025-f21c4c0199a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4a4677-fca7-4cba-9ef4-c0eaffe7b5a1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f6737a-41a6-474e-87c9-e55d278c44fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00ec164-0fb1-496f-b19c-983ff468fbf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78590e10-953b-40ee-93d6-7843cab71a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "20c2baa8-5394-4764-8a6a-e4498517afcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca0d751d-540c-44cc-b971-64d8da4a38c1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104498d9-5955-4492-9ae8-171e748e99ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd0cddfd-de72-4a1b-b139-714a288d43dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6eb4b91-72ab-456d-85ce-22f6bf5807a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dfdaa49-7b58-41ae-95d1-0df9fb6b1b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce57853-6515-4a34-b6f4-b941c2964e04",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d6d8e5-a60d-4bc8-88cb-91a1536425b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5499defe-e0ae-4334-abc6-4689edc2cc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43896514-6baf-4c5b-a53d-590c44481781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6952f45f-1d8c-4e69-b8f9-9ce95e486b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "856e3a12-0689-4f62-a681-98026257bad9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56615dc6-bb0f-423c-b830-cf691339ab4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e404537-e627-4341-9008-d6b0f82ee4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86264973-7452-478a-abec-4b9e2546d975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d4e16a8-9f98-4994-aa05-93c6ff5d9e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37157316-ebc3-4159-a6dd-6e102c5ff756",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e8b7dc-f00a-4eb9-a3c1-fba81d895ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49347db6-4168-4588-b438-e3137dfb0556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d49f5c7-defe-4c2e-8780-01af12eb0935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "116fbce7-2ee9-48e3-ae28-1f3e65859150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2471be6-3930-4839-86a8-b0b22283d743",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c1af00-e06d-476d-b2aa-b0095ad67f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61fe8bbb-4f53-4d65-b5ba-6ceabdd4eb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4670d922-c233-4f53-a38f-acfaf5b2950c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed4421d-dc5f-404d-9201-c956c95e58f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eba483e-c980-4b3e-baec-a70950d26df4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7012be-637d-46b2-aac2-62ad3868d744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cbe1c42-7832-4460-b8b3-5efbc218dc73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02085e12-7462-4809-bac0-67abeaefe27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2889d3e5-0589-4558-b3f0-61f6c144ba11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122fed98-a49a-44da-801e-a71492c84cdb",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2a801d-2b94-4acc-95f0-6a340bbfaf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d97ebfd-5cc8-4ed3-b7fb-39f13e7914d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d03853-6dd0-4555-8bcb-95f44e9604a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd703b2-135f-4774-9e64-33f2f4a7c5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64c3120-3753-4ee2-9493-17064600da45",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e89e84-4633-414b-b7dd-54980754a111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01153901-478f-43ae-83f4-3f2e60bdcc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a068aa-26a8-497a-9117-ea4b1adb9f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9bc63e6-cc53-4edb-a670-2d56f51a9acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0596d435-66cc-42e1-b213-f61e9db62f83",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf77374-ea83-437e-ada3-f67d3fa56a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cba82e9-fbdf-49ab-bea2-5f3dea6ad022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b8b1b9-946f-4787-86b9-e8d44c41ba9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5473415-3656-498f-a6b1-863d71320046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de1f75f-5675-4f8b-be06-32d89101deb4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e543d5a-db66-4add-acc1-85c781d7ed46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60147b2e-5cc0-4c44-804b-371780d16dea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "762665e1-ca32-475d-ad3f-a132735a37b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c690c712-6883-4bfc-9147-86b4679d6cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2256a5-abbc-40dc-b1e0-46800427d705",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e600d00-94ca-4f76-a54d-1653e357006b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3b8d9b91-c17d-415a-9cff-a948cdccee92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39ac428-aab3-442e-9b98-12e7978289b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7271989f-211c-4e87-a98e-d1b6442cfbf9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "92028471-da18-4456-9ac2-ee880f1d2c80",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b04950d-a130-4bae-9cc4-3081cbca356f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ffb75e-b5ba-49a4-a88d-7d160294b040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a2f5356-e53d-4186-a32e-02f1f08c92e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0fe6689-dd2a-44b6-907c-e065dcccbd2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca89345a-b5fa-49cd-94a0-7119c6b83f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a82a063-5a5a-4bd3-95ce-51bce43c52db",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febde09d-5db5-45e0-8ff1-0fbcb7d3f8c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b186a4f-6671-4954-ae21-bbbb77a85989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1247ac1-ea66-47e2-8b93-aec4184fbca9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa030b26-9c81-4f95-aa14-20925fa96014"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ccf8e09-841c-4bd1-8be4-daa11c211d2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2664d7e-bc7c-49d9-a177-c8058facdd10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6f61d0a-7fcb-44e4-bd49-2d78ad51c276",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80db1a8c-b4d9-4122-8a3a-4b3d421148cf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9964b5e4-99ea-4ddc-ad71-fb86196f45f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8f254bf3-a1d7-4462-901c-dc907f96f4ab"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0e4dcf3d-dc94-47b0-93a2-a89614139f88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1e277d0-b5e1-48d0-a154-a0dc5a529bff"
                }
              }
            ]
          },
          {
            "id": "cb967aea-51f4-47e8-a514-7fa7ae6c11f1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8a13009e-5758-4e7f-9a39-9a1cbaaeb893",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d900d9b-819d-4645-9689-a2a24a2b4174",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0aefb645-46e1-4d3e-9765-903f54796a8f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff9de794-bca0-4f8e-905c-bd1c68a5e89d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1d9186b7-cb9d-481c-b507-f56639aa96e0"
                    }
                  }
                ]
              },
              {
                "id": "cf28e76b-a36a-4eca-a77a-655eec9a5e88",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c982e70c-1308-4ef7-aa65-237aa02d2add",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4664996-f273-455f-976d-bcf0ca93f69e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f487d16-11e3-4d1d-a088-8fefbd7fb611",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4f3ccdbd-0466-49f5-8ed6-14e6d9598714"
                    }
                  }
                ]
              },
              {
                "id": "f1983773-ffc1-48cc-838b-20b93fb16858",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2988950e-53a9-4fcb-bfd2-1df7522a0d7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b139b7d2-6434-47e1-8401-9199075317dc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dead0c6-dc65-46c0-8719-089159582fe2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "06452ddc-a586-45ff-b15f-e8becfd087af"
                    }
                  }
                ]
              },
              {
                "id": "e4baa0d6-0c6c-4863-810a-ddd340ed2c83",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce19161a-081a-48fe-a382-7c2ee930fb10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "68822a95-77f2-4ec2-9ed8-ffb549d2f5b8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d02a433-ce5e-409b-87bd-3432492083a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fe2e477c-156f-4027-82fb-c2473b2fae8e"
                    }
                  }
                ]
              },
              {
                "id": "fd341512-2272-4fb4-bc66-37d7f19ba0d7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f129cd6c-960f-405a-b7f5-6d3645d53de3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15938bea-80dd-4399-aad5-3b9a1e2ac26e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03fb4771-fda3-49d2-ad6b-d97f71417f8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "adfa7f45-95d3-40fc-aed8-831475544f7f"
                    }
                  }
                ]
              },
              {
                "id": "f4762415-325f-4cf5-b846-ba42d902c93c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e885c1e3-53b0-4683-8886-a81e782f19a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb35d9f5-c2fb-47cd-bb2d-7f5e98b83b92"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1c8a1e4-0456-4f32-a08d-3f42a0053fb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee5b1df8-9db0-4aa9-b384-a7aa272104f9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27903e6c-18f2-44db-8b2e-e723a406e3c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3f1f8f4-23a4-443e-bf0c-7db4603f7655"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3395e581-a2ab-4056-b674-cfc7a2be93c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07d7309a-b816-4f87-b784-f7488d42ba5b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92bfdc83-8774-4be4-874b-cfb101515afe",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "66834360-e26b-44bc-9c17-c2fd16206e34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b62efee4-14ae-4655-b286-fc6b7dab8caa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adb69cb2-1fc2-4db6-8239-c2226c776cb9"
            }
          }
        ]
      },
      {
        "id": "006508c8-d495-439d-8a08-b8137a4b2927",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "21d74d46-04dc-45d1-9bba-cf7883635d46",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01ffe017-8b46-4543-9b25-4430e8b0d146",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dac3150f-6e23-407b-83cf-48cf1dcd8b55",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23e5d55-b045-400d-b4d3-72a53b2f0b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c67733-abad-4984-8cec-2343afa9a09a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c111b5-6154-42d4-878d-d060b87c1a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "31002c17-fa32-4c84-a81c-daf7f135b996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e7b127-1948-43a1-83ab-5336a4b81bc7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3234364d-0e98-484f-8fc3-3d22f1975a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2565855-258e-4831-9bae-f8674934e3cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de949a5-7be8-4c23-a646-cdfeea754a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15842796-940d-4df4-8b57-c32d67427887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef3d558-ef47-4610-8419-32c9f343dcfe",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1025b7b6-69fa-49de-89e8-17ffa65962db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4a2bff-5600-47e7-bb18-9655b1152a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce650f55-297f-42e4-b1ab-cfec43f3ec4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d6cac97-dc69-483a-be46-7dd47da3b10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412d401f-753d-4cc9-8b40-4b3649037b3b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877b2065-c565-430f-a067-36fab8708ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df0864f-1d07-48e2-8520-7e2721235ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464fc5a3-c2f5-4ebd-a8a9-fdb164271224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51691121-422b-4de1-933c-ccd0f5c933ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb99002d-6755-49a4-b327-f44669d586d1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ae2b51-eab3-482c-aebe-fdef93be9636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02f67e5-6bea-49fa-9b9f-d2f677b9bed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b237971e-3b96-4f48-bd50-323264e2d3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34897a39-7925-4c01-a7b1-e69a02a6c598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83e89ee-7d82-4196-958f-88666c842e70",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fedbcbc-e793-4c3f-9852-7f75028e6c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b47096b0-32a1-451e-a70b-a18e16c3f138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec69a498-6ab8-40ad-8155-52e94f77b18b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9514f91-505b-492e-aad7-8c8724ec1ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad2fb00-37ef-4ce1-b24c-06477bf4d033",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b02f76a-c5e2-4558-ba43-1906fdce47f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc42aa5-24b4-4e1d-b9ac-e220bc624fba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d2ba8d-0261-42d1-a16e-b2dc9fc12016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "10dd68fe-b7be-4f78-b17d-2d13a99033d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef28851a-c746-45b7-ba4d-80c2083d56f3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f289507-bfb3-4b00-8710-9ad86a5ce732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ee64ed2-3b8d-4daf-b93f-b6b100ad5797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360d6c15-50de-4ddf-8b9f-9bdfc509605b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b49b0c0-1f47-4b7e-889a-cfba1968ff24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355b5fdb-2eb3-4bc0-914f-e7c7e5fe6bbc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bce43f-df8d-4032-b555-75fd7e340dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe9b71a-f019-4689-bba5-54e0e2d48ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc2fe71-c504-4017-ad5e-351d1cad86f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d7a6c0-a21c-4b8c-824e-51980adf0122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339e44f8-3804-4454-a8aa-7151711af3f6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5304898-3d86-4bd5-9e81-85823d57bb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451c156d-7008-45dd-8ef4-3e2b302ed821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9feb6d-56b4-4d6a-a027-6b36f5429888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f816ee38-4f5b-4a58-bcd6-2436ec2b6cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1f6f83-12e4-4226-9469-21d5cbea5b2c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b965cbc-d86d-4df6-88b1-666cd18d3540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4222182-6e93-4ec9-9ce3-16e8937df1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d59e32-4a59-4e7a-ad97-40a2ca5f1b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1f5e1468-0125-4b0d-9e54-a726ebf3368d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf770f1-2d4b-4772-ade7-b1903e8153a9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496e19cb-44ff-4508-9f3d-096da2975b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3f5d2a-4fec-4c68-8e26-6d77ac025089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758ac6ba-2c76-4ed8-a5ac-3ced33c48042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80fe8b7c-2e90-42d1-bed2-acaa98e9db05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee902a4f-48ce-4602-8591-17c4d0f058e7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1418dd00-1e32-4e3f-9da2-4e844ea18994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05cf5ea3-bc92-46a5-b3e0-988a5e2244c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86539f57-b652-454c-8946-7db2a60671da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "802b3414-ec93-4766-a44b-5f44dbfe305c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6646b17-70c7-4b6f-bee5-fd6d3ee709b2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb423214-b2a6-43ff-b2a2-258c28e4be0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8490f5-fd3b-4e1c-ae45-b951637bc854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e41268-0499-4c69-84e4-e53f34fe12a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f65cfdb-6ade-4b3d-a702-436e5e5f3d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1e8e84-6885-4b0e-91d2-7d5f9ecad268",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3f53219-b6e5-4430-96b7-4e267ea02fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd76bb3b-78f9-42f3-80ae-ca66b66431e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8dd70d1-b1ba-4ee8-bd81-bdda7957d5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "35d36071-aa95-4a4e-bda1-d36e18d8e975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be7af30b-22c5-45d7-a268-bd7419339a04",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bdfd6e-3202-457f-bf53-ad1b73c5065b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bdac1aa-42e5-491d-a2cd-c0d2f5cf934a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da33632e-c12c-4598-b4f8-d2ae5f568b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "55aec11c-6b1c-4a5f-ba55-3b52ad9d1c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c96efbb-86a8-47c3-8b84-a048c668f936",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199d0c75-4c6a-4eb6-a8ce-32e3f62bb43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40344c8-946b-4cd2-b3e2-624b3c52424c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa339027-0371-4d31-9b05-fbe6438925ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "74f26022-cac5-413d-a6d2-f2c2e9e5564d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7da8ce4-8d01-47e5-ad9a-b19848dd6f97",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73e3e7f-c68d-45e4-8249-cf4aa58a607c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4adb9779-9d6e-4317-9971-7ef8bb063658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737c330e-e898-46a9-8ae4-19cb46576fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e17107a-23bc-41dd-bb05-542755e787a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8287a02-a621-44bb-8859-383304afed66",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cbcdb9-7937-4a94-b006-fcc0e6119436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb34d2f-4710-4024-892f-61db3ad2be1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d6305c-e695-4589-8fc9-a12ad55d1310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a94a21-b19a-445e-9013-65f499c5e558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da238d0-8c9c-4acc-a8a4-b8ad25c3bf1e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f2fab5-a66c-4720-8b70-849033688983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e99d632-4ae8-4cfa-b6ea-679065789899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9872e027-936c-4aeb-a803-248a0a385de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66eba46b-ca57-4327-82aa-e5c1427a5f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4a05d6-116e-4c60-96a1-a2c3f0a68442",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690d17fd-4014-4635-8dd6-0f31b48f1890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d427919-81af-42fc-a416-f48be36d083c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb55c7d-023a-40ad-9400-5af0b858c154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18aeb933-1929-4fa9-8b65-647937ef09cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f505847-ee8d-4efb-acc7-4cb8547283ce",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b22cba3-9573-4edf-ac7c-b0282017720b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a0103b-3bf0-4042-90f9-b5fb75844662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3448dad-7e8c-46f4-b6f0-105085b6e57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15110a2-3f9b-4a53-8323-f9741cf2ffe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee56577b-d375-4fc8-b973-d72326ff6729",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a72a5042-4d34-4a42-a0b7-022128c85c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a995cc17-67f4-4132-ae0b-e79a35e6c272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15815a9f-1598-4d5f-ae86-e0ed31c675bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8a6a30-abd7-4c53-9c45-88f555cc052b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10599b8-897a-4bdc-956c-2fec91a87b05",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8efded-c430-4a3b-ba0d-5a9761a18837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04102f9c-8ef8-42ed-a275-4607f19b9b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6414b67f-2b90-4374-abe5-615b7737e711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "456f6465-7c16-45e4-bc56-61fe4cf1d906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5883fb73-f4fd-446e-8ae7-49c5b7c0b02f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "526cf85e-fc69-4ffd-9eab-4b6b8cd62eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d450867-6110-4e43-b56d-362552db6243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1bbf9e-ca6d-405f-83ee-d7137cc8855d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6021bb92-6400-4670-af5b-b8034b230285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7a9485-1b90-441f-bea3-fd7cb60e377b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c027a714-3a3b-4304-ac85-ce5271555b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32b9d2af-ad9f-438e-8b05-39e7960d6c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8b45e6-ee88-459a-ab56-50942b914a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf5853e-a23e-4e58-b1e1-210e8b3dea12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e782ac-1730-4f14-9a62-204e75fa82d6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee5829b-e27e-4f88-8afd-21e32cace932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c14866c-3a42-4013-84d3-ba8f83d4eb8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fce5fd0-db7d-48f2-a02a-6c9f785ea5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a43699d-090f-4180-87d5-7e724d217c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9a5b02-8308-4ab4-b164-0f7ac130c10d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058617a3-3adf-4027-b661-e11a1cfd8156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a91b2a2-7033-4d96-8286-12253871af7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f4e1ba-1777-45f4-857c-bffaae05e3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe0a5aa-d182-4c6c-8e41-3c7e2d618842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef04af03-b254-4dde-bb3b-19ce381ca45a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec99939d-7aa6-40fe-b74f-9399e838c910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600d48e4-76d2-455e-bc87-5e02227bc2b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05c75bc-4fda-481c-969b-8701b8beff43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3c329e-d26c-439c-bf62-37f7ec8fc5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f2c66c-57b7-46c1-bbef-df15ca226021",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b7ec35-be44-4da4-977d-f905c94dbfe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b4c4b2-d837-4959-a0f2-a3b067d3df4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc58500-c320-4c4e-a1a5-ce1d612d88fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "123a9dd1-2281-4fd6-b99b-52439c217a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8d740b-e24c-4f44-910e-4d22f8cc7576",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f371523-dbf1-4a50-b424-7a0993623a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6b30d7-ee44-48d2-89ce-8df8b3c84941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdc5671-b5e7-4041-8350-7814ec3326a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "191480b6-48fd-4267-8cc4-a4ca9e1dc840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6af226-6ef4-42c5-a248-c9582a518412",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b259d14-34c6-414e-8ec2-646f044bf118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf519e6-1c55-427d-ab67-7e67fd38dfb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22ff099-32a2-4cd8-bfeb-8cdf34b32734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a75a390a-5a5b-4109-a84b-499f8ad0b9f3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a100f33c-47a2-4c7d-b796-b334d8b6e1db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a4848b1-030a-4e9a-9d4e-f553b57971d2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397d774f-5f15-4a8c-b452-7ffe2e6c22f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c670f9-3615-4e9c-8943-561c7678d08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96750520-afaf-4b9f-b631-969c1d303f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "569570c2-9098-46d3-b6c0-5075197d7867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc62b50-4903-4a22-bb36-bb9e8d7832dd",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8084f9eb-ff6b-4105-b5a3-7e490143df5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8f2c61-4169-4e18-9ee3-d51282db7475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d6e626-47ae-4e0e-ba4d-1a00bd008aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53359d7a-fd37-4694-8bd6-69f6110ec991"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4576403-6c1c-4b59-9e85-c58da1cd7bdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2904c6f1-70a6-4d4b-b90a-51f9a37f0d8f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb32176e-2b61-4a92-8df6-f0f668605ad5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcfdcaa3-952e-42c8-808a-b1e61ab52294"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7f5813ac-9950-4a2f-b1dc-99bf06d12ea4",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d4628bd3-3c7b-4e5a-ab05-6d9fefbb6af8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7ca7dd7b-c73d-425d-9f95-8290032bbacd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e2a46a88-1bc8-4459-833f-092ee0906e8c"
            }
          }
        ]
      },
      {
        "id": "0eab760d-0636-49a5-91a8-3c5ee6e3dafe",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "94709d60-e793-4865-8fe4-5cd92d5e9517",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e99650e2-b4db-40f1-8e37-95b1fb961745",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "54d9b03a-5634-4cdc-8e22-70dcae52fb01",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a284371-a230-4c40-9c78-4e487de35c6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a83a9a7-f864-48a7-9497-b3f6d7b840f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b4d147-6197-4f1c-bc77-914e5eb27696",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e434199-43db-4a09-95be-20b38260cd8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c23ef49b-8819-4007-98a8-77cb275958e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fb9dad-a11b-421f-9122-2c38ba84e467",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26bd279-e500-4773-8fa6-b5489926a08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c240958c-111c-4b46-88b0-361a7da6a039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942a4c8b-c400-4f5e-82da-da92377debdb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfddd5fb-add0-49f2-b6ae-892335e9b945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b1fb0f5-7d85-4923-8c30-5a1c4f78050a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f47a534-12d7-4cdb-9c43-99b550093d63",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5112e45-b356-4b75-a73f-0aeec11a4f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f04abe-2be9-4914-bac6-c7c58c56f4aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a49b72e9-1074-461d-aae5-081c05306c33",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392d469c-73fb-45ff-a5dc-6999efe7c134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0072eec-d5ce-4f34-9b1e-a593b0bd3f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d8c8c3-4dcc-440c-a87d-b1aa4b3982b8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a0e1dbe-047f-4f61-8887-beea9f1466d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900e4427-45d2-49cb-adbf-2a246df572c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "973b967c-6c54-4f45-a679-4792ba4f15de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1625a074-a55d-4d19-bedb-58c535409896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ef3291-e8cd-49ec-89de-6c2f6e5b2437",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcd55df-8f6d-4ed0-8ccc-df15b88182f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb77c2a3-5e8d-43bd-9173-9ffbf83a3383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb9281e-44e4-49af-9146-e943caa09f2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b9e18b-acd6-4156-8849-bd19249c536c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8bb365-1224-4aa8-83ec-d9db32a66cfb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86bec626-25d8-4e27-9ac0-f5b63a739d6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c448f842-6110-46cb-bc87-040daa1f055e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5249b1f-e8b0-4f5a-b2c5-9c973efdec37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82ffacd-338f-44c5-8eac-8256a2628426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32afc688-57e7-4f8d-877f-139a8c921564",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0baaebb9-83ed-425f-9c13-fad4d0ef9365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3cb1ce4-63ba-44d9-b311-74d41e9a2ada"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63740d9-356b-4c7f-8d1b-b35c484c1251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7953f62a-3c6a-49dc-9a95-8a498d4bc18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0af184f-c81e-41c6-b896-06999d7cf0c8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db3b103-51a7-4677-93c9-28e0a97e474c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9adeb4e8-ddef-430a-9b99-0ca82b270fd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73400047-319e-4c59-aae3-a13959f97b2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e8795b-03e8-428e-83d0-d65317a94646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d730c4-1465-430e-beb8-4292544c35d7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e20f2b43-c9af-4a21-9616-d3ff5a3e7b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813109a2-e076-4109-a20e-873f8339c8b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5e958a-67be-4eed-b7f3-45e545adb83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4341f08-f99b-4d54-8a98-797d5e2deac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329fdbbe-b265-4ba5-93c7-623636995278",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022a4b91-3527-4563-9c63-bf82eea80dd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81195ef5-8297-4feb-8e68-dc5de307a8fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce18d208-0b4a-4882-8de7-ebd961f97549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5e8505-c352-46b0-8ada-9ac54011c1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf6ebcb-d5f4-4db1-8e02-5025d0d56070",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df8b1ab-aba7-4bbf-bda7-72f0e9966039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fb747df-5aa5-46c3-b603-e7ae0fa17fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e4c100-9817-4631-976b-92656fa9ee48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a521e2a8-2b5d-4164-a905-0110a4ec5f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c25040a-a9f0-4431-8c92-b41f3bb87975",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6247928d-c4b6-4e11-9dc5-708bdc94f132",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7397cb56-cfdc-4100-9ed5-7cc772ee00cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0a781a-9c83-44b2-a6db-6d25c5c390c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ccdd67a-9f32-4d2b-a76e-e1b9bcab7031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3437ea30-ceef-4454-bdb4-f50b079eb17a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1b17d6-feaa-457f-8945-11655461126e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b5c26c0-37d5-43d6-bd21-cbfe599060dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b75f45d-427b-421a-b045-f2b726bb7317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a29ceea-2c11-46ce-835a-54acc5b1d87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4e342e-dc2b-4dfd-9394-39c1dc5b3480",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ee034e-5bbf-4195-890e-eb54ce523a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8687f597-1bbe-4c11-9bbe-4c2dbf2a63fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425d06e6-531a-405f-88c9-1c4d861a7439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99306576-c315-4836-b624-98b8f755909f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2540e133-5c7b-4092-bca4-91248c63232f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f41f2023-8dba-4907-9a6a-8b85ac0130e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e768502f-243c-4ef7-acb7-d472f28084fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ca9fbd-d184-4eb4-befb-cdba779ede20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47921534-bf8c-47b1-b630-68e0c2558082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f43b34e-f2a8-49bd-934b-8b0775270f3d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3570bd9-4d7d-49d5-87dc-f1b488165402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "306e2cdc-3cfa-4c57-80a1-d08a807cf5ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ec6867-1204-4af0-87c7-669381023743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33eae168-95e4-4ffa-bb22-0306eef0e933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2389c24-15a5-4e7c-80aa-789fc90ef626",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b59279-6b31-4e28-a51b-f820dd6873e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede94591-8484-4ed9-8edb-af6b18e88da6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3280b655-6a3d-4397-adac-511d7011afb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45535a50-4749-4521-a1b7-98122aafdaf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118be79a-cd2e-486f-81aa-dcae77627d45",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2ea41a-e5c2-4207-926f-7c35c1c7e333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825750bf-101e-48fd-871b-35243ac1886e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd143c7-3fdd-42e3-bb7a-3008e8b99c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "958b36de-837c-43b9-b638-df0bf5c96c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c904680-159d-4bbd-a3a6-42e64bf82c71",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261d9595-9ba6-437a-9b4b-555fee2683a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb02f1af-de93-4707-a748-e9971ccc7f9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0b9212-d42d-4999-8721-6ec9823df9a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24610047-abd3-46c1-a4e9-5117a59eba59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78613e01-eb7f-4882-b572-9360c5c9436c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70ec6bf-a7b2-42e6-8f1f-dc783bfe40fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0cb468-5580-40cf-990b-a97241011913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef45e6e-6d3e-41bf-ada9-02fa0dd2bb82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcca618-b294-4de8-ba6a-d030c8ddb504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996619cc-d350-480a-be28-2e7d7158eed2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5467e6-decc-421e-80f4-4119711d2f6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b27662d-6a33-46b4-a213-3c2eaec6c237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0e0756-f351-4eb7-88f7-1f429f2a50c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda7323d-3345-4e44-9280-327bc4005465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79973721-287d-4038-9e2d-644e59de248e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c8fe72-c557-49d4-a829-87c04baf3b6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49b4db86-1f92-4c09-ae43-11199d30a57c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54956e3b-54e8-443b-a364-760b1c4f0e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfff763-7ab5-4097-8ca4-3f6b0747a262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e08b50c-ec42-483b-8811-63aa74ab238d",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591cbeee-e572-4451-8142-9db6e100545e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7807846-b525-49ba-97ba-921dbd17d3be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a39d6d-3604-46eb-b2c7-2a563ad7cf67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966c60f0-22c7-4f1a-b74b-4b7372b368f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47434631-0464-4e3a-a98f-b78bb0166cbf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55394bbe-8f2e-4d5f-805f-bf3ad4f1b558",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6490ce9-b2cc-4474-99ab-3909636d5273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20eac3bb-a35e-46e7-a920-d4e313d2ea83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8d4539-32aa-4828-9757-0708cfc4a60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779d5e7b-7a09-4b24-bb82-eaffa1ea5fe0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4c9179-58fc-4213-9118-82701b26dd8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00cd5457-1875-42ca-af72-c293a2d1a477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f1386c-3bd5-4aa0-a5b5-67ddf8a206ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4ba8ca-7ef9-43ab-85dc-ae3200b6273a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0605b6c-e540-4220-8afc-df286957c112",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43115bfa-a53b-4fbc-8658-14d916b2d7b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0357d7-b8e6-44cd-a6ee-d6916196d751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a28e0b9-5ba9-41c3-8d52-30f08aa31340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542332fb-095a-42bf-bcc6-020936d0327a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2342aa-c48a-4062-933b-e58e0f9dc98e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e62b923-c070-4735-9fac-d3f0d2a38e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9108a02b-d7c5-4a60-850d-e4df6d310a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02de23d-9bb8-478b-981f-7d5dab8fa1a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162e1a68-456b-4a5b-9535-1f3b1c8a0d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d493b17a-996f-498a-96fa-11f4b7e506f8",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d94ed5a-037e-4979-ace1-f8a4e8654910",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3848ede9-89a9-4861-b812-3b6ddacf8fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb552aa0-9ae5-4848-ad40-12fdd86ee0f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73cf7ddf-cab0-4414-a657-9e1bc500d52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1147ced-24ec-4c74-9ccd-3db9fb1b6ab9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd626b32-15ee-4bd7-90e1-f9e319b6dc29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12c6f8dd-87ed-4218-9e22-d86aa4c3620a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c211bc3b-a92a-4201-9bcf-c8a1fd9b9a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f97492-a45c-4655-bca4-895da7137e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6745964-d27c-43dd-8145-2d957f472538",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3036389-a48e-4031-a6b1-f85598e8bcdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e4eb7b8-01eb-44dd-b60c-05452fa90a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64eae31d-1a9b-4894-b19b-1d7b04aeb671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec3682a-caae-476b-a238-534f1f945a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4230744e-f3e3-4321-a1b2-c0a71e5b64cf",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1200228a-a39a-4400-b2c6-aae9cc98dc11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f1b4716-8aa9-4ac9-9648-df294d90f400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a438a87-d300-4fd6-b929-781748767e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5ab86a-1a4d-41c5-a640-4a2dd833200e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2b1f51-a585-4704-884e-b0cd0d2de94c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020e69b0-1a63-4188-b07f-a38311043c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d661156f-fa71-413d-9522-6565c52fcfda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31608529-7fb3-45b1-82ba-7c1c0d3678d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ba1455-49e5-4096-9ef5-7a02a6d9171e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399664f7-5db2-489c-a7ba-6f27f23c1870",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddbb088-a2a1-4a7e-a6fa-ec988906c6fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8378b816-fb50-48c1-b664-1befab322dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18457d21-0bd1-4e53-97d1-3840f87c2532",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c10d4b2d-6b86-4a50-8dff-66658aa8f350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf891551-af99-48bd-9d2d-07041e326f1e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a0f51a-5c38-41a6-9c8f-838c760ceb69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865a0a05-45aa-4ed8-b2e3-d73ed89be07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c535b0-66ab-4c98-b01d-3d612dde4211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cae260f-ac00-4e67-9509-5443866946df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca1ce61-dbb6-4ded-9255-891b4a2663ef",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5918de62-b1b3-4979-852a-585865f9d416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46705df-c02f-4c36-ad16-9063f336484c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04286ac4-1f1a-454d-91bf-4b09a34b876b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3d7165-3d47-47b0-8623-65dd0e6a6f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf054cf-7c7c-42da-8ff3-1efb5f5dfb21",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b69ecea-dc7d-44af-9d5d-37f1701021f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04bb1b9-e84f-4649-bf69-d92711aea0fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49326f39-6463-42f2-9f59-6250152751c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076b6eb6-b0a7-495f-8ac9-b9baf07e0e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3764f9-c4d2-49c9-b41b-d6c43491ba76",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d068ce-77aa-46e3-b675-40266f17f8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b916923-8860-4e83-bae4-a6c32806a73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5405de3c-880a-476e-924a-0c2dd4559b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e04e0a-36bd-4eac-b401-73e6538fa1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08359bf8-17db-46c9-a92d-e532c1da4a56",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09aae106-a925-409c-9105-3bed1689e057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d37fb3a-03b6-494f-a8eb-c8bb615872ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1c32e9-cc4d-44fe-a8bb-c7d16da8a8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d34c7d-18e8-4d03-a6c9-9cd1233e54d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea542ea1-7472-4158-a479-1a5242c46994",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b43d58-8e08-4314-91a9-bb5c14e51e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54ecaa5-7d15-4592-ae57-b780a391be31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caef76bf-f6dd-4f50-8073-c6561deb4a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a3cae7-cfd4-4d81-9b89-1b8440e9ebe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177e5f23-2dad-41c3-ad7c-b04872db8967",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bc88a0-40c1-4c0d-95cc-df6128268da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99c93ac3-027a-41e4-bd10-111cf57b3b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e28f6b-95d3-48ae-9c8c-326bc89b2dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d79906-8ed3-496d-b3d4-e48a29bb2561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2c7be37-3911-45c5-821a-7b6392c2c360",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596501ca-17c3-4a00-a039-554b6949f342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7ca12e-2f12-4a3d-80a2-59bb6ea4025c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce71abca-2845-4295-a9de-03095c7d500c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eee6b465-f787-4e62-9e61-6051c77a1eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31440fd8-c398-4274-b0dc-df00a6b4222d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071c7856-7545-4176-8e86-6065619988b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4a4518-c165-4d50-b3fa-005ac9de0eef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65021b5b-3169-4747-b1b1-c1c7f18c3e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d2f3d98-f0c4-4ee4-9bf6-b84560a3f2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8322c99-e9c4-44b4-bbf8-946d691d3a43",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7675862-5071-42b0-a544-7b5836e63620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad527f09-f893-4118-ad47-94af519043be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f816ba2-8a1d-439b-8aa1-607633fa23ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697475c1-df2b-415c-ac8a-6d961a85a317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f7144f-5141-45c4-a1be-a049108dce70",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d5dd87-53e2-4c1f-9e67-efe329c4d3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf276a6a-07e5-4858-ab59-d27c894c355d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bb3f7f-ca92-437d-8291-800305e7f3dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96b3e423-abda-4e9d-b770-fab11fed997e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10a6457-674f-4130-bc34-fe0c2cc0e40f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4148b6-7e2c-40f1-85ba-7028b681a4cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcde0454-c7b0-411f-a7be-c94885ce50af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff8d216-6269-41a8-9231-21c219361e36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2812461b-7e53-4c8a-adda-ae1437a38d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26d1d51-d203-4797-8678-8b001df5cf6f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "426c2de4-6976-4d1d-b1b9-f0d3108776dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b1fe1f8-076c-4555-ae14-55f688f086e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63415537-c8e7-42ae-9c0d-acc7d6076fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24f9adf-0a18-4ee7-8b7a-15c258f48349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40083188-a383-4c77-a3ed-60092a83dfa2",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f80d00-a56e-4c9d-9d87-0130543489cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45b1e31-02ea-4080-aee0-4bdbea1eac71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2207ce2f-18fd-425f-86c3-f2b38623dc65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ae9104e-1b49-489e-bc63-7be9043b33ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7687c045-e0f0-40d5-beff-0d6173b8115e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e882257-31d6-4084-97f3-8f736f445773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97439cc6-db7e-44af-8234-02548f7c79f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e16c017-9033-4064-9a2e-c6748555d047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9bc99c-9937-4f78-a94a-97818e21417f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76445193-507b-47b4-9349-fc92dc41efe5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3364a08e-ce78-49f0-9936-58a22d57d499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746d25ac-7dcd-4206-88a7-4f99240851b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44d0945-41ce-4a38-9fc4-6021bb0674f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8085a5c8-9685-4083-b04d-8b6c2a206e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8204bc9c-1163-4fde-9c4e-120dc8c6e894",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0890e6ba-7337-4fed-9ce0-63e9520e1cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31e0d471-8723-4886-b207-8215289c9e8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e87e0c-67ca-4c62-9e2e-6414d54a09d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c95d1af-36af-47aa-b8e7-9066ec810211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d47077-feaa-4b26-9eef-568bded3ef24",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322a7fd6-219d-453c-ad11-1aba6e1d3109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe4a9e7-e0c7-4407-a4e5-6fb1eb66dca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7adff4-eb9a-4a74-b2d2-fd47625cfb30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d1de859-3ce4-4f9d-af2e-e5c596bddbf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01427890-f87d-4b45-a200-5918cfc02066",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13de718-f036-4162-9bb3-9e1afdcc64b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8ca0d1-98e4-408f-8e1a-8b9317e894ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147dad68-d9ce-45aa-80de-eb0ab77b4661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef6e71d-15da-4a70-83fb-70be564c46c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5327af13-82c1-401f-8071-f90225fadbeb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c374fcb-8460-4cac-821e-5b830f3d2c6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f30aef3-abf0-4720-b980-01d31b4a5cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05dae811-d2a5-441a-8076-3d17fa5b9ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf2a3828-fc61-4d8b-b6be-3d48fe96c2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5ba238-7478-4793-8dbd-04441ce24f11",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a78db7c-114c-4f15-afcb-1fc1e8e187e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91483019-18c4-40d5-b686-b8bf88c2ee98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32eb6c72-ee39-401e-b950-e1e459291914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b384e661-0bde-4586-979f-3c451e99d922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89ee537-0b46-4632-ac21-2f2b30b662b2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c61609-f9c8-466a-89a2-f826bc5d0c5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a3426e-dc04-49bc-8099-6e0b6b5f6b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cde667-a776-40e8-8050-198fb4cd3b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09dfa4e-e08f-43c9-bbca-96e267396d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66762363-8d40-4ba0-8a7a-db5be9861b74",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4a2476-e5c7-4c75-bec6-827a2e72c80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d56b8e57-ed0d-451c-bfcf-8541b0670c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904eb3f2-7aa1-43b6-9955-456dbb431f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259e19e3-1d6a-4e07-854f-2312c9bb8db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98b9d77d-1697-4f45-90e4-2ebc7b9b8def",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8eb5fd9-a35c-43f7-9a92-2eafc7b6cced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98134128-2920-4453-a1bd-5b51bfd3f823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "434ca82b-6314-4245-84a3-5afb1967fa5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aece604-2bee-4433-86ba-7570cd77b094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f90a4f-c1f8-45b5-9422-e82703f768b8",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e03e09-96a3-4e59-ba32-fc210e6c13bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99358c34-53ce-4443-a9ea-457c862c0bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8de8cb-551c-4fc6-94db-dbcf9c4681bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5b16a3-f00b-4760-b040-e26136bcec5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e35368-4f72-4ab3-9328-9847b1de78f6",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe1378a-6168-42cc-8e5f-7ddf4f4c9af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f6bba65-25b1-4a67-809b-cc0aa78bf3d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6da7b1e-fa05-4749-89a2-d1ecd286eca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22552b7d-be35-4e5e-9a47-6733d98a3ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1403e758-f0ef-4f9a-87c7-690244a35b71",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc703d7-d4b4-4380-ba78-af9c1b4e0875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d638014-6249-482a-9631-0a27836bac6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36db4b38-8007-431e-8e4e-1c038ceea09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f990f5d-c84b-4a48-92da-75b3cb3e16ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78ce6f3-3f27-4570-82d0-2cf1edb3f6e4",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9732da49-548a-4b06-bcbc-44a29f4e6a3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd7788a5-900d-4d79-9121-af9c694f5ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b350c4f5-bf90-49cc-9014-1345be164b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a768e19-f874-4a9d-9d15-784442b64811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c00771-fb4f-4938-8e3d-5d769835156c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd83e0b-cf7d-42c8-90f7-078300c0dce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8af0c4b-94c5-4712-8586-165500a5c24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06c6903-ab9d-4d40-8fb6-4cb85f3f9cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5009ef4f-81a1-4949-bcdc-cf717528c8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1376b01-3dba-48d5-bc6f-411c1ca50503",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c8178b-f386-496c-978e-3cb12814157f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1baee5d8-d3ef-4379-a984-eeb23dd97e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b4207f-863c-47f7-93a9-1f0cf1d6c247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b66dd6-8a91-4400-b80f-b1304f0263fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee238add-ec1f-493a-bdfa-411c5a0289ff",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30eafc77-f0b3-4402-af0f-638053d82659",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ad0cd29-4a56-4a10-bf97-c94c3ad3b727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f88eb8-12d8-40ef-8e57-a6d20a1c954b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb72e7e-8ee4-4760-b4dd-662a3ecfaf14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c27d498-9ba1-4c50-ab10-95f58966f5a0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53e353b-fad3-46a6-ae4c-c0349f440c24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5f6c872-07b4-4db6-9b32-4bd428ab71c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d2ea0c-53af-483b-9951-f441ed7b75e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5257cc5-1813-4d6b-8711-ac86d903d8bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db17db94-2000-4708-b780-c81665e95c50",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b7c3ae-a297-44f6-a025-9630b82ad716",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da11f9ae-b7b7-428d-a437-fc734bdef15f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80bc5458-c7c6-46d3-9bf4-c980fb602284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57dd2ea0-5733-453f-866b-baebf0d5e37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d7c7d4-7816-4e2e-b668-bad35fc00288",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e501aad3-b0fe-4097-b88e-aed9606f343f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb464ec3-d6f5-4ae9-a771-a2234d5c51b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d0f3d8-a3cb-4880-96af-39961812a5e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0eb1da0-09d9-446d-8ba5-26523705fd6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73226265-2b8b-4274-86b5-62e0b714bdb9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca57d48-817e-4465-a0e8-731bf17572da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec09a9a1-9e85-46c7-90a4-1c48bb4690c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388ae20b-5f77-43b1-9a1a-a605bbd3b558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814637e8-3376-419d-b4c4-0afe7edc6def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529e25ee-ffdf-423f-8a31-6ca8d18c2dc2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce8c230-49a6-41e0-a179-f828a9ce226e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7f598d7-9d3e-46b1-9d1b-cee0f7edcf87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ff143c-0cb1-4591-8ada-91242da60be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f0be39-2496-45c4-b753-328cc558ba09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3266dbe-f816-4f79-a573-b82a185415f2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89028a16-5281-4f70-8dea-dd20189d4a61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5a4e983-a202-42f8-93d5-9976a25a1650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65952b23-80bd-4505-ab5a-e16a27d4ad6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f152bc30-c238-4364-bd02-a7b6630dbc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40833923-211d-43a5-819e-5643bd60ed85",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c342f0-2d58-42f8-a5bf-6e0acab8865d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb1b20c6-e641-47e0-8cbb-90a93a732a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e086be-f445-4016-9f54-1b608306ef9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463a8c38-b94d-40e1-b534-f9ad0b480b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cc2f5f-55e6-4b27-afea-b2306a9fcb02",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7613e03-cd92-4703-8ab7-040cb9b0e0b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b8c84a6-2009-4229-8efc-1baf9158324a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537c6900-f6e3-45df-848b-de83c5d51bc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09bf47d2-bcf1-483f-a197-ad180d2d7442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6b908a-fe87-4b46-83a5-7d1ebf0b5b30",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c597b9d1-4ef2-4ce0-bf03-de441211d673",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f3ae57c-1479-44f7-80a4-049bcd2201ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a53dc29f-aa35-48a9-882d-7f4f0d3c89f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27242db7-3dc0-4ac3-b65a-758aeff34c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f223a7-2750-4bb2-8575-144bbddf37c6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49cf29a-51fc-427b-a138-fe37cb704f14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5d6282a-ca19-421f-afe1-5086d75ff45e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77f0a08-680c-4070-9ee0-8a18778c7ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9bb85bd-3df7-4abd-aa90-99aca634d5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "799cb74a-a146-4043-bfa6-1025a7146e31",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b05794-2e28-412c-af2f-7f943ea019af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57b5aff4-a317-4958-a534-1d6182c942fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b28c21-369c-42fd-a951-731c9d0e95c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22430f3-2ff1-4509-aa50-e71a9f350349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485fa609-23b0-4c63-9d28-2ad07776d015",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a145dfd-0904-43a6-9ef2-6f2e8c1cda2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47c459b4-5e3e-422c-8e37-017307beb8fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba6af62-394b-4bf1-ab77-07412a50025d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d53ef0-7663-488f-b18b-b7da470d9f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61262e7c-65e8-4f3d-9bd5-50f22e355fdb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be9c1f9-d9ed-4b2e-ab84-42cf45dc32e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "520053d0-00e3-44b9-adaa-36e80c1712f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424e0d6f-6a8d-4465-8227-b08ae3100150",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617e2035-1dce-484a-955f-77622d4a9f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd9c121-cbbb-44f6-b40c-c7e387455c5f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2d015e-15c8-4f9f-bdbd-805be70268e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3260e8-37ec-4172-adfd-22ee8dfada48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c48e715-876e-4eb0-a963-2687457e6bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71de110-8fd3-4560-801c-f1258bd759ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914a201a-9f0d-41d8-9419-a685581a8180",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32743143-fd29-4cb2-adb1-a65548475d2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a52fde-6828-4f88-994b-6aad1dc89e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6ce934-0d67-4f1e-bb3d-a31962c21ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f31b0d1c-092f-44f9-abe5-f64d145a2020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24383c1b-dfd7-439c-b631-1820da52434a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34c3d45b-7d2b-4a8a-9416-edc97d03fba6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffdfb48e-e05f-4992-badc-1b2af1c8f3be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c53a81-32bc-4374-8bb1-ab1f4049cf56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd03c318-47d0-4b40-af90-5fd9216b52d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c61c89d-9594-48ce-9eeb-d203e7d49112",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8bba5b-837c-485d-b1e4-e215053b6730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93164b6d-c5dc-4802-8517-00ba19a68f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93d779f-eedc-4706-82ec-8926a8490b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0395e836-6146-4663-a7e2-cf5ce7d10708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57e7e46-e9cc-4d08-a448-4c0a6b74d3df",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a58a92-513c-46a7-a25d-3826e66bee73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00ef51c1-bea6-4709-ae87-f5ab2d1e628a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e28cda-a752-4046-8cef-070a6f9781f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356bfeff-2b84-4b48-aa50-2ce0d6b79660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11a39ce-d9b1-431e-b562-e8538e961d52",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1c651b-6eee-41c1-8225-d4cc640af43b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d9dfd38-992b-48ac-84d1-ce2358adfeec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f471e4-921a-46a9-b9a4-f2d08e78184c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0147897b-af86-44c2-a2c4-f44db22c5704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545c8376-7af0-43df-b579-405b1a3d99c4",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c186444e-edad-489c-ab27-c01af76f09f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1db9016-6e6d-4608-8513-62be30c84ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f59baf-9d69-4497-a06b-2443af1c8b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16030c91-7cdf-47a5-ad68-37e12be90c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f5a77e-85ff-41f2-b2b4-6840d489f1ff",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2789df88-7fde-4457-9ffe-b397481376e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d738b9ed-6402-43ef-bb87-0f729e2706df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b51b31f-cba8-41c9-bab4-b9782b4364d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac9bb9a-a56c-4e6c-9b92-e97c859a5ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f792e45-072e-48c8-826f-993d4ff3036f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a6f8bd8-0ca6-499f-886b-a57d05a148e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52f3977f-6b53-40f6-9930-998f5858a1ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04f6480-7280-4c3e-a384-175375275d49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6329c0f-9bae-40a8-a97a-1f7414106911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22805a99-358d-4648-a433-fc60b71a9b9c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea5d08c-2f11-4649-b168-98c4b258a8c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a66f002-6f1a-4572-86ac-e6edac3f7083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4b9b1c-7c83-42cb-a3c6-d7cef31e5e40",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17054cc9-a34e-4b88-99ce-74fed3dacde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaf1f90-cfe2-4e67-a4be-2e2ad9569b0c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced78f91-0b50-4a61-a0ba-f393045e7dec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "531460c0-9e48-4306-8a64-d59aa13aa297"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2508f6cc-4475-402c-98e8-7b2c31ef3650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7f77a7-a1ab-4b26-9ab8-a9ca4386a0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2bac575-8bcc-472b-82d4-e939de60d28b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59f4459-3181-4a24-bc9b-715b15b94d33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "163b69b0-7760-4f15-bdfb-0e70c6374f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d461b2-b787-4920-b343-edda474fe92c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49c98ab-f2b3-41b8-8529-5602754c8ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74544fd-f512-42e6-b998-23c1edf1b002",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f2d7bb-2c48-4b66-8c4d-565384ea6047",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce088c2e-43c5-4102-b9f4-168c524bcdf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdf17d7-5dcb-475d-8973-c5180181c6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08a673e-0546-4454-bbeb-1f5bfd4c74a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcf000e-1bbf-46d3-8ec6-102e929156bc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b9f022-aa1d-41e4-b0c4-41995a1854ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f6d1487-730d-4ce0-bd0d-e1d8cd2c581d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "745607cd-6007-47ba-9cc8-b944c96f9152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0600fcb6-efcf-47f7-8b8c-7c42f3f5eb18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c6f8231-9cca-4f79-a6a6-90b03f0f9958",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff1a6e1d-abe2-4e92-b50d-d6213bc53f82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a52bdb21-00d6-463a-a10b-8a5b54da16ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab067330-abcd-4026-bcfd-0c9f773a7d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e02930b-e634-4d31-b9c1-383268ddf923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f2c4d09-c364-40f4-b0d5-67a38aa38dfc",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a676efe8-acd4-492d-8515-f35b520cd2a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d43d881-e8d3-4f69-a53a-64612bb4809b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ca7425-a236-41d9-a564-72d33126abe1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39aaf222-d9f9-4527-87a8-0053dd976bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83c87ee7-9c63-4380-98ac-dea745a09e7d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248edb49-f353-4cc1-a622-cc7d78660c99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c147cbd8-bf2d-4caf-ac5d-90b0092ce904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585396b4-0273-4091-9a4a-0649fe53b308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eef0bb2-fbfd-4685-ba60-6f46e622be01"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e41b3357-ccc0-4724-97d7-acc91abe1bd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2eecb9e8-872f-4adb-860d-126e6dfc5df2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c801599d-2942-43ea-a4e9-f7e176519e51",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca9a70ed-2cf7-4f2c-a681-39ba9a12a9f5"
                    }
                  }
                ]
              },
              {
                "id": "39c63fcb-88cf-4b4f-8be7-f39eff04df24",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82e0bbc7-30a3-45e0-b7eb-c286d657da3a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af8abd6-4e13-4134-bf0b-268f27df0c57",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "08ba3b3f-b7b1-488c-8b10-f80509ffa353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c641e83e-d1e8-492f-8533-996b5b559a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "829c7279-51fa-450a-8203-3b4015e7d860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3a71a3-ac1c-4e14-b194-31dfb04a5b11",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e57366-194e-4d22-ac8e-afef0377fd06",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "1ea19638-7903-4c46-9dcd-69a3d079d41f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65921585-d2ef-4422-9539-86653ded0412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3e95b10-167c-4d2b-81e8-0008ad71c7b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a0220c8-a36c-469f-a25b-13ebd748ff35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "607d1a3c-0b54-42a3-bad9-24e0c9b8df53"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9eb305b0-972d-40bd-85f4-2c09ab446bc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f26bff26-38c5-46f6-8b14-1085a908317a"
                    }
                  }
                ]
              },
              {
                "id": "65f8a5da-806a-4d30-afb7-da268d416f14",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9caffe55-79af-4f5c-8cd9-a99b987aa6f3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57202f8e-89cb-4aca-a6c4-fdaa86c2c113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d5822085-837b-45f1-930a-c9a0b6be7d6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200bbb80-0fbb-4517-99fe-21b35621ec3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052b9e00-14ff-44f9-8938-94861a49c3a6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0ef6a214-81b6-4fb5-86c7-9b3752d6d3ed",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d78ef383-1cb9-40a0-8e14-b74266727eb4",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4104656e-b3ae-4bfb-ad01-070a1aefffab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f16eb4af-e2de-4e24-875d-baf4f96980a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cca098ef-5094-4171-9a3f-7dc9db09519f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b45b614a-5539-4714-9ac2-325b8745bc8d"
                    }
                  }
                ]
              },
              {
                "id": "d8c23e34-8093-46f7-9d0e-8238093e561b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "815532ee-ab66-4dd5-8dea-2720171b91a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "21beca1f-74dd-4d0d-8692-6a5a66a67e7d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a9461cd-fdf9-4103-883b-64764c0f3b8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e171def-4a5c-44be-b5af-3d6732223e06"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5370cbae-c500-4203-9283-817929dbad7e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e06960e9-4fca-402f-8441-e93e8b3f5698"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bca7ba7b-3957-4958-8a73-9640cfc4d507",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60e261f6-abc7-402b-b2de-f4ab2ecced92"
            }
          }
        ]
      },
      {
        "id": "1abb3806-3431-4752-a4ca-d538a2181380",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0a9c86b0-6e21-4640-9683-b41edfb0474a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c694bc6-9694-447e-b1ab-7d8973caaf1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8f23811-7f39-4fc0-8e47-f47f15b68452",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d9ea7a-3676-4507-8af1-086bb7fc8d8d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "11af8dbe-6ee3-4d9a-b987-eae8ccc51bd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf463d3-f909-4208-90a8-3b4104ea50d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ca3152a-9fad-4a06-a2b9-f248cf2b91ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a5d1f4-2d1c-4466-9938-7e00e4e3e8f5",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bf2e7c-9e2a-4ce8-88b2-256cecb120e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2bbbd65a-a084-4d87-8190-fe45bab50fbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4243b0df-4cac-40cd-b763-8188c7383610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0cbe37e6-9596-4d7b-b855-5f210cace47a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59af37bb-288b-4f0b-895f-28b9a8b594c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f6d12fe-9990-4e49-a68c-c25d120911ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64d9b308-8fb2-4c37-9b6f-0add4a6a9802",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de3e1b8d-8d70-45ee-b175-3c287c4bbaeb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ff86b82-075a-41ff-88fa-295ccf9e67d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "352228ad-8095-4f42-b036-9d38c6406330"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb9045cc-ebbd-42aa-9318-df51ac44f4f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "847b361b-c505-4e7c-b3be-3f94a28ea2ba"
            }
          }
        ]
      },
      {
        "id": "8a0d19ab-4429-4692-b137-85a90fec43ce",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "996eced1-23fc-43f5-b628-5e23eff783dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc758d94-24c6-4117-a11d-40944b781ebc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83434294-3d23-4255-b161-bcb414c040b3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db7c1d64-e20b-41d3-9446-def824f5f0fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab0ff967-8907-4fa7-a6a7-600d56abea62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "143225f0-5b35-4013-90d2-6733403e8c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3944e827-11b7-4201-9a50-d67cbfdb3828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3796ab6b-ba0b-4d1d-8c41-c7597225b25e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677ea020-667d-410f-86cc-587ec34215ea",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf91b1d-72e1-4b42-86b2-b1fe603a6fbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c54fd50-9c0e-4861-aea7-17c862b8a89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb1d7eac-5155-4a13-a362-aec5d90e6447"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7daf006a-d7d7-4a4f-9e0f-0c176f62c282",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11002b12-8b32-49b2-9227-81bfa30169dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a10b001c-0a52-45aa-b6f1-b88bb0396595",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9c21a13-85bc-400b-a814-11a4de0f0760"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c265d2a9-100e-4e32-b9e2-03b208e654cb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b3a16ece-4ca9-40b3-9df3-569343330da7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30cd6154-e155-45ef-b7e5-9bf354728c7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee0f63d4-b261-41c5-9b87-60e864301aef"
            }
          }
        ]
      },
      {
        "id": "a8d3176d-afd0-44ec-a46c-3efe9afa947c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a0312f10-8c46-4ef8-9a60-f4c5f98214a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5777d7cc-a403-4df9-b3ff-1649a3de8003",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3709522-5018-4853-b56b-49102c773c18",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081b3d6a-7498-4480-8109-8011357bd6cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00c43445-a176-4e55-bd3b-e1f06db228bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40163b68-17bb-417b-933d-3f09cc5da89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "229114ab-3b21-44b5-aa52-bf5d683b9a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e8e85d-6390-43a8-9e5c-c7ed6e05123c",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fcef5c-e48f-439f-b0f8-ada3819ede45",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c9423831-a7c3-4c47-a7ee-f32e8c5ed42a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e817aee2-8da4-405f-a17c-ae3f465fecca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94d48cc6-9e0c-48fb-98cc-6dd7b958e503"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38f21895-c6d5-4652-8d83-f7b125f40dd2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b39ed17-6408-4190-9ed4-d31ccb4d791e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa46e1e1-2595-488c-a7e7-974dfdb895cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "427f6689-889b-418c-b9b2-6682da469f0a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ec0f87d-66d4-4f53-82d1-1bc8b97096f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cccea20a-2e33-4ed2-afaa-f698f40bc8d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "05436486-0d5c-43c1-8698-9607a7f18849",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78efba39-1348-43ba-a08d-fdc2e7221880"
            }
          }
        ]
      },
      {
        "id": "83908014-e0c7-4431-a086-932af52e20ef",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83a9b848-f1bc-4abe-8966-4f8c09145bbc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "92f583b3-c202-4ea0-b377-fae4b8db1a86",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "20639d2a-6f83-4a69-a6cc-9848669187f7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59b2f485-1170-494d-990e-f435f542a216",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81235d95-2ef3-4db1-b7a3-9fec3325b6d9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 623.6884615384618,
      "responseMin": 10,
      "responseMax": 5557,
      "responseSd": 689.3930211129002,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680482231829,
      "completed": 1680482404557
    },
    "executions": [
      {
        "id": "41eb1a9d-bea5-4dda-909e-a0443bcd8aae",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7b96090f-dc1e-4d11-88cb-bd9e0659700d",
          "httpRequestId": "f48f14fa-0932-4284-a48d-5a2ee8c49ea0"
        },
        "item": {
          "id": "41eb1a9d-bea5-4dda-909e-a0443bcd8aae",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d27b88ef-ff6c-46ce-bf94-09b4ffae045a",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "c98d7405-a54c-4d25-a6b7-f218ea3d90ca",
        "cursor": {
          "ref": "13636013-5501-4aa8-aa41-19de2894d21a",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "090d29c7-364f-4881-b192-e65f1688da37"
        },
        "item": {
          "id": "c98d7405-a54c-4d25-a6b7-f218ea3d90ca",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8c88ebc5-6527-4aee-8b79-a12b7e3fc33b",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "e6fe7d6c-af18-4d6d-92c1-c895e1953c69",
        "cursor": {
          "ref": "a0d07578-a255-4fc6-8d44-dd45d85afab5",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8efccd9e-2aae-4e95-831a-c0ab01698f82"
        },
        "item": {
          "id": "e6fe7d6c-af18-4d6d-92c1-c895e1953c69",
          "name": "did_json"
        },
        "response": {
          "id": "61de93df-98f1-4568-b099-f7a75020933f",
          "status": "OK",
          "code": 200,
          "responseTime": 759,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbb0ec5-79a5-4df5-8420-d5ca0e4b4ad2",
        "cursor": {
          "ref": "ea28750d-c889-4530-9019-38727dd97d57",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "02bc18ca-a741-4695-901d-24b3e66f2eab"
        },
        "item": {
          "id": "8fbb0ec5-79a5-4df5-8420-d5ca0e4b4ad2",
          "name": "did:invalid"
        },
        "response": {
          "id": "4be2a9b5-5b17-4e6b-8f76-1a6a736f23bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbb0ec5-79a5-4df5-8420-d5ca0e4b4ad2",
        "cursor": {
          "ref": "ea28750d-c889-4530-9019-38727dd97d57",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "02bc18ca-a741-4695-901d-24b3e66f2eab"
        },
        "item": {
          "id": "8fbb0ec5-79a5-4df5-8420-d5ca0e4b4ad2",
          "name": "did:invalid"
        },
        "response": {
          "id": "4be2a9b5-5b17-4e6b-8f76-1a6a736f23bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716325eb-fe14-47ba-a27e-3c93f8b62812",
        "cursor": {
          "ref": "e8b12394-15ed-4d9e-99eb-66825915f2ca",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e020c2bd-02f1-4a67-b7a2-fda635715d09"
        },
        "item": {
          "id": "716325eb-fe14-47ba-a27e-3c93f8b62812",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "5ec6c2fb-1365-4458-aafc-b6c32cb42db1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 612,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9ecc7f-fbec-45cb-89e2-9a61ac8122ad",
        "cursor": {
          "ref": "d4f12c49-502a-4b12-aa14-49e550f5fdc0",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c0cb94f7-47ba-4533-8092-feb58a3d4304"
        },
        "item": {
          "id": "fe9ecc7f-fbec-45cb-89e2-9a61ac8122ad",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "33310545-12ba-460b-a416-ce788579c3cb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 700,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b09948f-911b-440d-9b24-218291be6004",
        "cursor": {
          "ref": "06cb1723-87d7-432d-8dda-fa8ea49fd7e8",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "703a1856-68b3-4519-9693-381bd3ce1632"
        },
        "item": {
          "id": "6b09948f-911b-440d-9b24-218291be6004",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6ef197f2-0996-421d-97aa-9ab1f0e90912",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 94,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb9c209-2f76-4577-afc1-40c187073cf5",
        "cursor": {
          "ref": "58ebe170-850f-4de7-a03f-54c966af4066",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b870ad13-85cc-493a-8a29-845f2171d809"
        },
        "item": {
          "id": "3bb9c209-2f76-4577-afc1-40c187073cf5",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "086ff619-10b4-4c85-b77d-efe243300c99",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 507,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb9c209-2f76-4577-afc1-40c187073cf5",
        "cursor": {
          "ref": "58ebe170-850f-4de7-a03f-54c966af4066",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b870ad13-85cc-493a-8a29-845f2171d809"
        },
        "item": {
          "id": "3bb9c209-2f76-4577-afc1-40c187073cf5",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "086ff619-10b4-4c85-b77d-efe243300c99",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 507,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba366a49-0ce1-47be-b280-9262956998dd",
        "cursor": {
          "ref": "4e4e5c4b-9406-412f-98bc-ea299840a168",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c0a81d11-b787-4a12-a12f-1f26b7d0842e"
        },
        "item": {
          "id": "ba366a49-0ce1-47be-b280-9262956998dd",
          "name": "identifiers"
        },
        "response": {
          "id": "35891c9f-7ef9-4da1-baba-7c68fbdb99af",
          "status": "OK",
          "code": 200,
          "responseTime": 908,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dea45b8-f6f7-49c5-9dd8-b27799023d8f",
        "cursor": {
          "ref": "1f56edc9-b4e2-4113-96cb-97e5655b6bfd",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a6d4ed18-d51e-40e6-b6d5-6c2f5ec5e152"
        },
        "item": {
          "id": "9dea45b8-f6f7-49c5-9dd8-b27799023d8f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9ad4fb8d-5100-41e2-a730-2fc2190f3ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dea45b8-f6f7-49c5-9dd8-b27799023d8f",
        "cursor": {
          "ref": "1f56edc9-b4e2-4113-96cb-97e5655b6bfd",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a6d4ed18-d51e-40e6-b6d5-6c2f5ec5e152"
        },
        "item": {
          "id": "9dea45b8-f6f7-49c5-9dd8-b27799023d8f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "9ad4fb8d-5100-41e2-a730-2fc2190f3ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3755a960-fe0f-4040-b1c7-973faceb1589",
        "cursor": {
          "ref": "10641bac-0ad9-4fc2-b6de-c3750916304b",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "20dad057-6d9c-4175-b7bf-f564a26f4cd2"
        },
        "item": {
          "id": "3755a960-fe0f-4040-b1c7-973faceb1589",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "61a0afcd-df61-4df7-9425-bcfb2c00e17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbeb044b-0fb6-4ae3-b36e-f5f5a211459c",
        "cursor": {
          "ref": "84502e92-e7bf-4269-8f77-32dacf3c830a",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "76537a2e-e973-4981-8839-4062786f34cf"
        },
        "item": {
          "id": "dbeb044b-0fb6-4ae3-b36e-f5f5a211459c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "774fc3e3-a7c6-4e33-8aa1-037165b74390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31baf8c-5203-4deb-91a0-c722f2fb4f49",
        "cursor": {
          "ref": "3d726d76-10a7-4599-99c1-c315e89560bb",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "08404af4-43e9-47e5-81c6-0976b4cfe865"
        },
        "item": {
          "id": "a31baf8c-5203-4deb-91a0-c722f2fb4f49",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "31ac461f-d9f7-448f-bbdc-515c3b90d61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 504,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e33e324-94b0-458f-9bcb-7046a5a24355",
        "cursor": {
          "ref": "d1a9a6dc-bbdf-4f93-881c-b048cf9c9cd7",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0524a620-2aab-46a3-928f-42b8843e7924"
        },
        "item": {
          "id": "6e33e324-94b0-458f-9bcb-7046a5a24355",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f2eb2fd8-5eed-466f-bf81-4d5e730f7e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb5ed29-6344-4e71-a047-d2d0553fb169",
        "cursor": {
          "ref": "28cadf9e-d2e9-4c85-9e7d-c7deaa72850c",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "06f6cc36-133b-4e58-bd08-1ff91e155b0d"
        },
        "item": {
          "id": "bdb5ed29-6344-4e71-a047-d2d0553fb169",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f7537fd2-fc2a-469d-ae2d-26cb8e5181bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ea7d63-6a92-44b7-83d4-b2dba463a9cb",
        "cursor": {
          "ref": "493959be-2b1b-41f7-9695-c120b2cf62e8",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "175eaac2-6518-4362-9e5e-7db296942271"
        },
        "item": {
          "id": "04ea7d63-6a92-44b7-83d4-b2dba463a9cb",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "10207651-c86b-4ee5-970b-94869956463f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec386b11-3921-476b-94e1-19c1f5d535df",
        "cursor": {
          "ref": "35f04008-0a61-4a82-bbb0-20d1e279aebd",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8b1fe9d2-54bc-4a93-b800-c3a531e9fc3e"
        },
        "item": {
          "id": "ec386b11-3921-476b-94e1-19c1f5d535df",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "676739c9-428e-4c03-be42-f29670dd5e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9749388d-cf5f-450e-b7ac-b0cce1ad0100",
        "cursor": {
          "ref": "1825b8a9-56f9-4f7d-8624-f70f21ff528e",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5efa7e13-77b0-4a94-a8c6-b7b8ffcadcb0"
        },
        "item": {
          "id": "9749388d-cf5f-450e-b7ac-b0cce1ad0100",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c375919d-8b78-4acb-8294-15774eadde2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e7eae7-717e-4748-8a13-865b7aaafcce",
        "cursor": {
          "ref": "68f546ea-fae4-4126-a0e0-700f04021905",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c64c084e-2d1b-4f43-817d-165d585a267c"
        },
        "item": {
          "id": "04e7eae7-717e-4748-8a13-865b7aaafcce",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "639055eb-43ef-4d0a-bfaf-7f26113d367d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee896338-9649-4bb2-ac95-00d2762ae5f1",
        "cursor": {
          "ref": "621a567c-a603-468a-9513-b57d822ae654",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a184732a-cfd8-4d49-ac11-ed65fd472d2a"
        },
        "item": {
          "id": "ee896338-9649-4bb2-ac95-00d2762ae5f1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "38032672-53f0-4846-99f9-0286b9d90c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 788,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8d43fe-a2c7-4dac-aa6f-4f159b3531d8",
        "cursor": {
          "ref": "4653a5a3-16e5-4869-a727-09fc1e8c974c",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "6e132a35-cfc9-44ba-91d6-bd853e99b708"
        },
        "item": {
          "id": "0d8d43fe-a2c7-4dac-aa6f-4f159b3531d8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "191ef609-d5b0-451d-b8d6-5e3910a3d85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 824,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392b8f48-c9d2-4fac-a668-e8ae67f6931a",
        "cursor": {
          "ref": "1dfbf150-9b0f-41b5-8cb0-42cbb4110013",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ed291857-cbeb-4f6c-a75c-3394bb224de7"
        },
        "item": {
          "id": "392b8f48-c9d2-4fac-a668-e8ae67f6931a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ffa8acaf-2a35-44dc-9da7-aae407ce041f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d7a1b1-0f38-4c7a-8ccd-ffb236d935b4",
        "cursor": {
          "ref": "c8c3032c-61e7-4330-b0e5-c52fbe3a47b5",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1e099584-15a8-4716-8ee0-2b98c2976a76"
        },
        "item": {
          "id": "52d7a1b1-0f38-4c7a-8ccd-ffb236d935b4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c24ea209-7d7b-4412-bde2-089bc1f9a0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 501,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19eb993-de77-44cd-adb0-c5c93aba7347",
        "cursor": {
          "ref": "abfafa3b-7943-4005-873b-02745e571da8",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6debb358-a51f-4cff-a1d2-a779b3a5956f"
        },
        "item": {
          "id": "f19eb993-de77-44cd-adb0-c5c93aba7347",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "5d7e0e7a-25dc-4246-a8f2-67ae79da8d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9690b4ca-a76e-4ad1-aaaf-34aca36d7ba8",
        "cursor": {
          "ref": "35f7177b-693b-488e-86b3-ecd119469204",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "36e9c031-d179-4639-81ba-ba407c293d43"
        },
        "item": {
          "id": "9690b4ca-a76e-4ad1-aaaf-34aca36d7ba8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "898444fb-52e2-423c-aec9-72f0fc3630b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0861bf9a-ef78-4ddb-be7c-7962dca679ca",
        "cursor": {
          "ref": "3297142f-2d83-46e8-975a-f7a5126e0e92",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "704c4aac-6ac1-4ca7-a9ca-ed183e8ef0d9"
        },
        "item": {
          "id": "0861bf9a-ef78-4ddb-be7c-7962dca679ca",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a13b7ca8-d58e-4b72-a3bb-eba1681f9c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea505e40-f936-413d-a49c-e7b38582d3e3",
        "cursor": {
          "ref": "4e00048a-d33e-4c5d-a0dd-a5d5d4275a89",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "72bad816-0c65-432c-ba99-cee5c7d4e4ca"
        },
        "item": {
          "id": "ea505e40-f936-413d-a49c-e7b38582d3e3",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4fe065c9-769a-4b64-87f1-5f5ab45a284b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a5aa2d-eaad-47e8-9267-222730010ffd",
        "cursor": {
          "ref": "e591dca2-d6bc-4067-bc59-24086de4a8f7",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "49cd3e4c-bcab-4c80-b576-f7380527a7b4"
        },
        "item": {
          "id": "99a5aa2d-eaad-47e8-9267-222730010ffd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "134f8249-2f90-4393-9041-85b130fce0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 499,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56076636-354a-4d98-856a-cf9be444ee87",
        "cursor": {
          "ref": "d021e533-89fa-4600-a67c-ed596237221b",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c4abd946-3c4e-4fc1-a72c-2d659d497be1"
        },
        "item": {
          "id": "56076636-354a-4d98-856a-cf9be444ee87",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "32bd9e9e-c642-4d02-9d82-774afba66cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b3ad36-a765-402d-a395-d432249929d7",
        "cursor": {
          "ref": "1fc4df8b-318e-40a7-9540-28572545398b",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "43085fea-eab6-4843-a111-243fe53269fd"
        },
        "item": {
          "id": "e5b3ad36-a765-402d-a395-d432249929d7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8c157317-c78d-4664-a039-d2a86aca6315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b1d9e9-23e0-4b2f-b1ce-78e1905ec891",
        "cursor": {
          "ref": "3b0cdec8-d0e3-44f1-93b4-87d41aebe568",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "05351bd0-82e1-4724-b49d-0c4d4f48aa29"
        },
        "item": {
          "id": "44b1d9e9-23e0-4b2f-b1ce-78e1905ec891",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b64a60ed-ae29-416d-9865-164dd287371c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1f3647-8d65-46b1-938b-0461b149b29c",
        "cursor": {
          "ref": "be1c95ad-0c22-42d3-9b10-8055e87a33b4",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f7783f05-b201-4d61-af29-d45efd315358"
        },
        "item": {
          "id": "9f1f3647-8d65-46b1-938b-0461b149b29c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e8b5eb5e-f657-49cb-a795-7cfcb628a992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf75875-1dae-404e-9595-4c34a19c54bd",
        "cursor": {
          "ref": "f03372d6-2c72-4d2d-9177-d496deacfd46",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ded1f8f5-d8e5-4072-813b-8f2c4c593d62"
        },
        "item": {
          "id": "3cf75875-1dae-404e-9595-4c34a19c54bd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c918e8b6-c6b1-4de1-ab2f-9aaa6e9d6334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abb3d42-7de9-4c6e-a11a-12562ef6ffd3",
        "cursor": {
          "ref": "aa7f0029-a033-4b22-b3b1-5aad74d170d0",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6da5f1c5-d4e2-469b-ac46-2b93d5d5bf79"
        },
        "item": {
          "id": "4abb3d42-7de9-4c6e-a11a-12562ef6ffd3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "aac95896-d7d6-4589-95c9-5ada6cb861c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f781461c-55d0-4601-865d-be083c0a9493",
        "cursor": {
          "ref": "29c74256-758f-4f08-90ed-95c9d57a491e",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "91f91871-2aec-4223-a4ea-ff60068574aa"
        },
        "item": {
          "id": "f781461c-55d0-4601-865d-be083c0a9493",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "02a778ca-0a4a-4457-9938-8bf1490a745c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe4d0b15-9a3c-409f-9977-cd34a86a4f00",
        "cursor": {
          "ref": "d8ea134c-5df5-4299-8333-cf6b739ba81d",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "244e1236-55e2-4d23-922a-419dedaa4715"
        },
        "item": {
          "id": "fe4d0b15-9a3c-409f-9977-cd34a86a4f00",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "2673a42b-6554-42fc-9cb9-587b1b7bde40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ddec37-a724-4552-9555-c3f2b2b117c5",
        "cursor": {
          "ref": "6e1130cf-d819-495d-8f4f-cf2790a57484",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b0f6e8c4-c221-40c4-b00d-1ad4082bcfd5"
        },
        "item": {
          "id": "33ddec37-a724-4552-9555-c3f2b2b117c5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c021ce20-bea4-4cb0-bc54-672593e661c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d137b533-2ade-46b6-88b2-5c25f9a7cf76",
        "cursor": {
          "ref": "1c01e881-527a-4813-84b5-d1ebfeda6413",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "96bc0970-1333-460e-a2ab-c483a0c819d9"
        },
        "item": {
          "id": "d137b533-2ade-46b6-88b2-5c25f9a7cf76",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "67ddc366-b18c-4a2b-8dd3-c2b32b95d03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff11cc7-a16d-4695-91e4-2b450d2f3254",
        "cursor": {
          "ref": "d89a1095-9139-4b76-9241-eccfe62247b4",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "88cc359b-d910-4c68-be11-69a78fee6e2e"
        },
        "item": {
          "id": "eff11cc7-a16d-4695-91e4-2b450d2f3254",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3b88719c-8f43-4308-832f-15594f044e2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c7cebb-f79d-4372-930c-b08589baa395",
        "cursor": {
          "ref": "08ec6e1d-39e9-4dfd-ad98-36143abeb7e9",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1c5785e3-6d45-49a6-8498-1c586c82a5aa"
        },
        "item": {
          "id": "87c7cebb-f79d-4372-930c-b08589baa395",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "947a732f-4c49-4320-a357-fdb49a0f1ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a747f7-1174-4df5-80bf-6d13e7e9cc86",
        "cursor": {
          "ref": "bbc218d8-b6d3-4d5b-a12c-a3a7667e830f",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "19d611fe-3548-4107-b745-026b5b7499b2"
        },
        "item": {
          "id": "43a747f7-1174-4df5-80bf-6d13e7e9cc86",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ffd01668-999a-4995-a080-e2e65d19ceee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8823ded-bf71-428b-b0f1-78e0e1a4cd25",
        "cursor": {
          "ref": "df725860-39d5-4bcc-a18e-32975eba6a84",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ce81033d-542e-4cb7-b026-6aabeeda085b"
        },
        "item": {
          "id": "e8823ded-bf71-428b-b0f1-78e0e1a4cd25",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "65d5c3f4-3a02-46f3-86c4-5c427ba76e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867c01ae-84f5-45c9-bf47-0c74e8c43a47",
        "cursor": {
          "ref": "04063d10-c5a1-4f13-8363-1b86c79d2a1d",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "95d78d7f-ccbc-4a25-bc96-f3b6eef0a109"
        },
        "item": {
          "id": "867c01ae-84f5-45c9-bf47-0c74e8c43a47",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ad132bb1-45de-42d1-b940-a0b01766f21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46a82a3-022a-4622-9a94-c00eb64fe754",
        "cursor": {
          "ref": "498a3993-1acc-4de7-923d-8d3478df84da",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "522ebedb-1c96-4a0a-bc4f-c31ddeb72528"
        },
        "item": {
          "id": "c46a82a3-022a-4622-9a94-c00eb64fe754",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6e29ea78-de22-4f33-a752-cd8815a48657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e9f1dc9-ffde-4988-8dc9-61af92fbfb9b",
        "cursor": {
          "ref": "e4ae637b-1b81-416b-a295-501b87407b9a",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ac1fc8b2-99ee-4d77-9754-e4b6ed16fcd8"
        },
        "item": {
          "id": "8e9f1dc9-ffde-4988-8dc9-61af92fbfb9b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3a063a22-684b-4577-8509-27c8e8246ebc",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 675,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d4459e-3850-4df1-9732-08e95843f272",
        "cursor": {
          "ref": "cafb59bd-b36f-4d9a-b167-4147dfbe164d",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e888161f-10e9-4a30-8a6b-2c1e1c7d9447"
        },
        "item": {
          "id": "c5d4459e-3850-4df1-9732-08e95843f272",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "be7d1dcc-278b-4af9-a1a5-f1771f7f7693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8264f3c0-a1b4-4a41-af93-5473473f88aa",
        "cursor": {
          "ref": "64189d25-b5a1-4b21-b9fc-6d3d5eef757e",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e1c97a94-79a5-437a-ad84-0064faf4cb3e"
        },
        "item": {
          "id": "8264f3c0-a1b4-4a41-af93-5473473f88aa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "56a6d3b8-2d79-4061-83e2-2f7325370abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb25f551-2aa9-4b53-9831-9a9de3c72a87",
        "cursor": {
          "ref": "c200b3ce-fe2e-405f-a879-09c6552affbe",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "93976edf-88aa-4538-800d-71bf3c5a4904"
        },
        "item": {
          "id": "cb25f551-2aa9-4b53-9831-9a9de3c72a87",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "07322d7d-3c37-4cb7-8a44-c71e7f524167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba28d853-126e-47af-a781-6f71f2acc23d",
        "cursor": {
          "ref": "406f34b7-ad8b-40c2-85fd-d39e72c164d0",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "10b588c2-ea48-4859-8061-727126d8f214"
        },
        "item": {
          "id": "ba28d853-126e-47af-a781-6f71f2acc23d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b66313b3-bb82-4b21-8ade-03375b372ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687696cc-7311-4203-9d0f-1fc1a18521c7",
        "cursor": {
          "ref": "73bdeba9-941c-40eb-8fbb-abadf60f5101",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "626a0acf-5f8b-4eb8-a9ff-4284b0f6fd4d"
        },
        "item": {
          "id": "687696cc-7311-4203-9d0f-1fc1a18521c7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d0c76dd1-148e-411f-ba26-69246568dc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a975ac-06f4-43d6-9116-43fddbc0b14a",
        "cursor": {
          "ref": "36d0e01f-7722-4843-b70f-972f5c2157e8",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c769cfd2-7a66-4998-bc5b-4d734b2e502b"
        },
        "item": {
          "id": "47a975ac-06f4-43d6-9116-43fddbc0b14a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "68953c25-0b7f-45b1-a21b-cf695a9616d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4800e15-1145-4c00-8821-db42a71064fc",
        "cursor": {
          "ref": "16ce6e1f-8e69-4665-883c-bde538580b0e",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f88aae9f-fe19-45c6-9c66-9d23729598fd"
        },
        "item": {
          "id": "a4800e15-1145-4c00-8821-db42a71064fc",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "18b911bf-824d-4d62-8c8d-03c3386ea2e4",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 628,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a779be5-aa3a-4442-9aa2-47bbba3e7d33",
        "cursor": {
          "ref": "1bff220e-37c5-4f76-b6e6-1719cdf3dd90",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d940db53-1e06-4f05-974b-563d51be7d68"
        },
        "item": {
          "id": "8a779be5-aa3a-4442-9aa2-47bbba3e7d33",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c92eb09a-cf7c-43a3-8e98-def0211d3592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc3f6a7-f5da-44fe-ac35-4e4bfb0d712d",
        "cursor": {
          "ref": "160e453f-b755-4449-9bfc-3cd2731503ac",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bf25295d-1b22-443c-adf6-bc9b662ba730"
        },
        "item": {
          "id": "4cc3f6a7-f5da-44fe-ac35-4e4bfb0d712d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7cb23eb8-5229-40e0-a4e0-473ecedc7802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be60aaa1-9e11-4984-9225-5f38719fce72",
        "cursor": {
          "ref": "3ed92fdf-01f6-4af8-9ab0-275ac39679eb",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3a5fc62e-fc6a-49e1-bcc1-b63c5bc1346d"
        },
        "item": {
          "id": "be60aaa1-9e11-4984-9225-5f38719fce72",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "cc8cb490-ba33-4233-a5d7-eecd4d874c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361f3203-9c59-4c0f-86b1-e2ed08e94a8f",
        "cursor": {
          "ref": "eea422b4-c407-4ec3-9ec8-9f82513a6e8b",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7f9f9074-941a-4cf4-ab2e-03979a2271f6"
        },
        "item": {
          "id": "361f3203-9c59-4c0f-86b1-e2ed08e94a8f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7a65c198-b961-4792-95b7-ab3990c76791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdefe822-d5e2-44b4-a0bc-b8180489df62",
        "cursor": {
          "ref": "0d14b3b1-1079-4f1a-bac7-b5b681753e23",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2ea89d6f-a6d7-484e-8fb4-b8cff72d9819"
        },
        "item": {
          "id": "bdefe822-d5e2-44b4-a0bc-b8180489df62",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6ab5c18f-c2b0-4b07-a310-7dbc76cec8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ddb75ef-0c7a-4382-80ff-2fffda09ac41",
        "cursor": {
          "ref": "239a0b38-1aac-4c38-9651-5c620a39ba7c",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d3a0b920-2af6-4de5-b807-3a9829ded241"
        },
        "item": {
          "id": "4ddb75ef-0c7a-4382-80ff-2fffda09ac41",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "818001f1-b1ac-4a98-9532-d39e62eebc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d824885a-1b6a-481f-8789-cc63d2fa92ec",
        "cursor": {
          "ref": "37227226-a43f-4fd3-a524-e5662d711304",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a346549e-5a24-4dd5-baf6-2d1a812632f4"
        },
        "item": {
          "id": "d824885a-1b6a-481f-8789-cc63d2fa92ec",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "272b4f66-f040-4b9e-a322-bdec36a22af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f0ab99-34ed-4ed4-a2e7-80724b7d9b2b",
        "cursor": {
          "ref": "ad07a24a-5f1a-47af-8cb8-bde7723975f8",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f910307d-d309-478b-bcaa-bd53963a58b7"
        },
        "item": {
          "id": "70f0ab99-34ed-4ed4-a2e7-80724b7d9b2b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2b417e42-0acd-46e6-92e4-8dd10cc8cfa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44eb21bc-457e-4461-bc32-0ff28c0164b7",
        "cursor": {
          "ref": "67d29f8f-b190-4845-9d1f-979a4be7a39f",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "99d149b5-be77-4085-97c4-205b8e9190cd"
        },
        "item": {
          "id": "44eb21bc-457e-4461-bc32-0ff28c0164b7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "52579b7a-fc8b-4266-9b1e-bf1479c378af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0471fca-9c16-4825-8533-8151c202748e",
        "cursor": {
          "ref": "71d67a50-cb1f-4554-8075-4a6f866a745e",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fc8372ce-a984-46bf-9ad1-fb7a5f524ca9"
        },
        "item": {
          "id": "f0471fca-9c16-4825-8533-8151c202748e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "26611433-dccd-4071-96ed-c9081c829836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d44b19-225e-4d21-8bde-915143a0ea5a",
        "cursor": {
          "ref": "5414213e-a537-418f-a6ee-cf34a1792d2d",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9b2ca2d7-92c2-421f-b807-86c2559d4a4c"
        },
        "item": {
          "id": "40d44b19-225e-4d21-8bde-915143a0ea5a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0315715c-cc98-4f13-859a-bb1482cf02d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 846,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "148c7732-29da-4db9-a65a-f2d3d1ae468b",
        "cursor": {
          "ref": "603630dc-3fdd-4e5f-b591-9b69b582aa2d",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d1072c16-192e-429b-a056-b68225107674"
        },
        "item": {
          "id": "148c7732-29da-4db9-a65a-f2d3d1ae468b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a2cd194f-5bd3-4dd1-899b-6a4d22979059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcaf5a9-be3b-426e-865d-eba93985b5b0",
        "cursor": {
          "ref": "64159e79-a6f9-4ac2-9c24-7b1d21a5d650",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "67bfc939-e093-4497-aac2-37d1c8906574"
        },
        "item": {
          "id": "bdcaf5a9-be3b-426e-865d-eba93985b5b0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7467ee88-1085-4413-8385-b3cb40f6cccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55dad29f-e55e-435f-938a-dbd2ade9a46c",
        "cursor": {
          "ref": "cae92c02-9197-4984-a60e-f6a6e8ee472e",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f419e06f-044d-447b-b688-e9fed7c240c1"
        },
        "item": {
          "id": "55dad29f-e55e-435f-938a-dbd2ade9a46c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "308d4bac-b561-470d-9532-2b951928e49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48ac5d0-ae3e-466f-b5d8-1ae63e3faf8f",
        "cursor": {
          "ref": "809b5450-c971-4153-b1ad-5f60c04ac715",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "00895863-a1db-46e5-aa03-7349bd196551"
        },
        "item": {
          "id": "d48ac5d0-ae3e-466f-b5d8-1ae63e3faf8f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9a3cf1c2-5ace-4fa7-9fd6-5017133d7197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572bdc9b-b68a-48ef-8c40-e2614a02e44f",
        "cursor": {
          "ref": "805ada32-2b27-4ed1-af44-fe221f434688",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "385555fc-28e7-458d-a5d7-6f597bf5766d"
        },
        "item": {
          "id": "572bdc9b-b68a-48ef-8c40-e2614a02e44f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c54c1d2e-8427-4718-b247-01aa1357abf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531f22fc-7f3c-4b03-af8b-bc4e3e97046c",
        "cursor": {
          "ref": "1cbd666f-f585-40bf-868f-f9aaaabab915",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9bc7df6c-9acf-4180-94a3-94959bb4d21a"
        },
        "item": {
          "id": "531f22fc-7f3c-4b03-af8b-bc4e3e97046c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "09dee7a7-7161-48da-97f9-dce72f4da806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0adfa1-733c-4309-89b1-60d726fc998b",
        "cursor": {
          "ref": "ee2b03c9-1154-4d99-af74-ff92300f9b53",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "862d0340-f9db-4635-97d5-5c96de8b3c69"
        },
        "item": {
          "id": "6a0adfa1-733c-4309-89b1-60d726fc998b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6ede8f9d-b6a7-4a22-944c-4f0e8e7ca5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b610e801-9ec8-4e9c-a4d6-c0bf2accc310",
        "cursor": {
          "ref": "1c23a32e-e0e9-4d58-8b63-d04645f2caab",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9015f394-7f85-4c4d-b6a5-69eb68f9965c"
        },
        "item": {
          "id": "b610e801-9ec8-4e9c-a4d6-c0bf2accc310",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d53d1e57-522d-4ccf-b16d-cdc3c2c0a9c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81854780-25d5-48f8-b9f1-227c787273c3",
        "cursor": {
          "ref": "a42a503d-7bf1-418e-983f-5bdf682b4251",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cfc6919b-d27d-4b11-9cc8-7c6cb7d4cb48"
        },
        "item": {
          "id": "81854780-25d5-48f8-b9f1-227c787273c3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fdb79eb5-a2d8-4fb3-a6e9-af8f28447d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a504388d-736e-484b-8b01-a69e2222a345",
        "cursor": {
          "ref": "83dcc746-fe9c-41bf-b1d5-20df2848e31c",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d07ea63c-6b91-45cb-a072-cae9e544d839"
        },
        "item": {
          "id": "a504388d-736e-484b-8b01-a69e2222a345",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "33f521ea-4139-4bea-82ce-01ab281489ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1036ee44-b0d9-4c9c-a1ce-d528da9d4d29",
        "cursor": {
          "ref": "e1997492-1546-464e-88f3-f24498b751cb",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "74f5c685-1d99-4578-ac52-b2e72f4c6648"
        },
        "item": {
          "id": "1036ee44-b0d9-4c9c-a1ce-d528da9d4d29",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3467a018-c82f-400a-9cbd-e3e977809181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3382875-cf61-439b-b5bd-56d798922ffa",
        "cursor": {
          "ref": "6067e5e5-fc09-4c19-95dd-034b63df808d",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "56ec56fb-5547-4659-a2e9-7be8ab66c2bc"
        },
        "item": {
          "id": "b3382875-cf61-439b-b5bd-56d798922ffa",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "589bb647-a1e5-43db-aa4a-678af6bf5585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd9c106-0ea9-4783-b56a-81d5d979d961",
        "cursor": {
          "ref": "52a0b3af-ba05-4018-a33c-b9769d6dfa33",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c63a7cec-f8a0-49f2-977f-061abf935cde"
        },
        "item": {
          "id": "3cd9c106-0ea9-4783-b56a-81d5d979d961",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a097293e-5b2a-45e6-b90c-84327ee07f7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af7b1a7-886e-41b3-8da5-3f0c7323af9d",
        "cursor": {
          "ref": "3d447ed1-0430-4b58-9c71-6b01e44dadcb",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6fdf14c9-978b-4065-95f6-340210253ba6"
        },
        "item": {
          "id": "3af7b1a7-886e-41b3-8da5-3f0c7323af9d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8240dcb4-c538-4490-a936-abb0074bc88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 881,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d5d4bd-1292-42a9-b920-fd6bb862abf0",
        "cursor": {
          "ref": "1760099a-412e-45dc-8981-c9e7108513bd",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5c76c901-1325-44c7-8f0b-5849b9078443"
        },
        "item": {
          "id": "b6d5d4bd-1292-42a9-b920-fd6bb862abf0",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "35db01fb-2465-43f9-a046-36e90f1ac7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 776,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45c4ba4-08ab-4e30-8cb0-247a456aeaaf",
        "cursor": {
          "ref": "d39f940b-6b32-407a-9ecc-0b44caa2234e",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5a52ab03-b611-4906-a8c7-5b125934cfcb"
        },
        "item": {
          "id": "b45c4ba4-08ab-4e30-8cb0-247a456aeaaf",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "07b1c0cb-2aa8-4f9f-8830-93e71a16923e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1016,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89a3545-704e-45c9-bc99-72999425479f",
        "cursor": {
          "ref": "39b45373-1f92-49c4-be69-121543a732b8",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7e037b22-9427-46ae-86ff-c7c8b00264fa"
        },
        "item": {
          "id": "c89a3545-704e-45c9-bc99-72999425479f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "08c60871-3a38-4b1d-a567-24fd68ecc81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f6d8b8-b3b9-4586-a19f-e839730b67f7",
        "cursor": {
          "ref": "a6c612fe-9171-43af-b6b1-0a76a557cc9b",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e775e0f0-3b23-40f7-8658-700239f8b8e3"
        },
        "item": {
          "id": "55f6d8b8-b3b9-4586-a19f-e839730b67f7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2f973189-94dc-42f4-9a91-d184292d8f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a816c3d1-0426-4e28-9d95-3ff1870b4bc8",
        "cursor": {
          "ref": "2b87fe4d-b8a0-420a-bf47-82316bfdd2c6",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "88b08c55-5ea5-456e-bca7-25accac8d962"
        },
        "item": {
          "id": "a816c3d1-0426-4e28-9d95-3ff1870b4bc8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e2456ff2-a0c0-4453-b44e-d7d079560031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497378da-61c8-450f-9259-1e54d68a4ead",
        "cursor": {
          "ref": "6ddeea19-9579-4361-b49b-68b51e058e3e",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "76ee58dd-c92b-469d-8faa-edc151f145d5"
        },
        "item": {
          "id": "497378da-61c8-450f-9259-1e54d68a4ead",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "99919839-4276-4c9a-b286-ad05779483b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 910,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4a8375-2532-4820-b504-ee0289c904c7",
        "cursor": {
          "ref": "12944527-618c-4fd4-b8af-9888587bd460",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a5c905b8-ba6c-4cd5-94af-dcb4b6e5e8a2"
        },
        "item": {
          "id": "0b4a8375-2532-4820-b504-ee0289c904c7",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2dfb4997-4de9-4593-bc24-d94242897ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 958,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf50c383-c492-4b06-b5fd-ea83be87ace3",
        "cursor": {
          "ref": "ff6532bc-61a0-4533-836c-d86b984c0bd2",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "51a69cbc-45ed-44d6-acbd-832bacdb8f7a"
        },
        "item": {
          "id": "cf50c383-c492-4b06-b5fd-ea83be87ace3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e84816fa-d0a8-463c-8081-978689a74803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eabccd7-3e91-48df-81c6-cb0be07b955a",
        "cursor": {
          "ref": "59ac737d-0317-454f-b623-014851ccfa9b",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "844d3c98-fd35-42fb-806d-ff78134c7259"
        },
        "item": {
          "id": "8eabccd7-3e91-48df-81c6-cb0be07b955a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "30921dc9-fef2-4278-9eb7-a4eaa7a1b60d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 717,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb76737b-38ee-4ad8-95fc-eac0a53b9abb",
        "cursor": {
          "ref": "31180118-567f-422c-81ea-285a7e32427d",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0a64fe53-9f2f-4879-84dd-1165cea37957"
        },
        "item": {
          "id": "fb76737b-38ee-4ad8-95fc-eac0a53b9abb",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9f4567d9-76e1-4c5e-8314-73fc0a3e18ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233b7bcd-4256-48c6-a4e2-210e47e55f3c",
        "cursor": {
          "ref": "289a55b2-8a40-4504-8ccd-dd9df582e49b",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1a3caf27-d83e-4f5a-ac50-f79efa5345c8"
        },
        "item": {
          "id": "233b7bcd-4256-48c6-a4e2-210e47e55f3c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0ebf5eb5-7a99-4252-b079-9c786970051b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "535495f1-e3e1-4f5c-a9a5-e36183480625",
        "cursor": {
          "ref": "731dbf3b-8354-4561-9e90-3002daa2c405",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "04484331-3361-46e2-88ef-b40a821d1f6c"
        },
        "item": {
          "id": "535495f1-e3e1-4f5c-a9a5-e36183480625",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ca379b8e-75c9-47a8-81ca-064a36d2f0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4a4677-fca7-4cba-9ef4-c0eaffe7b5a1",
        "cursor": {
          "ref": "0fdf43b6-9041-4a4f-9481-148ec4e0a574",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d46167ec-42ac-4c95-b5a1-ddf9e490240b"
        },
        "item": {
          "id": "3e4a4677-fca7-4cba-9ef4-c0eaffe7b5a1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "110ac6c0-a2db-4e0d-b16a-b9485805d951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca0d751d-540c-44cc-b971-64d8da4a38c1",
        "cursor": {
          "ref": "b458f1d7-4b79-4f0a-9dac-c477b416dd52",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a27d89d6-deb4-4e75-b35d-9c5dacb1567f"
        },
        "item": {
          "id": "ca0d751d-540c-44cc-b971-64d8da4a38c1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8aff2d21-ebc1-4796-9043-0a2798fdcd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 980,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce57853-6515-4a34-b6f4-b941c2964e04",
        "cursor": {
          "ref": "587bf998-63b3-494e-9f7f-4622d0689154",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9003b332-d033-41ca-a4e5-081debaa59a9"
        },
        "item": {
          "id": "1ce57853-6515-4a34-b6f4-b941c2964e04",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "93c0c20f-aada-41b7-a513-33d632a940fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1017,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "856e3a12-0689-4f62-a681-98026257bad9",
        "cursor": {
          "ref": "f269c849-e754-48e2-9ad2-8b8f8019ac85",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d7929d4c-546d-41a1-999c-938762784176"
        },
        "item": {
          "id": "856e3a12-0689-4f62-a681-98026257bad9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cfa538cf-3e30-4046-9b54-c38f88a93d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37157316-ebc3-4159-a6dd-6e102c5ff756",
        "cursor": {
          "ref": "c7237ded-06a0-4d3d-b6fd-c2d7c53ea509",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5974ec58-a992-4e3c-85b3-38b1ac1804b4"
        },
        "item": {
          "id": "37157316-ebc3-4159-a6dd-6e102c5ff756",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "601e56cf-b71e-4145-8e27-893d2d797cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2471be6-3930-4839-86a8-b0b22283d743",
        "cursor": {
          "ref": "73b268db-37c0-4865-8e03-5c54cd77d2be",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "66eadda5-fede-4ed5-bcd7-edb250a8c1ee"
        },
        "item": {
          "id": "f2471be6-3930-4839-86a8-b0b22283d743",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "74e26f40-e054-4347-9537-5dea1cb62ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eba483e-c980-4b3e-baec-a70950d26df4",
        "cursor": {
          "ref": "b06036f0-564f-4bba-b819-9340f72dae6e",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3ae5db51-55a1-448f-b9ff-ebd31e43778c"
        },
        "item": {
          "id": "2eba483e-c980-4b3e-baec-a70950d26df4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f534c4db-7d0d-41bc-8c83-92aa39e48d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122fed98-a49a-44da-801e-a71492c84cdb",
        "cursor": {
          "ref": "a8e2bf0f-be65-44f8-9a5b-f5e054a8633d",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e44318bd-a10d-48d4-b78f-d516b8cb5c90"
        },
        "item": {
          "id": "122fed98-a49a-44da-801e-a71492c84cdb",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "83bac786-ae1b-4368-827c-fffe74585e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64c3120-3753-4ee2-9493-17064600da45",
        "cursor": {
          "ref": "46d5fed4-da6b-421f-b20d-4c0e1955ec0e",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "eb68b7d2-45e4-4c01-ac81-3f1bb84aa4f1"
        },
        "item": {
          "id": "d64c3120-3753-4ee2-9493-17064600da45",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f21dcacb-d0f3-46fb-847e-1fb7e3fc680d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0596d435-66cc-42e1-b213-f61e9db62f83",
        "cursor": {
          "ref": "d023625f-dbdd-4c5f-b374-424ea729b587",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1d2491be-1115-485d-8aef-f52aeaecbb98"
        },
        "item": {
          "id": "0596d435-66cc-42e1-b213-f61e9db62f83",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "098751ad-4472-4668-9519-a9f3d668159e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de1f75f-5675-4f8b-be06-32d89101deb4",
        "cursor": {
          "ref": "d235001d-3553-448a-b077-77a6718b4758",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "006c6c23-83e0-4f14-9060-75d1b617c40f"
        },
        "item": {
          "id": "6de1f75f-5675-4f8b-be06-32d89101deb4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "70ca4bc2-a6f4-4746-b2e1-2122992b65e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2256a5-abbc-40dc-b1e0-46800427d705",
        "cursor": {
          "ref": "f2882911-6fc6-4d69-8f3a-dd58735413b1",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "954c1b13-6ae4-4d57-8c4a-3aa53da70501"
        },
        "item": {
          "id": "1f2256a5-abbc-40dc-b1e0-46800427d705",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "afd0632c-78ac-4ffd-bdc6-0e246b934a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b04950d-a130-4bae-9cc4-3081cbca356f",
        "cursor": {
          "ref": "1c24f6b6-d5f6-4e7e-a1ba-4e5eb25af1ba",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "20ff9cfb-0aab-40d9-90f2-64afb0fbb81f"
        },
        "item": {
          "id": "1b04950d-a130-4bae-9cc4-3081cbca356f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a5aae457-62ab-40fd-bdda-8f01d59ca016",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a82a063-5a5a-4bd3-95ce-51bce43c52db",
        "cursor": {
          "ref": "d91ae660-68c5-4f4d-bfe3-446ee095c86f",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c9a6e803-d15d-40a8-b995-77e45faa0a11"
        },
        "item": {
          "id": "6a82a063-5a5a-4bd3-95ce-51bce43c52db",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f5d3d492-d582-43f1-a0fe-64461e1835a4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 603,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a13009e-5758-4e7f-9a39-9a1cbaaeb893",
        "cursor": {
          "ref": "c6311300-b0b6-4ff8-84de-c5a79d730c59",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "dce03f21-6f08-4f8d-9c06-9a66153e488c"
        },
        "item": {
          "id": "8a13009e-5758-4e7f-9a39-9a1cbaaeb893",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cd2d96fb-f6af-4aba-b00c-9c7a37e246fc",
          "status": "Created",
          "code": 201,
          "responseTime": 4827,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf28e76b-a36a-4eca-a77a-655eec9a5e88",
        "cursor": {
          "ref": "e207393f-cf66-4fe3-bcd7-f546c8ed5cdd",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4a133007-2d57-47b4-98d8-f871009d0556"
        },
        "item": {
          "id": "cf28e76b-a36a-4eca-a77a-655eec9a5e88",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e7a457fe-08df-48ae-a76a-400916e961da",
          "status": "Created",
          "code": 201,
          "responseTime": 4393,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1983773-ffc1-48cc-838b-20b93fb16858",
        "cursor": {
          "ref": "1b06162c-16a3-4ccd-8a43-28bedc93584d",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "92bf3a8f-1051-42c9-a547-2d57fc04aa31"
        },
        "item": {
          "id": "f1983773-ffc1-48cc-838b-20b93fb16858",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c5a94ca5-7706-40dd-b3cc-133516a5d502",
          "status": "Created",
          "code": 201,
          "responseTime": 5557,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4baa0d6-0c6c-4863-810a-ddd340ed2c83",
        "cursor": {
          "ref": "3dd06baf-3340-4f66-a964-01d3910fac28",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b93f8571-8d8f-417d-a267-fda09ca51776"
        },
        "item": {
          "id": "e4baa0d6-0c6c-4863-810a-ddd340ed2c83",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "054b00ba-b62a-405c-9433-8d0abca54941",
          "status": "Created",
          "code": 201,
          "responseTime": 4578,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd341512-2272-4fb4-bc66-37d7f19ba0d7",
        "cursor": {
          "ref": "50fdb500-ee5c-4030-9c16-765e79187d04",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "79c91c25-8e8b-43aa-9a1d-be58f99f6054"
        },
        "item": {
          "id": "fd341512-2272-4fb4-bc66-37d7f19ba0d7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7df0fd77-6123-41d7-a935-5758ccdc0807",
          "status": "Created",
          "code": 201,
          "responseTime": 4115,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4762415-325f-4cf5-b846-ba42d902c93c",
        "cursor": {
          "ref": "73ac8586-824c-42f8-8c8f-c1e69806e851",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b8c8cbd3-e9c9-4c9e-9d13-aa531d718296"
        },
        "item": {
          "id": "f4762415-325f-4cf5-b846-ba42d902c93c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6eae48fe-be82-4cd3-8644-01750da63658",
          "status": "Created",
          "code": 201,
          "responseTime": 5238,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac3150f-6e23-407b-83cf-48cf1dcd8b55",
        "cursor": {
          "ref": "7cc573d8-6485-446b-b729-7a3d897b6f3a",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "afe0b0b6-992b-41fa-94b9-ff6ffd31fce4"
        },
        "item": {
          "id": "dac3150f-6e23-407b-83cf-48cf1dcd8b55",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "38ac9b11-20b6-4bd2-9519-57e5f3f3ad51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac3150f-6e23-407b-83cf-48cf1dcd8b55",
        "cursor": {
          "ref": "7cc573d8-6485-446b-b729-7a3d897b6f3a",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "afe0b0b6-992b-41fa-94b9-ff6ffd31fce4"
        },
        "item": {
          "id": "dac3150f-6e23-407b-83cf-48cf1dcd8b55",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "38ac9b11-20b6-4bd2-9519-57e5f3f3ad51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e7b127-1948-43a1-83ab-5336a4b81bc7",
        "cursor": {
          "ref": "0de6eee0-ec8b-4e94-880e-92ae37f240aa",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6c79632f-2b0c-4eb0-97bc-1da505f3c8b3"
        },
        "item": {
          "id": "05e7b127-1948-43a1-83ab-5336a4b81bc7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "670d2237-e96d-4841-8150-6ba03e69c5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef3d558-ef47-4610-8419-32c9f343dcfe",
        "cursor": {
          "ref": "1e8e61bb-89a0-4846-8f8f-d775d83c44ed",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8d5ee329-1f68-4d50-a99d-19d1ef57ee46"
        },
        "item": {
          "id": "2ef3d558-ef47-4610-8419-32c9f343dcfe",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5270fa56-81b6-4a8e-acb9-d9866fda19a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 511,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412d401f-753d-4cc9-8b40-4b3649037b3b",
        "cursor": {
          "ref": "79db7821-5fe1-4d12-b9da-6ab91ded8e93",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0b9572e8-0655-40d7-942d-18708a7895ad"
        },
        "item": {
          "id": "412d401f-753d-4cc9-8b40-4b3649037b3b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d05d322b-261f-4b0f-b49e-285fe03b6474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb99002d-6755-49a4-b327-f44669d586d1",
        "cursor": {
          "ref": "66b909db-d9bc-4303-891b-136e1fbccc76",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e038a536-ec7f-4c51-a3db-e75a296ae789"
        },
        "item": {
          "id": "bb99002d-6755-49a4-b327-f44669d586d1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "55beb9b1-8e7a-4a9b-ad5d-4bb62ce28a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83e89ee-7d82-4196-958f-88666c842e70",
        "cursor": {
          "ref": "4b31dfc8-5cbd-41be-abeb-843e1b87dba8",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "35c410de-2135-4935-9544-905952c580ba"
        },
        "item": {
          "id": "a83e89ee-7d82-4196-958f-88666c842e70",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ad6f2b5f-0e91-4b9f-986d-96e608f5f645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad2fb00-37ef-4ce1-b24c-06477bf4d033",
        "cursor": {
          "ref": "f6764658-309f-46de-a784-2cb1af7b3eda",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7b01e532-bfa1-4ab3-a98b-1fcf4d58f758"
        },
        "item": {
          "id": "3ad2fb00-37ef-4ce1-b24c-06477bf4d033",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f7e4ca26-e4bb-43ab-8610-92c0a5687cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 507,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef28851a-c746-45b7-ba4d-80c2083d56f3",
        "cursor": {
          "ref": "9db59e81-9e14-4058-ac26-c36de26b5773",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e16b91d0-c080-4e3b-9bf9-3ca62e7b1ca2"
        },
        "item": {
          "id": "ef28851a-c746-45b7-ba4d-80c2083d56f3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b30206b7-7767-4f21-99d3-83f14c4f7e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 861,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355b5fdb-2eb3-4bc0-914f-e7c7e5fe6bbc",
        "cursor": {
          "ref": "f5183043-4c21-403a-b72c-69ecd0c3fe0f",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0f10b1a3-997a-43ae-b306-6b8270fe61a7"
        },
        "item": {
          "id": "355b5fdb-2eb3-4bc0-914f-e7c7e5fe6bbc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1a43dfb2-b46c-44ff-9bce-788f2ea51a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339e44f8-3804-4454-a8aa-7151711af3f6",
        "cursor": {
          "ref": "dce60e7a-78c4-4388-bf9a-35c180d248e7",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d44f7e6a-a66d-49e2-bbbf-ca3f2e71c534"
        },
        "item": {
          "id": "339e44f8-3804-4454-a8aa-7151711af3f6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b9d1fcba-2499-454e-a22e-f21e7262bb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1f6f83-12e4-4226-9469-21d5cbea5b2c",
        "cursor": {
          "ref": "33f1db9f-5363-455f-972d-8bd76c7138a0",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1055001a-be9a-4cab-b6f8-8bb15db1e72c"
        },
        "item": {
          "id": "6f1f6f83-12e4-4226-9469-21d5cbea5b2c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2bd04999-7376-48b9-9d0a-25df0dd7bc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf770f1-2d4b-4772-ade7-b1903e8153a9",
        "cursor": {
          "ref": "0bdb9512-ba20-4e1c-b5f6-8793746e703a",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "de2e3584-41b4-45d5-8bcd-3767b17b4c04"
        },
        "item": {
          "id": "7cf770f1-2d4b-4772-ade7-b1903e8153a9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f3cd2fde-244d-4bd5-b587-c929f790a2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee902a4f-48ce-4602-8591-17c4d0f058e7",
        "cursor": {
          "ref": "18189da7-2e97-477c-bf52-db88a7a17359",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b65c823d-b844-4d9c-a375-77e8d308cff0"
        },
        "item": {
          "id": "ee902a4f-48ce-4602-8591-17c4d0f058e7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "930e8a6c-04af-4ffd-b60c-f9dcd44a6e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 498,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6646b17-70c7-4b6f-bee5-fd6d3ee709b2",
        "cursor": {
          "ref": "0a03ea4c-2c08-4a5d-8351-552dbec59e69",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e5ecc450-cc03-4ada-9ebc-5ac758fa75a3"
        },
        "item": {
          "id": "a6646b17-70c7-4b6f-bee5-fd6d3ee709b2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "956e18ad-a219-4967-89f1-6855f582ed75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 497,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1e8e84-6885-4b0e-91d2-7d5f9ecad268",
        "cursor": {
          "ref": "63de0b0b-68b9-4b83-8e7c-ebca93c54138",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "889b4a30-f6e1-449d-b277-34912912d1a8"
        },
        "item": {
          "id": "6e1e8e84-6885-4b0e-91d2-7d5f9ecad268",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5ad78fb1-7a25-4d7c-bd65-b24640ff9ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 506,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be7af30b-22c5-45d7-a268-bd7419339a04",
        "cursor": {
          "ref": "71bd10df-ec33-4bed-a852-936dfc641d01",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "cf3575d6-1cd2-462a-9c7b-95a14bd60269"
        },
        "item": {
          "id": "be7af30b-22c5-45d7-a268-bd7419339a04",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b6484ee6-bcb4-41cd-b288-8eb5fbbdc32b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c96efbb-86a8-47c3-8b84-a048c668f936",
        "cursor": {
          "ref": "7e1d542e-8c9b-40cd-8c5b-ac381f6d18f1",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a9f1626e-d0ab-4a47-9caa-b35cd543618f"
        },
        "item": {
          "id": "3c96efbb-86a8-47c3-8b84-a048c668f936",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "42bceb96-ef6e-4664-92ed-f08ee0293b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 698,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7da8ce4-8d01-47e5-ad9a-b19848dd6f97",
        "cursor": {
          "ref": "5288a887-8cf0-4461-b05d-376f2cf82bf2",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c81ec126-3b26-4ce2-a28b-ceeb964fc28e"
        },
        "item": {
          "id": "a7da8ce4-8d01-47e5-ad9a-b19848dd6f97",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ee5a992b-86b6-438a-9641-35256b6c5b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 933,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8287a02-a621-44bb-8859-383304afed66",
        "cursor": {
          "ref": "091d0fe2-f29f-46b0-b040-07bef70c0988",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "095f03ac-c4c8-4b67-87ae-259aa71166ef"
        },
        "item": {
          "id": "c8287a02-a621-44bb-8859-383304afed66",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8bbc175d-dc85-452c-ab9b-384d0a872556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da238d0-8c9c-4acc-a8a4-b8ad25c3bf1e",
        "cursor": {
          "ref": "8119e509-d97c-4aa8-aa0e-7143b19af372",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "25fd7fdd-a21e-4892-881b-b46683bec011"
        },
        "item": {
          "id": "9da238d0-8c9c-4acc-a8a4-b8ad25c3bf1e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ccade381-5757-4eea-880e-432abd8b7ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4a05d6-116e-4c60-96a1-a2c3f0a68442",
        "cursor": {
          "ref": "3ef2245b-792b-4909-8b73-62ec0e7041c5",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f934cee5-1abf-4330-a3ae-f0530320dcda"
        },
        "item": {
          "id": "5f4a05d6-116e-4c60-96a1-a2c3f0a68442",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1db152fd-8753-4263-8331-7cb8e02f36ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f505847-ee8d-4efb-acc7-4cb8547283ce",
        "cursor": {
          "ref": "0123e894-03b6-47c4-bffc-6b6d6d2d7601",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a88e2ad1-c3ba-4e69-8ece-fcb73dae1d72"
        },
        "item": {
          "id": "4f505847-ee8d-4efb-acc7-4cb8547283ce",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "58bbec9a-b75f-4d83-99d3-95a5c725afb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 661,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee56577b-d375-4fc8-b973-d72326ff6729",
        "cursor": {
          "ref": "23316455-3038-4e3e-9b94-f8801945660b",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "34984445-8576-4c7c-9761-0269a9843ad8"
        },
        "item": {
          "id": "ee56577b-d375-4fc8-b973-d72326ff6729",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ef34fa07-5e61-4b13-9755-b47f47b6c92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10599b8-897a-4bdc-956c-2fec91a87b05",
        "cursor": {
          "ref": "037c0224-4c75-433a-a9e7-052854ba396e",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "8d18eedc-1ce1-48b7-b585-0c79942cfc1c"
        },
        "item": {
          "id": "a10599b8-897a-4bdc-956c-2fec91a87b05",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "05e4855d-ca73-4d31-bbe2-b3957587b633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 711,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5883fb73-f4fd-446e-8ae7-49c5b7c0b02f",
        "cursor": {
          "ref": "d842601f-3a87-4391-901f-f77aba02a8db",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fbc8f862-d239-40e9-9555-4125af882d58"
        },
        "item": {
          "id": "5883fb73-f4fd-446e-8ae7-49c5b7c0b02f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "7bef9ee8-b415-4343-b5a0-25dc59a86671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 974,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7a9485-1b90-441f-bea3-fd7cb60e377b",
        "cursor": {
          "ref": "ce9983ad-d5a1-4559-b313-f74e8a18e7bd",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "58cfccf1-453e-4305-aec7-65d368bfc636"
        },
        "item": {
          "id": "bd7a9485-1b90-441f-bea3-fd7cb60e377b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "30e50d19-6c86-477d-819e-ef48e306d7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 933,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e782ac-1730-4f14-9a62-204e75fa82d6",
        "cursor": {
          "ref": "4732e234-7ff3-4923-9990-392b2e6a1602",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "386fc9fe-84fe-43cb-b38b-d9f4f64d04ec"
        },
        "item": {
          "id": "89e782ac-1730-4f14-9a62-204e75fa82d6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ecf81926-502e-4df9-bd2f-0a4ae52ac8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 958,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9a5b02-8308-4ab4-b164-0f7ac130c10d",
        "cursor": {
          "ref": "3b562032-f1ca-410d-9caa-937256b2c2e9",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "37dd05e5-2f80-4a8a-b6d7-d8c8dc4eb335"
        },
        "item": {
          "id": "5e9a5b02-8308-4ab4-b164-0f7ac130c10d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8ccc8c7f-3e4d-4ed3-b03e-8a917e542a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef04af03-b254-4dde-bb3b-19ce381ca45a",
        "cursor": {
          "ref": "eb9dd65f-005b-43d9-8f1b-dfa9c0eb3532",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0c2cc446-1525-40c3-9a19-6aeaf48a0654"
        },
        "item": {
          "id": "ef04af03-b254-4dde-bb3b-19ce381ca45a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ee0d1af2-7573-4ffa-ba2b-decdf7e09e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f2c66c-57b7-46c1-bbef-df15ca226021",
        "cursor": {
          "ref": "06a903cf-be25-4780-84ed-3e3b8bfa681d",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6449aa73-9f92-4b59-9ecb-94bded9e4d03"
        },
        "item": {
          "id": "f6f2c66c-57b7-46c1-bbef-df15ca226021",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "aa5e5a47-ff4c-4681-867d-916315295b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8d740b-e24c-4f44-910e-4d22f8cc7576",
        "cursor": {
          "ref": "e7f4bbe7-6d8f-420a-a4e2-abf60d4a8352",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2f2a6d43-4b07-4672-bf06-7e24ce226a00"
        },
        "item": {
          "id": "7a8d740b-e24c-4f44-910e-4d22f8cc7576",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c92a0450-152f-47db-9a86-02f87a23ef65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 513,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6af226-6ef4-42c5-a248-c9582a518412",
        "cursor": {
          "ref": "5a1f1e34-848c-44db-a684-ee2cd315b076",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2296803b-5b97-4037-988e-d6c777a92d3a"
        },
        "item": {
          "id": "4b6af226-6ef4-42c5-a248-c9582a518412",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0acd40bf-0bab-46b7-a99a-8b7e003457d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4848b1-030a-4e9a-9d4e-f553b57971d2",
        "cursor": {
          "ref": "9636733a-ca54-4f70-bdf8-1b6028619357",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d21fa12b-01fa-43b3-88c1-6c4f003aaf39"
        },
        "item": {
          "id": "9a4848b1-030a-4e9a-9d4e-f553b57971d2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3ba3ca90-ff3f-4492-b5a3-4651a82b6862",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc62b50-4903-4a22-bb36-bb9e8d7832dd",
        "cursor": {
          "ref": "5ccfb7a9-18b2-41b0-9e7a-2414acb39d61",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "319429dc-6f2d-4ccb-828b-1cab76bac050"
        },
        "item": {
          "id": "ecc62b50-4903-4a22-bb36-bb9e8d7832dd",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "d6bcd8fe-2b2e-49ec-9654-3785cc3f169c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 542,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d9b03a-5634-4cdc-8e22-70dcae52fb01",
        "cursor": {
          "ref": "697c58bc-8f7d-47b0-b9c5-032b30cf0ba6",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "83eaf267-6317-469b-a29a-8c259b61e139"
        },
        "item": {
          "id": "54d9b03a-5634-4cdc-8e22-70dcae52fb01",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d569b0ff-2639-4d59-9786-98534fa1f57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54d9b03a-5634-4cdc-8e22-70dcae52fb01",
        "cursor": {
          "ref": "697c58bc-8f7d-47b0-b9c5-032b30cf0ba6",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "83eaf267-6317-469b-a29a-8c259b61e139"
        },
        "item": {
          "id": "54d9b03a-5634-4cdc-8e22-70dcae52fb01",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d569b0ff-2639-4d59-9786-98534fa1f57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b4d147-6197-4f1c-bc77-914e5eb27696",
        "cursor": {
          "ref": "8b922e11-ffe1-40bc-ada0-ac4d417edcf5",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9ca8eb53-747e-4087-ac96-36f786518c0d"
        },
        "item": {
          "id": "f9b4d147-6197-4f1c-bc77-914e5eb27696",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "56e373b8-2c32-42d2-aae2-7e2373c21b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fb9dad-a11b-421f-9122-2c38ba84e467",
        "cursor": {
          "ref": "d06159a1-4b9b-48bc-b1b8-94ea8d13b28c",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "4aa9693c-ad5b-4872-a362-87826bb0080a"
        },
        "item": {
          "id": "68fb9dad-a11b-421f-9122-2c38ba84e467",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c8dd2d81-173d-4379-82f5-e26d0161a86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942a4c8b-c400-4f5e-82da-da92377debdb",
        "cursor": {
          "ref": "1e241245-77bb-42d0-a508-a2954c58b0be",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "065de5ca-9b47-4efe-9331-1b86b7c6d9b8"
        },
        "item": {
          "id": "942a4c8b-c400-4f5e-82da-da92377debdb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "23e94d11-47ab-47f4-9496-9ca7cb2b5ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f47a534-12d7-4cdb-9c43-99b550093d63",
        "cursor": {
          "ref": "4e4ea044-633f-4a9a-9b80-7ad8b499dfe3",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "5d3dc0c4-d05c-4ad1-bdca-188ff788020b"
        },
        "item": {
          "id": "2f47a534-12d7-4cdb-9c43-99b550093d63",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f02bebc6-35e0-43e1-8ba6-3b801604f014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a49b72e9-1074-461d-aae5-081c05306c33",
        "cursor": {
          "ref": "92b42c07-45ab-429b-857e-d06b2c7f1a05",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "afeb3863-a151-415b-951d-848a735c8091"
        },
        "item": {
          "id": "a49b72e9-1074-461d-aae5-081c05306c33",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4b0e9ea3-8bb1-4976-8a1c-e15414e6a940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d8c8c3-4dcc-440c-a87d-b1aa4b3982b8",
        "cursor": {
          "ref": "bfac7e8a-a438-48e5-a0af-c6420d8670d0",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a585a9b6-573a-4a35-b26c-e2f0e85d2410"
        },
        "item": {
          "id": "48d8c8c3-4dcc-440c-a87d-b1aa4b3982b8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5f2c4132-c187-4a9d-bc28-777ce2e18328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ef3291-e8cd-49ec-89de-6c2f6e5b2437",
        "cursor": {
          "ref": "8c8e43af-fdf8-4648-9f26-f60bcaa9888f",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a3dc32a0-c0a3-4fc3-b753-56bc188fbdd6"
        },
        "item": {
          "id": "39ef3291-e8cd-49ec-89de-6c2f6e5b2437",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "13955a46-6b0a-4284-a320-957277ee5cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8bb365-1224-4aa8-83ec-d9db32a66cfb",
        "cursor": {
          "ref": "42c8218d-1735-4c6b-a343-0e4b99695f08",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5d832035-b7c7-43f2-8df4-a287174f0596"
        },
        "item": {
          "id": "ea8bb365-1224-4aa8-83ec-d9db32a66cfb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6ee790be-2a98-4551-82ec-18bc7813f36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32afc688-57e7-4f8d-877f-139a8c921564",
        "cursor": {
          "ref": "6313f2a4-a43b-480b-851c-0c2889a48463",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6bd8ef3f-5470-4778-8341-4c1639e246e9"
        },
        "item": {
          "id": "32afc688-57e7-4f8d-877f-139a8c921564",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "33b56c2b-475a-4991-8467-931051ad7a49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0af184f-c81e-41c6-b896-06999d7cf0c8",
        "cursor": {
          "ref": "f663ba01-984a-40a7-b625-13a51c2ba452",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "42f5b02b-4389-4b4d-af5a-ee3f304a8d8e"
        },
        "item": {
          "id": "f0af184f-c81e-41c6-b896-06999d7cf0c8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "14a01e80-498c-4524-aaf1-6f76cfc020ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d730c4-1465-430e-beb8-4292544c35d7",
        "cursor": {
          "ref": "6fb1d933-860d-45ff-99dd-2dbdb3abdc50",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "15628e15-63d9-43fd-85bf-afa9ec95e2ab"
        },
        "item": {
          "id": "07d730c4-1465-430e-beb8-4292544c35d7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b6294ce1-cc7d-4db7-99a8-33629716a3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329fdbbe-b265-4ba5-93c7-623636995278",
        "cursor": {
          "ref": "d82ae8b9-c068-43fe-8152-562660d6c8c7",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "04531635-9b9e-4a9a-bb03-d10ef2e70844"
        },
        "item": {
          "id": "329fdbbe-b265-4ba5-93c7-623636995278",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "de8707e7-a7ac-4632-bcc8-56b073e90975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf6ebcb-d5f4-4db1-8e02-5025d0d56070",
        "cursor": {
          "ref": "e88be668-e949-42bc-9b7b-7e0a7a90eb75",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "565772da-91ee-490b-8472-84fc938fb54e"
        },
        "item": {
          "id": "1cf6ebcb-d5f4-4db1-8e02-5025d0d56070",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b4628d65-52f1-45ff-99d1-2ca111e0bab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c25040a-a9f0-4431-8c92-b41f3bb87975",
        "cursor": {
          "ref": "b18a50d1-3fef-43ab-93f3-b6829695eca6",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "83c4b583-45d4-4d6e-9a24-5282ee0c276e"
        },
        "item": {
          "id": "7c25040a-a9f0-4431-8c92-b41f3bb87975",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "06244641-b08f-4555-8a97-26ef356ad113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3437ea30-ceef-4454-bdb4-f50b079eb17a",
        "cursor": {
          "ref": "3700846c-77c5-49e8-9fd7-e8f1f27dcc27",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "011b382f-f2b4-4804-a175-089e5a8d55f5"
        },
        "item": {
          "id": "3437ea30-ceef-4454-bdb4-f50b079eb17a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "caf086c9-f6df-40a0-956e-921d00911a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4e342e-dc2b-4dfd-9394-39c1dc5b3480",
        "cursor": {
          "ref": "2a219963-7a18-4af8-a168-ca2bfb9ad851",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "86f52f26-d7ac-4ec6-8664-83d970b47cc7"
        },
        "item": {
          "id": "8a4e342e-dc2b-4dfd-9394-39c1dc5b3480",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ed467e0f-2be3-4b62-b4b7-1e7d3135f537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2540e133-5c7b-4092-bca4-91248c63232f",
        "cursor": {
          "ref": "db8c6806-a5ec-4e66-915b-d4311b60fda1",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4a06b384-f3fc-4e14-8511-176a6ea27d5b"
        },
        "item": {
          "id": "2540e133-5c7b-4092-bca4-91248c63232f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "61aab74a-cb20-480d-9b2a-0d66a9a6b39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f43b34e-f2a8-49bd-934b-8b0775270f3d",
        "cursor": {
          "ref": "d3439f64-89c2-4efe-bd7b-6f77ab76bccc",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d5be52b1-5661-4a25-adbb-0760e89a5f37"
        },
        "item": {
          "id": "4f43b34e-f2a8-49bd-934b-8b0775270f3d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "daf9ddab-f4fe-41de-8115-4d9067724855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2389c24-15a5-4e7c-80aa-789fc90ef626",
        "cursor": {
          "ref": "63bfbc2a-d6b9-401c-b30a-e4786ace272c",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5deac1ed-77e3-4b1f-8852-6f0230b1481c"
        },
        "item": {
          "id": "f2389c24-15a5-4e7c-80aa-789fc90ef626",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4dc21f86-aa41-4a1c-9a30-5770ba813e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118be79a-cd2e-486f-81aa-dcae77627d45",
        "cursor": {
          "ref": "d1fc620e-c924-4245-8c12-674369445da7",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8b1c2b81-0b8e-4d8b-b334-0344f4d51339"
        },
        "item": {
          "id": "118be79a-cd2e-486f-81aa-dcae77627d45",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2a350668-91d5-4964-9ff3-aa519385a73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c904680-159d-4bbd-a3a6-42e64bf82c71",
        "cursor": {
          "ref": "91ef06eb-03bc-4d03-9cb7-7b04b99084b5",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1cf0371d-d580-416e-bc54-913005d2bf9d"
        },
        "item": {
          "id": "5c904680-159d-4bbd-a3a6-42e64bf82c71",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "91577109-d690-47c9-b537-d48cc4abcfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78613e01-eb7f-4882-b572-9360c5c9436c",
        "cursor": {
          "ref": "ec6f3c84-07b2-4189-bc9c-1b9556f72624",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "69c7cab7-6ed7-4ebe-8b0f-69899b938de7"
        },
        "item": {
          "id": "78613e01-eb7f-4882-b572-9360c5c9436c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "78e2cbd8-4bfe-4616-9bc9-bd3b6298c681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996619cc-d350-480a-be28-2e7d7158eed2",
        "cursor": {
          "ref": "60f34366-7ca6-462e-a59b-769a0c51ed00",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "53d6ca57-7e42-4407-8dcf-f82707200513"
        },
        "item": {
          "id": "996619cc-d350-480a-be28-2e7d7158eed2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "077f0470-3790-491e-97db-e7114f11f235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79973721-287d-4038-9e2d-644e59de248e",
        "cursor": {
          "ref": "21a4866e-8720-4765-9138-d06298db690b",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "68e7cae3-d8a6-4f40-b238-d488a04f03f0"
        },
        "item": {
          "id": "79973721-287d-4038-9e2d-644e59de248e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4ee3cead-0c3f-48bc-9f81-3556edce1e6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e08b50c-ec42-483b-8811-63aa74ab238d",
        "cursor": {
          "ref": "3c4444a9-2b02-45a1-84dc-f698b52bff75",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8c6e7835-d968-452e-8099-5cf6d0a3b3ae"
        },
        "item": {
          "id": "1e08b50c-ec42-483b-8811-63aa74ab238d",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a4f27934-d903-4f99-ba72-3a3bb43545d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47434631-0464-4e3a-a98f-b78bb0166cbf",
        "cursor": {
          "ref": "0e472c5a-4559-42ea-a7b4-e69591648669",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "34db8111-9245-4d1a-b6fa-c32e8d8122f6"
        },
        "item": {
          "id": "47434631-0464-4e3a-a98f-b78bb0166cbf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d630f6cc-abcb-493c-9576-d0d48bc189ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779d5e7b-7a09-4b24-bb82-eaffa1ea5fe0",
        "cursor": {
          "ref": "1c226524-d663-4715-8c72-1e23a1e3a531",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "75adc127-5268-4270-92a2-bbd18b037769"
        },
        "item": {
          "id": "779d5e7b-7a09-4b24-bb82-eaffa1ea5fe0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "26a87269-4b87-4700-bfc3-e310292638be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0605b6c-e540-4220-8afc-df286957c112",
        "cursor": {
          "ref": "4ea0d09a-ce59-43e4-839b-79a91f23003b",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1804aac3-9051-45ed-be52-61070a567325"
        },
        "item": {
          "id": "f0605b6c-e540-4220-8afc-df286957c112",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a2fa857a-215a-4f7c-b1fc-729c37ae5e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2342aa-c48a-4062-933b-e58e0f9dc98e",
        "cursor": {
          "ref": "36e8d63a-9ad3-4628-859b-4eafac700d13",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "5d4410c0-6497-4a36-a7c0-ca88d441af1a"
        },
        "item": {
          "id": "5e2342aa-c48a-4062-933b-e58e0f9dc98e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "52c5f2b1-1f31-450c-9a02-c8da45fe85c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d493b17a-996f-498a-96fa-11f4b7e506f8",
        "cursor": {
          "ref": "2f6ed8ed-9b8f-40f9-8d74-ec0ee3d82db2",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c544e5c3-56de-47cb-8c40-bc821322df9b"
        },
        "item": {
          "id": "d493b17a-996f-498a-96fa-11f4b7e506f8",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "12b2c0fb-b529-40e4-bd40-cc6e66d7ff8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1147ced-24ec-4c74-9ccd-3db9fb1b6ab9",
        "cursor": {
          "ref": "cd2e91e6-7af2-4b0b-9a5d-8398a9ec476b",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "65dbbbef-821f-47ae-ad72-2c5ada4583b2"
        },
        "item": {
          "id": "a1147ced-24ec-4c74-9ccd-3db9fb1b6ab9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c08cbc1c-5286-4f2b-9aa6-f61ca006ae21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6745964-d27c-43dd-8145-2d957f472538",
        "cursor": {
          "ref": "d92c0e34-faee-4620-a530-36e187a0a9cd",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b6b99be9-7a52-4a4d-96f8-a9158297fff0"
        },
        "item": {
          "id": "f6745964-d27c-43dd-8145-2d957f472538",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7eddd4e2-891e-47e3-964c-c40eafb24167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 311,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4230744e-f3e3-4321-a1b2-c0a71e5b64cf",
        "cursor": {
          "ref": "04b57fbd-140c-44e4-9b2c-ffb46a1b7272",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "24a471d9-8c47-482a-afd7-0e35cb1a00ad"
        },
        "item": {
          "id": "4230744e-f3e3-4321-a1b2-c0a71e5b64cf",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e3d47e6b-ee60-4ff8-ba44-30e509b66c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2b1f51-a585-4704-884e-b0cd0d2de94c",
        "cursor": {
          "ref": "b330c2b0-a0d9-4dca-b075-44e37935249e",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1f788723-1769-4654-bb61-a203d8d5846c"
        },
        "item": {
          "id": "9a2b1f51-a585-4704-884e-b0cd0d2de94c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "93f54655-aaf0-4ea4-86f0-2417b4a3cbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399664f7-5db2-489c-a7ba-6f27f23c1870",
        "cursor": {
          "ref": "4ad18e9a-7bba-4fa4-92e6-c7c86676d865",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fe13bce4-4c3e-42d1-b3b2-0c7afd3c7342"
        },
        "item": {
          "id": "399664f7-5db2-489c-a7ba-6f27f23c1870",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0feddc84-8572-4757-94ca-3376063e2c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf891551-af99-48bd-9d2d-07041e326f1e",
        "cursor": {
          "ref": "606d3ef1-c3e2-4200-82a9-aab9f3c7859a",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "45cd2488-d0cc-4328-9f5f-aa01979b0ab5"
        },
        "item": {
          "id": "cf891551-af99-48bd-9d2d-07041e326f1e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a1cf20a6-f69d-4140-a1cc-edeb4f9c6103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca1ce61-dbb6-4ded-9255-891b4a2663ef",
        "cursor": {
          "ref": "4315bdd6-063b-4e5c-ac01-fd3bdc105921",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5a4cdc02-550e-467d-9cc8-d420863f9b7d"
        },
        "item": {
          "id": "3ca1ce61-dbb6-4ded-9255-891b4a2663ef",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "faba5294-fec6-4123-8967-3f3f7fd2dc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf054cf-7c7c-42da-8ff3-1efb5f5dfb21",
        "cursor": {
          "ref": "108106cf-8667-4be9-86ac-9f802a7ad012",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "55eaf486-3261-40a0-97af-17c5405e8401"
        },
        "item": {
          "id": "edf054cf-7c7c-42da-8ff3-1efb5f5dfb21",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5a51a285-feb6-4d78-927a-3b9cae915fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3764f9-c4d2-49c9-b41b-d6c43491ba76",
        "cursor": {
          "ref": "15ed8093-75db-4fe3-bb3e-37182d2aa002",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5f382046-3470-4d01-9afb-d6de9e6e047f"
        },
        "item": {
          "id": "cb3764f9-c4d2-49c9-b41b-d6c43491ba76",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1301819b-fc49-4754-9f9e-e7d1866814ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08359bf8-17db-46c9-a92d-e532c1da4a56",
        "cursor": {
          "ref": "00c2ff50-5018-4895-b972-166fc88c86ee",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "58d138b7-31a7-44cd-9e96-4bbfd533f882"
        },
        "item": {
          "id": "08359bf8-17db-46c9-a92d-e532c1da4a56",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "54189cef-5e00-4743-8f9f-b7fecc961cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea542ea1-7472-4158-a479-1a5242c46994",
        "cursor": {
          "ref": "add6d486-08fd-4784-8715-bf11d40c9154",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ff93247b-189f-4602-9570-f740f153b9fc"
        },
        "item": {
          "id": "ea542ea1-7472-4158-a479-1a5242c46994",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0534a686-c6a8-4834-b070-06aeb5bf2adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177e5f23-2dad-41c3-ad7c-b04872db8967",
        "cursor": {
          "ref": "436f7431-65aa-4427-87c2-d30e3f5ae6c8",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7798562f-ca84-429e-9999-dfb4127594af"
        },
        "item": {
          "id": "177e5f23-2dad-41c3-ad7c-b04872db8967",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b16c3f92-bca6-4192-903c-541f6491aaab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2c7be37-3911-45c5-821a-7b6392c2c360",
        "cursor": {
          "ref": "df7333f0-5f13-4df6-807d-592183a55507",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e41740c6-ab44-40e7-9a82-f45326cf9018"
        },
        "item": {
          "id": "f2c7be37-3911-45c5-821a-7b6392c2c360",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f807a1b6-fce5-43be-8305-fc7751a9006b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31440fd8-c398-4274-b0dc-df00a6b4222d",
        "cursor": {
          "ref": "bd64c9e6-0f6a-4a1f-8373-8c599fec5ffc",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "54f41543-eb9d-4a4d-825d-bf36300b9799"
        },
        "item": {
          "id": "31440fd8-c398-4274-b0dc-df00a6b4222d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "60bf112c-7227-43a6-85d3-174fd25d5bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8322c99-e9c4-44b4-bbf8-946d691d3a43",
        "cursor": {
          "ref": "0079df9e-8a8c-4f0e-94b0-d17abe587027",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "94542643-8480-4b34-9e26-6271f7d3fd00"
        },
        "item": {
          "id": "c8322c99-e9c4-44b4-bbf8-946d691d3a43",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b7385915-9f86-4d35-ac9e-8d25cff4cbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f7144f-5141-45c4-a1be-a049108dce70",
        "cursor": {
          "ref": "1d51aa66-38a2-4370-ad92-ac2c14ec741d",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1bb0bbdc-d43a-4629-ba49-cc1b062f312d"
        },
        "item": {
          "id": "f3f7144f-5141-45c4-a1be-a049108dce70",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "b373aa88-d5aa-474a-8e88-3f1e5b888313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10a6457-674f-4130-bc34-fe0c2cc0e40f",
        "cursor": {
          "ref": "d1a41142-234a-4acc-9b6f-d585da6cee17",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "80c21e01-283f-4c6d-8c33-49532ade48b1"
        },
        "item": {
          "id": "a10a6457-674f-4130-bc34-fe0c2cc0e40f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e6f654cd-d486-4e46-9a60-130fdfdeadc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26d1d51-d203-4797-8678-8b001df5cf6f",
        "cursor": {
          "ref": "13f113a0-967c-4428-8b06-3118b4e69953",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "78c738fc-6018-42e7-b579-d99c9cc613fe"
        },
        "item": {
          "id": "c26d1d51-d203-4797-8678-8b001df5cf6f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ceed3f98-21e5-4956-b329-86358a040e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40083188-a383-4c77-a3ed-60092a83dfa2",
        "cursor": {
          "ref": "46abdf3e-2cea-4247-a723-739562517bf9",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "53d0c922-d003-430b-bc70-94c7d6b6b29f"
        },
        "item": {
          "id": "40083188-a383-4c77-a3ed-60092a83dfa2",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "76a4e580-e485-402f-a8f3-040d33bb306e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7687c045-e0f0-40d5-beff-0d6173b8115e",
        "cursor": {
          "ref": "0b7741e9-955b-4c76-b767-82176da9d548",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f0dbb980-10b4-4c78-bc07-538333e29b7c"
        },
        "item": {
          "id": "7687c045-e0f0-40d5-beff-0d6173b8115e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "21c228fe-a8b7-4df1-b62a-de5e8a29ebf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 339,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76445193-507b-47b4-9349-fc92dc41efe5",
        "cursor": {
          "ref": "a656743f-55b5-44b5-83b3-563153864824",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dc9f8cf4-bdf3-4365-85d6-f99bc48abb61"
        },
        "item": {
          "id": "76445193-507b-47b4-9349-fc92dc41efe5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "41a6ca02-dc51-4502-99c9-59cc83cfce5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8204bc9c-1163-4fde-9c4e-120dc8c6e894",
        "cursor": {
          "ref": "ac52a91a-0c7d-4e2f-a2ba-8bc873516314",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4d7862dc-4396-49ed-b973-79ef0d8e27ba"
        },
        "item": {
          "id": "8204bc9c-1163-4fde-9c4e-120dc8c6e894",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3a67a495-fdca-4e2f-8709-e793c9c78094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d47077-feaa-4b26-9eef-568bded3ef24",
        "cursor": {
          "ref": "70730e7f-92c7-4546-9aab-32aebae3eb06",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b864dd94-7e77-45b3-ada3-ab6b06198eee"
        },
        "item": {
          "id": "b2d47077-feaa-4b26-9eef-568bded3ef24",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "44a4f824-3280-4eaa-8013-4643b9191460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01427890-f87d-4b45-a200-5918cfc02066",
        "cursor": {
          "ref": "e2da4230-26f7-41ff-892d-005a2e72d733",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "20ee9c72-e6fb-4859-8f26-ec53fe3e6397"
        },
        "item": {
          "id": "01427890-f87d-4b45-a200-5918cfc02066",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3d67aa54-49f8-4014-ab8e-a936c1f0cbea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5327af13-82c1-401f-8071-f90225fadbeb",
        "cursor": {
          "ref": "c566db4a-5ad8-435e-bce2-ee4fb3ed2e82",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a819914f-47c7-4363-bde5-9e55fe4fc7f5"
        },
        "item": {
          "id": "5327af13-82c1-401f-8071-f90225fadbeb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "bd4dadb9-d370-4825-b48d-f62670b624a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5ba238-7478-4793-8dbd-04441ce24f11",
        "cursor": {
          "ref": "543f4c7e-ed14-464c-ad40-efc2ec8505fe",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "96a59510-51e1-497e-9610-390135a5b5ae"
        },
        "item": {
          "id": "3a5ba238-7478-4793-8dbd-04441ce24f11",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e5d04493-c9a7-4b6f-9b2b-86751f742d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89ee537-0b46-4632-ac21-2f2b30b662b2",
        "cursor": {
          "ref": "f9b8443c-c09b-4d34-8561-5d179a1905b7",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a1693027-7959-4a7e-859c-33bddbdf7751"
        },
        "item": {
          "id": "f89ee537-0b46-4632-ac21-2f2b30b662b2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6c3673a9-d22b-4e76-bc43-b284efbc536c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66762363-8d40-4ba0-8a7a-db5be9861b74",
        "cursor": {
          "ref": "bb7eeb3a-5f91-4257-b601-d93a645fe698",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9a8f3b06-8ae8-4549-8fc3-c469b7efd402"
        },
        "item": {
          "id": "66762363-8d40-4ba0-8a7a-db5be9861b74",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d262efab-0547-4942-9431-4e0dc82c0882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98b9d77d-1697-4f45-90e4-2ebc7b9b8def",
        "cursor": {
          "ref": "3ba5b8fe-08c7-40ca-a07d-522b325b1768",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "dd013fe5-8b35-4d35-88d5-853d630d1312"
        },
        "item": {
          "id": "98b9d77d-1697-4f45-90e4-2ebc7b9b8def",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9548a61e-b2ff-4742-b3ca-5d0bc0b6f74a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f90a4f-c1f8-45b5-9422-e82703f768b8",
        "cursor": {
          "ref": "3643fccb-ac13-4410-bc68-dd86033715a6",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c1286d61-ccc4-4c18-9f9e-14adb8390b71"
        },
        "item": {
          "id": "53f90a4f-c1f8-45b5-9422-e82703f768b8",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "77711f63-c286-4bb2-ae0c-dd0df79cde66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e35368-4f72-4ab3-9328-9847b1de78f6",
        "cursor": {
          "ref": "6e2b0b3c-7add-4c00-9cc4-8ad368457685",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f0890fc5-74fd-4b33-baa1-9b6b92dd1dd4"
        },
        "item": {
          "id": "43e35368-4f72-4ab3-9328-9847b1de78f6",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0e1c9f94-cb49-4fcb-b960-5e33a1c054b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1403e758-f0ef-4f9a-87c7-690244a35b71",
        "cursor": {
          "ref": "f81f97a9-1c5b-40cc-9542-822a15ee7ad7",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "915dc122-2f19-4b2b-9f84-4e6855d668af"
        },
        "item": {
          "id": "1403e758-f0ef-4f9a-87c7-690244a35b71",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "dc22739a-0f84-4b7e-9a54-34c2c89c5fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78ce6f3-3f27-4570-82d0-2cf1edb3f6e4",
        "cursor": {
          "ref": "51be5b1f-9db9-4ed0-b71d-139867668229",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dd0b4db6-bd5b-4d40-8792-76c538206bf1"
        },
        "item": {
          "id": "c78ce6f3-3f27-4570-82d0-2cf1edb3f6e4",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d0a2a095-5235-4aff-92a3-f73e7dccac07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c00771-fb4f-4938-8e3d-5d769835156c",
        "cursor": {
          "ref": "a1264141-3cf4-4a19-98f9-edb71b1b462c",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "bfe52c09-e9c2-4d0d-a424-5d53b09c427b"
        },
        "item": {
          "id": "d8c00771-fb4f-4938-8e3d-5d769835156c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "04e6be42-ec3f-4008-96ef-313d3ed84e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1376b01-3dba-48d5-bc6f-411c1ca50503",
        "cursor": {
          "ref": "4f3cbb1a-6f1c-4a1d-9c33-62ae5621ece2",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "702339a2-3d46-4a44-8d8f-cb7e52d5085f"
        },
        "item": {
          "id": "f1376b01-3dba-48d5-bc6f-411c1ca50503",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f3cffb3a-cf91-4057-a237-95918eb13617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee238add-ec1f-493a-bdfa-411c5a0289ff",
        "cursor": {
          "ref": "d240d894-82fb-4b2c-9a33-6a286211fa98",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c873fb02-1783-43be-8001-b71447b9700f"
        },
        "item": {
          "id": "ee238add-ec1f-493a-bdfa-411c5a0289ff",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a29b6b3d-e5e9-46b6-87a4-56ab64d658b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c27d498-9ba1-4c50-ab10-95f58966f5a0",
        "cursor": {
          "ref": "8c409790-7525-4122-9702-e6f2b045c8ef",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6c92bad2-01d1-40b8-93a4-60720df70209"
        },
        "item": {
          "id": "0c27d498-9ba1-4c50-ab10-95f58966f5a0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4fb5d112-7f93-4480-a1c4-c7b31b60e0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db17db94-2000-4708-b780-c81665e95c50",
        "cursor": {
          "ref": "cb27691e-93bf-4c00-8f9d-a6809509b92c",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cba1c08d-be73-4c42-bc2e-539bfa53e185"
        },
        "item": {
          "id": "db17db94-2000-4708-b780-c81665e95c50",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a35e3485-a43f-43d7-8906-d22145b8ab24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d7c7d4-7816-4e2e-b668-bad35fc00288",
        "cursor": {
          "ref": "7d627905-e0c2-4600-a02a-fe5e76813426",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b8aa1430-0835-4faa-81c2-7fe45c6f16ef"
        },
        "item": {
          "id": "59d7c7d4-7816-4e2e-b668-bad35fc00288",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8d0afb75-e04b-40b1-8bec-93a98d70fdfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73226265-2b8b-4274-86b5-62e0b714bdb9",
        "cursor": {
          "ref": "56d9b636-c8a1-4acd-8183-29aa4335cd9a",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ddead994-814a-4383-b7ad-0fe759772510"
        },
        "item": {
          "id": "73226265-2b8b-4274-86b5-62e0b714bdb9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5429720d-70cd-4117-a6de-d676271bdb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529e25ee-ffdf-423f-8a31-6ca8d18c2dc2",
        "cursor": {
          "ref": "694d4417-e891-4ff1-a91a-8aed265a53e8",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "8b8281c4-c59c-4753-8bd9-223f89af6851"
        },
        "item": {
          "id": "529e25ee-ffdf-423f-8a31-6ca8d18c2dc2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8170d302-6fc6-4c8d-8fc7-04cccb27d69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3266dbe-f816-4f79-a573-b82a185415f2",
        "cursor": {
          "ref": "ad19bd38-25af-4775-8bca-156851ad81f9",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "91bdb721-e484-452a-890b-076c140275e8"
        },
        "item": {
          "id": "f3266dbe-f816-4f79-a573-b82a185415f2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0e1387ef-4de0-443d-845a-c106169da17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40833923-211d-43a5-819e-5643bd60ed85",
        "cursor": {
          "ref": "e884cb97-5c73-4aca-9f59-a6a223459a92",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2c668028-1c88-493b-8b1f-417767eb9a8c"
        },
        "item": {
          "id": "40833923-211d-43a5-819e-5643bd60ed85",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "779ed9ea-c520-40df-a3a8-ed7fe1d6f288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cc2f5f-55e6-4b27-afea-b2306a9fcb02",
        "cursor": {
          "ref": "1ae76bdb-b49e-48f0-b0b0-e4dd9e958e40",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e2b80954-2a6b-41c7-a745-9b2ed009fd14"
        },
        "item": {
          "id": "57cc2f5f-55e6-4b27-afea-b2306a9fcb02",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fadc0054-2bc6-4037-a1ea-2769b4143c19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6b908a-fe87-4b46-83a5-7d1ebf0b5b30",
        "cursor": {
          "ref": "70be6c9d-7806-48a4-9a96-14acd275b763",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "90e7bfbd-5488-4c23-9b44-86150ef207d6"
        },
        "item": {
          "id": "aa6b908a-fe87-4b46-83a5-7d1ebf0b5b30",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f2c81fc4-321f-4254-9460-9d940e7c5c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f223a7-2750-4bb2-8575-144bbddf37c6",
        "cursor": {
          "ref": "8d18b6a4-201a-4708-8057-90c30c7276b1",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "827ab0b3-ba0d-4cbc-8683-17e4b3636b9b"
        },
        "item": {
          "id": "c9f223a7-2750-4bb2-8575-144bbddf37c6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0b22ff95-ea3a-498d-b665-d54e7de5f2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "799cb74a-a146-4043-bfa6-1025a7146e31",
        "cursor": {
          "ref": "3b43f531-c049-440b-bf30-f07e1f75e4b7",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "22e48fa1-a8c4-4791-aada-3c22ba6bb626"
        },
        "item": {
          "id": "799cb74a-a146-4043-bfa6-1025a7146e31",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3d269cef-50fc-4aa3-a851-c33b3e4c38b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 631,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485fa609-23b0-4c63-9d28-2ad07776d015",
        "cursor": {
          "ref": "5f3f1405-7b74-43fd-92cc-e036a7a1176a",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1d361f5e-c5a5-4390-a26b-f18476bb2f3e"
        },
        "item": {
          "id": "485fa609-23b0-4c63-9d28-2ad07776d015",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "795633c3-6aec-4d79-a55e-1f14db2eb6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61262e7c-65e8-4f3d-9bd5-50f22e355fdb",
        "cursor": {
          "ref": "8073366b-0131-4127-860b-8c88331f209d",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9930477a-e1b1-467d-bacf-77f07d9c7127"
        },
        "item": {
          "id": "61262e7c-65e8-4f3d-9bd5-50f22e355fdb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ba01a152-b0ab-45eb-b8eb-43742998c012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1166,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd9c121-cbbb-44f6-b40c-c7e387455c5f",
        "cursor": {
          "ref": "6f165255-2368-4da2-99e7-170806122925",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4ef44c10-5d71-46d7-945a-378ce81a00c5"
        },
        "item": {
          "id": "4cd9c121-cbbb-44f6-b40c-c7e387455c5f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "af259a26-8798-418f-b566-b44b55d1e3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1016,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914a201a-9f0d-41d8-9419-a685581a8180",
        "cursor": {
          "ref": "0b298794-0f78-4dd2-95f9-8ae29a1ac74c",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ab6af2e8-41ea-4a85-858b-45673751f9a2"
        },
        "item": {
          "id": "914a201a-9f0d-41d8-9419-a685581a8180",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8438538a-7b59-4eb4-bbf2-3509008a22d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1028,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24383c1b-dfd7-439c-b631-1820da52434a",
        "cursor": {
          "ref": "9985fe01-29fc-4253-97e0-c964ccd26a8e",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "774a6c5b-a0d6-4a76-b73f-24bd05359d55"
        },
        "item": {
          "id": "24383c1b-dfd7-439c-b631-1820da52434a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ad0d4c3c-ca6d-4903-aa48-312967f14289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1290,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c61c89d-9594-48ce-9eeb-d203e7d49112",
        "cursor": {
          "ref": "7bdd59df-deec-4ab7-9e20-af58509a26ba",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "51df9ce9-9fc6-43f7-b8aa-c18a4f7fefb6"
        },
        "item": {
          "id": "0c61c89d-9594-48ce-9eeb-d203e7d49112",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4e1d7863-383c-4020-aef9-1ad4eb0ef79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 876,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57e7e46-e9cc-4d08-a448-4c0a6b74d3df",
        "cursor": {
          "ref": "8448c81b-5162-47f8-9114-3f99d4b49c79",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1975f2dd-b519-41ab-9ab8-19b33f103fab"
        },
        "item": {
          "id": "f57e7e46-e9cc-4d08-a448-4c0a6b74d3df",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7d8d4f7e-d544-4c7f-a537-2e4316c671ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11a39ce-d9b1-431e-b562-e8538e961d52",
        "cursor": {
          "ref": "7c003841-41fb-4ec0-8c00-ae9e8b6d9cfc",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "90407340-33b1-448e-9704-734150ed473b"
        },
        "item": {
          "id": "a11a39ce-d9b1-431e-b562-e8538e961d52",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3ed3a446-887c-4349-bcc6-8d32964b7c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545c8376-7af0-43df-b579-405b1a3d99c4",
        "cursor": {
          "ref": "b6a5eea1-becf-4193-8a84-ab2217a90a66",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d9ca8eea-125d-470f-bb28-7a7b5225b92e"
        },
        "item": {
          "id": "545c8376-7af0-43df-b579-405b1a3d99c4",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bc4f820a-9838-4864-b760-f94117b92280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f5a77e-85ff-41f2-b2b4-6840d489f1ff",
        "cursor": {
          "ref": "34cf11f0-6887-46a7-baf3-d7d4e38d6a47",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a81e27b0-54a0-4ac5-a145-e8e0aba1dba4"
        },
        "item": {
          "id": "49f5a77e-85ff-41f2-b2b4-6840d489f1ff",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "3163a906-da22-44ae-95c2-7b026f8d58c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f792e45-072e-48c8-826f-993d4ff3036f",
        "cursor": {
          "ref": "89bf4a72-eb0c-479f-924d-8e5d9994b100",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ec1d41e8-f766-4167-9bc2-db502e214ed0"
        },
        "item": {
          "id": "7f792e45-072e-48c8-826f-993d4ff3036f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "321b1fc8-938f-43e8-85db-d40f5f876441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22805a99-358d-4648-a433-fc60b71a9b9c",
        "cursor": {
          "ref": "55e2e9f4-d646-4488-af7c-da02667df340",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "595fa5e9-97b9-4ad9-9ce3-3e6579cbf23f"
        },
        "item": {
          "id": "22805a99-358d-4648-a433-fc60b71a9b9c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b0605c4a-41d4-40e3-8fce-df75a8683a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaf1f90-cfe2-4e67-a4be-2e2ad9569b0c",
        "cursor": {
          "ref": "35e40e29-bbe1-4775-a874-e8b718d20c03",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "24829732-e2f7-4d17-a721-ae8b8fb5c0ab"
        },
        "item": {
          "id": "cbaf1f90-cfe2-4e67-a4be-2e2ad9569b0c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f899e8d2-8bcf-4809-9e0b-3f60f6f5f11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2bac575-8bcc-472b-82d4-e939de60d28b",
        "cursor": {
          "ref": "fb199034-7e19-47f3-a4f9-e6f630a2c38c",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "20133821-a69a-455e-8d4c-8dc08731639b"
        },
        "item": {
          "id": "e2bac575-8bcc-472b-82d4-e939de60d28b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3df15aa9-0a6a-4efa-a764-7f560a334930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74544fd-f512-42e6-b998-23c1edf1b002",
        "cursor": {
          "ref": "baa898f8-44ca-4cd7-a21a-11f1832012a6",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3a988c25-98aa-4991-bc55-7c2c62c535ed"
        },
        "item": {
          "id": "e74544fd-f512-42e6-b998-23c1edf1b002",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b97aeeaa-9815-4009-9ebc-d21c2506179e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcf000e-1bbf-46d3-8ec6-102e929156bc",
        "cursor": {
          "ref": "f51597d7-a49c-4fdd-b218-d34e85b3c4c7",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c1c9b630-fa4f-4526-b31e-4a5d36449e52"
        },
        "item": {
          "id": "7fcf000e-1bbf-46d3-8ec6-102e929156bc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f446322f-20e3-4b11-b0bd-aca14af5c975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c6f8231-9cca-4f79-a6a6-90b03f0f9958",
        "cursor": {
          "ref": "dabed802-6013-4e76-aeac-903fbbe9b6bc",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "0227fb65-ac53-40f2-8cda-eee71e57922d"
        },
        "item": {
          "id": "0c6f8231-9cca-4f79-a6a6-90b03f0f9958",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "807bf87a-77e1-4679-8c0f-17788f272d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2c4d09-c364-40f4-b0d5-67a38aa38dfc",
        "cursor": {
          "ref": "9bec20f5-a02c-43db-947c-9d01762bb48d",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "328d3017-b158-4e79-8c88-dd5f461082a3"
        },
        "item": {
          "id": "9f2c4d09-c364-40f4-b0d5-67a38aa38dfc",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "20a3f7b2-663c-4b56-98b3-4e117b0cb2f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83c87ee7-9c63-4380-98ac-dea745a09e7d",
        "cursor": {
          "ref": "5f313a51-3e23-441a-900f-d3daacbd9259",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "092ba80b-cffc-47de-9390-65ebf095f767"
        },
        "item": {
          "id": "83c87ee7-9c63-4380-98ac-dea745a09e7d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "88ea22df-0fc2-4607-a8d6-8ce07609720e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e0bbc7-30a3-45e0-b7eb-c286d657da3a",
        "cursor": {
          "ref": "76e4bbcd-3f5b-434e-a568-e76d6ef74d01",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bcebdea8-06c7-4fd1-91f8-236aa09a574b"
        },
        "item": {
          "id": "82e0bbc7-30a3-45e0-b7eb-c286d657da3a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d6d96fda-d6f4-4205-a196-11a193f8c359",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3a71a3-ac1c-4e14-b194-31dfb04a5b11",
        "cursor": {
          "ref": "f123ddeb-c650-4a79-bc13-de3eef9b90fb",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e4cf7a67-97e5-4c15-9d14-39a2ee58849e"
        },
        "item": {
          "id": "6b3a71a3-ac1c-4e14-b194-31dfb04a5b11",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "2c312cd2-74af-41cf-b740-f38c9cf3a329",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 331,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9caffe55-79af-4f5c-8cd9-a99b987aa6f3",
        "cursor": {
          "ref": "009868bb-67e5-449f-a88e-8c8ab2f2c97e",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "37001f35-e538-4c4a-bf32-db18d89f50aa"
        },
        "item": {
          "id": "9caffe55-79af-4f5c-8cd9-a99b987aa6f3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "43949060-606d-4917-a840-10eb156938be",
          "status": "OK",
          "code": 200,
          "responseTime": 421,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78ef383-1cb9-40a0-8e14-b74266727eb4",
        "cursor": {
          "ref": "39fe8397-af99-460a-bd22-78ed2fff2892",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "deab1fca-ea8c-42c4-8a50-5175463f6fef"
        },
        "item": {
          "id": "d78ef383-1cb9-40a0-8e14-b74266727eb4",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8f709046-909f-43f6-82d5-062e1e92ebf6",
          "status": "OK",
          "code": 200,
          "responseTime": 1933,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c23e34-8093-46f7-9d0e-8238093e561b",
        "cursor": {
          "ref": "ba744155-5997-41c8-81ca-c96e0f0727a3",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d08000ab-8bd0-43a1-bbf2-911dc3479302"
        },
        "item": {
          "id": "d8c23e34-8093-46f7-9d0e-8238093e561b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f63bda92-11b9-4a91-b48f-d2007cbb80d4",
          "status": "OK",
          "code": 200,
          "responseTime": 1971,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f23811-7f39-4fc0-8e47-f47f15b68452",
        "cursor": {
          "ref": "fa4b785a-2931-432d-9e1e-7d4fe8512eca",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8a2bf6a7-f325-4a19-b647-1643c5b2573f"
        },
        "item": {
          "id": "a8f23811-7f39-4fc0-8e47-f47f15b68452",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "124ef1a1-c7d9-42c1-94aa-aff34e20c2fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f23811-7f39-4fc0-8e47-f47f15b68452",
        "cursor": {
          "ref": "fa4b785a-2931-432d-9e1e-7d4fe8512eca",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8a2bf6a7-f325-4a19-b647-1643c5b2573f"
        },
        "item": {
          "id": "a8f23811-7f39-4fc0-8e47-f47f15b68452",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "124ef1a1-c7d9-42c1-94aa-aff34e20c2fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f23811-7f39-4fc0-8e47-f47f15b68452",
        "cursor": {
          "ref": "fa4b785a-2931-432d-9e1e-7d4fe8512eca",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8a2bf6a7-f325-4a19-b647-1643c5b2573f"
        },
        "item": {
          "id": "a8f23811-7f39-4fc0-8e47-f47f15b68452",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "124ef1a1-c7d9-42c1-94aa-aff34e20c2fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a5d1f4-2d1c-4466-9938-7e00e4e3e8f5",
        "cursor": {
          "ref": "6a100673-858d-4e8b-b32a-51f7d1cacc08",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7aee09ff-81a9-492d-827d-565fd1927f68"
        },
        "item": {
          "id": "c3a5d1f4-2d1c-4466-9938-7e00e4e3e8f5",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "8b4d1fac-7d81-4ba8-86e9-19a91df4e663",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 332,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83434294-3d23-4255-b161-bcb414c040b3",
        "cursor": {
          "ref": "6a6c2a40-e79e-421f-a45e-0d5b6a72b1fe",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "70c1d187-17af-464f-a9a4-2e453dc2b93a"
        },
        "item": {
          "id": "83434294-3d23-4255-b161-bcb414c040b3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ca213fe3-28b2-48b7-be75-6ab2d61dfaeb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 279,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83434294-3d23-4255-b161-bcb414c040b3",
        "cursor": {
          "ref": "6a6c2a40-e79e-421f-a45e-0d5b6a72b1fe",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "70c1d187-17af-464f-a9a4-2e453dc2b93a"
        },
        "item": {
          "id": "83434294-3d23-4255-b161-bcb414c040b3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ca213fe3-28b2-48b7-be75-6ab2d61dfaeb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 279,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3796ab6b-ba0b-4d1d-8c41-c7597225b25e",
        "cursor": {
          "ref": "e6583dad-519b-4719-b156-109946b06fd9",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c8aa4c18-db9f-4ebf-812f-eaaf4f14c09e"
        },
        "item": {
          "id": "3796ab6b-ba0b-4d1d-8c41-c7597225b25e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ae4d1ad4-3338-4921-ad08-f8820cda6d82",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 551,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3709522-5018-4853-b56b-49102c773c18",
        "cursor": {
          "ref": "2b018850-e71b-4c0b-988a-7ff49c671526",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a89f0b1b-22e4-487a-8d17-8ff5c49b91f9"
        },
        "item": {
          "id": "e3709522-5018-4853-b56b-49102c773c18",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "06dd1e94-844c-43ef-a4c5-2141209b5fce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3709522-5018-4853-b56b-49102c773c18",
        "cursor": {
          "ref": "2b018850-e71b-4c0b-988a-7ff49c671526",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a89f0b1b-22e4-487a-8d17-8ff5c49b91f9"
        },
        "item": {
          "id": "e3709522-5018-4853-b56b-49102c773c18",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "06dd1e94-844c-43ef-a4c5-2141209b5fce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e8e85d-6390-43a8-9e5c-c7ed6e05123c",
        "cursor": {
          "ref": "5cbf753f-3a11-4679-a5bd-17ed9687d0d7",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6568d20f-1f92-42e0-9248-fd52fc190045"
        },
        "item": {
          "id": "d0e8e85d-6390-43a8-9e5c-c7ed6e05123c",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "7dfa8b1d-6947-4027-a336-77467dfc553a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 523,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}