{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "26c71d4f-8c3e-4f70-8e88-8d58655d593e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "12d61268-e6b7-4afd-84fa-4e92fe05a8e4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3b2402f-bc2b-43ae-8f52-32e3a003e5ee",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d257137d-d516-48f7-baf2-de979b16dcd0"
                }
              }
            ]
          },
          {
            "id": "ca05c3ac-cf03-458e-b1a6-66cf724972cd",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce745b32-4f88-4b95-bdb2-52de93ced25e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3e283e73-a69b-4d09-abbb-788dcdcdd5d1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "83804746-ae7d-4784-a963-7cf71da4970b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "88a66211-7d61-43d1-934b-a6096c2a23d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3e2d1e57-2d0d-4882-9b1a-4cb7325c6f38",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dde7f287-bd2f-4d8c-b36b-b676fdcc4fa4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "825f62fb-09c0-4b46-9b6b-5d3b146de17d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dea3acb8-d42f-4d9c-98f1-e719a58c585f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da7cf430-dd81-4b1b-832c-a2bc5344a7d8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "51a937cc-4629-4b6d-8041-92e628c0e8fb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eca748ee-1c0a-4919-8031-fb8c812fac8a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a2fdd25-49c8-494a-9cba-f25be948e272",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "118df9bd-f40a-479e-b416-19148b2f67ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "909ffa44-7496-4151-84ea-9b26a2087a87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "42423b4c-7b08-4dc8-bdd5-66126d8572c5"
            }
          }
        ]
      },
      {
        "id": "cfbfb6be-c5a5-4a4c-89ba-7cc216f66bd5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "12504010-af96-484a-95f7-b7a85aa2c190",
            "name": "Negative Testing",
            "item": [
              {
                "id": "63bd3d75-ee44-4a12-8619-5b5fdf9a5360",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d9001397-4892-4ba2-bc3a-70a8a49b5e22",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca24410a-0646-4931-8ac1-0e7fd691f170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18bef3d7-b86b-464e-92e1-323aa20d9c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f521c59-f601-4e4f-908c-e157c9344bdb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ee42ff-c2ff-40e7-ae08-abb9e4a00a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd317876-f957-465a-99c6-ff39fa4a0c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351c6284-33a9-41bd-9113-9a12a777893e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb7bb9f-94c2-472c-aade-a7158b9fd211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "680ce170-d936-4112-8755-8e8719123b18"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2884b269-d1f3-435c-8bcf-78ced996f936",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "edf94f68-b950-4597-80ed-6d56a76b7fb4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874df501-5a14-463d-b792-8a79b79fe22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2099331b-f013-47ba-8332-7dd1dbe1b92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d53e646-8648-4d27-9876-1cb7ac7dbc60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d96aa9a9-6fd5-4165-a184-e9641d9a8f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c4d05c5-44ce-441a-aa88-10efbca9a4b4",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ca6756-bf0c-4d46-97c0-6ce31eace831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ea512c29-ddbe-4e64-9e80-f195ee0daccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f518a6ab-c97c-4774-9be1-9d71a39fd516",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "3f9ffc97-2429-4af9-bf85-2d2c56a8e3ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9df2137d-c95e-4906-bb5d-b18e72952779",
            "name": "Positive Testing",
            "item": [
              {
                "id": "abd53de7-e55e-4c2a-a8a8-549a7d147561",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ad0b999-95b3-43cb-b939-f6576dba88fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "96991dc4-2f4e-41f6-ac4e-885eb9eaef03"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0663674b-d0ec-43ce-aa18-cfffd87507f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "63a50ac9-7639-4b84-b9c2-771fb98d13cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5d3f5a5-4824-4fd4-b589-3b5ddd95c65f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b4d5203-1370-4524-83f5-cc34d92c6633"
            }
          }
        ]
      },
      {
        "id": "b16d59f1-f970-44e5-af16-4b122bd2ed4e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a2e11f7d-fc21-4d64-8c93-932cbf411787",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8eb795d-ebf4-441d-9ab9-4e837a333ba5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "13818634-6bf6-4a78-8f79-c97a3250f522",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04750e7-f3af-4d49-9ead-56b850996e2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af984d53-a129-4981-8f70-091c0a0ccf58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abafbf15-1464-47e4-8de4-68b39fb50d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "900d2e75-bdb9-4606-bebf-0f5150f76594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c92cee6-9ccc-4e5c-b6af-ce2bc6c2644e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d5d53a-228c-4c43-b35d-6e5f78944ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bffd70a-236d-4051-9bc2-8a330df46ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f67fdaa-5259-426b-be8e-fa336a534fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14f87a4b-3a95-4cd4-9227-9951e4bb7f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62215178-e4d1-4de1-913d-612384c99bdb",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e47689-2ff8-45bd-a50c-32a535a22ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd38dff5-be55-4a5b-89c6-104f7611cc81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4970863b-417a-49cf-a90f-dc9b74afbfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74cca0f5-b6da-4f03-a1f9-67e3bdf1b09b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a27db59-247e-49bb-903a-0cdd16d973dc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d35ff2-aee9-407c-8322-050728a4fcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884269b4-1e9e-422e-9334-cfe3f656d1e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253763d8-5a8d-4814-a1a0-d7810cd1ab2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a247cc5-e6d1-4df0-bc0b-df2072eb4f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1f99f3-e920-4ac4-8a36-fd1164f250b3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f759332-34db-42e5-99a2-a138925243eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3438a92c-8812-4e1e-875d-273eebd89776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2398051a-d01a-43c4-bbf2-bd57cdc54b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8087643-2e4e-47d6-89cb-cdaf4626cb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7f56bb-4c8f-41a9-911a-978b14f47b4d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b78992-d187-4d84-be45-50ba9b797f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423df2b2-bc21-4dc0-9d6e-28eadab3940c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa66e869-9d4e-4420-8cb4-3f3f538f6490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4268fd4-94e4-4cb1-8f49-5af000868e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b688f33c-366a-4d8c-b43e-13ccf890f70d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4913e8d-3de9-4556-bea2-d1e1f50c819f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0aa35bb-e6c4-4105-838c-50a335c2abab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae78f172-c02a-4444-8faa-2c537e9c8b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a12f4485-20a7-4cfc-8eaa-e818c5b905e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7466ee96-d34b-4e2b-b229-64cb5964f2a3",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2753e504-b143-4ca0-8439-4144ce41f424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9508c6aa-fe14-4398-8150-a842f5e186cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40103e7d-61f5-4c51-b112-e07e53439bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b91f7f2a-1ae8-41c6-9979-b34df97f2386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e42d26-8075-4ec7-873f-7d9ca16250c1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb14fec8-0ce6-4b70-a0ea-7dccae9f859c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f3d107-4a57-4812-a00e-a8b290983aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de115dec-991b-4b53-a4ab-dab8280667f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f70e78fc-ca8a-4e81-8896-32dac1353e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bf62a2-a1cc-4a75-88e4-0e5bb36b492a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66afec67-6eba-450c-9395-fea46416ab15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560bce56-c97b-4222-9cd9-f2c5adcd2ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ff7b11-3574-44f5-9ade-75961c9e52a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a59860d2-3309-49e5-9dd6-cb3e6707dccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8cc891-9380-4db5-a8cf-d567d0efb5c5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ff702a-feca-4fe5-b563-6bb951ac7d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2faf848-e5e5-4c15-a4cc-0f70492af740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e9a909-0cc4-4ffd-b78b-759f0bcf6ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8da0bd7-c92a-4bd8-bbed-20273f203571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4887a69f-96f1-49a9-84d0-6ef4887e197c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5617791-96ab-45b9-b66f-d41048765ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c2a21d-a65d-4143-962d-c65e9c4e025b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e98fda-97ec-48b6-b7b6-278fb327e784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a61400a-f28d-4ce3-a9b8-8014bbae6ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e75c924-1a3d-49b2-83dd-cac7c4eaf399",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc44ec8-c203-47b5-b373-09d0dcdb91e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a7af91-1cf4-486f-b79e-2cb9a5497b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65d4516-d5f0-46b9-9c8e-29b48700b434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07456153-92f4-4490-aa10-38b8de41a7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a90a02-879f-405f-a666-df2f6fbb5f49",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e135dc-5175-4bd0-bd2d-f5d10999c47a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647e57ff-adaa-4fcc-83f6-b40c6e98fd41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a944ecf-29b3-4ec9-963f-14948c6ebca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "db997ce6-aa7d-4d7b-ac2a-34e1b843d3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a62f59-c510-48d5-b236-b3cc8557c07d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da0e5d4-c239-4b0e-8bb5-16e3722d5c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f109e56-b0af-4fe0-9ac4-3eceef16553c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db0f2b3-1492-4213-b9f1-a518acc6bccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a81cfadd-a5f5-4e08-bf26-3bef158e4598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27aa619-4bc1-4a5d-b7e2-64a86abc3f5d",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6c7339-4740-45d2-93c5-49fc4946b362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4488b713-1635-459a-834a-0ac637d83e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed427ad9-4bfc-439c-b53f-ef65a451298e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55fd01f1-4e95-400a-9c3b-e7f03ef20293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca9bc9a-1819-4d54-9008-1ec997d3f1e6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0a80ff-d35b-4f00-8a39-2ebd7d561943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ed8c32c-f2c7-4d5d-a8d2-bbf871a79c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be211837-960d-4b8e-b681-b6046027cd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9aa495ee-8ffe-401b-a281-1cee1d62c308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1201c375-9b8c-4de3-a83f-e5c26c626645",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e849a42-edda-4d9c-a3b5-17a560199e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8a59ca-69c5-4edc-987b-25a178d61f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408e56c8-cfbd-4813-bb6a-300cc821726c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b917634-9aa3-4772-a6cf-a4267777d227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4883282-a11b-4aa0-b051-c03241729522",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87764f8-34c8-4b1c-808b-fdf9a1381485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b242f42-6096-4b62-a068-3d2cbfc0ecfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c19e1f7-8047-4b68-ad54-eb63e36e46b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b9b5f8b-91f8-4b04-84a4-41070db4f513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87317451-0476-40d1-bf71-ea43c919f487",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f930f740-488d-4cc9-84dc-15f5d6babacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3144f40e-0e42-4dd3-bc8a-e56b06ff8463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87487ebc-0153-4b88-8b8c-f41836508e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f449454-958d-4cf1-84df-1dc7d9c6d1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b77480b-03eb-4f62-a690-f14ddfcde5a1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc4b14a-d790-428f-9870-b474fc452460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0c12ad-b917-4f6f-b6b1-9ebc3cde35fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e72f01b-5eaf-4aed-bb4a-d94e99d5f0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4762ec71-a565-4c89-8a3e-7a254fe1658c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62075f48-6be0-404a-b8a9-dafeb77e11dc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5f8380-8d14-4e17-89f0-7ddb0a82ee62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4816cbeb-ad1a-4daf-8c83-073bdb7b339f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92d0f3c-0c9b-46bd-97c1-f9699f927a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4000e85c-0b50-49e9-b7aa-e2187a63f170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184b4928-6140-44ec-8e64-dad6ebc2781c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b44b2a-7a57-42db-a644-4f1abbabc539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3add634e-a116-488d-8304-da3c462a1997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87f7936-1ad5-4e7e-b30e-af8e777d1057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86f4eaa3-d24d-4229-9965-dbf3e84e6328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e0a043-f726-4e6e-a907-bdf2f82ace6c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cd9675-92e0-447c-9a7e-708a7b378f36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0afa1cf1-3320-4898-8d04-13aee6094c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6665da62-8249-41ce-a0f2-225e72488b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "436c5415-e803-4fc1-bd62-8405c7227965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2034cde3-9840-4079-9561-5da36317947f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7be41c0-6185-4951-9e49-7f86d0cc5e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d66246-b1d7-42e8-86e4-96c4c70073c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50cc7b45-7591-4759-a54b-28eee88de43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8a5cff-1d2a-45e2-a048-00e5b948f1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf108cc-6c78-4377-bee8-e4ff99e0d0ef",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad15d7b-66f1-430c-8441-d987874c1795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf7eae64-d0fd-464d-b5af-9e490539f388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c418c8f3-efcb-4fe1-a089-32579baff6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4afd73-19eb-4fc7-98b5-936ba7e3d24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aebe9e0-7306-4440-8bc1-405e5f0937f2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c3a45f-7e83-436c-855b-c7aa003aa670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3215c24e-4af3-41aa-95ee-57ec10269ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962f9508-a45b-410e-9384-dc37785e1091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "285f4180-9f98-4d2c-bd4a-ba7a888cf10f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66de4a2d-a64c-4a89-be48-36d1fd5d9186",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9872e569-5876-45e0-9740-1ee989de8a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f4ceab-144b-4174-b878-67af23ec83c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986d1a24-a8ca-4441-909f-df09bf74bc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea072820-93b2-4707-b5ec-74bb102e006e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c47d5f-0295-45d3-96d8-584025a5b74b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72519c25-3fc8-4057-8f1d-fcd7cdc3ec7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a19f13-cfb3-45f0-8d27-56a81a052631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f9af3a-02f1-4159-a7cc-d5f10da82df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92b105de-10a0-4ad3-a0e7-0c83f3de427e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1414fc0-2c1b-445f-bd66-ee863106c171",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f7381e-06bd-4640-8402-be779752ce52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "421bfb40-793b-4166-b801-3e35aeb06b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06016eb9-08dd-41d3-ac1d-1364f8873bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "12f34917-f854-4b6a-9706-8b28640b44a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1277b2b3-1c4e-4792-8c79-a7a59ba8bbc0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1c9ad3-855f-4ff1-bbb7-eafee613816a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a55aa9f-29d0-4bdc-acdb-6dbbcce31f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5681b7dd-20ee-4c11-8eaf-6ca25053ae89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "184c8c30-ee5b-48c6-8781-69cb552d762f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0f01c1-7b84-4db9-97a7-f20f1bcfcdb6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d65019a-eb5f-48a3-b1c2-fdf99c064781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a493c9e9-cea7-4ef5-9e0e-f9f809bc90cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bdb3f3f-8589-4eb1-8758-cff88fa7dc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "75aa44d0-fc65-47c5-a8a2-336c25afd41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2bb1a28-f264-444f-a4b4-19dbb892e68e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2d8e12-0d03-4a51-a93c-148c1eb1e137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc559f39-745a-42dd-998e-4b804b82c60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f0fe98-77a0-44b6-a5f6-5e47c85c8af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "293848a0-06a2-498c-bc98-f4810c8e385e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cd153c-dedf-4821-a7b6-289f9c75d5f4",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1536c748-5600-48b1-b9f4-acc4f93a2b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15774bba-d087-4572-8ee7-0e165feceec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56511950-c71c-4107-ac12-5e4385c2c0e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67540100-b1b4-4cb5-ae03-bdb995a65498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1facd14-ac86-41e5-8570-bfe63043d9fe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375eb39d-4418-47b1-9cce-06dcc824ed36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868396c0-940a-4e7d-82be-414a131d6605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07ce054-2269-4bbc-b174-4e7508b5ed27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d28e22c6-b119-4115-bbfb-eee1bbf176e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b596cb-b2f5-4937-a121-490f82dd7d7a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7ee1c5-f179-4bc0-8afe-ada497a723c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b488fcd-bcb2-4481-8462-117ddd95c50d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d67d691-90d5-4b41-b0d3-fe6b2a2f874a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d092f85-f982-49a1-b337-16b584b46d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5be8a0a-3c55-4b03-8908-6cb4a5e410b0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35697d04-1b22-4db1-9ebe-a0d53736f3b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba249669-f794-4875-ad52-d7207c05e3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4add4dfa-299c-457f-bd7e-7d14efc7d0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "801e73d6-2e72-4162-8082-2f64ae09c2f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162aa291-fe19-42a3-8731-a7ea83aee0c3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f852724-b678-46df-83b1-bbe4e497d6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2c47cff-8fa9-42cd-9630-e4bd43538c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bee5836-0412-46fc-8059-eea9f6d1038c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "602d2c27-478d-4119-8dc5-5f53c104bc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a567ee65-dbc4-4913-ad30-be5e9e008d90",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02031e0-12c0-436d-97c2-5b711e3d4ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c50a441-d44d-4603-ba0f-f52428e52f4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26af93ae-9bb3-4fc7-bea5-601c70a40f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa161c95-806e-4fac-9a31-e27ccb647b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68265d4-7601-4253-8302-9f585052bbec",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd117fc-d01e-4065-b31d-e3ab467690cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9bb341-1930-48bd-91c4-a53e6058352f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c229a3-faa9-4450-a9ce-eff945488d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "13392fb8-573d-4e79-bbbc-4a4f864f6f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b258c4bd-c55d-4b5f-80c8-bd6c59d29ae6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8447622e-3f7d-4ab4-8383-729a81f3b728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33973ea2-a1f8-40ec-89e4-9c381ef3fe7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3612d7f7-7d22-4bc7-b875-fd7166a3ee94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4454483e-db4e-4d86-b1e3-f778bfd5d527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9707d89-7cdc-4bd9-be28-0da830cdf64a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e372eb-6780-4688-83b9-181063659bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18678855-0e55-47c1-9200-0f55305f1c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a24cb1-e71e-4ae0-8cc8-cdad1e67ea3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6411047d-4af8-462c-bc99-f453452e61d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d511b9-49e6-4bad-9ce0-0018912c8640",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a65f7e-473d-4ecc-bb32-382abb30170e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c926b197-83c6-46f7-94b9-30ed5fe90067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c380edd-529d-441a-a58b-45071b1938aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b956cd06-eb6c-4c0b-9640-55e31ed8e37c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0a0fa4-dc25-43e2-ba51-26e679cd4070",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910c2b50-494b-474a-a267-8d854be4fdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68de5548-7522-4107-bb16-42dfa7483b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af7871e-dd92-4458-92cd-8b714dc3d306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "189df1b9-8c69-4737-a97e-943e790acee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1537e18a-5d70-430b-bdd7-9c43942866d2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afda375c-75cc-4b37-b0b6-8997c3582500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd650c93-d90d-4462-9333-3a005bc8c14d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9062d21-8b53-4f34-b03b-0128d30947bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "647591af-b3d7-4e65-a1d5-1f9cbb474197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad3a508-6612-4f94-aa93-9eed837a1a92",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e68b4c4-ffb3-4f22-ade0-681ee7f41d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2d4304-acd1-4de3-8cb9-a9a2377a64dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7bad04-fc94-4eac-99ea-885f78538ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2157df57-8256-4798-b5f3-28423bb82654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef638d91-c9e3-45e9-8639-1440e635c320",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88558f5-f33c-464c-8b6c-3932a36a6c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c425b7-d48c-4f8e-89de-e3f32b5b6a0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59573246-97c6-455e-bd36-c2da57aa1167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a903e17-91bb-416a-b5f1-53c2e5f7394e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f33349-5d13-4277-b432-7642d5ab30a8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72799f86-48e0-481e-8e5d-1fe84ccedd5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07b170e-5c42-4a2c-be59-31ab47489e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d02118-bbb6-4825-a1d5-f95c71ff81e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd91115-42d7-4a10-94a9-77e6ab8ad925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffa229c4-f157-449b-b837-3ad1eb14a5d3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1467eea-776f-474f-9ae2-7e0e8dfbefdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefe4d30-a9c7-4f7a-a0a8-f2910fc60c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b3ce4c-378e-4b3d-a368-f8edfdeebe47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52bb1acd-c739-43b9-825a-0e152b75c388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa0a2be-9759-4577-ae34-5e0d87ad33d9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189638b8-0483-40a6-830e-6a08455e1362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "145d1282-e4a9-4726-8f93-f61581fd8c34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fc9bf8-d172-4eb4-8a5f-1c7beca651f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e27178a8-0e6f-432b-b61f-a53731d524f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e90a414-1ac4-4d73-802c-30ac613ec020",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648cb6cf-f826-47bf-8197-4184b2fe4929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1336f28e-9404-4a07-9012-7df0cfbd9541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7521fbad-e590-4f0c-9280-b9ee3c1d6fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0af5645-ccff-46d3-86e9-95b197e59a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14854a6c-44ae-4b18-8f23-6f1517e8558a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5188011-736d-4a17-9f57-c3b10d330ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6c4489-e60f-4009-9e72-bc0fa705a470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96b8387-3d8f-4654-a334-40e3ac1a43e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3825aa3c-f3d8-4240-9c00-235991664ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0015b309-41d7-4fcc-ad4f-ab77a7a63203",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83457bb-8b12-4560-afee-ce85480bf9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704e0e14-ef2f-4e68-8f2e-5e4ead2aa00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6693f774-e3be-43af-8333-8be30a6ada43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "00708a01-de32-4386-84a0-d3e805cc8865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85723992-88f6-4e47-9e33-9d5901cb70e6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1de544-a5aa-401d-b756-4c24abeb1a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487fc43e-c4c5-41db-8ca9-f608f170d574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319671d4-b04f-486b-9c71-0621d48230cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d4369b0-6a0b-426b-abec-66a94802175f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47d8169-bdef-452c-86e5-474d8617e24e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e532af-5b09-450d-99f8-a3394a00886d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a22f6b3e-6120-42e0-b34f-b4aa26dc0dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70da6c86-235a-4e47-b60d-d0d454f7bb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f956f0e8-e350-40e6-89e4-2646792f4409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d724a2dc-37e4-4679-a2e5-632dbfa2e577",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc7ac38-6bf4-4586-abd3-47263601a7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c01b39c-7f18-435a-bd17-1db96764727b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb18045d-fdda-4863-b5a4-402785bc75ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f07077f9-13af-4852-bc12-2864b0289c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08afa497-8b30-4401-ae62-939f3b17b553",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53855b78-a6ff-42db-8711-e258a0ac068e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee1ba00-1423-4464-be72-6c5106802baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60785f22-7229-42a9-aa68-35b16a16896c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a8c37e-85a2-4b0e-83c8-f8859788242a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cca9b2-58ad-4c1d-97a9-d2e26ff6c836",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a2271af-a4bc-4534-815b-876dc651482d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7f0948-a821-4117-8c12-c0d249f09703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858ef1bc-8551-4017-90ac-74121169d222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "06cc475a-04c2-4d9a-9054-c44d9a681e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd2e1a3-09c9-422f-a309-1d4d46de5c8f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51262698-3fc2-44d2-b9cc-689e7d55514f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3a7834-5789-46d6-a73d-8d23ca1cb809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98205b0-843b-4805-863f-c33c54730fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "05a90983-9e70-4ff4-913b-7133e79cd707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1cb343-ab4a-438d-99b0-58be4cd110e2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7a29c4-58c0-4461-abfa-a14e783fd0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dfcb3e4-50b8-48a6-bdd8-e14d98f796f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "222c6b70-22a2-4d74-9b13-b0c6597f8e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ce40f0-7820-4e0e-b238-44bad0fa1283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dab8c73-e314-46cc-93b6-4887e1589e96",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dca6ea1-d902-4be9-999a-0c6edfb4db50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85bd7e85-73b4-44b4-ac8f-ae0dd04a0a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d19e94-af7d-4f89-891e-c7a006662b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "307bcd80-0a17-4015-987c-136cf5af9af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed925b77-1d07-43d7-80b8-d85ddb2bdec5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93688c35-2e71-4ba4-b8de-3da39117d9d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8487f7-e58c-4772-b7ed-7b0a424f564b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "479db52a-1703-42a5-8ae9-264088e9e1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f9e981e1-b345-4115-b6c3-2e86e70ae503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d949a24b-b0b1-4d5c-9086-5e333a35af6d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088d1617-3db6-4c64-90dd-12c3ec179f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd7ca06-d79e-4941-9349-7f1db7bb6bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac69877-3182-4620-aeaa-bf1bfd5a95c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f81ba5f-cb3f-479f-beae-e00c9a7352ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d15052-c6fc-4a57-9d0b-390f451cb8b0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166dcc1b-9067-47d2-bcd0-4f9739869f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "205b8cc9-5e20-4439-bcd0-39e0aafd0f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c87685-a62e-4d9a-9d28-3daf68d1dd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "aea46c58-c171-40a7-ab21-ea3896e4ef97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e43188-30b7-49ad-9fca-b73d72186abb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e29d40-2df0-4e06-ba59-1d58ca0f61fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582facda-1b5e-44a1-9e9d-4149fb4915cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83737e97-9aa9-474e-ab4f-4fa78e6410ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9271c176-dbcb-4a6d-b18c-4a473cfe7288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf60936-b736-4633-85ee-2edfb8724743",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07095e0a-45dc-487c-8f66-f66f33ddf6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80d2545-f6d8-44bd-8710-122e85cb6215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f241965c-4321-4757-be7d-27f15766fad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc32d29-eeb4-4945-9207-a8bb6ef8839b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020cd007-7bb3-4fa9-980c-fe199f88396c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c98eee-85ef-4ea0-9ac1-d7e293023051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97428151-9c52-44a9-9791-ba91586ed348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17332fe9-39d4-47ac-8985-3deb9a72d42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d35f813d-6a0e-43dc-b357-93e591c7d0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22fad66-e770-47f0-b1f6-fd3554e516c9",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baa2707e-e5b9-41ac-aa8d-ea04638fea01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448e8de3-0071-4d65-ab31-924b5e6920f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3b9e23-3373-40a6-be36-f1b6bd1f21c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d96306b-9a27-4bb4-8c64-4b55102d4f67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c11d58-ab56-4089-8e51-c3271836e4ec",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04de64b6-9c1b-46b1-8c0c-ff77fb5f8702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd62b546-bc86-44c5-8826-eb7aac6b80db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5b61aa-5790-46b0-bc5b-4c62e0ed8cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16d6ca6e-f41f-4cdb-83ed-29cf4acc278a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f932d31a-79be-4dbe-a1f9-3a5e51eddc44",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a621f28-4113-4b36-9f2f-83e9b47a5c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb904bd3-f476-40dd-a207-e483c8b83d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05562a3c-53c0-46d0-9e07-183c83cd94e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "097f7571-70c5-4b36-b815-c56dafab01be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c52a1153-906b-4ef6-91dd-f4cf2ca9c385",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e69f7e0-863d-4a0f-bbd5-af951c80e831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ee12f2-5f59-4b35-8a84-9856b9f9a6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50ba073-7ebd-4933-aa9a-dff22c5d8e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a45e5e2-17d8-4b1f-b0f9-e0e2e889e3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a1b58bb-b31d-4b22-99a8-5ea1e72009e9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca72084-76c3-466a-b85d-d9c72024095b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79682128-b90a-4b37-ba29-6877511cad0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05871f9f-9cc5-4aaa-a4f0-157892b1cc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46145d62-30bd-4979-b293-50467a10cc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75940a6c-a513-4546-a45d-b5b3534746bc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ffafe2-1040-4b12-9c48-7dfefc6fb82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48334158-71ed-4fb2-a607-a3e978a3a8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2365f2-75ac-42ea-a0a6-ff0a0839fcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "322b3375-9c70-46eb-bfe9-6a3add2b87e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d8e377-f44c-4c3c-82ca-c1678061995a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a835600c-1855-47e2-8540-fe4b839a198f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9b5257-13c3-4a32-9d8e-605331b9d2ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a75397e-1bb7-4d33-808a-2511d21d641a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6babe58-a7a6-447f-9051-ff367419bac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2418bae6-0b58-4910-b7a8-73245acc3ea6",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109b88ab-f6ef-465a-8d86-f6907b893d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b416e9-9ce6-4528-b5c3-546cb6c6216d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6a878a7-194e-468c-af6d-78a0f768a927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3193c10c-eac1-47fc-8db1-8f7d9012c5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1ce28d-8343-4fde-97bc-2f180de0a584",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e4d1e3-910d-4b0a-9d67-8fe5396bbf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e2797a-aae1-406b-824c-f23f9532b84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1689e8f0-8660-41d5-b0d1-68da2a55619b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b5c01f-5230-466c-b93a-6073339f1a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2986aab0-9be3-4ac8-ba54-fcf9ddeef12d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57669a6-854f-4921-b023-da3712f28639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023e0fc0-400a-486e-ae65-2d4066b15dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f981c62b-0653-44db-9652-4dde4f8dc9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7486b1d-69e3-4378-b30d-9f01f6e3b0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dd84b5-75d3-4047-9c17-3df90184e29b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba994bb8-dae6-4e6b-9c88-18d62e9ab534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a754f3-ab57-49fe-8187-762531617f40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbe34f5-c514-4e70-bfb3-b1a0642cd75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c2f0364-84f0-46b5-8a75-4df5092160ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b6c04a-f309-4d0b-8739-b88b7c09d28a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3e9fed-67ac-4264-9637-d72441721cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e39df0a-2491-4222-a7ef-6cdf92303d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f249b964-e9ae-41b8-984f-fb46a60fc37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29b36f24-cca1-46c3-be22-3f795a0ca6f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a94b46c-15a6-4e7a-8c35-77eb2f6d4051",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec26e270-eec1-4271-b00a-80c8d5e94316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45127ce5-ff87-4165-a75f-259ed02fa649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7aa548c-b60c-41aa-b14a-17e7477e7cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab9a4f9-d405-47cf-8c3f-61cf8b1d8131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc578611-9734-40c1-bea5-9a90563b1926",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7559c73a-2c2c-4fd4-839d-1457ad8f6b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ee8d0a-0673-41b0-a4a7-5a46cb1e268e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c37efe0d-7a4e-4699-a285-5d032af03f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bdf46c4-5bea-45b6-9d91-d96afeb00c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682403cb-d05e-4c5e-9df3-3eb390283cf0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2db45e-6bb0-430b-b388-f11bdc9560bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73a3966-f22a-406a-9b5c-1fb064242bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90364ee-75f5-42b6-9fc8-34d04fdf7016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28eff330-8ca5-4363-b9db-8d22bf85ce39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64f383b-fad9-4186-8c7e-fed6ee5d48a0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3973cf21-1db0-4904-b586-db0412cf1e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6d5b0c-dc1a-4e69-88fd-8cb6660dd3d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62882ee-f25e-47f1-b6d4-ceb2ae31ebb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae6d6c4-1810-4b3d-8b70-e663e6da5590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9bd7a5-908b-4a7b-87c2-0a2cd15456f5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3451237d-b58a-4d43-ab0d-7a75e5187b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18da3d7-4249-440d-a43a-f9cc63dc0720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ab97fc-c8e2-49d6-ad12-581fb2c43afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b8ddd5-c27e-4f85-89f6-99b4a9ce57bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327cd1ac-ee93-4279-b344-de595f828283",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e9d0bc-c1b2-4aac-bd21-0bb38dfa8fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee957e3d-90ab-4742-a8f6-848668ece4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec401b4b-38f6-4ce2-b6e4-cad8044b9884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1807696e-19f8-45b0-947e-c734e36c3c0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96545fe9-d955-4a92-9ff7-2c9c227bd589",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4143719-60da-4a74-b9dc-b43a6f6d71d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5230793-869a-4d57-85a7-0106480a8173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd25aac-1719-4c40-b42b-8c940a670534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "727c6458-44c1-4e93-af5d-ff59e741122c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ac5c66-0727-4b91-8250-05da864328f3",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b771636a-9a04-4298-8408-f1a29b8ea9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aadf059b-338f-4186-9574-f8b6263f2fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1013c18-6a18-42ab-85b5-2f78256ef157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfde9baa-58d2-4538-a333-1487cb249ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4481a091-3381-4486-9c7a-4ffe20fd7e6e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3335169-25a0-46ea-9f92-957c39ff98e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "749c3182-2cf8-403a-ac26-0e37996c0540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fc5a09-f723-4249-b812-8d316c7cd439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61acf997-1940-4aff-a98f-aa58c8e3f174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e7786f-125b-4cfa-9541-0095c8761b65",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd3c2a3-108b-4354-8174-008ef99b8e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0293abc-478c-44b5-9385-55bffdf1a41b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cfb8c25-4bf8-4065-bd19-da9c2e8c8b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "642f954f-51d7-4627-8a2c-e425494887de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d8ccaf-442f-4229-b946-0fc6c8e1e6e5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a6c6b0-5b3c-4582-974b-1ddd4ce36719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53138cb-dc44-48c9-9b5d-ba9ee6eeddac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a973a405-a598-45b4-8169-f7e7984c8967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2526f346-7a73-4db0-8eb2-51af22dde34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54621dfe-68e8-4f1f-b845-dd8bc5fcbe15",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a70e95-f050-4c36-be29-1a37781fdbd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d37d6ce6-00ad-4daa-a8e1-bd49b253b243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88907b00-b983-4da1-a32f-b606eb16eacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "53b7b99d-7535-4e3b-a7b8-76201f49b113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b40fc73-d468-424a-b32d-44ec90daa693",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb7040b-568b-4f84-a0c1-a8384800c22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f86147b-134e-4a88-b12e-b3df98ca12b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27843115-0c28-4db1-aa52-4347f880112f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5ae150d-85ff-4e66-bf90-739184456fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a68015-3373-42df-8cb7-4317d0e90885",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf41de18-988e-4892-bb03-d2a79de6f1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72289bcc-ec3d-4870-a5f4-b16337ec202d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a832646d-09da-464d-ab79-50ee42c51e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e900f40-70df-4995-b5a1-835c1f52d021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ec8c61-7db4-4a94-9875-3bd5af7c85d1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601189d9-774f-4ca7-a3ac-bb0af2d1dde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "197c1bf2-1b08-4244-9eba-9c94cd556f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320680af-bfde-4ff8-9805-57014b767556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f0fee1-db55-4acf-b950-6a34b5d29a5f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2fae5cdd-96cc-4082-9397-68e89be9935f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a829bab3-1e01-45f5-ab4a-30ebe7d3127f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bad21b-685d-4130-acea-1f6e8f603e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92cde09a-b988-4073-bb07-feab75461fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc2e9e3-1907-4e36-9c0d-0e920c042bd5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "fcc697e3-5f1e-427b-8d8a-05bde1f21210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d29866-e52f-43f5-9cd6-996c28851f4f",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc5f9ed-80ae-4fda-b044-fae389cd60f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40389156-0135-4ace-9d80-e259d588388f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9744e67f-3c9e-4789-829d-5e7b537eb38a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "b987bd46-114a-49db-bbfd-d46b30cb204e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "828fe145-60e6-40f2-bc49-d57919dd0f33",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42153237-ffaa-4a22-80d1-f54673a2a378"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "acb2909b-cf39-47df-ba6a-ca7c948cf1e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffb85ce2-fb46-45ab-b675-77edf78553fe"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d96b5328-2fc6-4890-90bc-675168dc0fa1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "62e600c7-e47b-46b0-a4a4-eb5e2d25a537"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b112520a-74cd-4cf1-bfff-34f01267f251",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4336d98-0e76-4ba8-8ad6-1af152f0af0c"
                }
              }
            ]
          },
          {
            "id": "1cde0b83-7ba3-4082-8664-418f14d6f3da",
            "name": "Positive Testing",
            "item": [
              {
                "id": "250c184d-9e69-4cb2-8bbc-dd4f92358c64",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82b52666-e155-4604-bb14-73d2a51aaccb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4dd18bb-a3b9-4d22-a72f-6a36ddcb3e73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b7037ac-45d7-4353-9caf-b0e8b093a2e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "73f924ce-24c5-4cd8-83c9-335db54b6386"
                    }
                  }
                ]
              },
              {
                "id": "ed64915f-012b-40d0-bc7c-0c7d151f4e34",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a671a3c2-3a4b-4afb-94fc-8aef38498abf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2aaf4397-0376-462b-b6ce-6de817fdd242"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4c203dd4-839e-43bf-93c9-0d5764e8550b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "87a39f3a-bd0d-4c06-a37a-3eda8bf3454f"
                    }
                  }
                ]
              },
              {
                "id": "78421d28-ad8f-467c-81fc-0b0a69beccd9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "635c21ed-ef9f-42ff-8dbd-fa1aba347074",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "427ac0cc-a9ab-4af2-8126-91bd84a12278"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bb63628-d6cd-4821-bbf9-155b027f9955",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "02397807-cc01-4fce-9a87-b6475df1627c"
                    }
                  }
                ]
              },
              {
                "id": "d24b4372-4a06-4b55-bd8d-0a77ce591305",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "16a2a29c-b8c3-40c5-a5f1-988e7c755798",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5fc2c55d-cf21-40e9-9c15-a44940a47082"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "078d6ab0-1b3d-46fd-b15c-bf2526419cfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "607e3db7-54ba-4fb5-ba30-df270c7826dc"
                    }
                  }
                ]
              },
              {
                "id": "9f2de5c8-a1f3-46f9-898c-b31efaa3b7d5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9397d08-fae6-4b6e-99ea-4759682629db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7550c189-ae14-4d95-84a9-f306719394c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99e79138-0b2e-4dd6-99bb-db76735fd49b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "373f7ab1-aab7-4904-98d0-796e4764606a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "750aa725-109d-4d2b-a9fa-26721ad5d854",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "57d21fde-58b4-43f5-9475-319752bdacdc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "75a3ad15-f244-4304-a2d7-8d182c0a9b35",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39ec6aa8-1fd0-46e7-b8e6-ae982dba5066"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bdab7e7-8c19-4f27-be94-e3eecdaa1314",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "73ef2548-4e3a-466e-98e2-1f656377561e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40241623-27a6-4edf-a8eb-91e271f3a41c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "679c7818-aa53-4d47-b956-92781106f754"
            }
          }
        ]
      },
      {
        "id": "267b04d6-2b07-4a10-a293-8a5e6f9fa8a5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e2343454-62bf-4045-951b-cb0343474a69",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7e28979-1b6f-45bd-a8e8-514f23a6a04f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b8763271-3ea8-4265-81e3-7f30642259ae",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c2f0bb-ac66-41e0-b83c-2365f9f2b1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea19cf8-8d4e-4f5b-b80a-ed8d90daa5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7814732-8114-40dd-8c52-2978baa9f4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "491200f7-c6d0-41d6-bf8a-d120daee186a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f53053c-4049-41cc-84e3-9481e3bcef26",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb7f4bf-b209-4bab-91e0-b856002ae8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742e944e-1ceb-4d89-913d-468435580454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "989a6f14-2cb3-45a3-aaa4-be07c7f9d301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91ee2a54-ebb6-4b4a-aae5-6a4028ae05d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47b327b-df44-4d7d-acae-918c88f96bb2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2ded39-993a-4d3c-9dba-bb83c92a727f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6506043-6595-45a9-a74e-d97964cf2137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aabc1de-6980-4eeb-8920-94aba395d955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85773e60-ef36-4ad4-85ce-2ca9704d88e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2064ba4-a2b2-4176-a161-3d29010809b0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1581aca-9ae0-4937-9eb1-7df346450ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5187f239-dac3-4485-b106-3ff41e4c90de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de6eb17-1cd3-4fb0-8874-e04593168e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4da3a326-ef55-4d6a-a90e-643fa99b6dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076d6c1f-b769-4555-bf1a-c67719cc4dde",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b755d12-7a39-41ef-bce4-5c086e6a65a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e18d804-bb2c-444a-a1c8-b2197a47cd0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759bcc88-f745-4fd9-9e55-e6b56e2a5523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39c9a474-fa22-4fcd-8095-4a419f3a1fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d5ff52-03ab-4498-ac2b-4c2c337a7457",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c399b408-fd96-46d7-9ddf-3aac76bc923f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04927f45-cfe7-46a5-82b1-33f511502732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d613444-1da7-4bf1-a880-415c90ecf718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ba6788-35cc-441b-921e-08762a3ce95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee13d37d-8de4-4a5e-add9-f359730b2938",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5c0307-3787-4415-881c-f6dece413c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43c5627-42f2-4343-91e0-62edf0a2df70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a61283-96a0-41a4-b61d-48c8ecdf5bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e03c05e9-ff2f-4184-8ed0-761dacb4aef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9948e8b8-a438-4c34-9060-5d7854c44ede",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217ba9a9-c7d9-467a-9b43-062a10670448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c6b8d9-bc74-46b0-ae40-d0e95851e8f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3355cc4-0d6d-4172-9403-a22c6c45dc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24b01a9d-e13a-4885-b808-53aaa916221f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcf1e7d-5134-4dfb-a1fc-d051f747f776",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476d3cf7-0873-499f-bb89-088cf53aee51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f22ca500-6abe-4488-9123-834037330830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51651cf-a5b4-4a25-945c-4947bebe0cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff51fd3-18d2-408e-b599-ddbe3f5c5ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ceb81e6-0559-4e31-bad8-d3575c1f19b5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da3de43-acb0-4c09-81cf-a7a9874a9635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f915921-5b7c-4bea-95c4-5bc799884aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d375e905-584f-4272-a2b0-c365880d4ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3edcabe9-199a-4fca-93bd-0c5d1b742c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d074a548-11d3-4643-915a-5cbcf52bf306",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ee3a0b-20e2-4d01-bbd9-be5498a47d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df158922-2643-469d-b5f6-ea71767d84d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4990c04-bff1-4aee-8ea6-3166b962ea57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "48b673e6-de79-40bf-8bcc-faaf84220050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77256cea-6720-4eda-8c29-370a102c1d48",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69283035-c558-4bcb-8c15-7518a39dc49a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b64770-0e7e-4384-8889-f088c47c0333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c95fc8-8dec-4991-98ae-c8bf8df25f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1b69f04f-ea7f-40e6-a2f4-529e861ce200"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8987d32a-1b2e-4a77-84fc-232a546dbef7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8444bf-3919-4d98-a074-c49cf321bd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190fb5b2-6b5c-4771-bbc2-043ecfc77fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31582b67-5b4e-4913-9863-40ccf926c68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "464c0eea-87a8-4917-bf52-8e7ff0ec6fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "301110fe-aa95-4788-bcf1-3aa53c7c1938",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a132c615-18aa-4051-a043-a5057bc73299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07d8927-6ab5-4b54-9394-8de31030440a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bef5ac-8cc8-447d-a4f6-c81b54136f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a578606b-d9f5-49a6-90de-0a5f9bad08bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89433e59-53fb-42a4-a14e-62edbd6f12e5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba9c957-6ac0-4747-9bef-ffafbc15379e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396b0936-7ea7-4439-8a5b-5209bfdc72f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581641e3-1043-4939-812c-ee072e5ecfce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "35c7f228-9c2d-4e5f-a84c-17ffb44fc5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b27a90-140e-42ef-8aee-5df80a910975",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4711e8c-523e-48f4-a2e0-d75f789dd346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25396274-fd45-431e-8d08-ee4e0081f029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1296929-4085-4731-85b6-91f301626078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "38cfe213-4c66-44db-af77-13597ed7b270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59e54c7-84a7-4516-9c07-6c0ef4810b8e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062bc041-c09c-43f9-9949-18dd0c2bd61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c8eacf3-7d3d-44ca-b73d-a6fd2443e205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a1fb2f2-61d9-4be4-a525-c57fc7f7964f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b5d4ea-8914-4bc5-bb5f-18d0b1150f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a441f650-fd54-4c4f-aaad-b60a115011c9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d79dfa3-f951-43f7-b621-a25325f1564a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec2cce6-c208-488f-87ea-67b5d89addef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90168af-c137-41f2-aeec-6a649dff2389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7b1dea-bd28-4848-a722-838a67321f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce1510a-b978-48a9-9703-8d0d4aaf8ff7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bf8c1d-5bb3-4298-9c5c-0883f5a00f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d259acf7-4fff-484a-8837-8a285757943d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3207767c-a543-4821-bb95-2abf80421496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "632c1534-eeb5-4405-ad33-a15287dac3aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d368bedd-07fc-4aec-b9f6-6d4d2b32d2b6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb64cca2-e852-4cd5-9ad7-093604749dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad921c0d-3b60-490a-81fd-ebd36a314f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a661254-e583-4424-8490-dcb6ab1c1772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "903c8cc9-2609-4017-8bdf-1ce8fbfc1662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3a176a-5252-444f-935f-9e7e7049b1c9",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5cbd780-3442-4a4d-b467-0e644ff5e489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad17c321-2c19-435f-b696-db3e96c61aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caad99d5-7a43-4132-8698-4b1d02787d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3732440-4562-4533-a834-c2f9d8862470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af62bbc8-6c8e-42f1-bf6b-45a42a68ada4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd72e1e-c66b-4e23-9584-2f0be306d1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119412c3-cc18-494c-af66-3ef7b13af555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c665aec4-0afe-470e-ae28-461711a9a6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e90da453-59a7-4fa5-ac83-fa3d66163cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e6605f-1f65-4e84-90a8-5babb2899332",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e10cf863-2872-4bd5-b66a-5b359d23b272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4cd6e1-ceea-4a9e-a73b-16fadceba9fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16af11f-0b0e-40a7-a461-0fbdb6b0f169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cab4bb3-9650-4453-9069-81e04ef80182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9214942f-e481-478f-b1ba-0b5f189d1de8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4222282d-70f9-4428-b8f0-befe0b163bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1db04d6-1885-4d23-996c-17fccd1643ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd202be9-f6bb-475c-9461-71ba937c3e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9286a86-4148-4418-a187-f25f5957bb0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45aa5cff-27e1-44cc-a9d5-8f9e49a0064c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f1d6bd-91c5-4a5e-be0c-949acc632a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dda1898-c5e8-4f4c-ad38-031235215b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456a1ee7-8961-4dcf-9ad2-13a1a47e8c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89dd3617-83b6-43d0-9dbd-1dd9ef7d5b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d44578-1e03-4c55-8e59-c86b85cd90d2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cb4bc3-3bd9-480d-91bb-dfd54dad3662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702bee55-2e64-4a61-8721-06fa95064205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4a4a48-7560-4f0f-9a09-2de76a21f7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e48f47a0-0636-4a94-969e-5c6a491ee825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5c81a8-3077-4303-82fd-171cabde0464",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94360b2-cdd5-416f-aefb-5dc748219377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dec94d7-752d-4b8b-b424-d871b4cd8a52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d18c03e-69ad-4599-9b5d-72f88bb49875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5e8a96b-d4ca-4dfc-9fe4-1ec9666536d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf97571-8f07-401e-876e-6c09fbcfccdb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb32db8-e5fe-423e-b644-31523b7ad6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9d6ff5-e3da-4e91-8e82-69212019475a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc84214-9356-4d2e-a1c5-f6d5adef5d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "694c45ac-250a-491b-9428-73780618f45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67576434-9dd4-4158-9c53-1e7ad8ffc2c9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9732df19-68e3-43a4-8746-a3d00a803975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df6df8c-741f-42f7-9570-3d597a3261f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfc8a26-cf8e-41db-933b-06eb6a5a0216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94d06d37-bc02-4ab6-827a-f4a8d718b881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9537692-6d32-4b1a-8745-11e87d241f9e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842c09de-44ed-4836-87bc-3a0d214ab4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10020c65-a5f0-4e2e-9274-c420a32b8842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8db4f15-9d5b-456d-8a2d-fccb0e6f344b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb38f5e-9345-46f8-9d87-4dea50766a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90895c7b-a9a9-4875-938d-281cf40aad50",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a165c3-15c6-4977-beab-19b50170f1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c7f660-62c4-4581-a957-b0db325054b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2ff8f1-f8d4-424c-9a84-079b8402235e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56f73a2a-46c7-4f87-b483-bc3b24dd6183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b1ec32-000b-4a1b-b821-07b2402578d7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5a270b-3d15-429e-a990-220528c3c410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb21476-acdd-4e08-89c9-cb9a44e054c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e09da2-5f86-45cb-8468-c3ae0cf8bd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5569fa7-5e3f-4a17-bfe5-f9d24feb3ca7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c12e2de5-65f9-4c57-9260-6e7daafed5e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8acc8cde-8a8d-43ed-82cf-88e7cb7f0a99",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b67f260-d8ee-427b-a2ed-f67496e67cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d45f3aa-5698-4176-8fe8-e8e13cd50712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6224bea-a5e8-4ab9-9f7f-90895dd9aae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "887b7648-ad47-4cd2-a9b5-3d96d642029b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8231b3-9ec4-45a8-884a-8d36aeebabc1",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e7f444-1acb-44fc-b82b-be8a4850dd97",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "71acb457-4527-494a-96ce-e1bf6feaa9a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5647d1e9-c75c-4f33-a579-466f5c83d139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75c7de25-1034-4b76-80b1-1234859bae36"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b3c09db-1985-4384-b6ec-5778ea3709e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3c2873b-ae4f-4aac-a08b-5c8093756730"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0a10ef4-1067-4383-ae76-40a856a5c43a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d03f2455-970c-4876-ab1a-bf37fef709e6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04618a89-4819-42ab-9464-9106751872ae",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "891da66c-deca-4500-8d44-9e28f1fd424d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d1010bf-6f19-4bc5-a7c5-4b0d1463172f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eeb4310b-714f-4e7d-86f9-f8945075d269"
            }
          }
        ]
      },
      {
        "id": "f224eb45-7a97-4bdd-8d66-f363732e220c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "124e7936-d7eb-4124-b8f7-b1811d6cb6c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "574d4d57-6898-434c-bb8e-adf156e6d7ea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "569213f9-4dd4-4dc2-b74d-665f45b34f9f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76cb262-e198-4fb9-8666-c9e9337e160a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1e49fe-dcda-4875-bcfa-b08ce7392010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d4bc81-504d-4f89-9bdd-2ef1e2b793d9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd76a489-f2dc-4d43-b5f5-7845b45870ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7e7978-8c9c-4b8e-a68b-105fc6f76e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3811037-c743-4134-9a4f-94ca5a3c1da3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71619201-9f21-43ea-90f6-a55a96e784f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9142d43b-2961-45ac-a73c-d2d3ce67b119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a568c5-575d-4163-a5eb-dbe1be83daa1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da095fa9-ffad-4e13-9335-2f87e27ef157",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1462975e-018a-4e0b-8d2b-56b4c8c9b37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd444d3-da51-46f2-86c4-936ac0f59e4a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03bae20-3e9b-43af-b3da-06f0f2d87069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d96bb35-8348-4e0d-9688-beda47bbae51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d058eece-7513-44e1-b58a-c2a95c21860a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61ca984-8ea2-4367-a509-f85de82b92c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71de0b4-9ebb-4ad6-87cf-069164637f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ace2a21-ba87-4e97-a010-144c17b7342c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde0646a-7ec4-41c8-a98a-a05a2b94e210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bec3dfd-65d6-49bd-91c8-a521778adf5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8e3e0a-ef75-4efa-93a5-e1f09e00e96c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ae1586-211a-4e1a-b8ec-dbe9105cdaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5908057b-8c0e-4288-94c0-2e09da6ad853",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552bb8a9-86ec-45df-8645-b60e8aa05fe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daaadd6a-945a-428f-8bf1-89037593e150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "975dd9ac-8fec-4a2c-9940-98764908951e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695db162-e8ab-45ff-aa40-279c03392b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e068d03-9f85-416f-a4a6-08f3c5edb53a",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a62af2-cb3a-4b56-be38-db5212c69ccf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b419d6f-2261-4188-b240-31a34dd467ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5046f6a4-81a5-4504-8399-bdb4aecff314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22dd560-bf18-4686-b68a-c5ec0164150e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64729a20-34c5-4e48-a6ef-ab4aa4bea6df",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6184532e-ba90-44c8-81db-0a57021ee233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "086ec0fb-55a4-4272-aad2-bf8f7be0b3b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bffb97d-db4c-40d5-9dc0-32f733b98272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7608c626-3791-4bb4-a852-a5c354cb4b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80a670d-c769-4dd8-9d4f-7e272a3dc5fb",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063e5b76-86de-4fc4-97b3-ea03d5cb14a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6fcbfc-1470-442e-9283-670caedf8ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997b39f6-4927-4f77-89f6-c2a3d92c0214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2135283-2994-421e-a995-7b6f550f96a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc038a23-198f-4241-8d45-aec8f1b0b3c6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22bc888d-322b-4bbe-b0ce-cecda5fa5cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3babd235-a04c-4107-9d6d-002d5d1ac257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4bcbd5-0e31-48cf-b40e-23bcb59deaf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d781fc-142e-4d9e-9abf-d30d39aeb4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8864e9ee-1c3b-4395-8d4a-d89e9dcce416",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0de35c-1ffb-4eb0-9da6-5787a8ecbb52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22fc9cd0-1110-4d88-8631-ebcbf8a8fd93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b32f99d-86e0-4ca9-9f1a-50aaa4c49639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd85a980-3d96-4c61-8e56-f02c903d1143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aee222e-9b9e-42d7-949f-f27eeb56ca68",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a7fc0f-5df5-4b83-8d20-de5ff32bbe22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbd7cd30-e691-4166-9c92-2e01e5bc2ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b4203c4-cf94-40db-9f8f-75a95cb17923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca317a3-77fc-4acc-a40d-2ac3e2301674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de5c3f0-ccc5-4683-9b7b-b9daaccd2256",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a109e8-2577-4bc4-af9c-a3c8fdf9f6bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f5b1e25-1b80-4da3-a15f-f97625839ae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c023d137-463a-436e-8ad2-1ddc57ccdbdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a711a51b-2992-4579-9e78-359e428484a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbc82c0-b918-4d8a-9041-2907601a0cfb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a759b4-b46f-44ef-8656-d4154458d80d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55617c3b-a370-42da-be2d-16532f55a2db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc07aa2-c594-4e57-8bef-c609c430c033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646c1171-10dd-4a1a-aa45-91e8fe6e53fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d69eb7-26a6-4849-9c5e-7aee116baf6c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8b5003-cd2f-4c0d-8e8e-ca5d93550675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d429a0-2454-4b95-bb62-aac2782df5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8ea8f7-dcb6-449a-a9f2-2f5411b69b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08d6182-f474-4689-a706-87ef5b636d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab36c10-42ac-4cd2-a070-5e0be9c8f77a",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1433af26-8aa2-4eb0-8a2b-279a211a805a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b51d0b-2fbf-4ab9-a670-4c9f0c86916d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "323c8dee-8420-4184-aa7d-73afdd444583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d186ecd3-a28c-440b-a192-8f0191c160d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fdeaf6-09ea-4a8c-92f5-de2fa5faa843",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc65048-a2a4-48ea-9b5c-7fba7a5c81a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "192e4f89-4d71-4632-9a8a-f6209a909e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab090124-c81e-496b-9113-3d638f29919f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d800fc35-54a5-4eb8-88ed-d382ca10361f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fafd85-e982-49e6-8938-2bd416f9b1d5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44332338-3c0a-45eb-8690-8b6f2dc6bd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f25ca2c-8a40-4740-9a19-e14f9b5c2983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53cac5ac-70ae-42f0-b23b-a0d442ad37f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d22c3f4-e4fd-42d1-b37e-5324e757921c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40201837-e20c-4d76-9112-f5d6ab03922e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28d827d-f53b-453c-b0a5-e7516b8096ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1af4c5-fc10-4f52-b4be-6115a8f23d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "716ca69a-0007-4043-bcfa-2e9618ef2f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b28662-b74d-483c-9215-d17bef29043f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce24395-2df4-46a6-9b4d-027aee1e8f50",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9484d94f-3120-49d8-b394-0f037642a3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac33fa0d-c4b9-4e64-ab51-ef602e321b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3212c7f8-ab65-4209-a4c8-2cc4d7f2e140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec33a385-4f93-4f11-9aab-68549892e721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66da88c-7a38-4a56-a7c0-68bd6d0af741",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a760454a-5efe-4fd9-bb5b-a91ee46300fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d5bc75-85a5-4bd1-87a7-918c9242a6d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8c2538-bd44-4509-8f5e-37ec5bfb4741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294737b3-c2a4-47e6-ad10-d973b66fbe9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d096f79b-7f22-4ae8-a29e-ed57903ee8c3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dca3fdb-3a21-4b60-9c74-4ea0d0c77142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca0824c-fd06-476e-8586-c2ced8dbe359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "186f125f-0d77-4df7-9b99-5ea310ebf748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbcf19e-bcd4-4ccf-b1f3-34ee2679490b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c15f62-a82b-410a-9445-13c342545c28",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d9da7e-ae48-4cb1-b731-8607667bfdc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f2630c4-7071-4b3f-809c-3b3e8e287937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4eef2c-9fee-4002-82e3-3989129e2d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "011ebf23-1c08-4e04-8f82-9de40a54725a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964d6757-f7ee-4e1f-80ae-500197962f5f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dca62fc-1d55-4ecb-adf2-4c9750b7eff4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a26f1921-7e5a-4911-8d4d-36b261d43ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e46bfcec-cc20-4c49-8189-c053eebe5129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f58dbb1-3ab1-4066-b98a-2d8714fdb490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e63d0e-384f-4e7e-86ae-4abe4b2d00b7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967b95cd-388b-49a0-be6e-026bb32255ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a03b9b-4fb1-445a-9104-0002e92aec25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "defa4d28-ba7e-43d9-83c9-a2483d3a4188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18443386-18fe-44a9-b427-c48ca59d9972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13a8f01-9575-474d-81d2-ea132cb386bc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fef776c-2e14-4299-9345-7dcb2b044a5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0191d5a8-5c27-4ea0-b006-c70db25fa249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6394b82-b547-47e0-aa77-3e6352c03c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8732d4c-cd69-4a4a-b8d1-028b2d762a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2fe159-d044-41eb-931c-0228310204e5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bead1ea2-14e5-4866-ad61-8feb2a234ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc059ce-c77c-44b4-ab0d-d33d6e5d78de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da29bdc-a7f0-42e3-803c-382e9fda6607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617eff4f-169b-4f49-8d77-59ba8ede1ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1278f989-3f86-4f54-b946-327f537f4656",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb19189-c7b3-4cbc-af0a-f0879e37b0ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0f80214-18e6-4829-9ba1-42e734447abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cbb715-849b-40e1-97e0-9bffc13fcdd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff710c6-0436-4ab8-b5b3-b67570e37324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebff99f5-bf2a-4954-8055-05e109f55350",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d19b9a-9826-4b87-8b79-cbaf2c514e89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d23564b1-e3c7-47fe-a9f4-6cc07d01af69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fe4fdd-1661-4937-a285-572f261b238d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fad9c64-61fb-45a8-99c2-075bfb179931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc2aba4-7c01-42cf-acc1-0f2c27069334",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c0e9a5-dbab-443b-bab1-6210f9f125d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea2d1d9-bb9d-42d2-b3e3-a4234de6ee31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc45417-46f2-4220-8fa1-afe29ff87f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8082fd52-3ee3-40fb-bb86-51b4cf9004a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b539bbc-2f58-482c-a767-27fc5c6121dd",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c87e56d-6e89-4cb2-8de5-671484845812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a27b0606-9d69-439c-a290-c31d0412d53a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f78e8e-be51-444c-8529-ea082f43081e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cab01201-4841-41d1-9378-421ed7a1b355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ec4333-9776-4c4d-b31b-4aca0bbc3b27",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a63ec32-dd62-403d-a09d-9250d086cea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e4fa3a4-5a9e-4b0d-9639-93dd013aeb24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05459a16-50bb-41c6-88dc-a1784d9abf6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22092faa-ce02-43fd-a55c-96c7f213e8c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835d61a4-7e04-4f0c-bf1d-20c46cfea746",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d42b7d-1027-4691-9dc9-b0f53c1df2f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb673443-5191-4e17-a91f-0295ddb0be39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cda9b56-0a38-42b3-b577-afa19f69ac84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2437ac8-7aed-4843-a1e0-da858ed1d91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109109a0-5829-4ac9-9958-b1f514e8b7f6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88745670-6994-4120-8b00-cbb5990832ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a2b02b-8f02-461a-9d5b-0b1047becc55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08da914-5838-4302-a507-d4766930ecd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019ec715-074f-4ea1-8800-b7b6d6012c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a158220-e7d1-4024-843d-110aba9ade70",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07164735-9ef4-46ff-8f28-8e9e254c7bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d637574-2d29-45b2-aeee-760b80c0c5a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589ca143-c82c-4aae-8f25-d6b76f2b7631",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a80faac-0a5f-43eb-a982-fa40da3500fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd42d7aa-b1bd-4fb5-afc6-23dfcae82d9f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4587cc8b-3c40-48b9-b867-47c45a6e9a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf29a29-3b13-4f52-be2a-32f58d3b583b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "009951c6-5660-47d9-bc1f-2a33ee33539e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd360099-f94d-46d3-a0e6-d52aa923465b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "589b0e63-76f1-4887-a0ef-7dea33276936",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6896a01b-9c88-42a6-8243-7ca1ed9bcedb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c82ff6c-c5e8-4004-85b4-59bf5c9bb209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9398ea-ae87-4a6d-b9cc-9a046821c585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4417f1-db38-45d4-bbc9-df1a72087a63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98bcbcb-1ab7-4cbe-acc0-65c91b242130",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc00603-e227-4be6-a919-3a2b4c529abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b82b863-0764-480d-90e4-474fd214d6c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70277319-f473-4744-b5ba-42d8a5f77186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce6f32e-582b-4a1f-a385-358055ac913d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d682465-9852-4adc-b511-2d3a89916902",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8b6105-0de2-406e-a9e4-3aecf246c5af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abbe4602-6919-4137-b6db-e16f72c227b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b073f906-8506-4c1e-a6b3-4c21b94b52bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbf50238-3d60-4a6a-83a3-009f56845b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3ba043-53e5-4cc5-9397-c5c22ea08119",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71affed9-5c3e-4b51-9d1e-59c8e919868e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d93be3d-bc77-4ee4-b574-1ee899f63ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba13ed3a-8f4d-44eb-9ea8-ce64f61a154f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f456e9bf-b9e5-4b49-a09b-5912a8f003d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7a0756-8503-4efd-8055-f8c29dbfa288",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23738d51-6621-41fb-b992-f89f2b5497e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6cf6846-f962-4426-9906-09109ac05636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "620a5cb4-9ed6-41f4-aaaf-f2779082dae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6107d417-a139-4031-8574-bc5bda411f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca777afe-a9a7-4c70-ba01-62f6b5c2eb0c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa46979b-145b-41b3-98e1-0a1451200862",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a4c1f8-3ac0-4f23-9f0b-ae5db5cb345b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b228965-26ab-4f6a-ab59-79c95f14bb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40104386-d132-4228-9704-35187a0e7aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65731a7a-79f5-48dc-bf03-2d02adf762b7",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c6d3ef-4d87-49e0-a393-11b087d18cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb714b5e-69f5-44c0-b72f-a28cbb35f23d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6329cde5-15f8-45a1-a5b4-a25aafac43a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47caefc2-3d3d-42e3-aa3a-0635e2907346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82d2f009-d957-4b43-8921-dbe11e97d554",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421272b7-025a-44e6-9e86-94f9305e7049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff516584-7d3a-469d-a0a1-17b842972f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c60393-9cd8-4478-bd87-a0c2741b2a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c5ee0be-563f-4260-9a12-7da57ce7115d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5f9a59-9f3f-4bf1-a7ff-071003b3ac87",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6c6455-d61b-445f-acc9-f912d31e260d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1544dd2b-b415-44fd-b46f-877284b2f51e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c660bc9f-3120-420c-b3a9-e14f5fbba7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a933fe9-7ed5-4cc0-9c14-32dae338c07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6dcb65-d339-4736-b11b-525b375cb54b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a3075d-975a-4b52-9b11-22eb2ae7f310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dab1d1a-583d-4571-813b-77f75fba22b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ceae7d-bc45-43db-88de-418f81ee3f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8005d17-de30-453e-8e09-294856fb2a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7fd295-b97e-4976-90fd-db285ac1dc11",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1709e0d-1184-4359-8f4c-48c8e4f63ed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0671d0a-7ace-4e3c-8cf2-5821f3310c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ee440f-ea73-44cb-addd-4dd8e43714a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b365117-52fb-47e6-b4d5-ee89fcd6c686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c84992a-d23a-4a46-9085-92eea9a33450",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95a6116-86f4-47a3-8a91-f5d33ff24881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df8b6b0-067d-40be-a8ea-dfdb21eb114b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce409e3-2713-4c7a-ace7-0ad1e6efcd16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cff65d6-4581-420d-9eef-33abed4bbc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53fe067-4ea4-4c5d-836f-f9a2f0bfe98e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b71cf3-d8da-4428-a087-e27e92ddd257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b4a5a0-e348-4011-8c9a-b0d81be4fa02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8f44cc-b3cc-4213-a72d-02934b290b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1be3b7-3387-4158-b5d5-15a6ac5d5b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8215fd-6f7e-4586-8a7c-af00dd25f849",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba1d324-1935-4e0f-9959-81f98fefcf71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a99c43-87d5-41ae-8479-99fedb224b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b836bc-6221-4579-b88a-8c922743c693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0197d3-1852-4e4e-a007-261ac76a7d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0334ec52-8f4f-42de-aec1-f44550bc7548",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcda8938-1ddd-413d-81ef-6402452097a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24b04ac-5920-4e85-80b0-1a6d21946b27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7768a536-0f64-4001-929d-9027dd0c4ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e40dbc9e-b53b-4d26-9e67-8dcf34866964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68a9d86-7170-4fa7-833f-899fe6a27925",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e18daf2-166c-4d0d-ac6a-a59236d5d97d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85fe6111-2d38-484b-bb31-933e707bab12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bccf076-71db-49d5-a3f9-107afed4ac16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fdb6412-2326-4d67-85c3-50302e71c016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dadec9a-feee-43d3-8f90-622c4142d60c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a8ffeb-5d31-4431-9e1d-646c25853054",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561cd9fe-30b0-4ba1-9cf0-677ecf67c55f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98459b10-b015-48f8-b4e4-01e573807cc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d052e4-c9c8-43cf-a1b4-aa9c39d76a14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f56de36-3294-4e5e-afb9-ee1472d4ef7f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b094a52f-0b86-4f9c-bb97-a646268d5c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11cf3d2a-cea0-415d-abc6-720863c3216f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d79f5bb-158b-4571-a9c7-ac47f1672c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c463668d-7a8c-4d67-bece-1b3d7e12bd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab19256d-95d5-4561-8fa4-e5a4aee9b0be",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e09c2ff-3384-4f75-8cac-2232aa3237ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20d346d-d25b-424a-9254-a1e026bca212"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "570eb15c-8a5d-459a-b7a0-bfc9967d5c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa426dc-997f-4f87-a248-bc35b7c8c30d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d47fb7-e615-4703-97f4-1ab550714b55",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5050aa6-e463-44c5-b86c-639a000608a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0abb5f57-316a-4e40-bbe5-e45c0c9b896e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c609bf80-e4f4-4284-a06e-d86dcddfcd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fe3000a-e882-4882-9ba1-604ea7cff11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e38d75e-1290-4b6a-8efd-315b8db185d5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b84292-a476-4322-a624-b481a9dbcb85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb4b937-2eba-435d-b9d5-0ca39d03b126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd3de99-2d9f-44c4-88ff-350bc77168ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f38bf33-a260-4c3f-8126-5674be774661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92d0d2f-a391-457d-8e04-04f44456f157",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94d7a2a-170e-4f35-bd4b-bee989ea0927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e0d351-9ac0-4026-a1aa-ce06e26584cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0f01c7-a250-44d1-ad0b-862772b044c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eeddc77-fc5f-473e-a25b-01672e772996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8196f745-7cfa-4557-97f3-1a7d50e2b227",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcfab6e-cbe1-4391-b9fa-d6b053cec896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f681ec0-0de0-4b1d-8e91-5c2b86b97c89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7d4da7-d85e-47a5-a6cb-543a0da6039a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be1dcc4e-662f-4109-991c-cd0a1d89ac23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3e904d-698f-4d2a-849f-06ac71c1fd26",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cc56f0-14ba-4d22-ab76-80161af6c98d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63f2b8b-8dbc-449c-9015-f5c6694d9e52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2db597b-4271-4058-86cd-4d35be67bfae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22fcca0-0afb-4c7e-8b00-aaf0c9033e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b295f7-682a-476b-be08-aadc00ab764b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a842f88b-9936-4c2e-b323-79f30287ab8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf73e88-84c6-4fd8-a0a5-4f7bbc839b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f6b725-11dc-40b3-a10b-86aaa097eaa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b431f8f-f5ca-43e5-8ded-2d6ada99ddaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2ebc5d-d3be-49b4-b8ce-6aac1ad03fa2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1c1eb1-2443-4be3-b9a3-60822ae55a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df81aa91-27c1-41ce-bc58-76a8bd423825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a29326-010d-404f-9d8b-64f9b3896c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b166c272-0542-4181-9eba-c8435b06c23e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc74196-6483-4309-8e15-03e1202b3537",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf00eac-bad3-425f-b614-12c19a8b517f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "723f3393-0bd5-4aae-93a8-adfeb8a7fe54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd4001f-f4ed-4d84-91a9-5c53ea0c175e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07d7f43b-13dd-456d-b6a1-fecbb6992e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2243cf32-68c7-4cba-8a4d-8bc5ab3d0373",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bab7e8c-a82e-4053-8190-158661a827b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48f3dc65-bf0b-40f3-a57f-42f110f23ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db4fae3-92eb-4269-9478-4dc47a6e3177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a70e610-7ce4-4e1e-88f6-1e6d50550341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2949a1-3a2d-42f0-9d24-1f959fbd5950",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd8b01c-de8f-4af8-a900-9e98fedf153c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df9c5356-7ac3-4d9d-ac18-143cbd2d7c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa0cf31-8b50-4f55-938a-1c5792734944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9f2ff6-0073-43a2-be08-f57c5b3b2784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86ccde7-e55e-4dec-a926-12228f82b23e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687cc0a5-d68b-499c-ad70-18ffa448dfec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c73e64e-6cd6-4488-973e-fb50282792c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67695b69-1a98-423c-bbf4-4677597819c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf5f14a-6899-4af1-847c-afeab91585f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8739d6c8-b4d8-44ae-822f-ddeb58f67b73",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365d676f-9cdf-48c6-a974-0a91d5776746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04426d6e-9289-4699-9ccb-c05ed67fdc48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b1f169-3814-43a5-969e-9953574a4145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50b10ddb-b604-4374-a5c1-ca2484d82257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7918c6-a3c7-4ae1-a9db-d6e705c9512e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a16097e-76be-45a6-b7ae-e6aa48b945d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84649e6f-3201-4a32-af32-8afd40742a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9fae66-9351-4412-9019-6e0690a7f461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ded1b54-5177-4489-ad1a-bc7ee36ba76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f024c56-7dee-4f64-ac06-6ce1d8764d54",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eec1c89-847d-436c-a1d7-4f9642771334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c10dca5a-3436-490f-8701-5d58283bc03c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46f9ac9-26d3-4b80-85ea-a435e42ecd8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f04c14d-969e-4d28-9af4-9fec98e8aa1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e4824f-b993-418a-bc34-9284daec4643",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a083d64d-4260-41c4-8b9a-158cea154ca2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd4b85bd-b32d-45a0-8dd3-355c2e809b9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0578aaaf-afa2-4ec8-80d4-3a26506f1152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e35593-dcd1-494c-a121-52c2c34b2e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21cd1b15-b00a-4629-a19b-ed847d4c5cb1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9535f8ee-5b6f-4b38-9a27-9b80c7da57bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4b8c4f8-1d3d-4f79-8f07-d7a129fb00ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5874b07e-ddef-407c-9d65-266445b76932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1706a568-8c0e-40b7-8a3a-bf0a0ac07064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0301ff94-18a6-4ace-9bc7-0f5fcf3bcdb1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457df23a-9255-4395-ba69-055f6fcb829a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9c83374-316e-4bda-8947-59b57296a118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71a7b13-eb89-4fc6-a499-bf8aa7bbb81e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deed32ad-bedc-4a25-9247-49363a578fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b9372e-3321-4ae2-987a-afdea2fa366f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c99b3d-827e-4efb-8432-04473f2d4d45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f92cc8-a906-47b9-a610-b5f38cd16ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7900477-fd94-468c-97cf-8c021bf99947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b4c29c-d16d-44dc-8ad1-eb9659fb183a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d964bc1c-318a-4128-9e6e-2ac5a2028e3e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da754f61-3df1-4242-95a6-780f72581ff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e5f7c4d-e00b-4755-a09c-18b188e0a12a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5feb65-5e57-44ef-a2ea-2fed84f7ca67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8614a80c-ab75-49ca-b88a-f50824b16eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d7f6ae6-8efd-479a-9021-a9f99e4c6a69",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1beb6f42-c617-4faf-a619-3bdd20c3e455",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9c937f1-5195-43fa-8d73-4ceb719b1da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bda885-ed6f-4cea-858e-987da048011e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea87945-cb76-4c86-bcd6-981928b22f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce11cab-bd9c-4d0b-8759-668efcf6044f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d867c5c1-3662-4f1e-8516-e601cc05b9c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8f4e841-6d3b-4d6a-87df-f32b7b71d315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1710250b-7a6b-4ccb-8954-b1a993c90079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da18d88-ae6a-4e25-a7ed-df124eea377c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4c7930-54bc-4bdc-bfd3-088106ea61fd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0d7783-b9f3-44e5-b055-475fcc3ab3e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f84d377-3321-4ce1-8b8b-1bbec7876752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392529de-1038-4c7e-b1ad-db70194d118b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f2155b-4bc9-496e-8381-3c5074653599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd87f45c-aaa4-461c-922a-ebe548a232eb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207ee4c7-63b3-48ab-a874-bbc77d9f5e36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f28dfd5-0c25-4591-96af-5e90f6fcf9be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a577043c-6cc0-42b0-8666-c00dfebe1de1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ec692e-0ec0-4843-be34-529059f04b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851b20d4-0ad6-4ebc-975c-f13d340098e3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310e96f5-86f9-4f41-aa4b-d9559d357d80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04446181-a48d-431d-a8f6-753a98383b4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb971af9-c65f-419b-b447-259a82e3370b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1bb251a-3606-4ed9-9671-ace966bb8b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1067f9-b265-4861-8b65-72ffc2ab42b6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b86bf787-5e15-4bce-a9bc-5161aa3c7fcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3726b7b-e7bd-4286-9496-d340a349b284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7150d4ed-409c-43a8-8a24-1823afb0997e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f408b732-f6f2-4a1c-85f8-853e3d08bba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193a4a5d-7284-42f1-9237-8dc2081782be",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5951cb06-cf97-41aa-b124-d87946d68edc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c663362-7873-4fdc-932f-4f243fcf0a74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a921f63-1321-4e4d-9fd3-845717a36283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4df6025-cc67-42eb-8a02-4b585acc938f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e12980c-cfdd-4250-8c9c-68caf10e2b25",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8b84483-e14f-4b6d-bc6a-7217511abd95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46258bad-76d7-42da-ac6c-119252ce86c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c073eb1b-4313-471e-b920-a027dca64a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50cbd4fb-529d-4b4b-a8e0-9b64c874b3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb67e414-1b21-42ed-be6a-50573981a744",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad19303a-df5c-401a-bd10-663a5609c82b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5c3320f-ae40-4d93-a128-fdf6c1c3aec5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6469a3-0b98-4f78-b8c4-aec3bbe666a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea803d4b-62d3-4b8a-b168-6fe440bd1485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a7c860-b686-41b0-94b3-fc63ec2457e7",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21453ae1-687f-47a1-9293-2cf7efba941c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f58ec8ab-80ae-4beb-b2e2-6cf238281f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb38871-e728-485e-a56f-2a3eda35e7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b421ed-8926-4579-bb5f-a2868f75e563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f833e17f-2637-41a9-adb0-e2ae55d307d6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1b8eb8-2668-43b6-860c-d481bcd5f751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2bb8d84-308d-4153-bd36-f98d020e733a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29599c3c-c293-41f2-8db8-de04d10f4b9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ff70cd-13d9-47d5-8342-00db5fea620d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a15fe89-489b-4832-9d83-5c217318b96a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22069394-5aad-41f8-8505-304b371e7406",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70eb4bce-7a0f-4c66-b855-d3e68cff9d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8ff3bb-36f7-4dc5-aae2-6a327f0a6aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688d759f-a541-4cc4-9c42-d8536f1ad075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cf6db5-4250-46ef-a927-e885a2e7923d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c36553-2e79-4b86-a550-b23107d43fca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1a9ffd8-313f-4866-a450-c375573775fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba143daa-6b55-4d51-953b-731cffa6c7fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8cc8cb-4439-4480-ba5f-c302e5beb776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d68ca41-7001-427a-9cfa-31ea9037dd0c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7adb73a-ccf2-4046-ad73-a3c426d0835d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59881f10-ddec-417c-91eb-d21c19c779e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f799de52-4faa-42f7-9448-f36da9906f31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604953fb-042a-49d8-b575-b922e6687fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a17d8ec-fcd4-4235-ac4e-d526f0f99cf6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660d8881-6f5e-4a3a-b9b9-5b1b3f73cd0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70d55a59-0fba-411b-acea-25bc2e9d90d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "746f5f29-9437-4219-b018-f12f4e7164a5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8112e88e-e286-48a1-9f80-aa48eface77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "964bbc1b-4617-41bb-a4c8-1714383ff800",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c3711c-b091-4773-b4e0-eecc4a87aa27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa3c154a-dd76-4ff1-9814-cec36c86df0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9a8552-8825-445d-b63a-ff71ca12f563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18eca87c-8df7-4ab3-b83f-deece2a252a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fb96bd-5a25-4198-82d8-b62fbd097c6b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e8eb46-7ef9-4a23-91ec-9d0b74c5460d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83490570-c4ab-4b5e-a159-4ee0d5994300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e45c408-04f5-4eae-9358-6b72a02e3984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172ee2c8-355c-4783-a22d-f1e8fecac053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19600c71-18f6-466d-b4b7-a6cce4f24bbf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8db88b3-6270-47b0-86c8-5e080b55703d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70849e0f-f428-4c03-8a04-e53b198c1088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de28a89-39c0-4369-b4ba-f443235275f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80a179f-6399-4dfd-b836-dd92a641d1db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7295e90d-2c96-4291-acc4-8029955a2232",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5cb9b6d-2f90-457e-8df9-356960d35f0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b213a67-4d56-41ca-a44c-2284066832e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33391be8-efa6-444d-834f-46a807307d4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "182e3c7f-5a12-4bd9-94c2-7c452b50e10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae73f3e-4dda-49fa-8814-a3451467b25f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0a5fc5-ff3f-4f2d-b281-70352023a9d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13610f9d-ef92-41b7-9df4-2f89919926e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cb4481-5da6-4d1b-bbb6-f4f0e07f7e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff1fe6c-6d8d-44e2-ace5-ae31a70cb3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10f5d3b-05ea-4983-8ed1-a9a5a9ecfe1d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9907ac-10f2-4876-a3df-35867aab89b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52a70b43-b4ac-4d23-8c45-aa66deb331cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6166b89d-3785-46e7-96de-fb213f616164",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d191637-1f98-4003-a458-d3845158a989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a1c36f-23e5-400f-af9b-f16e4213a257",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6874d414-244d-4e92-8fa1-33145e7df8a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7691d38b-ca87-4d67-b238-20bc82a78ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db642e0a-74f4-4e9b-8f17-174cf20d5bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf0dbdd2-640e-4350-b42c-3cc8f60b59fb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12c7fdcd-2d9c-4cbc-a1e2-bb0477d277f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2f0ef23-3ec6-4362-b97e-f0d546ac5738"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f786e3e0-8819-4896-82ad-5c85f6a959e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16e42f57-84a1-40c3-800f-10f93878fb5e"
                    }
                  }
                ]
              },
              {
                "id": "27701d6f-4e69-485d-83ef-436443266fbb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d27ceb68-cacd-4e7a-9ed3-ebe8d82b7c67",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4bd51b-3ddc-4fb5-b4e7-b9c98607298d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "be3b6d20-01dd-48d8-bc22-80e9fba58840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e164cb-3908-467b-8d14-4c024c95ff18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22caedd0-7c28-46d4-b798-4abf0f719c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edd77cb-2c36-47c3-80f7-caca9bc3e7e3",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fc75b4-2510-455c-9f80-226eab37c033",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "fba63294-927e-4560-8206-f9441f7fc0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52473ac-7f88-4e00-8f01-41de44aee290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0fe63de-2fc5-448b-8290-9092c4233006"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "231f0d10-74fe-4a11-b078-d5e4753eb233",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff119591-592d-4a33-aafb-49f83e091767"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac5f9eb3-f006-4a33-9d58-d51e40e92a5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fdd4406-6ffa-44ce-9c14-30e143edeb43"
                    }
                  }
                ]
              },
              {
                "id": "9114e978-6287-43b4-84ea-ed6f37fe7567",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "79003264-2b2b-4255-950e-ca26e96b9827",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf03770-6a4e-4f3b-86f6-84a9d222db3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6521df98-5b1b-42ea-a5ec-af8782c3146e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a8174de-0655-42fc-a319-1dbc4d1f6f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e83cd8-bd2a-4305-a673-3a0147c641a2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8953b7f2-e981-4c48-bae5-335823803359",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72c1ee39-db17-43be-ac4e-e7462058b3ac",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d559335-03a0-4bbb-bf2e-c8e0675b9b0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4cf947a4-8c79-4f07-a411-b166d8e79f3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14a273cd-8183-4793-864f-06241e2dfda9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5992064-9028-4e5a-9495-67cdf3e97de7"
                    }
                  }
                ]
              },
              {
                "id": "e6ee58d4-c0ad-4b68-a512-25e42adeb174",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3553564e-b14d-4986-8ade-ea11702e9f62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9a9ffba9-404f-43d4-bd20-3c20961f38d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e3855aa-e4f0-4c5f-8465-63d0721b71a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e27c05a-72a7-4b09-991b-20e65688f2bb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d436758-be3e-467a-b7f5-422445230bcc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cbf45738-ffe9-4101-82d2-9af1c00e9a03"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5e27b89-3be0-47f7-9053-8644e8ef7f2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0b31f6c1-8cb5-4a4d-849d-a35d3be57f33"
            }
          }
        ]
      },
      {
        "id": "043885ee-54ba-42c1-a68b-a36609b01f4c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a6ac2e8c-70aa-47f5-8fb2-c32040e8d1ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a761d6eb-4c62-4480-9cff-105b8d2b07f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc83c89e-141c-43d8-8d0a-d2aff10660ff",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29b008d-25ae-4bda-a7c0-361de240eaef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2a2e4d64-8862-4011-8649-c49011f65974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76d32867-1885-48fb-ab70-7ade1259f366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1604ca26-d889-4378-a85f-975ec0b5f579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b201399-19ba-4035-8ce6-8f1815b11d2b",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba54e79-27d6-4d7c-8a6a-f5f68dee3874",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "78066c68-da4e-4031-812c-120f50e46086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4621803e-9935-4df7-a315-70ee72a57650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3819d048-9f9c-4ba7-aca9-6f73d6a454ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4e41e05-6e19-478c-bd8c-2603ed3b302c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b83db109-8298-4982-8592-6918429d32e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f0cb4bbd-590b-4af7-81cd-728e1b8c39a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4a80868-f7ce-4179-8948-b691e4d99997"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "042923bd-711e-4aa9-aff2-feecd1ec8336",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0762e001-bfc2-4f15-89ed-8319f9175bd0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad6ffb96-1c42-43bc-8d2b-8807096b9a76",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d28b6f2-2c83-4d7f-98ee-4342bcbdd15c"
            }
          }
        ]
      },
      {
        "id": "372324c3-ae77-41c1-a03d-d240d32e7700",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0d0e1dfa-4c30-48f1-8771-d656a474c72b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc252785-343a-45f5-bcdc-03db46d0e1f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "502ffba2-e3e4-4e36-bc1c-3bb2fe36143d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b77b79-c202-4a58-81e6-4f9cc1c01c04",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0e4b458a-b649-41f0-b873-b1075fa7bf79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f3c00d-d813-4def-a93d-80a75c1ee5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8afa42ec-2a3f-425b-b935-2134c0de6381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad3f827-c8dc-457e-9428-4386b6a6e5f5",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2621b6df-e3ce-4f70-8400-c0ffb4b5c649",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3443046e-d62b-4400-b400-26aa7e6cf833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cda47a-1218-4aa7-98c6-9577a995ff9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4ad16b56-fe37-4615-b875-d37cda748ae0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "418f9f21-760a-400c-8620-376a361549f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00705b70-06c3-490e-a6b0-d8d08b898b66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e19286a4-ce4a-44c9-a810-9f4a87e368e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7347ef05-3ada-40f7-86e6-2ff62c393055"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57002308-c6bb-420d-91fe-05c96819282d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0c2f8ffb-346d-4eb7-927a-6ff085633f92"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53801858-8efc-4ea4-aa3e-36a4e58be810",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "acace25d-cc2b-4d1b-adba-81785f4acae9"
            }
          }
        ]
      },
      {
        "id": "35006e11-6410-4e0b-854f-74dab08f948e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "45f93df2-6d28-42d1-b22e-045fcce4b280",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc437ad2-aec0-4db2-a414-21abbb6b938a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1e5440ea-7bc5-45f4-9685-668e82d272b9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70438610-8d12-401b-b944-47e098a5fa50",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ccb6622b-1381-4a51-8406-df417c1cc982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b65d95-a2a1-4042-abf3-59e5929bc1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00a3bcd3-919c-4d78-8659-9e11ee3447c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97845196-de1a-450e-8e95-ee2dd827baee",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54145539-83f5-4a3a-9b77-f7ff65cd0121",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "835da1d0-a3e8-4462-9f1e-6b847e698873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0965d9c3-5706-4c84-b3b2-c73918d829c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2832ba58-9511-48da-8aaa-8d8cc9583fa8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ee9749c-7699-4212-8c42-44ee36789298",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4c7784b-764f-4023-90f0-df410c755963"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "655cff3c-df44-488c-89ed-616defebeb9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29090b2a-3088-401d-9774-bc4c18e54c89"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49a274aa-69c1-4aab-8be4-0e977aabfcc3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "60a1d8a1-57da-45c4-84ce-9dd72af5cc3e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08347d46-cab9-4e10-a5fd-4cf9a731efc7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "447cb7ad-2577-4b51-ae27-3fd9ac34a8b7"
            }
          }
        ]
      },
      {
        "id": "a84b691f-0ed2-423f-96f9-1c383ffc091f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ec16a91-fd6d-4278-ae57-ecdb1715ca6f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4116c13-a4ee-49f3-b9ac-c2d59fee80c3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "753e168e-0df8-4f22-9c8e-e281ee394495",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "985989f2-491c-40df-b3c1-f03c1965152a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3fc9b9fd-9f84-4a20-bd45-76b59c323654",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 930.3053435114496,
      "responseMin": 6,
      "responseMax": 7106,
      "responseSd": 902.3979369082866,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1674002426505,
      "completed": 1674002681061
    },
    "executions": [
      {
        "id": "12d61268-e6b7-4afd-84fa-4e92fe05a8e4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "48b658e6-982d-40d3-bf09-6007822abc30",
          "httpRequestId": "3c3dda2a-f4ca-40e4-8390-f267eb43e762"
        },
        "item": {
          "id": "12d61268-e6b7-4afd-84fa-4e92fe05a8e4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f62ceb3f-9d9b-456b-9e6a-6aca2413ffde",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "ca05c3ac-cf03-458e-b1a6-66cf724972cd",
        "cursor": {
          "ref": "4226bc2d-059d-469e-8935-758e2d9341e9",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "81338a38-af93-415a-9d77-7c108b2f0b7d"
        },
        "item": {
          "id": "ca05c3ac-cf03-458e-b1a6-66cf724972cd",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b2a8bf2e-5fc5-4c44-91dc-d3fa81821ae8",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "3e2d1e57-2d0d-4882-9b1a-4cb7325c6f38",
        "cursor": {
          "ref": "c9e1a3e5-1104-47f7-ad4c-f9872c2a12d7",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bc3c1e50-baa9-472b-bdc5-3eafecc45cf7"
        },
        "item": {
          "id": "3e2d1e57-2d0d-4882-9b1a-4cb7325c6f38",
          "name": "did_json"
        },
        "response": {
          "id": "6a08df9a-7d3b-4c65-afdf-55393d26e5e4",
          "status": "OK",
          "code": 200,
          "responseTime": 576,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9001397-4892-4ba2-bc3a-70a8a49b5e22",
        "cursor": {
          "ref": "91f5a4b1-716d-4069-bf4a-f3b53b36a6c6",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "833eab98-8eb1-4d09-9d02-460536c1ff9d"
        },
        "item": {
          "id": "d9001397-4892-4ba2-bc3a-70a8a49b5e22",
          "name": "did:invalid"
        },
        "response": {
          "id": "7a55c48c-4107-49df-9087-16ae60365bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1873,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9001397-4892-4ba2-bc3a-70a8a49b5e22",
        "cursor": {
          "ref": "91f5a4b1-716d-4069-bf4a-f3b53b36a6c6",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "833eab98-8eb1-4d09-9d02-460536c1ff9d"
        },
        "item": {
          "id": "d9001397-4892-4ba2-bc3a-70a8a49b5e22",
          "name": "did:invalid"
        },
        "response": {
          "id": "7a55c48c-4107-49df-9087-16ae60365bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1873,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f521c59-f601-4e4f-908c-e157c9344bdb",
        "cursor": {
          "ref": "b324cbc8-c09e-4dbb-b163-a6ca5b60b438",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "18ec9bc7-924f-40bd-a998-b199bda202b5"
        },
        "item": {
          "id": "7f521c59-f601-4e4f-908c-e157c9344bdb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6906cb5b-266c-4a13-9a8b-7ea70d54e491",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1902,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351c6284-33a9-41bd-9113-9a12a777893e",
        "cursor": {
          "ref": "89982d36-49ef-42a2-b885-51d64d7092c2",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "85021ac2-aa4e-4c3d-8ecd-d23bbfe5cf1d"
        },
        "item": {
          "id": "351c6284-33a9-41bd-9113-9a12a777893e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8946629c-edc9-4e69-8989-1d0bb0044262",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1377,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf94f68-b950-4597-80ed-6d56a76b7fb4",
        "cursor": {
          "ref": "d8c14abf-bd19-4f4c-a126-cff0960b2727",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9e551e9d-2f6e-49db-b7a7-6a8ae5e41223"
        },
        "item": {
          "id": "edf94f68-b950-4597-80ed-6d56a76b7fb4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "6f3d9b71-61a3-45aa-a965-e58dcc66d878",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4d05c5-44ce-441a-aa88-10efbca9a4b4",
        "cursor": {
          "ref": "8d0e9dd7-9fe1-4468-bfe3-e3f7d1453911",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "98a93c12-8844-456b-92b4-a19a4e664bb1"
        },
        "item": {
          "id": "2c4d05c5-44ce-441a-aa88-10efbca9a4b4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "fdd9b572-c8b2-4cb0-96ee-63bf71874821",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1369,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c4d05c5-44ce-441a-aa88-10efbca9a4b4",
        "cursor": {
          "ref": "8d0e9dd7-9fe1-4468-bfe3-e3f7d1453911",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "98a93c12-8844-456b-92b4-a19a4e664bb1"
        },
        "item": {
          "id": "2c4d05c5-44ce-441a-aa88-10efbca9a4b4",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "fdd9b572-c8b2-4cb0-96ee-63bf71874821",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1369,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd53de7-e55e-4c2a-a8a8-549a7d147561",
        "cursor": {
          "ref": "fcdbf326-2da8-4df5-8cba-5fe905ce9438",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e40ff834-d9e9-466f-9a5c-f94e01438e7c"
        },
        "item": {
          "id": "abd53de7-e55e-4c2a-a8a8-549a7d147561",
          "name": "identifiers"
        },
        "response": {
          "id": "e35baff4-44ef-40b1-b4db-db0c4bfe529f",
          "status": "OK",
          "code": 200,
          "responseTime": 1597,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13818634-6bf6-4a78-8f79-c97a3250f522",
        "cursor": {
          "ref": "c756497a-733d-4277-b0f0-f4457ed9ea1d",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4a9f39d9-4827-4ae2-b1d7-cb41c09856a1"
        },
        "item": {
          "id": "13818634-6bf6-4a78-8f79-c97a3250f522",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "179deefb-fce3-48d3-9926-5f48643fc612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1436,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13818634-6bf6-4a78-8f79-c97a3250f522",
        "cursor": {
          "ref": "c756497a-733d-4277-b0f0-f4457ed9ea1d",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4a9f39d9-4827-4ae2-b1d7-cb41c09856a1"
        },
        "item": {
          "id": "13818634-6bf6-4a78-8f79-c97a3250f522",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "179deefb-fce3-48d3-9926-5f48643fc612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1436,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c92cee6-9ccc-4e5c-b6af-ce2bc6c2644e",
        "cursor": {
          "ref": "78d37baa-26b0-47ab-b530-cab519b10332",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "92a298af-deee-4bb0-9f3c-f157fdc21ace"
        },
        "item": {
          "id": "9c92cee6-9ccc-4e5c-b6af-ce2bc6c2644e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "23a15714-75db-41ee-9b0a-38438cc53f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1400,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62215178-e4d1-4de1-913d-612384c99bdb",
        "cursor": {
          "ref": "e248b491-c882-46a1-ab84-28c1d5a90af1",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "02f17c72-8ca6-455f-bf5f-a39adeee56c7"
        },
        "item": {
          "id": "62215178-e4d1-4de1-913d-612384c99bdb",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "304588a8-3da1-432c-b623-954eea3a0295",
          "status": "Created",
          "code": 201,
          "responseTime": 4190,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "1a27db59-247e-49bb-903a-0cdd16d973dc",
        "cursor": {
          "ref": "411f920d-df56-423f-b9f1-f415356d4fea",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f7d510df-83e3-4ad1-a220-0652bcde5590"
        },
        "item": {
          "id": "1a27db59-247e-49bb-903a-0cdd16d973dc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1354305f-7f88-4842-abab-701af5494f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1199,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1f99f3-e920-4ac4-8a36-fd1164f250b3",
        "cursor": {
          "ref": "3b9e97d1-5504-4546-8d4c-1c878f1cf4d1",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2c74ff51-eaf7-4372-831e-16d0f07ca7fe"
        },
        "item": {
          "id": "da1f99f3-e920-4ac4-8a36-fd1164f250b3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6b4647c3-4bbd-48c5-ab20-450f0ba9f233",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1111,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7f56bb-4c8f-41a9-911a-978b14f47b4d",
        "cursor": {
          "ref": "7a44074d-17fe-4d09-91d6-de36f915572b",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "991e180a-80dc-4b4c-86d5-8a16c634dea5"
        },
        "item": {
          "id": "7e7f56bb-4c8f-41a9-911a-978b14f47b4d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9a0fde79-3790-4bfb-b4e9-5dd004f9af08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1150,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b688f33c-366a-4d8c-b43e-13ccf890f70d",
        "cursor": {
          "ref": "f1274af4-5e8f-4f3d-8fb6-04426bb65dee",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "17365da8-5a7b-42a6-b79e-9aed4231f5b4"
        },
        "item": {
          "id": "b688f33c-366a-4d8c-b43e-13ccf890f70d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ee98f4db-c475-4c93-80b7-c47851ec8029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1768,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7466ee96-d34b-4e2b-b229-64cb5964f2a3",
        "cursor": {
          "ref": "b229d87d-b970-4b59-859d-3ad0b7723c21",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c7eebdca-55df-4e87-b942-7dca46832855"
        },
        "item": {
          "id": "7466ee96-d34b-4e2b-b229-64cb5964f2a3",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "73fbf90c-a2ac-4040-b7dc-090f77e1aca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1162,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e42d26-8075-4ec7-873f-7d9ca16250c1",
        "cursor": {
          "ref": "5438d130-bd8e-4228-b3f8-281fafe6ab12",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7a2d4a75-caeb-47c8-ad81-6f6f681763c5"
        },
        "item": {
          "id": "d6e42d26-8075-4ec7-873f-7d9ca16250c1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "315988c9-d7bb-4d50-8b43-0e9b35c3cc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1224,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bf62a2-a1cc-4a75-88e4-0e5bb36b492a",
        "cursor": {
          "ref": "14dceae5-71a2-427e-b138-0d9566590491",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "db40b75a-7721-43a1-9641-49b1ec37edfb"
        },
        "item": {
          "id": "c0bf62a2-a1cc-4a75-88e4-0e5bb36b492a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a2ea8e0a-a066-43b6-b3a8-039dfe1380fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1225,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8cc891-9380-4db5-a8cf-d567d0efb5c5",
        "cursor": {
          "ref": "33fdc660-9c6b-4177-a61a-890c95149ce2",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7df3dd70-6aae-4209-8806-ae6971ce24c1"
        },
        "item": {
          "id": "ef8cc891-9380-4db5-a8cf-d567d0efb5c5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dc418061-5677-4c97-b660-fb4faea50334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1784,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4887a69f-96f1-49a9-84d0-6ef4887e197c",
        "cursor": {
          "ref": "b92aed97-723b-4022-ae32-93a21ad7bfc0",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2d2435ed-4b9c-451f-a763-fd56040cde27"
        },
        "item": {
          "id": "4887a69f-96f1-49a9-84d0-6ef4887e197c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cb9fabf2-bd0f-4b78-868b-5915427cf5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1696,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e75c924-1a3d-49b2-83dd-cac7c4eaf399",
        "cursor": {
          "ref": "af7513ad-8c66-4bca-9fc9-248cdb9d16c3",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2592b10d-dc2c-46d2-a0f1-2e366c9699bf"
        },
        "item": {
          "id": "7e75c924-1a3d-49b2-83dd-cac7c4eaf399",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "aa15e2d8-3ba3-4ee3-b7a0-4380789677c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1229,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a90a02-879f-405f-a666-df2f6fbb5f49",
        "cursor": {
          "ref": "223be1ab-be8d-4365-95f2-11b785844dcf",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "9e794d54-63a2-4340-b606-0ebb27f0ca83"
        },
        "item": {
          "id": "41a90a02-879f-405f-a666-df2f6fbb5f49",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "00f22da2-e150-4079-8c8c-476c48645fb3",
          "status": "Created",
          "code": 201,
          "responseTime": 5195,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "c0a62f59-c510-48d5-b236-b3cc8557c07d",
        "cursor": {
          "ref": "10caf99e-1116-4a87-a124-718928f8208f",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "97028c74-eba5-400a-9c88-b04c47185ccf"
        },
        "item": {
          "id": "c0a62f59-c510-48d5-b236-b3cc8557c07d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "27527749-739f-4c58-a026-f1e9c5148821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1756,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27aa619-4bc1-4a5d-b7e2-64a86abc3f5d",
        "cursor": {
          "ref": "97d702d2-09bc-4e92-bb19-9f74f63fdf2d",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a5704294-fcb9-493c-b65b-c90546eb6f70"
        },
        "item": {
          "id": "c27aa619-4bc1-4a5d-b7e2-64a86abc3f5d",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2ac2fe95-6ecb-4618-a3ac-29dd0dd4ee03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1340,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca9bc9a-1819-4d54-9008-1ec997d3f1e6",
        "cursor": {
          "ref": "4d075b2a-4746-40f8-89a8-cb6e12466ce1",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "932a9d2d-c2f5-41fc-a555-ecd4b5400ad7"
        },
        "item": {
          "id": "4ca9bc9a-1819-4d54-9008-1ec997d3f1e6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ca6050a3-20bc-46cf-83fe-55e362bd1c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1558,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1201c375-9b8c-4de3-a83f-e5c26c626645",
        "cursor": {
          "ref": "86f7d429-49f9-49cb-a342-51ea000c8da7",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "fec5e1af-beec-4cbf-8dfe-0935da93a689"
        },
        "item": {
          "id": "1201c375-9b8c-4de3-a83f-e5c26c626645",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0253039e-f134-44fc-b421-c3e831476251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1717,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4883282-a11b-4aa0-b051-c03241729522",
        "cursor": {
          "ref": "7117a8db-8545-43b0-8b2e-e89ac44ca5e8",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "37c65168-79e0-4d6b-9962-83094833d8bc"
        },
        "item": {
          "id": "b4883282-a11b-4aa0-b051-c03241729522",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "81d58927-7d02-43e1-b886-92c1948b67ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1106,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87317451-0476-40d1-bf71-ea43c919f487",
        "cursor": {
          "ref": "18f912bd-4aa5-4049-b682-c165d5c1ddd2",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "404784d5-e251-4adb-95f8-c303cad601bd"
        },
        "item": {
          "id": "87317451-0476-40d1-bf71-ea43c919f487",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fc7162b5-805b-44b4-a62a-51422c4c2dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1172,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b77480b-03eb-4f62-a690-f14ddfcde5a1",
        "cursor": {
          "ref": "6e0d0ef9-b8f0-4ce9-b1da-86f3dc3d3f09",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7661261a-2339-47ea-80f0-4beb0b018b87"
        },
        "item": {
          "id": "6b77480b-03eb-4f62-a690-f14ddfcde5a1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7d9c9c96-9021-4683-81dc-6e2e98630d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1104,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62075f48-6be0-404a-b8a9-dafeb77e11dc",
        "cursor": {
          "ref": "36924447-e4ec-4ce9-a011-483c59e14340",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a2316219-7a1e-425d-b5d9-03c3b33a8ba1"
        },
        "item": {
          "id": "62075f48-6be0-404a-b8a9-dafeb77e11dc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3a110095-14f3-45fd-ad40-30e20d64f825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1526,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184b4928-6140-44ec-8e64-dad6ebc2781c",
        "cursor": {
          "ref": "a3950dca-38f9-41df-b7ad-be85e649cef4",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5c63d06b-72a4-411e-97ea-4eceb7c02b5e"
        },
        "item": {
          "id": "184b4928-6140-44ec-8e64-dad6ebc2781c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d64a1d11-dea5-48d3-91b2-e256698eba43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1022,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e0a043-f726-4e6e-a907-bdf2f82ace6c",
        "cursor": {
          "ref": "d0ab65b5-bb53-4676-b146-60d112cde4d3",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "63e5557f-321a-4711-b345-7867400831c8"
        },
        "item": {
          "id": "04e0a043-f726-4e6e-a907-bdf2f82ace6c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "272a560f-d537-4f0b-b748-798822ca72a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 982,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2034cde3-9840-4079-9561-5da36317947f",
        "cursor": {
          "ref": "d35c1542-a4aa-4fb2-8b5d-e40c935621a8",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "438333ec-67c9-45f3-afe1-764b7bee2609"
        },
        "item": {
          "id": "2034cde3-9840-4079-9561-5da36317947f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9fee686d-124e-436d-9059-5cab2705a6c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 908,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf108cc-6c78-4377-bee8-e4ff99e0d0ef",
        "cursor": {
          "ref": "ac64ee29-a254-4860-a333-171a2607ace7",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "13465eef-1e40-4023-bcb7-61c4d5c5beeb"
        },
        "item": {
          "id": "8bf108cc-6c78-4377-bee8-e4ff99e0d0ef",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c4779062-be6d-44ca-9631-098436a4c6a7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 4286,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "0aebe9e0-7306-4440-8bc1-405e5f0937f2",
        "cursor": {
          "ref": "e0c1f771-a6e9-41d5-a9eb-43c998087eab",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "35fbbc91-586e-454f-b104-eb777182e244"
        },
        "item": {
          "id": "0aebe9e0-7306-4440-8bc1-405e5f0937f2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "39501292-1990-4a93-8e10-328f6a573f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1561,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66de4a2d-a64c-4a89-be48-36d1fd5d9186",
        "cursor": {
          "ref": "41eea9bc-8bdb-4b82-8bbf-d82fa5922950",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e5be80c6-dbaf-40d8-892b-45828c8554dd"
        },
        "item": {
          "id": "66de4a2d-a64c-4a89-be48-36d1fd5d9186",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5f014c9d-ec57-478b-8269-0bf9b23c299b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 937,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c47d5f-0295-45d3-96d8-584025a5b74b",
        "cursor": {
          "ref": "dd76ee15-a395-42f6-b347-85e70d862fe8",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "bbaa914a-ae29-41b3-acab-7d6e5a8c84b2"
        },
        "item": {
          "id": "43c47d5f-0295-45d3-96d8-584025a5b74b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "14a6e93a-fdce-42a5-bf3b-3df412a0e78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1559,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1414fc0-2c1b-445f-bd66-ee863106c171",
        "cursor": {
          "ref": "3ea71693-b93f-4d3a-bdbc-989700314d12",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9383cc7b-25e1-4289-8808-6a13596f7c16"
        },
        "item": {
          "id": "e1414fc0-2c1b-445f-bd66-ee863106c171",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4889906b-07ae-4b95-8f77-8f0a03f67ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1413,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1277b2b3-1c4e-4792-8c79-a7a59ba8bbc0",
        "cursor": {
          "ref": "2ae5ae8a-62d9-4341-ac05-97991f9d4849",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "40af9de7-5344-4b32-8296-ee8235b7bf27"
        },
        "item": {
          "id": "1277b2b3-1c4e-4792-8c79-a7a59ba8bbc0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "58e861c4-3307-4e8f-b6a8-970d89c4ba0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1159,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0f01c1-7b84-4db9-97a7-f20f1bcfcdb6",
        "cursor": {
          "ref": "2766ffd1-9397-4543-aaf5-a2c99a915cf0",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "afd08968-a059-4749-a3d3-80e3e4244b95"
        },
        "item": {
          "id": "5c0f01c1-7b84-4db9-97a7-f20f1bcfcdb6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "2edf7d81-5e1c-4206-9e73-9c30ba5fc70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 910,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2bb1a28-f264-444f-a4b4-19dbb892e68e",
        "cursor": {
          "ref": "47007e0a-6716-4f8a-8d45-139ed07f4c7c",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3731a3b2-6b7b-4918-9def-a3f2b774ba43"
        },
        "item": {
          "id": "c2bb1a28-f264-444f-a4b4-19dbb892e68e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0cb95f26-ac7b-4944-b212-3db2eee368ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1132,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cd153c-dedf-4821-a7b6-289f9c75d5f4",
        "cursor": {
          "ref": "46ed2bef-3192-4748-b25c-a10aeebdce67",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "cdd9fa7a-e10a-43f9-bc55-b1e9ef48c1b9"
        },
        "item": {
          "id": "66cd153c-dedf-4821-a7b6-289f9c75d5f4",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "80a5c0e6-e8aa-41cd-b700-aba5b16be709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 948,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1facd14-ac86-41e5-8570-bfe63043d9fe",
        "cursor": {
          "ref": "09ec1daf-21af-4873-97e2-afe8342c4ef4",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "88658993-858e-4cd9-8bce-8548edea361f"
        },
        "item": {
          "id": "b1facd14-ac86-41e5-8570-bfe63043d9fe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "25aad52d-c2c7-43d9-ba68-c71c59935644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1116,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b596cb-b2f5-4937-a121-490f82dd7d7a",
        "cursor": {
          "ref": "a4193209-0c40-4e35-a12a-71969b0dde03",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "34b4f264-1cc4-4423-a010-3e94a66c7141"
        },
        "item": {
          "id": "f1b596cb-b2f5-4937-a121-490f82dd7d7a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6cbc2b2a-e2e0-474e-a15e-430eb5295605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1563,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5be8a0a-3c55-4b03-8908-6cb4a5e410b0",
        "cursor": {
          "ref": "2677b65c-2f2e-4891-b0a9-b63898851018",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "33380c67-c9a6-4ef0-8fbb-5c5cc7c27816"
        },
        "item": {
          "id": "c5be8a0a-3c55-4b03-8908-6cb4a5e410b0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "4b871408-8930-4c3e-b275-e0339278c9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1114,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162aa291-fe19-42a3-8731-a7ea83aee0c3",
        "cursor": {
          "ref": "1fcd7445-2e93-4a9b-b801-083f2cf04765",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2409a407-f8d4-42dd-a830-123265924ff3"
        },
        "item": {
          "id": "162aa291-fe19-42a3-8731-a7ea83aee0c3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b4d2d185-285e-4864-8833-6129933ae5d0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1347,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a567ee65-dbc4-4913-ad30-be5e9e008d90",
        "cursor": {
          "ref": "9a94c8bb-34ce-4a50-83d3-8cd12e28acfc",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8962eb67-c46e-43d1-b872-2a7a2b2189fb"
        },
        "item": {
          "id": "a567ee65-dbc4-4913-ad30-be5e9e008d90",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7591c034-c1cc-4f40-a828-cc4274c3948e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1134,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "d68265d4-7601-4253-8302-9f585052bbec",
        "cursor": {
          "ref": "c28f19ce-f915-47e9-944f-7e4214e7e809",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2ae14b60-77b9-4d29-8cc1-105895b27187"
        },
        "item": {
          "id": "d68265d4-7601-4253-8302-9f585052bbec",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "918dc3e5-0999-47c6-951a-92e7e6e47dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1087,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b258c4bd-c55d-4b5f-80c8-bd6c59d29ae6",
        "cursor": {
          "ref": "2f58d978-a2fc-4ba4-86e5-51c559008f42",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b4c760e4-47ea-4aa5-93f9-af06854b18ec"
        },
        "item": {
          "id": "b258c4bd-c55d-4b5f-80c8-bd6c59d29ae6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3b9b7702-38e6-41fe-bb0d-cc806412c26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1558,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9707d89-7cdc-4bd9-be28-0da830cdf64a",
        "cursor": {
          "ref": "93485ac1-f0fa-40a9-acbe-67cabe33db62",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "77b56bb7-f963-4757-9ffe-cb5ed7a00c97"
        },
        "item": {
          "id": "c9707d89-7cdc-4bd9-be28-0da830cdf64a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d73d9cb1-da21-44e6-b356-b1272f278368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1004,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d511b9-49e6-4bad-9ce0-0018912c8640",
        "cursor": {
          "ref": "7403f370-cd18-42eb-8c35-b1c3cf3bcf12",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7e1a161f-a9ae-4d66-8eb8-c893db7f6bff"
        },
        "item": {
          "id": "a9d511b9-49e6-4bad-9ce0-0018912c8640",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2b57fccd-12db-4cb3-832a-22a5ff2f2904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1502,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0a0fa4-dc25-43e2-ba51-26e679cd4070",
        "cursor": {
          "ref": "81c4a9c9-0f68-48b9-b0ea-fc3f9836d0f5",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b671ad05-0ea1-4400-b0a8-3486fcfca218"
        },
        "item": {
          "id": "1f0a0fa4-dc25-43e2-ba51-26e679cd4070",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9e20b4d7-c0cc-4303-b933-af7b4f014bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1144,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1537e18a-5d70-430b-bdd7-9c43942866d2",
        "cursor": {
          "ref": "bfcf5175-7014-4c58-aa13-b133959291aa",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f3a1db1c-7dd9-42b7-ac55-2f6ad7e97223"
        },
        "item": {
          "id": "1537e18a-5d70-430b-bdd7-9c43942866d2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d4244213-15d3-4b3e-8716-672fec5f433c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1600,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad3a508-6612-4f94-aa93-9eed837a1a92",
        "cursor": {
          "ref": "383982ef-3eb9-4149-bc3a-ae07b3294068",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ca2fb6d1-7a25-4bd5-8b04-dec8d2434d06"
        },
        "item": {
          "id": "2ad3a508-6612-4f94-aa93-9eed837a1a92",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e465a84b-03c5-44ef-a587-f14ece8e8303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1304,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef638d91-c9e3-45e9-8639-1440e635c320",
        "cursor": {
          "ref": "b6d1908f-a3cf-4a3c-a93e-009a8cc775e9",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "579a2637-7677-488d-be2b-12802f1fc086"
        },
        "item": {
          "id": "ef638d91-c9e3-45e9-8639-1440e635c320",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "cc0b81cb-31e2-44e8-b810-1a9e1a53f53d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1328,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f33349-5d13-4277-b432-7642d5ab30a8",
        "cursor": {
          "ref": "fdbc2aa2-c4fd-442c-a99b-1886b6f7fbba",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "653608f5-92b0-4300-9c10-00c294bf275a"
        },
        "item": {
          "id": "b6f33349-5d13-4277-b432-7642d5ab30a8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7365d1bd-c19d-4f84-bb1c-d13760c7138e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1754,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffa229c4-f157-449b-b837-3ad1eb14a5d3",
        "cursor": {
          "ref": "4dfed5ad-6422-4309-ac59-ad15a5223254",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "13281d85-95a5-456c-8a9c-66d279b8ca91"
        },
        "item": {
          "id": "ffa229c4-f157-449b-b837-3ad1eb14a5d3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "92a0e91d-adc6-4c62-a43c-d750ea320603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1342,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa0a2be-9759-4577-ae34-5e0d87ad33d9",
        "cursor": {
          "ref": "142e8e1d-ab3f-4dbc-9fd6-b0925616fe0d",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0d62d422-f0a9-48f7-a2ad-4b85dcaa513e"
        },
        "item": {
          "id": "baa0a2be-9759-4577-ae34-5e0d87ad33d9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "9bcdce67-bfc9-4dc5-98cf-dcf6cb0be955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 963,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e90a414-1ac4-4d73-802c-30ac613ec020",
        "cursor": {
          "ref": "5373cc10-ab9e-48c5-914a-fa50e995961d",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b3d78480-76b5-4af3-9812-6a4a59d5c6eb"
        },
        "item": {
          "id": "8e90a414-1ac4-4d73-802c-30ac613ec020",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f0e231e4-c25f-4be2-830e-a26bde8921b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1345,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14854a6c-44ae-4b18-8f23-6f1517e8558a",
        "cursor": {
          "ref": "9481e8ac-9aa6-436c-ab69-56ba544b1468",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "c6f502d5-7ee9-449a-b590-2fd36422d46d"
        },
        "item": {
          "id": "14854a6c-44ae-4b18-8f23-6f1517e8558a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "068ae734-2e03-4d5b-917b-8258ffb2e363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 510,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0015b309-41d7-4fcc-ad4f-ab77a7a63203",
        "cursor": {
          "ref": "4c084f91-8e28-475c-90f0-c7f7b31cc3f7",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "466bbde7-74d4-4461-bd7f-1c6f06dd03ff"
        },
        "item": {
          "id": "0015b309-41d7-4fcc-ad4f-ab77a7a63203",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f74ec318-e968-4300-9467-eb9370819f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1074,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85723992-88f6-4e47-9e33-9d5901cb70e6",
        "cursor": {
          "ref": "bec6985a-80bf-448e-a483-db0c0b41d7a9",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3c765dec-efd7-4718-9656-ccf5e84af1a3"
        },
        "item": {
          "id": "85723992-88f6-4e47-9e33-9d5901cb70e6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c0803754-8433-42ca-b7e9-3a0d43cc304c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 947,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47d8169-bdef-452c-86e5-474d8617e24e",
        "cursor": {
          "ref": "ab1ab971-eb4a-42a6-9b69-a1977c6d26a1",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fe96c4e5-14be-4097-bad5-7d15b3d8698c"
        },
        "item": {
          "id": "e47d8169-bdef-452c-86e5-474d8617e24e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e317b3b2-5855-43a3-aed4-c97346fcca3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 916,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d724a2dc-37e4-4679-a2e5-632dbfa2e577",
        "cursor": {
          "ref": "57d6e55a-c813-482c-88c4-3d52d72c60f0",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "647daf18-3ec8-44a5-be9b-18bfa5a0a541"
        },
        "item": {
          "id": "d724a2dc-37e4-4679-a2e5-632dbfa2e577",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "78c3d0ec-3a49-49b7-9c6b-0824127ad6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1496,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08afa497-8b30-4401-ae62-939f3b17b553",
        "cursor": {
          "ref": "ec79dcf5-f075-46b5-9e34-8cafa27fca3d",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9a6d73d0-0b72-401f-8e47-ea46c2703404"
        },
        "item": {
          "id": "08afa497-8b30-4401-ae62-939f3b17b553",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bce5549e-b4ab-4d4c-9d52-d29c7a39df9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 935,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cca9b2-58ad-4c1d-97a9-d2e26ff6c836",
        "cursor": {
          "ref": "a76e1287-ad17-4035-ab2f-41d333e571d8",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cc81bcc8-cb96-4978-a47c-99d4e77589b3"
        },
        "item": {
          "id": "c6cca9b2-58ad-4c1d-97a9-d2e26ff6c836",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "37b00962-f9e6-4583-8d7f-5268e57556bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1089,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd2e1a3-09c9-422f-a309-1d4d46de5c8f",
        "cursor": {
          "ref": "29e5f35f-0063-4836-9c0b-dc60384d81c5",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e1ac3699-fbd9-49a6-8279-c78ae4520732"
        },
        "item": {
          "id": "efd2e1a3-09c9-422f-a309-1d4d46de5c8f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "84e52402-d188-459c-aac7-767f3896d358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1099,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1cb343-ab4a-438d-99b0-58be4cd110e2",
        "cursor": {
          "ref": "0d733abd-80bb-4a49-af65-6cfe6cb42700",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "02711e99-8d29-437b-b3cb-a4e2d93b9e83"
        },
        "item": {
          "id": "9b1cb343-ab4a-438d-99b0-58be4cd110e2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "274ded34-b82c-4934-95dc-a19392802b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1153,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dab8c73-e314-46cc-93b6-4887e1589e96",
        "cursor": {
          "ref": "1b30271f-fa04-4ace-8ab9-f13e0f423bec",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8d82e3ac-ba5a-4e6a-8c87-ef65c740c191"
        },
        "item": {
          "id": "8dab8c73-e314-46cc-93b6-4887e1589e96",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4ae70d31-a423-48c5-acd6-472389376d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1179,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed925b77-1d07-43d7-80b8-d85ddb2bdec5",
        "cursor": {
          "ref": "19ad2c4f-0523-4872-afd6-c9f1edab4b3d",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "52c02063-1d9b-4333-9742-1158eb9baf3d"
        },
        "item": {
          "id": "ed925b77-1d07-43d7-80b8-d85ddb2bdec5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "fd31f930-b531-4417-9daf-3db2de951c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1254,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d949a24b-b0b1-4d5c-9086-5e333a35af6d",
        "cursor": {
          "ref": "be9b61b4-ead0-4179-a4b4-774ead997602",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "d8c818d8-0ad3-4c6e-8b2f-dd70f8d531a0"
        },
        "item": {
          "id": "d949a24b-b0b1-4d5c-9086-5e333a35af6d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "50edc3fe-6fc4-48c4-8353-898c8c27620e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1161,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d15052-c6fc-4a57-9d0b-390f451cb8b0",
        "cursor": {
          "ref": "f6ad9cd0-514f-49d9-8d8a-2c72358409ea",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d1699cc3-ac65-4765-9b11-95a691285b7c"
        },
        "item": {
          "id": "97d15052-c6fc-4a57-9d0b-390f451cb8b0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "288cc747-1461-43e9-9f33-7e4416a70068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 918,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e43188-30b7-49ad-9fca-b73d72186abb",
        "cursor": {
          "ref": "2a46cc50-c038-4c5e-aba6-8c544c7bad20",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "db2a1f0a-bdd5-44b5-b255-1fb9cae1d3ca"
        },
        "item": {
          "id": "44e43188-30b7-49ad-9fca-b73d72186abb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ab2e410d-f453-4c94-b7b7-158923471e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 957,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf60936-b736-4633-85ee-2edfb8724743",
        "cursor": {
          "ref": "3223ecd5-c0f7-422f-b1a1-e72a3adc67c9",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d75c35d2-ed48-4465-b1b0-9baa67aba5a6"
        },
        "item": {
          "id": "0bf60936-b736-4633-85ee-2edfb8724743",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "97f617f2-2afb-4c75-96b5-cca73e56bc98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 938,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020cd007-7bb3-4fa9-980c-fe199f88396c",
        "cursor": {
          "ref": "15c947e3-e8b2-497e-94f6-ea44c326bd89",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "301c57d1-f7b0-470f-98a1-97355ec3a244"
        },
        "item": {
          "id": "020cd007-7bb3-4fa9-980c-fe199f88396c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "66000d3b-6086-45eb-968e-ebbd0769e73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1043,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22fad66-e770-47f0-b1f6-fd3554e516c9",
        "cursor": {
          "ref": "67c1dc5e-87dc-45ce-92b8-41013e771a8c",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9ada3468-b189-40e9-b8c4-d57a59effc87"
        },
        "item": {
          "id": "a22fad66-e770-47f0-b1f6-fd3554e516c9",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "63bb15b6-c799-44a9-9e2d-58873d5c7be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c11d58-ab56-4089-8e51-c3271836e4ec",
        "cursor": {
          "ref": "a1be7904-bbd4-4a4d-a565-c5b73dbe955b",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3bfbbca7-5205-43d1-9df3-69bc4a99fda7"
        },
        "item": {
          "id": "35c11d58-ab56-4089-8e51-c3271836e4ec",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b551958e-1128-4368-ab05-a0334682180b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1449,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f932d31a-79be-4dbe-a1f9-3a5e51eddc44",
        "cursor": {
          "ref": "8f5adabe-ff06-4041-a2e5-c91814dd17f5",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3d01f1c7-d915-4f2c-ae93-6e5741141db9"
        },
        "item": {
          "id": "f932d31a-79be-4dbe-a1f9-3a5e51eddc44",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "4154ff64-a1cc-42cd-b99c-4e134dbba5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1471,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c52a1153-906b-4ef6-91dd-f4cf2ca9c385",
        "cursor": {
          "ref": "e5f0f663-d76c-4de8-9976-54ffd765d1c8",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "62102864-8d2b-4217-8979-0de80a8b49f6"
        },
        "item": {
          "id": "c52a1153-906b-4ef6-91dd-f4cf2ca9c385",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "45c70037-4245-4cc9-89e9-4325a651094e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1026,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a1b58bb-b31d-4b22-99a8-5ea1e72009e9",
        "cursor": {
          "ref": "3498755b-20c9-4b56-8f0a-292bb1b23d72",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "34d8df7f-02cf-42fc-9d26-955dce2ac724"
        },
        "item": {
          "id": "5a1b58bb-b31d-4b22-99a8-5ea1e72009e9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4c0495fe-3b42-45d4-bec0-44d01802580d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 981,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75940a6c-a513-4546-a45d-b5b3534746bc",
        "cursor": {
          "ref": "ee2e4d28-5d2d-4fac-a4be-ed337576c394",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2ba90a59-de70-45f7-8349-8ef76c498c73"
        },
        "item": {
          "id": "75940a6c-a513-4546-a45d-b5b3534746bc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8dd94e41-6c9b-4075-9c9b-9646ac2595ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1023,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d8e377-f44c-4c3c-82ca-c1678061995a",
        "cursor": {
          "ref": "4d562fe9-c144-44f7-af64-53e5946cf00a",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "da43a5da-4b9d-4d08-8d9a-f62066d15eb0"
        },
        "item": {
          "id": "02d8e377-f44c-4c3c-82ca-c1678061995a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9bb36d14-942c-4e66-ad28-6ea45bc73d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 983,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2418bae6-0b58-4910-b7a8-73245acc3ea6",
        "cursor": {
          "ref": "55c341f8-8773-4fa9-941f-aa04d623c1f8",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "31371e48-23a1-439b-9582-a8246c0a97ef"
        },
        "item": {
          "id": "2418bae6-0b58-4910-b7a8-73245acc3ea6",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8e117c7d-b83a-466d-9d10-31ea3557e296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1037,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1ce28d-8343-4fde-97bc-2f180de0a584",
        "cursor": {
          "ref": "d50aac4d-1f34-4601-b78c-db8dbbba3103",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "05270cc1-6130-4616-a72b-86ff80fd9bfd"
        },
        "item": {
          "id": "8f1ce28d-8343-4fde-97bc-2f180de0a584",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9dc5ef8d-00bd-48bd-a1c3-eb0b406cb745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1435,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2986aab0-9be3-4ac8-ba54-fcf9ddeef12d",
        "cursor": {
          "ref": "207bcbf3-e436-44ac-9d7b-2480a39f3577",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6f2c127c-88fc-44ea-bfd2-29b43d59d828"
        },
        "item": {
          "id": "2986aab0-9be3-4ac8-ba54-fcf9ddeef12d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e09bd911-ba1f-4709-9ec6-3f14d7e7538c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 981,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dd84b5-75d3-4047-9c17-3df90184e29b",
        "cursor": {
          "ref": "453d0eaf-8b29-4e7f-9df2-c7432c14785e",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "dd102da5-c350-43cb-a8fb-9ab0399f0da2"
        },
        "item": {
          "id": "29dd84b5-75d3-4047-9c17-3df90184e29b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a8544e06-3488-4039-b056-2cbe860e2c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1024,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b6c04a-f309-4d0b-8739-b88b7c09d28a",
        "cursor": {
          "ref": "537b24b3-6288-4c82-82a5-21cf756c8845",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "12f35d4b-ce27-4f9e-ad09-67538347dafc"
        },
        "item": {
          "id": "99b6c04a-f309-4d0b-8739-b88b7c09d28a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "325a2d2a-3265-4895-83b3-d2761ddcaddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1510,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a94b46c-15a6-4e7a-8c35-77eb2f6d4051",
        "cursor": {
          "ref": "08e3a619-0a51-4b69-a8a7-6f7847af7b7c",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "47691f9b-5d5e-4d14-b712-7eb02d33f9d8"
        },
        "item": {
          "id": "6a94b46c-15a6-4e7a-8c35-77eb2f6d4051",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2ddf9966-b592-485c-b3d1-f683cb7b5668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1049,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc578611-9734-40c1-bea5-9a90563b1926",
        "cursor": {
          "ref": "173c625e-ca34-46a5-8a10-a62f6566f679",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b84f567d-7477-4518-b0b7-59c1c42d8e25"
        },
        "item": {
          "id": "cc578611-9734-40c1-bea5-9a90563b1926",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "84d78595-8471-497f-8d26-fa24a34dd840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 945,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682403cb-d05e-4c5e-9df3-3eb390283cf0",
        "cursor": {
          "ref": "dd34c372-4a0d-4c20-b352-ded7f64a75a5",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ed8c1bf6-c295-4b95-85b2-301d28b7bffa"
        },
        "item": {
          "id": "682403cb-d05e-4c5e-9df3-3eb390283cf0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "83ecac79-7272-40fe-9b59-24c7745a2e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1009,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64f383b-fad9-4186-8c7e-fed6ee5d48a0",
        "cursor": {
          "ref": "22b7aa71-432c-49e1-80bd-d868711e6fbd",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "787256e7-2cc2-4d12-9176-8cc565739ab9"
        },
        "item": {
          "id": "e64f383b-fad9-4186-8c7e-fed6ee5d48a0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "53f4a0be-6e86-448f-8616-339b4755ee46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 903,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9bd7a5-908b-4a7b-87c2-0a2cd15456f5",
        "cursor": {
          "ref": "6cd152af-6fa3-444c-8b35-dc07b1cd1e28",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cb55783d-5c50-46ce-b051-66c5c6f4ded9"
        },
        "item": {
          "id": "0b9bd7a5-908b-4a7b-87c2-0a2cd15456f5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a6d4eaa5-4a22-4c27-baf4-2eeb7991c949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 999,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327cd1ac-ee93-4279-b344-de595f828283",
        "cursor": {
          "ref": "de245e73-18f4-4cda-a6c9-7bdbfdd68fba",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1511434e-fdbd-47dc-8ad8-0e3d4cee4606"
        },
        "item": {
          "id": "327cd1ac-ee93-4279-b344-de595f828283",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4b5feda4-47c0-4739-9880-5e67d2d9f565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1055,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96545fe9-d955-4a92-9ff7-2c9c227bd589",
        "cursor": {
          "ref": "ced2b972-35f4-4fc2-a7de-1ec9de3e5892",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "18f8c0c4-fb91-4713-8b1f-d027da38f568"
        },
        "item": {
          "id": "96545fe9-d955-4a92-9ff7-2c9c227bd589",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9982d8be-1d62-47bf-bc53-76104fa81b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1171,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ac5c66-0727-4b91-8250-05da864328f3",
        "cursor": {
          "ref": "75eb284b-b5ac-4cb9-90b6-5ee567da1d19",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "148887ef-6adf-46a9-bff4-79147230b08c"
        },
        "item": {
          "id": "16ac5c66-0727-4b91-8250-05da864328f3",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c3278bec-0d86-4b94-a365-284c16e41424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1540,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4481a091-3381-4486-9c7a-4ffe20fd7e6e",
        "cursor": {
          "ref": "abbb878a-4132-4822-a486-e906141f2e6a",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "78d2197a-c212-4503-9c24-0a5e18f4dcef"
        },
        "item": {
          "id": "4481a091-3381-4486-9c7a-4ffe20fd7e6e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ca0a1404-2c0b-4cce-add1-75930d7599ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 863,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e7786f-125b-4cfa-9541-0095c8761b65",
        "cursor": {
          "ref": "06dc68b1-9d7b-4b97-b660-448f2450a8b2",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "42bfd743-8b6a-42f1-8a0d-182f34357749"
        },
        "item": {
          "id": "69e7786f-125b-4cfa-9541-0095c8761b65",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "986ea766-c9bb-47e9-9ad2-a2614c643e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1470,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d8ccaf-442f-4229-b946-0fc6c8e1e6e5",
        "cursor": {
          "ref": "175289fb-74ff-4303-b36e-76c30d8eab9a",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "768f60e5-6ac8-4088-bd6f-b8fdbab84c8b"
        },
        "item": {
          "id": "e1d8ccaf-442f-4229-b946-0fc6c8e1e6e5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "76305e76-3296-4674-b1a1-1451592853b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1388,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54621dfe-68e8-4f1f-b845-dd8bc5fcbe15",
        "cursor": {
          "ref": "5f499214-d4bf-49db-921c-3c60776913b4",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "990af351-5c53-4d9d-a28f-14a5e8384535"
        },
        "item": {
          "id": "54621dfe-68e8-4f1f-b845-dd8bc5fcbe15",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fc693a03-4089-4eed-9b91-67cc8afa02ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 915,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b40fc73-d468-424a-b32d-44ec90daa693",
        "cursor": {
          "ref": "04d90295-85e3-4bdb-8874-8fb50176c3e4",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b9d2cb82-de51-40a0-a538-05de949f488c"
        },
        "item": {
          "id": "5b40fc73-d468-424a-b32d-44ec90daa693",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4f7576ed-5bea-4d13-bc3b-9ab69323e326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1253,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a68015-3373-42df-8cb7-4317d0e90885",
        "cursor": {
          "ref": "c2c1f84e-12b2-4a41-9024-ab2137a6f522",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b0825687-bdd3-4afa-a7ef-11c88724dd74"
        },
        "item": {
          "id": "12a68015-3373-42df-8cb7-4317d0e90885",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e47e43a0-72f3-4e5f-ae38-88989c114fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 939,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ec8c61-7db4-4a94-9875-3bd5af7c85d1",
        "cursor": {
          "ref": "b0dd3cd3-d4d2-47a8-a6d8-cb6db77d5fb9",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b8b17994-eb37-41ff-9d13-d862e0c4be77"
        },
        "item": {
          "id": "50ec8c61-7db4-4a94-9875-3bd5af7c85d1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "817ec6ca-14f8-45ec-92ff-1c4a2f748ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a829bab3-1e01-45f5-ab4a-30ebe7d3127f",
        "cursor": {
          "ref": "e1cbcccf-b4b9-4374-bc87-95f162babe0d",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c0ac1a18-33ed-4b9c-bf50-eae61a945e20"
        },
        "item": {
          "id": "a829bab3-1e01-45f5-ab4a-30ebe7d3127f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f428162f-4bc1-4303-ac79-8f652d32a5f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d29866-e52f-43f5-9cd6-996c28851f4f",
        "cursor": {
          "ref": "2b6a7986-d235-490a-b818-a7d27aa61d57",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5e0d5060-6022-4837-b3f4-8bf9523bad06"
        },
        "item": {
          "id": "06d29866-e52f-43f5-9cd6-996c28851f4f",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "beabefd1-8fe3-48cf-a15c-2eaa44e3275f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 875,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250c184d-9e69-4cb2-8bbc-dd4f92358c64",
        "cursor": {
          "ref": "d0e8f79c-9abb-4c43-8e03-fe2e48b7d243",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bfbc669b-856a-497a-938d-4580c4bc0bef"
        },
        "item": {
          "id": "250c184d-9e69-4cb2-8bbc-dd4f92358c64",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c71570cb-8926-4e88-af5b-56e89473a713",
          "status": "Created",
          "code": 201,
          "responseTime": 4316,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "ed64915f-012b-40d0-bc7c-0c7d151f4e34",
        "cursor": {
          "ref": "b1a4b2df-aef7-421a-a79d-bd6070c8076a",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "404759fe-651b-4bfa-a462-6724bc44a8e6"
        },
        "item": {
          "id": "ed64915f-012b-40d0-bc7c-0c7d151f4e34",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5da44f3b-d352-47dd-a142-21b582e4c2d6",
          "status": "Created",
          "code": 201,
          "responseTime": 4210,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "78421d28-ad8f-467c-81fc-0b0a69beccd9",
        "cursor": {
          "ref": "7813abed-865f-440f-8c30-97c80be08bd7",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2c2dbfca-77ff-45d8-8c2c-f670504e8a7d"
        },
        "item": {
          "id": "78421d28-ad8f-467c-81fc-0b0a69beccd9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b5a872cf-4588-45fc-b99b-f04aa618c3d6",
          "status": "Created",
          "code": 201,
          "responseTime": 4409,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "d24b4372-4a06-4b55-bd8d-0a77ce591305",
        "cursor": {
          "ref": "42bbbecc-b336-4182-96cf-2d18e793e0f1",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "077f8a22-2f6f-4083-bb52-f6e5e6ef7128"
        },
        "item": {
          "id": "d24b4372-4a06-4b55-bd8d-0a77ce591305",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5f615e08-296c-4e9f-936a-667beb31b610",
          "status": "Created",
          "code": 201,
          "responseTime": 6399,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "9f2de5c8-a1f3-46f9-898c-b31efaa3b7d5",
        "cursor": {
          "ref": "14975d6d-7fba-47aa-bb6c-c687909acbf8",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "361390dc-ebe8-4d92-81db-03b56667ee78"
        },
        "item": {
          "id": "9f2de5c8-a1f3-46f9-898c-b31efaa3b7d5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ba1692c8-19d9-4dce-b43e-c7a0f428d185",
          "status": "Created",
          "code": 201,
          "responseTime": 7106,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "b8763271-3ea8-4265-81e3-7f30642259ae",
        "cursor": {
          "ref": "7225b31f-7948-4a5b-8f51-f8306ce2e552",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "defbd7d9-1641-4ecf-8ac4-47bea2ac3e01"
        },
        "item": {
          "id": "b8763271-3ea8-4265-81e3-7f30642259ae",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "afb9dabf-05c7-4a3c-a63f-95b86a46f437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1079,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8763271-3ea8-4265-81e3-7f30642259ae",
        "cursor": {
          "ref": "7225b31f-7948-4a5b-8f51-f8306ce2e552",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "defbd7d9-1641-4ecf-8ac4-47bea2ac3e01"
        },
        "item": {
          "id": "b8763271-3ea8-4265-81e3-7f30642259ae",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "afb9dabf-05c7-4a3c-a63f-95b86a46f437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1079,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f53053c-4049-41cc-84e3-9481e3bcef26",
        "cursor": {
          "ref": "3670b4b1-dafe-4ca0-8353-65803da8f61e",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5d139264-4853-4532-bed1-8550cdc5a0cf"
        },
        "item": {
          "id": "0f53053c-4049-41cc-84e3-9481e3bcef26",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "555782cc-a47f-490e-b3c9-9a3413ca51da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1009,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47b327b-df44-4d7d-acae-918c88f96bb2",
        "cursor": {
          "ref": "8c8351de-a5ff-4cf5-9f0b-e464c39c2703",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f6aa41b3-8d4f-482f-a6ae-60989b6af5d1"
        },
        "item": {
          "id": "b47b327b-df44-4d7d-acae-918c88f96bb2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "71d74f2f-6971-47a2-9479-cd1e54271dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1035,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2064ba4-a2b2-4176-a161-3d29010809b0",
        "cursor": {
          "ref": "e0a86763-2786-4806-86d4-b57c4c9f765d",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "01fda1f5-8c44-490b-9624-3a402abd7a34"
        },
        "item": {
          "id": "d2064ba4-a2b2-4176-a161-3d29010809b0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "898c6605-e172-42d7-a1d7-f53f8ae959dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 990,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076d6c1f-b769-4555-bf1a-c67719cc4dde",
        "cursor": {
          "ref": "370148dc-2713-4e31-90a0-6c7fcb32adb8",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d5772236-4602-4f36-901f-bec0bb8d067c"
        },
        "item": {
          "id": "076d6c1f-b769-4555-bf1a-c67719cc4dde",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0ac2d68a-dcd7-49a7-ba65-e63007b53906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1080,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d5ff52-03ab-4498-ac2b-4c2c337a7457",
        "cursor": {
          "ref": "e486000b-b641-45d6-ba8f-5cd4df59901a",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "25d953cb-0864-4dfa-b0a6-132e430e7e55"
        },
        "item": {
          "id": "28d5ff52-03ab-4498-ac2b-4c2c337a7457",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "723fad26-efd5-4f2b-99eb-2d629e4d0413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1494,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee13d37d-8de4-4a5e-add9-f359730b2938",
        "cursor": {
          "ref": "0d8fda29-88dd-4fdc-b402-91cee8dd20c5",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "03f97ada-1166-48ca-8560-4398290176f0"
        },
        "item": {
          "id": "ee13d37d-8de4-4a5e-add9-f359730b2938",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "17a9e09b-283a-4c7f-896b-17bd9e78b4ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1458,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9948e8b8-a438-4c34-9060-5d7854c44ede",
        "cursor": {
          "ref": "e6756be6-2a24-4b34-944a-b7a39a49644e",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7559631d-1937-40c9-8fe0-62f26441ce42"
        },
        "item": {
          "id": "9948e8b8-a438-4c34-9060-5d7854c44ede",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "790a251c-88d9-4c94-a321-fe0c09f73a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1594,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcf1e7d-5134-4dfb-a1fc-d051f747f776",
        "cursor": {
          "ref": "450df56d-ba2a-409c-84e9-8fb8e836a94e",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4b65c16c-86b9-4e71-bb9f-7e1b6bebf328"
        },
        "item": {
          "id": "cdcf1e7d-5134-4dfb-a1fc-d051f747f776",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6f56c664-be85-4891-bc6c-1dee57694097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1116,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ceb81e6-0559-4e31-bad8-d3575c1f19b5",
        "cursor": {
          "ref": "ee057ee2-ee1e-42c2-b77b-b8f6abb2b2e4",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0dac65f0-0df0-4cae-be9a-0c1ddf5d9384"
        },
        "item": {
          "id": "4ceb81e6-0559-4e31-bad8-d3575c1f19b5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "084a8c4b-5c74-4914-b4b1-7a3d0f05b0ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1511,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d074a548-11d3-4643-915a-5cbcf52bf306",
        "cursor": {
          "ref": "fd74c094-0952-4de1-ad46-266df281b75d",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e2cc9d6b-5283-4227-bcdb-7db58267be89"
        },
        "item": {
          "id": "d074a548-11d3-4643-915a-5cbcf52bf306",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "04c78503-fdc0-4f66-9563-ca3bb348d9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 927,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77256cea-6720-4eda-8c29-370a102c1d48",
        "cursor": {
          "ref": "0f3f20b0-03c7-478a-b4af-fafffb6d2b39",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "338c000c-4bda-46a6-9ef8-5ab260af6551"
        },
        "item": {
          "id": "77256cea-6720-4eda-8c29-370a102c1d48",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ad138a1a-e3d7-44cd-b66d-6ede85b16da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8987d32a-1b2e-4a77-84fc-232a546dbef7",
        "cursor": {
          "ref": "40ede600-6852-472d-8933-d52fe6b969e7",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c447e33f-f51f-424d-95e5-1e6261653532"
        },
        "item": {
          "id": "8987d32a-1b2e-4a77-84fc-232a546dbef7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "b2bf48e3-3f07-4f00-af0b-961cf760c5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1549,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "301110fe-aa95-4788-bcf1-3aa53c7c1938",
        "cursor": {
          "ref": "152faa1b-1933-4011-ae02-37f8d243c269",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bf1119f9-560c-4f01-aaa9-9e68800db255"
        },
        "item": {
          "id": "301110fe-aa95-4788-bcf1-3aa53c7c1938",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ec3207bf-68b7-4fef-987a-c8dcd66cf2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 890,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89433e59-53fb-42a4-a14e-62edbd6f12e5",
        "cursor": {
          "ref": "96a9eb94-abd5-43c8-9d7d-502d77c0f886",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "272a16b9-476d-42cf-a224-cefee08a0e6a"
        },
        "item": {
          "id": "89433e59-53fb-42a4-a14e-62edbd6f12e5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "21e60fcb-1bb3-4781-9a88-1de9e1f7efd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 911,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b27a90-140e-42ef-8aee-5df80a910975",
        "cursor": {
          "ref": "3942ee5b-de03-45c5-9fce-44d68189ad30",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9774ddf3-8066-433a-a8be-6bd7b34ec98b"
        },
        "item": {
          "id": "83b27a90-140e-42ef-8aee-5df80a910975",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ff49d175-f78d-4643-bb89-fccff5560c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 919,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59e54c7-84a7-4516-9c07-6c0ef4810b8e",
        "cursor": {
          "ref": "c9a9a62c-8ca4-4057-a410-f8da1ae9dec5",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d7921b24-18cc-4417-b430-5786ab15e9df"
        },
        "item": {
          "id": "b59e54c7-84a7-4516-9c07-6c0ef4810b8e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "199f8305-9465-4cfc-ae08-bf4b80e09bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1471,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a441f650-fd54-4c4f-aaad-b60a115011c9",
        "cursor": {
          "ref": "cf107b34-529a-4091-982c-988ba0227b41",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "420edbe7-dc14-4aef-8d26-bd4435303fe1"
        },
        "item": {
          "id": "a441f650-fd54-4c4f-aaad-b60a115011c9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7c713895-7492-43ca-8500-0968f9153670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 961,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce1510a-b978-48a9-9703-8d0d4aaf8ff7",
        "cursor": {
          "ref": "dc0053be-a04f-448e-8f93-ce105292b6ec",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e0c7ff31-767d-40e2-b506-4a72cd21c8de"
        },
        "item": {
          "id": "4ce1510a-b978-48a9-9703-8d0d4aaf8ff7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "254ac596-d7ec-4467-abdc-73de7e553be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1075,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d368bedd-07fc-4aec-b9f6-6d4d2b32d2b6",
        "cursor": {
          "ref": "fdc7da75-feb1-40dd-be2e-4185bfd99579",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "103cf255-9c6f-4115-bceb-97932edbd281"
        },
        "item": {
          "id": "d368bedd-07fc-4aec-b9f6-6d4d2b32d2b6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e892225c-7bb6-46ba-b6ac-fa4941d24b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 998,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3a176a-5252-444f-935f-9e7e7049b1c9",
        "cursor": {
          "ref": "e4c7d822-957f-4985-961b-f17f0137d6ed",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "11c88e37-93db-409b-b456-f3a108988f72"
        },
        "item": {
          "id": "ef3a176a-5252-444f-935f-9e7e7049b1c9",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b6ba40f0-ec17-49c3-9fe8-40e51809395b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 930,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af62bbc8-6c8e-42f1-bf6b-45a42a68ada4",
        "cursor": {
          "ref": "ff864c95-3915-41bf-9bb6-c32bbd31ddb1",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3d7c72a0-9a59-4646-9e49-c5cfb75b9ad5"
        },
        "item": {
          "id": "af62bbc8-6c8e-42f1-bf6b-45a42a68ada4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cebfbf8b-0754-49e7-bf86-364370046789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 900,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e6605f-1f65-4e84-90a8-5babb2899332",
        "cursor": {
          "ref": "81927a29-779d-4049-8297-2bb2fd8c10f7",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5cbac79b-9e87-497e-937e-07f1da761c36"
        },
        "item": {
          "id": "13e6605f-1f65-4e84-90a8-5babb2899332",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4af30f0f-8d08-4514-abc5-cd0b0411994c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1078,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9214942f-e481-478f-b1ba-0b5f189d1de8",
        "cursor": {
          "ref": "0e68be1f-87e1-4ff1-aa20-cc68df699400",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "965641a5-0741-4fe3-a595-fc348670264b"
        },
        "item": {
          "id": "9214942f-e481-478f-b1ba-0b5f189d1de8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f05ba7e2-10fd-4645-9aea-1003560ccddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 984,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45aa5cff-27e1-44cc-a9d5-8f9e49a0064c",
        "cursor": {
          "ref": "c723f688-466b-412f-9053-bad97f5f9de1",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "13b13ba1-0c67-41c8-b705-fd103a2a5307"
        },
        "item": {
          "id": "45aa5cff-27e1-44cc-a9d5-8f9e49a0064c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f51dc921-84df-4d63-9f30-73644bb06b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1478,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d44578-1e03-4c55-8e59-c86b85cd90d2",
        "cursor": {
          "ref": "dcbc5b43-7745-424c-becf-e61618b750a0",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bfe2137a-71e9-46e9-8c28-d9509350acab"
        },
        "item": {
          "id": "c8d44578-1e03-4c55-8e59-c86b85cd90d2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "37b42926-d2fd-4414-aae0-01fb86adb1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5c81a8-3077-4303-82fd-171cabde0464",
        "cursor": {
          "ref": "c800b9c1-2222-4709-846d-58aa773d6a0f",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c8e51dca-721a-4c4f-a89b-5c13e2ec4bc2"
        },
        "item": {
          "id": "ce5c81a8-3077-4303-82fd-171cabde0464",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "99627919-2957-4a5a-9a54-94fe5f60d24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1513,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf97571-8f07-401e-876e-6c09fbcfccdb",
        "cursor": {
          "ref": "08f92126-76fe-44a0-bc84-85407d0cbcfb",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a0c9da45-3c27-4136-a159-ba30c3bdf5f5"
        },
        "item": {
          "id": "cdf97571-8f07-401e-876e-6c09fbcfccdb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f48a2960-65f0-4e28-94c2-d3dfeb000345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1987,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67576434-9dd4-4158-9c53-1e7ad8ffc2c9",
        "cursor": {
          "ref": "d67c6684-d7cc-4657-8ca2-65dbbe8a84fc",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4842c08c-04ce-4876-a8e6-a6b7b19b0e67"
        },
        "item": {
          "id": "67576434-9dd4-4158-9c53-1e7ad8ffc2c9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a7754d75-06f6-4553-8daf-413763b26f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2590,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9537692-6d32-4b1a-8745-11e87d241f9e",
        "cursor": {
          "ref": "56ba9087-cd89-426a-9795-ae2051c02a1a",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6a36f01a-cbd7-490d-9996-323782d595c1"
        },
        "item": {
          "id": "f9537692-6d32-4b1a-8745-11e87d241f9e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5ee3ddd1-7853-4758-8a77-188852f863fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1079,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90895c7b-a9a9-4875-938d-281cf40aad50",
        "cursor": {
          "ref": "cd044fe1-afae-4c00-a33d-16486387eb16",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4dc05a3b-2d4b-4dae-98e8-ce64fcfbb253"
        },
        "item": {
          "id": "90895c7b-a9a9-4875-938d-281cf40aad50",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "888fb555-ffff-455f-ada4-fe725f8f6e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1073,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b1ec32-000b-4a1b-b821-07b2402578d7",
        "cursor": {
          "ref": "e07c3277-6c33-4f0b-ae7c-51b9dba757a7",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "113fb7f4-597c-46a0-bbb9-ff6b4cef2f64"
        },
        "item": {
          "id": "23b1ec32-000b-4a1b-b821-07b2402578d7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "cf3eeabc-97a8-43c8-8005-8688c89befca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1108,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acc8cde-8a8d-43ed-82cf-88e7cb7f0a99",
        "cursor": {
          "ref": "d3616617-1c6f-49fd-9b13-bb20429a2cc9",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3e19c73c-a173-4c93-bac9-d2831b6c242f"
        },
        "item": {
          "id": "8acc8cde-8a8d-43ed-82cf-88e7cb7f0a99",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "48c3b049-2261-41b2-b4ea-d3594c83d1f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8231b3-9ec4-45a8-884a-8d36aeebabc1",
        "cursor": {
          "ref": "cee6d7b5-c90f-43fc-a488-c6f3d93a316c",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ef0729c8-7ee7-4e3e-906b-ab90ffbf3079"
        },
        "item": {
          "id": "1e8231b3-9ec4-45a8-884a-8d36aeebabc1",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "04156a89-c8fe-42a8-bec8-ea0c75276136",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1006,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569213f9-4dd4-4dc2-b74d-665f45b34f9f",
        "cursor": {
          "ref": "4c7a23f9-440d-4255-b0d4-331e9d44c39f",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2f85ebbd-7753-420a-aa3c-635c93ed43be"
        },
        "item": {
          "id": "569213f9-4dd4-4dc2-b74d-665f45b34f9f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "95c2b502-216e-4475-bb77-ac188a69acf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569213f9-4dd4-4dc2-b74d-665f45b34f9f",
        "cursor": {
          "ref": "4c7a23f9-440d-4255-b0d4-331e9d44c39f",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2f85ebbd-7753-420a-aa3c-635c93ed43be"
        },
        "item": {
          "id": "569213f9-4dd4-4dc2-b74d-665f45b34f9f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "95c2b502-216e-4475-bb77-ac188a69acf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d4bc81-504d-4f89-9bdd-2ef1e2b793d9",
        "cursor": {
          "ref": "dd35a2c9-d29f-4fe5-be73-a6e1b8456434",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "83746111-e9ef-4ffb-ab1b-7ca1a504c506"
        },
        "item": {
          "id": "82d4bc81-504d-4f89-9bdd-2ef1e2b793d9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1dc33d55-7199-4418-bc0d-874d31409f78",
          "status": "OK",
          "code": 200,
          "responseTime": 328,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "e3811037-c743-4134-9a4f-94ca5a3c1da3",
        "cursor": {
          "ref": "997df69f-7605-473f-9760-73a8c1813cf2",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a65eb005-ddc4-49e5-be0d-3e99619a19ba"
        },
        "item": {
          "id": "e3811037-c743-4134-9a4f-94ca5a3c1da3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9532f7fe-b776-4a3c-a247-1b12326c8e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 310,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a568c5-575d-4163-a5eb-dbe1be83daa1",
        "cursor": {
          "ref": "bfa30bad-94f2-44e0-9263-67b4190253de",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9191dd16-b108-4f90-8057-fdaf1f85df42"
        },
        "item": {
          "id": "37a568c5-575d-4163-a5eb-dbe1be83daa1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "73c95dcd-1436-41f0-9361-ab3d17bffc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd444d3-da51-46f2-86c4-936ac0f59e4a",
        "cursor": {
          "ref": "fb67c5d4-276c-4b34-8abc-85fda8599cae",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "d5324e2d-51f9-4ae9-b3be-1b551f9d1246"
        },
        "item": {
          "id": "3bd444d3-da51-46f2-86c4-936ac0f59e4a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ab2bf464-8686-410f-8cc7-d04d94a2eb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d058eece-7513-44e1-b58a-c2a95c21860a",
        "cursor": {
          "ref": "40f5fe9b-677a-4819-acb8-779831a7f41f",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c60d1ad9-5204-467b-8b5b-7c5d2429d0bc"
        },
        "item": {
          "id": "d058eece-7513-44e1-b58a-c2a95c21860a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b043c5df-10b8-49fb-811c-580238a42768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ace2a21-ba87-4e97-a010-144c17b7342c",
        "cursor": {
          "ref": "afd6bfc1-6f6e-4dc5-a25f-b7f87ad0e8eb",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9dfa769c-59bc-41f9-a6d5-d8773b7298b0"
        },
        "item": {
          "id": "4ace2a21-ba87-4e97-a010-144c17b7342c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "75955f40-abb9-4f8f-a212-d28821350074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5908057b-8c0e-4288-94c0-2e09da6ad853",
        "cursor": {
          "ref": "a765f9bd-12a1-4925-bc87-4f3b72a11fb8",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7e14205d-1bdf-44f5-a405-3df187c38e88"
        },
        "item": {
          "id": "5908057b-8c0e-4288-94c0-2e09da6ad853",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b3cfe4ed-ae1f-4f63-806b-65e3c046b83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e068d03-9f85-416f-a4a6-08f3c5edb53a",
        "cursor": {
          "ref": "c45b09bd-3abe-4a88-bf8e-86465f35f43c",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8690eac6-8243-4ea3-97b0-de519ce232b5"
        },
        "item": {
          "id": "1e068d03-9f85-416f-a4a6-08f3c5edb53a",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0cc42b67-a414-4069-8d59-00408b5fe290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64729a20-34c5-4e48-a6ef-ab4aa4bea6df",
        "cursor": {
          "ref": "64763c53-d936-41a6-a780-95a82367ee0e",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7ecdb8b9-83eb-46e6-90a9-640f98c079f3"
        },
        "item": {
          "id": "64729a20-34c5-4e48-a6ef-ab4aa4bea6df",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f6280544-8b00-4448-96a0-7caa00223de2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80a670d-c769-4dd8-9d4f-7e272a3dc5fb",
        "cursor": {
          "ref": "1d3b878c-7625-44e7-8978-ef6bee1116c8",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5c437208-f4fa-43c5-9e7f-333ca09413ae"
        },
        "item": {
          "id": "c80a670d-c769-4dd8-9d4f-7e272a3dc5fb",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6b8a8e4f-fa8c-4fee-ba25-c93da22f2b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc038a23-198f-4241-8d45-aec8f1b0b3c6",
        "cursor": {
          "ref": "2abd9da7-9208-45c3-9995-44ce9ac480eb",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "d977b7a1-6393-4f3b-94ec-8e1713293d7c"
        },
        "item": {
          "id": "dc038a23-198f-4241-8d45-aec8f1b0b3c6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "67180fed-778d-49e1-a86d-54801b74da4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8864e9ee-1c3b-4395-8d4a-d89e9dcce416",
        "cursor": {
          "ref": "7ac30550-0470-484b-8b48-abaf0109f510",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "640bd036-d017-406c-9f17-24eba00a315d"
        },
        "item": {
          "id": "8864e9ee-1c3b-4395-8d4a-d89e9dcce416",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fd7ae0e7-44fe-4788-88fd-77e834aff9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aee222e-9b9e-42d7-949f-f27eeb56ca68",
        "cursor": {
          "ref": "64bce4c3-e037-44bf-a2ec-232ca5642223",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c8682928-b4d1-4ea6-911c-8682221b2ed6"
        },
        "item": {
          "id": "5aee222e-9b9e-42d7-949f-f27eeb56ca68",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "674317dd-42e3-4a23-8838-d5cfaafda5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de5c3f0-ccc5-4683-9b7b-b9daaccd2256",
        "cursor": {
          "ref": "cc36990b-6349-401e-8306-9c905bf9add6",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2fb67744-18e4-40c9-b529-8824503af239"
        },
        "item": {
          "id": "5de5c3f0-ccc5-4683-9b7b-b9daaccd2256",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2e2922b9-1f5b-461f-beef-55f1fcd631e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbc82c0-b918-4d8a-9041-2907601a0cfb",
        "cursor": {
          "ref": "b7fb0303-17a4-46f6-b571-97738392744a",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c115b8c2-e55e-4e5c-89a8-7e1838f11fe0"
        },
        "item": {
          "id": "bdbc82c0-b918-4d8a-9041-2907601a0cfb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ca6df3ed-fc3b-4d3f-bd9e-0bd1ddf00fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d69eb7-26a6-4849-9c5e-7aee116baf6c",
        "cursor": {
          "ref": "de6313aa-13ac-4ecc-b645-d6a1882cbf23",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bd8226de-5c1c-4e9f-bfa4-deb179f1c468"
        },
        "item": {
          "id": "97d69eb7-26a6-4849-9c5e-7aee116baf6c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "39eaad75-bb1b-4439-8432-56f01fecd47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab36c10-42ac-4cd2-a070-5e0be9c8f77a",
        "cursor": {
          "ref": "5487927f-73b1-46c8-b07b-67925329a4fc",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "72d1c670-7ce0-42a1-ad3a-e8ba6a68549e"
        },
        "item": {
          "id": "8ab36c10-42ac-4cd2-a070-5e0be9c8f77a",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "279eacfa-9fbb-44e6-abe3-5d92bf7dfbb5",
          "status": "OK",
          "code": 200,
          "responseTime": 1867,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "d3fdeaf6-09ea-4a8c-92f5-de2fa5faa843",
        "cursor": {
          "ref": "57117d1e-f5d5-4019-b7b6-45779bb7cfce",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "99ad1399-9901-404d-af27-58473c64907f"
        },
        "item": {
          "id": "d3fdeaf6-09ea-4a8c-92f5-de2fa5faa843",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a7144015-07a5-4c9d-8871-35b500373afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fafd85-e982-49e6-8938-2bd416f9b1d5",
        "cursor": {
          "ref": "3d96d46b-e696-437c-9580-bc8aa471a993",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9dcfa80f-9459-4c13-8b98-fcb4d3feacda"
        },
        "item": {
          "id": "57fafd85-e982-49e6-8938-2bd416f9b1d5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4bd1ae58-8b5b-4578-8ac5-1a9e2df51dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40201837-e20c-4d76-9112-f5d6ab03922e",
        "cursor": {
          "ref": "8fc31532-8d80-4020-93bf-8ed6a94c42b0",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0442adaf-1ae1-4a22-bb21-3ccaa9cb67e1"
        },
        "item": {
          "id": "40201837-e20c-4d76-9112-f5d6ab03922e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ddb048f7-0364-4635-a8ff-12c9a6847af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce24395-2df4-46a6-9b4d-027aee1e8f50",
        "cursor": {
          "ref": "3d1e802f-99bd-4a0d-956d-9ac466b11b97",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3b9b8e8d-f2e4-4390-a2c7-deedb159dbca"
        },
        "item": {
          "id": "6ce24395-2df4-46a6-9b4d-027aee1e8f50",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ba215ecd-4a59-461e-b22b-ea7fb28902bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66da88c-7a38-4a56-a7c0-68bd6d0af741",
        "cursor": {
          "ref": "d34130d9-2a96-41fa-aa6b-f110e64f3225",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d509a515-15d5-4582-bb1e-48f910105184"
        },
        "item": {
          "id": "c66da88c-7a38-4a56-a7c0-68bd6d0af741",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f5c02028-0905-4cb0-88e8-e5cd8070f3a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d096f79b-7f22-4ae8-a29e-ed57903ee8c3",
        "cursor": {
          "ref": "4f4e2a05-0848-43a0-a1e4-d3651daea7db",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "641d30e8-09d1-4487-b839-aaea0d259c1b"
        },
        "item": {
          "id": "d096f79b-7f22-4ae8-a29e-ed57903ee8c3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "11574666-fe00-4bf7-802a-98733924e6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c15f62-a82b-410a-9445-13c342545c28",
        "cursor": {
          "ref": "eb624601-f32c-464a-b7dd-867642b258cf",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fc7e1bf7-3308-4560-bc31-36c4d2671265"
        },
        "item": {
          "id": "a9c15f62-a82b-410a-9445-13c342545c28",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "058d6c24-7480-44f1-993e-6751eb9817cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964d6757-f7ee-4e1f-80ae-500197962f5f",
        "cursor": {
          "ref": "6a4ef62c-9d49-4a6c-819b-4213820d07e1",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d9a46c87-d31c-4ee6-a6a7-e65029443074"
        },
        "item": {
          "id": "964d6757-f7ee-4e1f-80ae-500197962f5f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "083c750c-8bf0-4985-959c-3057bb735410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e63d0e-384f-4e7e-86ae-4abe4b2d00b7",
        "cursor": {
          "ref": "b33116ff-e7f0-499b-8a22-4201ab73da7e",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ae7cebee-6c4e-4505-b65e-e0855da2fd07"
        },
        "item": {
          "id": "d6e63d0e-384f-4e7e-86ae-4abe4b2d00b7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4f979d50-0576-40b4-88c9-2c80b6ba54ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13a8f01-9575-474d-81d2-ea132cb386bc",
        "cursor": {
          "ref": "538892a2-8316-41bb-b037-e82620c9f945",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "913e125f-0515-4088-8c09-5b94fb13cff0"
        },
        "item": {
          "id": "a13a8f01-9575-474d-81d2-ea132cb386bc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bc485f00-f2d1-4aca-853d-76059c9b7ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2fe159-d044-41eb-931c-0228310204e5",
        "cursor": {
          "ref": "82eaede2-dee8-40c5-9b21-ff8a2ec47fd8",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "eb3b09db-2f44-4d30-b4ae-85232f1d93ae"
        },
        "item": {
          "id": "0f2fe159-d044-41eb-931c-0228310204e5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "05afed82-ebdf-4059-b869-74d5f9006938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1278f989-3f86-4f54-b946-327f537f4656",
        "cursor": {
          "ref": "e1b959a7-ee12-4892-838e-24446e5f1669",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f6353aac-fc0e-458e-af3e-78ba2ae1b74a"
        },
        "item": {
          "id": "1278f989-3f86-4f54-b946-327f537f4656",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "905328fa-fb0d-4cce-bae7-5e1f2e7bc87e",
          "status": "OK",
          "code": 200,
          "responseTime": 310,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "ebff99f5-bf2a-4954-8055-05e109f55350",
        "cursor": {
          "ref": "9b9a98c7-96fc-4867-b8ac-41e96b420b96",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9553a160-eaba-43ce-b9a7-123777a7ab13"
        },
        "item": {
          "id": "ebff99f5-bf2a-4954-8055-05e109f55350",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "02ba9a05-34b3-4724-b970-d87c08e71d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc2aba4-7c01-42cf-acc1-0f2c27069334",
        "cursor": {
          "ref": "514dbb8f-ebad-4ac9-835d-3b4ca4d995c0",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a61bc4dc-4c13-4ad3-8bb6-7baf24234744"
        },
        "item": {
          "id": "afc2aba4-7c01-42cf-acc1-0f2c27069334",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d7a26005-42c5-4254-88fd-114f84b73f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b539bbc-2f58-482c-a767-27fc5c6121dd",
        "cursor": {
          "ref": "174f1200-3e76-43cc-a330-3b620c0bfe2a",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "625e7c42-f26a-4e61-91ad-fdd69e3d5537"
        },
        "item": {
          "id": "7b539bbc-2f58-482c-a767-27fc5c6121dd",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1036aad2-6174-4c17-b14c-de826cffe258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ec4333-9776-4c4d-b31b-4aca0bbc3b27",
        "cursor": {
          "ref": "1e5e959d-be39-4b41-b339-0f9474cf3126",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "636efe0e-d734-496e-a6ed-44216ef77ccc"
        },
        "item": {
          "id": "81ec4333-9776-4c4d-b31b-4aca0bbc3b27",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e453111d-116d-4d2b-9b75-85768679b962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 431,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835d61a4-7e04-4f0c-bf1d-20c46cfea746",
        "cursor": {
          "ref": "85b2a7dc-7990-4904-8168-dca50d97bf14",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "770e4119-14da-48b1-b8c0-9d275ad58263"
        },
        "item": {
          "id": "835d61a4-7e04-4f0c-bf1d-20c46cfea746",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4a19b8b8-71ec-430e-8b28-e76826a4c2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109109a0-5829-4ac9-9958-b1f514e8b7f6",
        "cursor": {
          "ref": "7111ad3e-213d-4182-b8c6-1219c11901b8",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f0616f8f-30fb-4cc6-a531-9d0db9ce1b01"
        },
        "item": {
          "id": "109109a0-5829-4ac9-9958-b1f514e8b7f6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "f3f069f4-66ac-4b60-b20b-89ef4e9ad972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a158220-e7d1-4024-843d-110aba9ade70",
        "cursor": {
          "ref": "3d26159d-e88e-4b08-9c12-e3a588fba200",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8384877d-3d1d-4c45-a31a-2c4ca98ef741"
        },
        "item": {
          "id": "1a158220-e7d1-4024-843d-110aba9ade70",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "ae3b20be-fd30-48b0-ad1c-21833773bade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd42d7aa-b1bd-4fb5-afc6-23dfcae82d9f",
        "cursor": {
          "ref": "ea2d9b98-9121-4645-9c91-b50e34fc12d0",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c606e13e-1e5e-4b08-9f74-a3a0f47ee0ee"
        },
        "item": {
          "id": "cd42d7aa-b1bd-4fb5-afc6-23dfcae82d9f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "bed54d72-935c-4465-b7ae-20a6cda43a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "589b0e63-76f1-4887-a0ef-7dea33276936",
        "cursor": {
          "ref": "e01f0be3-4b01-474d-8396-35a577846acf",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1ba47f6b-3ef6-4959-a1f5-da2a2aeca95d"
        },
        "item": {
          "id": "589b0e63-76f1-4887-a0ef-7dea33276936",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "96d9dfc8-d6d2-4195-82a9-f62a994bf058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98bcbcb-1ab7-4cbe-acc0-65c91b242130",
        "cursor": {
          "ref": "124dd35d-c6f1-465c-a988-4054d2f15d19",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ebc6be41-c9aa-48d6-a57c-55d61ca50c1d"
        },
        "item": {
          "id": "a98bcbcb-1ab7-4cbe-acc0-65c91b242130",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1e2a5007-8f23-49b4-b438-6990d8642047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 441,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d682465-9852-4adc-b511-2d3a89916902",
        "cursor": {
          "ref": "9218f870-c305-4f63-85b7-ebaf371f7bdc",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "03f6a02a-dc4f-471c-8bd6-99d80b404a1d"
        },
        "item": {
          "id": "0d682465-9852-4adc-b511-2d3a89916902",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "73f34431-e4a6-40b4-b826-991e44b184ac",
          "status": "OK",
          "code": 200,
          "responseTime": 628,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "1a3ba043-53e5-4cc5-9397-c5c22ea08119",
        "cursor": {
          "ref": "671494ff-e2ac-400a-a596-5328de4d6a8f",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d56f7893-2c80-43f1-a370-de1afb2a0dcc"
        },
        "item": {
          "id": "1a3ba043-53e5-4cc5-9397-c5c22ea08119",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "294d2a02-b608-4e1f-b5f8-6adfb42af98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7a0756-8503-4efd-8055-f8c29dbfa288",
        "cursor": {
          "ref": "31377c31-b82a-478f-8d5a-9b746dd38085",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1e37f73e-652c-44e5-af7a-7ce51f22de7e"
        },
        "item": {
          "id": "fa7a0756-8503-4efd-8055-f8c29dbfa288",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "cb78de60-1431-43bf-9992-9ed731646dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca777afe-a9a7-4c70-ba01-62f6b5c2eb0c",
        "cursor": {
          "ref": "bbaf2182-db87-43d0-a3f6-e1f035cdced9",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1a3e418a-9098-4e75-933c-5f89a7a4aae9"
        },
        "item": {
          "id": "ca777afe-a9a7-4c70-ba01-62f6b5c2eb0c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "489e74e0-39d3-400a-b17f-784052fda981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 670,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65731a7a-79f5-48dc-bf03-2d02adf762b7",
        "cursor": {
          "ref": "2f699c4a-63e5-40d5-bd41-dd0cc494d33d",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7c962cc4-444f-44a8-b279-b79395096858"
        },
        "item": {
          "id": "65731a7a-79f5-48dc-bf03-2d02adf762b7",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "06ca315d-6ef9-48e2-bfbe-be5ea1bb2f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82d2f009-d957-4b43-8921-dbe11e97d554",
        "cursor": {
          "ref": "52bd1575-cd6c-4320-b9ed-f250c886a352",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8c77ea58-8dea-4804-858d-daf35b13bbe5"
        },
        "item": {
          "id": "82d2f009-d957-4b43-8921-dbe11e97d554",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9eb163a2-a27b-4989-8dd7-847e697058b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5f9a59-9f3f-4bf1-a7ff-071003b3ac87",
        "cursor": {
          "ref": "fc729a36-640c-41fc-9f04-71cc0eb0e9fb",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5122d755-ad1b-40ae-87c4-f9155f97d4ac"
        },
        "item": {
          "id": "bc5f9a59-9f3f-4bf1-a7ff-071003b3ac87",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "90e0ea25-0060-401f-8f38-583bf24dca00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6dcb65-d339-4736-b11b-525b375cb54b",
        "cursor": {
          "ref": "0a38e429-7c14-48df-863f-05064876de50",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c30a867f-1dbc-4b76-a646-f11d70a22f26"
        },
        "item": {
          "id": "cf6dcb65-d339-4736-b11b-525b375cb54b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2ed51a89-a9bf-4a42-ad33-d434c50a7a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7fd295-b97e-4976-90fd-db285ac1dc11",
        "cursor": {
          "ref": "2d769ca8-06be-449b-9364-29bd90d0fb1f",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7836e4f7-9436-494c-8cea-632f2c1eb637"
        },
        "item": {
          "id": "4c7fd295-b97e-4976-90fd-db285ac1dc11",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "452d04a3-b702-4f4c-85cf-ca15d57e3719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c84992a-d23a-4a46-9085-92eea9a33450",
        "cursor": {
          "ref": "982967a1-6b9b-41ac-938e-6234037ba5a6",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9a60f262-63ab-4b54-b8b1-0d2e4053505c"
        },
        "item": {
          "id": "7c84992a-d23a-4a46-9085-92eea9a33450",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0802e2b5-c3bd-48b9-b319-50e5194f9bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53fe067-4ea4-4c5d-836f-f9a2f0bfe98e",
        "cursor": {
          "ref": "68999850-710d-43f2-a588-d4708181512d",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "af0e4d4b-8c2d-4537-b6ec-eea0d2eb67b7"
        },
        "item": {
          "id": "b53fe067-4ea4-4c5d-836f-f9a2f0bfe98e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0b2818fe-d7fe-42a0-a382-6c7332b1c69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8215fd-6f7e-4586-8a7c-af00dd25f849",
        "cursor": {
          "ref": "06ce4cd7-ab1f-4dff-a284-f79904a8129c",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f6cf6d50-85a8-4cec-a137-91d09e6e148f"
        },
        "item": {
          "id": "eb8215fd-6f7e-4586-8a7c-af00dd25f849",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c42124bb-5c5e-4bfb-8749-e77941c2b5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 302,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0334ec52-8f4f-42de-aec1-f44550bc7548",
        "cursor": {
          "ref": "490e60e6-33b4-4447-b76a-f3d220f7dd37",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6e336341-4222-498a-bbc7-9e32e1750246"
        },
        "item": {
          "id": "0334ec52-8f4f-42de-aec1-f44550bc7548",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "71c171ea-4034-480e-9699-618f7094ee9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68a9d86-7170-4fa7-833f-899fe6a27925",
        "cursor": {
          "ref": "0fefe5ef-fb48-4302-a73f-2be59b35388f",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "07b8b04b-2f86-4f32-9f7a-375fdfc45e86"
        },
        "item": {
          "id": "a68a9d86-7170-4fa7-833f-899fe6a27925",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e366cecf-6ecc-478b-ba22-ecbd088f0616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dadec9a-feee-43d3-8f90-622c4142d60c",
        "cursor": {
          "ref": "7fe5a03e-2680-4126-b3f8-17ba8807faeb",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "57692026-0b08-499a-a88a-7478f475c516"
        },
        "item": {
          "id": "4dadec9a-feee-43d3-8f90-622c4142d60c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0ddbb759-04a7-4236-a13b-08dafa122b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f56de36-3294-4e5e-afb9-ee1472d4ef7f",
        "cursor": {
          "ref": "58571335-933e-4da9-bd01-b2359097bc67",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "23c4d940-7fdf-483d-8365-5138dfa256ac"
        },
        "item": {
          "id": "9f56de36-3294-4e5e-afb9-ee1472d4ef7f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "02fd2d2d-ad84-4475-95ef-8e4bed22b202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab19256d-95d5-4561-8fa4-e5a4aee9b0be",
        "cursor": {
          "ref": "324dc4b1-9ec3-4aca-9fe7-f4840582a92a",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9bbbf166-ae43-4c9d-b90d-c4b349cd01c1"
        },
        "item": {
          "id": "ab19256d-95d5-4561-8fa4-e5a4aee9b0be",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "af97ca56-c3bb-47bb-8822-c9076304aa6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d47fb7-e615-4703-97f4-1ab550714b55",
        "cursor": {
          "ref": "da1f845e-d2ca-41f2-9dfa-062dd1f04f89",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "17f2bfbf-cf2d-4ac6-bdef-95ffb9bf7995"
        },
        "item": {
          "id": "21d47fb7-e615-4703-97f4-1ab550714b55",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a87e7f09-df82-4932-934e-d972cdcd836f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e38d75e-1290-4b6a-8efd-315b8db185d5",
        "cursor": {
          "ref": "86429a08-30b9-4fca-b4df-7fba9be28814",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c23d4555-4d00-43c8-bdc0-63d99490673c"
        },
        "item": {
          "id": "8e38d75e-1290-4b6a-8efd-315b8db185d5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6de74ae3-d070-4201-9509-87a5de7b91f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92d0d2f-a391-457d-8e04-04f44456f157",
        "cursor": {
          "ref": "41085330-6ab9-4e9d-ac55-2ffb9f4bd704",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "726cf7aa-1855-4c83-8e6b-a1bae515ada3"
        },
        "item": {
          "id": "f92d0d2f-a391-457d-8e04-04f44456f157",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b08ea7c3-d4eb-441b-8c2a-0540136dceba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8196f745-7cfa-4557-97f3-1a7d50e2b227",
        "cursor": {
          "ref": "eee78e5b-c8eb-4bd6-aded-cfad479a0cde",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a1626f29-36fb-4053-9df4-515563104ea9"
        },
        "item": {
          "id": "8196f745-7cfa-4557-97f3-1a7d50e2b227",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ba317d64-1ee7-4518-959c-6ab413291f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3e904d-698f-4d2a-849f-06ac71c1fd26",
        "cursor": {
          "ref": "2b231a87-0df9-4bef-a5fe-18fb07691bbb",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6da1c581-e76f-4add-ae93-a2e922a84621"
        },
        "item": {
          "id": "dc3e904d-698f-4d2a-849f-06ac71c1fd26",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b599de09-1d1c-476f-8a6c-bffdd8c92cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b295f7-682a-476b-be08-aadc00ab764b",
        "cursor": {
          "ref": "dfe9605d-25ad-4768-9c06-84bfaed649da",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "dffa51f3-5a8e-48a4-8a9f-906a52760316"
        },
        "item": {
          "id": "d0b295f7-682a-476b-be08-aadc00ab764b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e20a4243-4e99-4f2f-ae08-48bdcb656f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2ebc5d-d3be-49b4-b8ce-6aac1ad03fa2",
        "cursor": {
          "ref": "454742db-66d0-4d94-b746-de5f305136d8",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6b2c11ef-4224-4c05-aba5-abeb53305f23"
        },
        "item": {
          "id": "7d2ebc5d-d3be-49b4-b8ce-6aac1ad03fa2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2be42305-073d-4d42-be5d-58b52c4bd2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc74196-6483-4309-8e15-03e1202b3537",
        "cursor": {
          "ref": "c25e8f52-12bb-4c71-8f44-4880bcb747fb",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7eb356f5-5a17-4fa3-9abd-a920cbedc9db"
        },
        "item": {
          "id": "3cc74196-6483-4309-8e15-03e1202b3537",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "01f8bc75-21dc-4dea-932f-248ea65c56a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2243cf32-68c7-4cba-8a4d-8bc5ab3d0373",
        "cursor": {
          "ref": "7c3a48f1-25c9-470a-bbbf-b7cf0b8539e7",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "14f78da8-e3ed-4f4a-9d5e-e9bf40b53f0c"
        },
        "item": {
          "id": "2243cf32-68c7-4cba-8a4d-8bc5ab3d0373",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "311dbf86-1eb5-4351-bdb4-38ba73edea80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2949a1-3a2d-42f0-9d24-1f959fbd5950",
        "cursor": {
          "ref": "5db32351-6837-4f5e-a414-907262736c10",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "821dd44f-3209-43bc-ba88-9a07fb04f592"
        },
        "item": {
          "id": "7c2949a1-3a2d-42f0-9d24-1f959fbd5950",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "5e904843-a601-4329-be36-52241ad7baeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86ccde7-e55e-4dec-a926-12228f82b23e",
        "cursor": {
          "ref": "925bf8ec-ea21-4a8b-b559-5df8504dcda8",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e1762b0d-5d3b-4304-8613-0d0016fa4a4a"
        },
        "item": {
          "id": "d86ccde7-e55e-4dec-a926-12228f82b23e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e2f63221-14be-44ad-87af-db47f0160818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8739d6c8-b4d8-44ae-822f-ddeb58f67b73",
        "cursor": {
          "ref": "255558d9-af8d-4070-a4de-3cb6fc36a555",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "61c7524a-b98a-4a1f-840f-758cb65cd540"
        },
        "item": {
          "id": "8739d6c8-b4d8-44ae-822f-ddeb58f67b73",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "435fdc4a-314c-4aaf-9116-6676035b57a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7918c6-a3c7-4ae1-a9db-d6e705c9512e",
        "cursor": {
          "ref": "3335419d-69b4-477b-a2bf-d198bbf9ae24",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ea728ec4-ec03-4969-ba4c-c1846e4d116a"
        },
        "item": {
          "id": "7e7918c6-a3c7-4ae1-a9db-d6e705c9512e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "05d25b14-eef8-4d9a-97a8-22c9e9e3f69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f024c56-7dee-4f64-ac06-6ce1d8764d54",
        "cursor": {
          "ref": "f6c79b7e-cfb4-40fd-bea0-624d04ec25e3",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "18bfcf44-b500-4d82-8694-c01d430a7161"
        },
        "item": {
          "id": "3f024c56-7dee-4f64-ac06-6ce1d8764d54",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "00412b72-d7fb-4c98-abc8-c2707dfbf74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e4824f-b993-418a-bc34-9284daec4643",
        "cursor": {
          "ref": "a024b8c6-7dc7-4f82-991c-e965f79994c2",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "340392b7-184a-4c3d-8164-4da1445b7059"
        },
        "item": {
          "id": "a2e4824f-b993-418a-bc34-9284daec4643",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "beee6bfd-3340-4783-a109-6de50ec265d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21cd1b15-b00a-4629-a19b-ed847d4c5cb1",
        "cursor": {
          "ref": "0f8a2053-2517-4e12-9f0f-6954df109abb",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f0ad1c8d-3b1b-4763-b5fc-7b8f6dd4f130"
        },
        "item": {
          "id": "21cd1b15-b00a-4629-a19b-ed847d4c5cb1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8033a80e-0c31-416e-b244-9f87a6213389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0301ff94-18a6-4ace-9bc7-0f5fcf3bcdb1",
        "cursor": {
          "ref": "82a3b63d-2902-458b-8261-7f06a8528a68",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dcc74bcc-8670-482b-9f0f-411fe8c20eac"
        },
        "item": {
          "id": "0301ff94-18a6-4ace-9bc7-0f5fcf3bcdb1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "66ad5ba8-6642-4a1f-b62f-47db846be7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b9372e-3321-4ae2-987a-afdea2fa366f",
        "cursor": {
          "ref": "512b1cb9-f6f4-43f4-a993-0995c8bdecaa",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2588977e-9b67-421f-8040-2091d2383faf"
        },
        "item": {
          "id": "d7b9372e-3321-4ae2-987a-afdea2fa366f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e9905527-f732-430a-b0c7-0558ad22ece1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d964bc1c-318a-4128-9e6e-2ac5a2028e3e",
        "cursor": {
          "ref": "a823cf58-503f-42d3-bb93-65c0b78c99cd",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a1e99ca7-6abd-4642-8b44-01b01167839f"
        },
        "item": {
          "id": "d964bc1c-318a-4128-9e6e-2ac5a2028e3e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e34430c5-f1bc-4a53-8583-1740cec81664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7f6ae6-8efd-479a-9021-a9f99e4c6a69",
        "cursor": {
          "ref": "f5deb2db-d536-466b-9078-178d63eeb1d4",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7ee5f340-2ac5-438f-8bad-7de50793b4bd"
        },
        "item": {
          "id": "0d7f6ae6-8efd-479a-9021-a9f99e4c6a69",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e9e00c0c-0618-4c7f-a7f6-7c2bb7c70618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce11cab-bd9c-4d0b-8759-668efcf6044f",
        "cursor": {
          "ref": "91289afa-445b-4ea5-b9ec-7446061dd5a8",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a57019aa-9079-4e74-9da6-93ffda2c739c"
        },
        "item": {
          "id": "4ce11cab-bd9c-4d0b-8759-668efcf6044f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "59559719-49ca-4d98-a8c9-561bee474da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4c7930-54bc-4bdc-bfd3-088106ea61fd",
        "cursor": {
          "ref": "37c90bbd-8310-47ef-87de-4b299c2d516f",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "398cf261-30b5-46da-bb29-1ddac59001c1"
        },
        "item": {
          "id": "af4c7930-54bc-4bdc-bfd3-088106ea61fd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "46314d67-3b18-47c6-a773-00c7e849d8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd87f45c-aaa4-461c-922a-ebe548a232eb",
        "cursor": {
          "ref": "7ba040bf-747a-4325-ac35-041d3fab8883",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "add1f0cb-ec26-4a00-b2f5-5bc6a06db713"
        },
        "item": {
          "id": "dd87f45c-aaa4-461c-922a-ebe548a232eb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c7600b54-509b-42c7-a75f-c40700e3f00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851b20d4-0ad6-4ebc-975c-f13d340098e3",
        "cursor": {
          "ref": "1cbe9b7f-c325-4f38-a8da-88313b5059df",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ed5441c7-3307-45a3-b335-2fae284b0348"
        },
        "item": {
          "id": "851b20d4-0ad6-4ebc-975c-f13d340098e3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cc67b5b4-0c71-414b-a44d-ac58e4eab42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1067f9-b265-4861-8b65-72ffc2ab42b6",
        "cursor": {
          "ref": "f8f9ba89-e5eb-44b8-9d87-feea77f0b77d",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "162b8f87-60d3-406c-a9b1-5226e4bec173"
        },
        "item": {
          "id": "0f1067f9-b265-4861-8b65-72ffc2ab42b6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "472b827e-64b1-47c1-a06b-4741c9f3a6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193a4a5d-7284-42f1-9237-8dc2081782be",
        "cursor": {
          "ref": "6e42721a-9bf3-4f14-8573-8954968345ca",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0bc6a119-c444-466e-a056-36e6eb845125"
        },
        "item": {
          "id": "193a4a5d-7284-42f1-9237-8dc2081782be",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0e200de3-31b3-4328-a1e5-5c8d82724e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e12980c-cfdd-4250-8c9c-68caf10e2b25",
        "cursor": {
          "ref": "d1f1935c-b4b6-47a3-b59f-1842e144e8cc",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2e8091b5-6a98-425c-9973-aeeb7b1eb4c4"
        },
        "item": {
          "id": "0e12980c-cfdd-4250-8c9c-68caf10e2b25",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f272017a-3a07-4dac-ab07-b4a325003b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb67e414-1b21-42ed-be6a-50573981a744",
        "cursor": {
          "ref": "855f0d77-197d-45c7-b8cc-e8b6207272c1",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9fd982d9-15b7-4ef6-ab95-70211b5b5da6"
        },
        "item": {
          "id": "cb67e414-1b21-42ed-be6a-50573981a744",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e4628bb4-9b25-4467-9f5f-4ab726ef55da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a7c860-b686-41b0-94b3-fc63ec2457e7",
        "cursor": {
          "ref": "ec0a7d4e-76c9-4255-8dd3-5863d347d1a9",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f37568d8-70ca-4bca-8046-2eee7c493586"
        },
        "item": {
          "id": "f4a7c860-b686-41b0-94b3-fc63ec2457e7",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1092b876-db2f-4693-90c3-13528365cae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f833e17f-2637-41a9-adb0-e2ae55d307d6",
        "cursor": {
          "ref": "9cf432a9-5dd4-42da-b80e-0aede7b33fd7",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e0f00f5b-3362-4714-a520-b1992f09788c"
        },
        "item": {
          "id": "f833e17f-2637-41a9-adb0-e2ae55d307d6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "45925e36-405e-4766-a4cd-b2cd90dec9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a15fe89-489b-4832-9d83-5c217318b96a",
        "cursor": {
          "ref": "4f30ea5f-30f6-48b3-b418-f6d5ac85f072",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "16e192ef-2f8c-4a1d-b89c-0ee286d958dc"
        },
        "item": {
          "id": "5a15fe89-489b-4832-9d83-5c217318b96a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fcd27de9-a333-4b51-a427-c74d6519a50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cf6db5-4250-46ef-a927-e885a2e7923d",
        "cursor": {
          "ref": "b85af4e9-f106-40c4-855a-e106d7b2754a",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e6442a91-0d7c-445c-ae8c-ee525abef788"
        },
        "item": {
          "id": "e2cf6db5-4250-46ef-a927-e885a2e7923d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c165dc62-8970-4b3c-80bd-5d0aae0e4036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d68ca41-7001-427a-9cfa-31ea9037dd0c",
        "cursor": {
          "ref": "4fa8bd77-9afe-436d-859d-df6e822b3f0e",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "31085d7e-1b4b-40ce-944d-8d95ec7400c6"
        },
        "item": {
          "id": "6d68ca41-7001-427a-9cfa-31ea9037dd0c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c0e2bdd1-fd40-4563-84f2-ea19d8b7333a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a17d8ec-fcd4-4235-ac4e-d526f0f99cf6",
        "cursor": {
          "ref": "1fb57d35-d6a9-44fa-aefd-060270f6bb82",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2f765938-dfaf-425e-9358-ce304fcad67f"
        },
        "item": {
          "id": "6a17d8ec-fcd4-4235-ac4e-d526f0f99cf6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ba43dabe-f008-4c7a-82d3-f4d119f6b986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "964bbc1b-4617-41bb-a4c8-1714383ff800",
        "cursor": {
          "ref": "80b90ba7-94c2-4e57-aedf-4c08e448aadd",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e81f202a-92c1-4039-ba7e-9479b06dc4ff"
        },
        "item": {
          "id": "964bbc1b-4617-41bb-a4c8-1714383ff800",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "93e21006-911a-4b87-b8a4-4ff2fc347eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fb96bd-5a25-4198-82d8-b62fbd097c6b",
        "cursor": {
          "ref": "4a88d340-7034-4fde-8084-714af39f908a",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0170bfe8-e320-4f28-9dd7-c0affa5a89a7"
        },
        "item": {
          "id": "82fb96bd-5a25-4198-82d8-b62fbd097c6b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0818faf0-a1de-4183-a66c-df8b114b5ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19600c71-18f6-466d-b4b7-a6cce4f24bbf",
        "cursor": {
          "ref": "de914f43-5c33-451b-a354-d464955488aa",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7e934b16-d199-474a-8f03-33669809b1e5"
        },
        "item": {
          "id": "19600c71-18f6-466d-b4b7-a6cce4f24bbf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "748b7e3b-e2de-4d63-937a-09617e4b5c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7295e90d-2c96-4291-acc4-8029955a2232",
        "cursor": {
          "ref": "7e9c723e-f2c3-432a-af0b-02528b73cc2c",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c92e4790-0499-4570-88b3-cbc522911c23"
        },
        "item": {
          "id": "7295e90d-2c96-4291-acc4-8029955a2232",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "66d8871a-1360-4aa2-a61d-8bbe7ec80ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae73f3e-4dda-49fa-8814-a3451467b25f",
        "cursor": {
          "ref": "2b46150b-b72a-44a3-921e-61f80164a6c3",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "22fd2261-bef9-4656-9c2a-e7b8c3ce94bc"
        },
        "item": {
          "id": "9ae73f3e-4dda-49fa-8814-a3451467b25f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1e7d8bf4-9950-4da2-b3c1-24c3563d4def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10f5d3b-05ea-4983-8ed1-a9a5a9ecfe1d",
        "cursor": {
          "ref": "cb5c9c88-9bcd-4944-a254-d72f144a5d06",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "66a12e2c-5236-42b9-9f36-b2f28f3815e7"
        },
        "item": {
          "id": "d10f5d3b-05ea-4983-8ed1-a9a5a9ecfe1d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fb0980e3-4a9f-4a88-a550-f3dac57ffc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a1c36f-23e5-400f-af9b-f16e4213a257",
        "cursor": {
          "ref": "25bf6619-12a5-4cbf-97bf-43029dc89746",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f156095e-79cd-4660-9de9-7c7bcc82f912"
        },
        "item": {
          "id": "a4a1c36f-23e5-400f-af9b-f16e4213a257",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8c74dd1a-6143-4217-a35e-b825fcf48771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 305,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27ceb68-cacd-4e7a-9ed3-ebe8d82b7c67",
        "cursor": {
          "ref": "d34b8764-af0e-4636-97cc-36838f75640b",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9babf30b-c058-4322-baa8-da99062c7b7c"
        },
        "item": {
          "id": "d27ceb68-cacd-4e7a-9ed3-ebe8d82b7c67",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "489a619e-737f-4a8a-84a7-29f59551b0c2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edd77cb-2c36-47c3-80f7-caca9bc3e7e3",
        "cursor": {
          "ref": "1eb0b404-73de-4618-a18f-d3f0a41ea4a6",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "969a27fc-8ade-4f68-a49e-7bc37290a579"
        },
        "item": {
          "id": "5edd77cb-2c36-47c3-80f7-caca9bc3e7e3",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "c491f4c1-8e7c-4ea3-9b95-9800c17bab64",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 406,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79003264-2b2b-4255-950e-ca26e96b9827",
        "cursor": {
          "ref": "9ea732cc-26e7-4427-b074-1dc2ba774e89",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9ddf7bd5-efb4-4ac3-bacf-4a12f0bc36e2"
        },
        "item": {
          "id": "79003264-2b2b-4255-950e-ca26e96b9827",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b32579ba-806f-4935-9efa-eec297638b31",
          "status": "OK",
          "code": 200,
          "responseTime": 465,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c1ee39-db17-43be-ac4e-e7462058b3ac",
        "cursor": {
          "ref": "c5c34da4-5d68-4eef-8de2-877322173d6f",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "92ca12e0-632b-4957-bf2e-8b64795cd852"
        },
        "item": {
          "id": "72c1ee39-db17-43be-ac4e-e7462058b3ac",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8637ac4d-1495-4b5a-b659-48882c1738bb",
          "status": "OK",
          "code": 200,
          "responseTime": 1728,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ee58d4-c0ad-4b68-a512-25e42adeb174",
        "cursor": {
          "ref": "971fd07e-a3fe-4ee9-8695-646765b70f93",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "079fdc50-b3e3-461b-85f6-456a6df18a1b"
        },
        "item": {
          "id": "e6ee58d4-c0ad-4b68-a512-25e42adeb174",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "db524e9d-dc7d-4703-bb74-230835ffb486",
          "status": "OK",
          "code": 200,
          "responseTime": 1717,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc83c89e-141c-43d8-8d0a-d2aff10660ff",
        "cursor": {
          "ref": "3eb401a7-cb1a-4736-aa45-6f1d3e6df4ef",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "03023df5-3273-4106-9c1e-eae9186b38e2"
        },
        "item": {
          "id": "dc83c89e-141c-43d8-8d0a-d2aff10660ff",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75043cd8-a801-407f-9caa-e7c069cb0160",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc83c89e-141c-43d8-8d0a-d2aff10660ff",
        "cursor": {
          "ref": "3eb401a7-cb1a-4736-aa45-6f1d3e6df4ef",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "03023df5-3273-4106-9c1e-eae9186b38e2"
        },
        "item": {
          "id": "dc83c89e-141c-43d8-8d0a-d2aff10660ff",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75043cd8-a801-407f-9caa-e7c069cb0160",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc83c89e-141c-43d8-8d0a-d2aff10660ff",
        "cursor": {
          "ref": "3eb401a7-cb1a-4736-aa45-6f1d3e6df4ef",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "03023df5-3273-4106-9c1e-eae9186b38e2"
        },
        "item": {
          "id": "dc83c89e-141c-43d8-8d0a-d2aff10660ff",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "75043cd8-a801-407f-9caa-e7c069cb0160",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b201399-19ba-4035-8ce6-8f1815b11d2b",
        "cursor": {
          "ref": "bf3d65cb-c9b8-4e7a-b60e-4cf6e24fbc39",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "864156dc-7e4d-473e-a654-ea60530f3d48"
        },
        "item": {
          "id": "3b201399-19ba-4035-8ce6-8f1815b11d2b",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "ae69cb01-cd1d-493c-9f69-259f80c46a45",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 294,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502ffba2-e3e4-4e36-bc1c-3bb2fe36143d",
        "cursor": {
          "ref": "08877244-ffc3-44f0-9a0b-b13b50007202",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cc85b692-03fb-4f56-a9ae-8fd40c236c3b"
        },
        "item": {
          "id": "502ffba2-e3e4-4e36-bc1c-3bb2fe36143d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "efc6ed41-9a74-4afc-80b5-1773486e4716",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502ffba2-e3e4-4e36-bc1c-3bb2fe36143d",
        "cursor": {
          "ref": "08877244-ffc3-44f0-9a0b-b13b50007202",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cc85b692-03fb-4f56-a9ae-8fd40c236c3b"
        },
        "item": {
          "id": "502ffba2-e3e4-4e36-bc1c-3bb2fe36143d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "efc6ed41-9a74-4afc-80b5-1773486e4716",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad3f827-c8dc-457e-9428-4386b6a6e5f5",
        "cursor": {
          "ref": "fb49c883-780e-4b63-93ae-c6c157cd144f",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "97809d79-59f1-42a4-b275-89c9696088ec"
        },
        "item": {
          "id": "bad3f827-c8dc-457e-9428-4386b6a6e5f5",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "190cde56-c948-4db4-bbe0-f037e9d0e569",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 950,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5440ea-7bc5-45f4-9685-668e82d272b9",
        "cursor": {
          "ref": "f54a6d0f-a433-4ee7-8b60-0fe920614459",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "65420d7a-b6ec-4c58-8a4b-a10e6567cb62"
        },
        "item": {
          "id": "1e5440ea-7bc5-45f4-9685-668e82d272b9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bb680678-996e-445c-b8c9-615dfb2101b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5440ea-7bc5-45f4-9685-668e82d272b9",
        "cursor": {
          "ref": "f54a6d0f-a433-4ee7-8b60-0fe920614459",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "65420d7a-b6ec-4c58-8a4b-a10e6567cb62"
        },
        "item": {
          "id": "1e5440ea-7bc5-45f4-9685-668e82d272b9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bb680678-996e-445c-b8c9-615dfb2101b4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97845196-de1a-450e-8e95-ee2dd827baee",
        "cursor": {
          "ref": "b556be78-e516-43bd-9ea0-3b9dc3bcca3f",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "c05f27ba-4db7-44a5-8beb-8c2177ae580b"
        },
        "item": {
          "id": "97845196-de1a-450e-8e95-ee2dd827baee",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "66d3826e-a550-4b3d-8d32-1e5f2233d1b7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1378,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}