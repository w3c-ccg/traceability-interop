{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e1f476ac-7d8f-440c-9ac5-c2c47cc14e63",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a91a01c4-cc9a-4b72-9f67-04277b9e3b95",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1afcd970-885b-4969-aac3-362f46846809",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eeaba66e-c74a-4b96-a9ae-2eef6fcf6b51"
                }
              }
            ]
          },
          {
            "id": "ef3fa85b-5874-424b-8f3d-e260ba270206",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4cd76f35-7e72-433f-ae93-9abe9f6fc076",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "06490f13-8f4f-4abd-bc60-4ac7c1071315"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "faeb7079-0df7-4ef4-be16-55790a709de3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "1388b523-785c-4996-bac6-51b908fcb307",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d8372e4-fa6c-4ab4-a61d-6f31fcdd5a9b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0bdc5ca-eb6c-4034-9253-ae0fdda3665a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c051c0bb-adb8-4bd9-8e07-83877f820c00"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d3f22dd-c205-4620-928d-fc3b0a787f14",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cdf52ac6-8e27-4c7c-8dc7-6aeb72ee90b3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2bcce7a6-e6ea-4a69-91f3-bec27415733d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b41bfc0c-c482-4c64-80f1-8c7aeee0168c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be48ff7e-1e28-4272-9854-ef0270447105",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c65fe1c1-1024-4d5c-a541-4a7377c20866"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef36c6df-aa9f-404d-84f2-85e7a9e5e9c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b25043b3-6a70-48ca-8a89-a670ea79889d"
            }
          }
        ]
      },
      {
        "id": "5f414fef-83f1-4ad8-acc5-db568f7ca7c1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c3475000-dc84-4fcc-b095-468a7eecf815",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09696758-7fd2-4d0f-9668-5c7dc20663fd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6fe6139f-da89-458c-b346-71230db411e1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "277252a8-e1ae-4578-8082-1226d1c4e2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cee9394e-7840-4368-9a42-13a4fcb6b53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a344ae2-e4f5-48b8-959f-6953bd39723e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52deb1b2-e121-45e3-82ef-dca61a71e6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a2eb4d6-8c43-4f89-afcc-465007c7370b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b63f925-dde5-4e09-b20b-21dfbbf274f7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bfd4f2-86ec-4a55-8cc7-cfc254223a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c13b2829-184c-47aa-b25d-482b227ad11d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a0f992a-19de-4323-a353-551a6c1882fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3d749b18-d23f-4f7b-b847-7ca2480e97a8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da42be30-8280-42a2-90c8-2faf9f200a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe1eb289-008a-4ecc-91ec-812dd448bf7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bc5383-6399-49cb-8019-a7a93a63b4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446c4ec1-9f67-4d8f-9d4e-c19209e6a922"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5d493632-ade5-423f-8acd-1a5a7086a5b1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ab4a7edc-0fc4-4fb2-bf84-18d0d5c97ba6",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b4326c6-1509-4a3d-8733-37353fbf90ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bf76feee-325d-4a76-bae4-f5eec53f34d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd93b3ae-b42e-49c9-ab04-29ddda1fd708",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2f975e16-df1f-492f-b568-461fee0d62ae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c15c6ac5-d4ed-42fb-87f6-da28c71d92c6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fa56e7c-50b7-4739-8403-f6400b33f9d2"
            }
          }
        ]
      },
      {
        "id": "500fa092-1479-4d1a-b97c-c7708798a56e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9c0b4665-c7fe-486f-b16e-d284b25aca66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5cfddfcf-a092-447e-81bb-53e397015923",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d9005ca1-4197-4e6f-97f7-131716bcb294",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2770d809-35e1-465a-a497-29673b40215e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4508da1e-839a-4776-aa8c-0f36fb2f5d72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cab246d7-900e-43f5-93b5-b3301eeee84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "016974ce-8527-4c3a-b3e6-37edffa8859c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf315ca9-02bc-433e-9cf5-c7cb560d3af1",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70078177-decd-4074-bfda-95ea0cd4daf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2f529e-f98a-4db9-9cd5-76f31667a99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f335eb9-f7fa-49ee-8dd4-6bfdbf8f63f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f6e01a5-b109-4a90-9e51-9bb8492a8c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59d3f50-47d7-4b37-8fa0-471a70903572",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a22d1c-4501-4699-a8e8-a28c895fe06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "228e7fbc-90a1-4a22-b813-27d4dab83eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752efc07-00b3-4c87-b325-fa30915edfab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24cde0db-451f-4efd-89cc-64d83903281a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8177a7f4-37dc-4d10-a757-318ac85ffe9b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a648ae0-5f10-47a8-b360-d0d462477f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cff5906-2478-4c42-a56c-615fc751eae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ed3c7f-30a7-4701-8043-7e0a76360f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "232f047f-0656-4d4a-ae10-370c7b6aa02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9a0486-162f-48c9-a567-14be395bc282",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd46fefc-8817-47cc-9107-b0d118f633dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479b6546-1a0d-4643-8e10-52a38b5e34c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a70a82a-405d-4192-8755-87018bbac736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "baca135c-0b01-42c6-8e5a-0349fe06bae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab1bec8-8de3-4e18-b816-59152c6fd3b1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2168db-2413-41ca-9d4f-986b46c2e566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07f42d69-c502-4639-95a1-932f799791f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f618a885-fde5-4162-b3e8-78c45ca030a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff3869cb-3a69-457b-ad41-b558142dd575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf5e65b-dbf9-497d-82a3-174bd75117e4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cfd9bb-5eef-4476-8f3a-0e664a08f4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3220673-67c4-4fae-b8dc-2f56d25edc14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9879e69-e4ed-4e20-985f-237a9ac4a404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "116e95c7-b434-4bf7-b90b-f526a1bac215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f5c848-4468-4ae6-80fb-905a8cedaf44",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3b3f44-54f8-444f-8fa0-a0b368d3808d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "007f1229-62e8-4ed6-98af-0ee5ce154f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fa788b-5a22-49a7-9a42-566609c81722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd12ce18-31a2-4f7f-8af4-69b01433979c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f194d9d6-d40f-4e74-ad41-19ff9fd1354b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ad3238-0f88-42c6-b464-54d7b8efbd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9867118e-f529-4c42-8d70-2e525e08862a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb2884b-1e1b-4f66-98eb-25de9cc5a1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32670696-df25-45cc-9868-2adf4a76a153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecb7f08-58cd-47bd-b219-668df19400e7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91153451-3eb2-44f5-9977-1228a51292c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15691331-8438-4533-8454-49c860f434f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101f0fb1-ad0e-4f9d-ae86-66624bfff225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fde7461a-4a1c-4049-a4b8-ae878d95b711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e939943-71cb-42ad-98b6-755c6d282c0e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce72467a-cf9c-4975-908f-30608abe03e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beff1a5a-85cc-4a48-b088-7c483184928b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f99332-f574-4137-a009-e8011f5d014a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "713610a7-75cc-41ed-8699-5565ad301828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a814a1d-cdfb-463e-87d4-324654d609f7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ffb1f9-61a4-4ed2-b753-c1946de4c093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc252eef-5258-432f-83b0-f7e63f35cb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333bf963-6fcc-4490-a759-0957a6bb4d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ff37106-2888-4d9f-9330-ef263cc95533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348bab28-47bf-4ac4-afb8-b1cf43176844",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f8d512-edc6-4d20-bac7-0c8ffd3592b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efba217a-235b-4c23-a682-9fe41d0d1f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53deec44-6098-4112-8cc9-774c425a7496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f82d499-0281-433d-a339-91b062d1f984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b10d80d-d77e-482a-bd85-5c628b432d3b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9b9071-3240-497a-bb3a-72b1435f8210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322609f2-862a-4a9e-9f6b-7c4fcdd9f524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f027072-124e-434e-aabb-b534d3dd6d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e75d875-4a66-4c63-bfda-6d3830f9ac75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "844637f0-5b53-4c68-b410-dfe386a48d12",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "645300d5-6d76-46ff-aebd-26a333192470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc65f711-6290-40cd-b8ea-9e254dc63701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f7f879-3b3a-42ed-a795-e10910ba3d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6c03e49-6072-41fa-a013-550a4655d9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ad85bd-0ed0-4c25-bb50-3fd49f6e8afa",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e34768-314d-48d7-8267-6923e1eccf70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad52aa3-8300-4418-9f4f-821daab37570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c704f08-90f8-4e87-bf72-805b38b737ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e81d739-17f2-467c-96aa-cc8315d8048f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4850d36c-e04b-49cb-896b-480c9d8eba22",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d798c11-b3b0-4f88-a74e-b1e5d351144c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe6c3871-446c-4856-9fb5-30cce0bfb4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9886ed9e-c7b3-48fe-a04c-6247cfdcf516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13814e4a-a805-4460-87d3-39cd3f2e3454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24813811-08dc-4f7c-bf01-a8140c6202bd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af5ba8e-bbbd-4691-a541-73354fad962f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3edfad37-66de-49ff-b1d6-cac3c3cf887f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d5e603-caaf-415b-ab98-6fd3285cdf7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd259e7c-054b-476b-aa7f-d336bba307f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f024ca1c-2a69-4d20-b4c7-e145be46309c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f283d5bb-7e6d-41c0-835d-0f684fa1fd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c21cb151-eb55-4aa9-af52-e3e6ab3b7497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b458563-67f0-46d8-948b-4ce1ae77d786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6333fc32-a38e-4d5b-ab00-b61a9c26dce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e3228b-1dd4-47c5-bb1d-ceb6a9e585e7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf68126-f19a-47f5-bbe1-bdbe98f68fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8072cd-261a-4f35-9029-9f3012dc1d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ffe87e-1a85-4010-b5d2-b2bd5b7adf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62e0a3eb-81d5-4022-a5a8-511987127851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2b442b-5c3a-4228-b6ca-3171d40d9c43",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09292e11-dc14-4830-98e9-305d9e3ebf81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b65d72-0bfc-4441-addc-1b5266f36903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1155326-490a-4169-bd56-8c68159f97ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab0625d-bfe6-47bb-91cd-ec8d30998811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eed22fa-68c3-40c5-b4b6-6a34aa81212d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6efdec8a-ab2b-4f80-9353-58ef646d463c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d2071f-6d34-4f0e-9cf4-790c8401df3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a2f5be-6828-473d-a242-14e7cc4f9e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c73aeb7a-f773-4a75-b027-dd4007e2c936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c1b1b4-2ec3-47d0-9acf-3b78eb9cf241",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b4ae45-fcad-4775-94f7-328cb5f2a5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b11ed9fa-f13d-49e2-b5f2-0962f62607f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff89f105-d5c8-4c52-9399-c154b3921035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63854a83-abbf-4783-94ff-862729c42f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49e1cec-e37b-40e6-9a88-a1c28dddc05d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5e2498-10fa-48a8-a915-88d1fa4445bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b11805-c0bc-450b-8a12-64f89f2c3472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634efef4-cabf-43c7-91fc-5009652aea1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f52fc15a-530f-482b-9375-583bf6777a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1a1d30-1a77-4a04-a7e8-c06c38633107",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8223a3-a661-4f9b-b64a-357e77894040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f45f595-f311-4821-9a5d-f72fb8ce5222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fb3af8-9e87-41de-af42-6e61a3f906f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "906c2b43-d291-4640-9c21-627cc37f38ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4321c718-caf7-4fd2-ae01-6f687646c205",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b21357-3876-4489-8b5f-33c41bae8f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ad5a82d-aaeb-46ee-8dc9-9ef1c62de803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51194a1b-d54e-4014-8b88-454e491f91c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a393984b-404f-4caa-8723-d3927693e52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa539f1e-4bca-4a5e-8d20-2c5e88b8b123",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbd7e8f-d25f-4d67-a85e-773f8772f478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d27575b-b5f6-4cc5-b8f5-afcafbc011e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ce89e4-b288-4273-b5ce-1d7de995d4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b1f6e76-8420-4900-b53b-e756887b91d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e93c13a-87de-4d32-bfbc-d0aea5274201",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68aa08f0-07b3-46fb-8fd3-256fb985d804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82259e87-c73e-4dac-af58-cf5ddd5f8b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c79ea1-979c-4515-b3d0-dfcbd8e14013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "303e8074-2d4b-464a-b1f7-8d56ddac50fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a0bbce-c29d-4478-a54a-a172b593ad09",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d798d2b6-939d-4c00-a670-0766c4ea7554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72af800-f63e-4786-98bc-349dafd05703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f49be1c-10e1-430c-a8e8-e9635eef9054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1110718a-d91c-4884-9ff3-820cafe454a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d742b67e-f14f-4f44-b62b-0ceab96683b2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0aa1114-60e9-4d76-8fdc-98fcb03f7373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c322d8-e027-49ee-8b95-b9c75fef9171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f78350-0826-4eb7-99e7-7b0d4e6fcbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbe9dcf-dc27-4a0a-ba72-4fe394772b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d20db08-6da0-463b-90b5-76440036b5bd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a7deae-0995-46d6-8930-9a97b679d350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce8eebef-5cfb-4742-84a4-34e65ee440d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9c3e03-057f-4fdf-9744-7ecabf74318d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1898ab3d-5688-42a4-919b-64c04e5fdc99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114fa47a-2813-4a95-8943-12da35d4fbc8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0fb9ea9-2702-47c8-89f5-290d1f7fabe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2dc4284-ef86-4737-bed2-70a3cade1b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229a6f85-81cd-4ede-ab7c-dcb351d0535a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7089bce-7e4c-47b3-a549-a0b7c9bb5e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0bd782-939d-4ef4-9da3-741fd1253a2a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3a8cbf-e267-4cc5-a810-4e0941ffa9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f27603-f5bc-49a1-9c02-bbe597aa9e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e30a9f5-d626-4ae1-847e-4a03cce947ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9bc3b6-e7e4-407c-a66c-2c5dfaed47f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99b8b1d-c724-40a2-a8ea-0fd59cd72f39",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d35cf81-0238-4923-9688-505a30447bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054018df-fcbd-43c7-be69-79c55d996383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45c862a-dae5-475c-a619-87124ec8021f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2643151e-c494-4c3f-927d-d37a2b178176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6cbba13-07f9-47ca-8582-999dedf5dd4b",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8068ee8-70ad-4c11-ab8b-04b5bab79afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea03ad2a-6285-4150-979a-574d264dbfb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb403a87-4e03-4892-8d7d-4c366216aaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "a499d389-30f2-4711-8324-8e76715a3d0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e08d9cb-ccc3-4387-9b00-3f6a9986cc41",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9814567e-af00-4774-9401-424f5c9143a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee56de9c-465b-44aa-ac93-ac2cb5f174b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0711bcca-2664-48c2-a22a-c6500aad8e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0400c9-e92e-46cc-bd39-9835aab1ccbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7278b7-6d78-43c1-9128-1a128b05b2be",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d35ed52-2103-46d6-a5f1-5f588cbe4eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d1e5ae-7550-4587-95e9-56b3b1feebe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75795356-f7f8-40da-b0ff-b2ea25020b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b111e9d-d576-4f1c-9ee2-3c9f638d71ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e04040-db40-4c2f-bccc-597f0fea8257",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1ab8ba-9141-44a0-8ac9-773469e88691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90fb698-6121-45ef-8678-70d2e8456c09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a3d344-5c28-4b74-a8ff-af716a268814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "455b414d-bbe1-4ff1-b873-16e225c5f89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9198f08-c063-4cfd-822d-0186540e894b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d502871-ea64-4fb5-9b25-9fc5b04c8fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98a9f02-96ae-4433-8202-02c6cd0cf821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44cdefd-03ad-48f3-86e3-4136f6bd3193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "96337a63-a95b-4c3b-81b9-1c34758ff3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4806071-e484-4676-ab59-e6ef85b36b1d",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb254cd-3913-4dd2-ab02-556ec60f661a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0810592b-363e-4855-af55-c6f25071a4f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0ef882-786f-475c-86de-591642d5e826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "37951e22-eb5e-4e6c-a272-1f9b7bcb30e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f31699-c768-4e1b-af6b-b72d01874ae0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "688b40ab-3986-48d2-98ee-c33bf9f95770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81c39b9-3bc6-4ebb-9bc0-626e2b464710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d2445a-bc53-44c8-8a70-73ae7ad943fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee2804c-4ce8-4f4f-ba06-7b9a86547f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7d5d3d-f152-482d-b1fb-49361adf69d7",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4153d70-3ff3-4890-a83d-a410db26739a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906416f1-b2b4-4abf-b47b-06c9efba79bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9c1392-aabc-4186-b643-22a1d51ea150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3cb9bc-ca72-4957-ba25-87cce07a5dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b2718d0-58a1-4b40-a7bc-763d226aa7e5",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d045d568-c77b-43f9-886e-9aea6c38e0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "744cf2d5-ba68-45ce-9a33-3043fdbd4434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7b6287-2d18-4b53-987b-4f7e94cb3d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "23538222-ad85-4b4b-b32c-529bfc956c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413be3fa-9366-45ef-968e-c568c2a2d789",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "190c335e-837f-42d1-af58-8604107b48b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b282f80-13d6-4d43-ae1e-3b0dd431b74d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a2e03d-130f-427e-805c-842b85f51681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c68ac50-3b8e-4e68-b558-48475d532a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c793fb0f-2d76-4dc8-87b2-72b20d9a0db5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d542fc92-23fb-4f7d-be8d-9932bb7f932f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec32cb7f-a161-4f8f-976a-cf70a0beda92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855c2bd9-75a4-47cb-aec3-bd85bdb8ce07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff7f79c3-601e-441c-aa52-9905cbafbbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c32ff44-ff71-47cb-9fc5-5a450a9c06cd",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44978e61-f848-429a-ad91-76a94ae78526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1579497-0b7a-4334-9218-1797dc4e4686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b64d576d-b9e3-4565-882c-bcc53d5ecaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cfd47fd-2558-4626-88c0-828d23d125d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9f0744-6177-4b62-b352-c4c431f9008c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b8fe73-ee71-4dc4-adf9-f04911f9635c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d411af-ae88-430c-81ed-74c5dc0b9a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f281f96-60fb-4e54-8674-824a9d0cd9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "150d4fa7-4f57-43be-a466-66f337278647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0f9b362-7202-47a4-9720-d7c11e630ba3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7484de-ede1-4799-b73a-12e6b2504ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85630c9-161b-487d-9145-0a1884a1e452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3efbf4b-7369-488b-b632-c6cf46a21222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebff05ab-96bf-417f-a23a-7665ef3a4645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68346407-f978-4a37-b28f-83b22433c573",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe5fdd8-e5d7-4127-a31f-c85d7ec03ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a093b00d-83b8-4baa-b37b-721e14b99a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62000b69-d788-47ad-bae3-34902c738d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aeca97fe-9677-4de5-92e2-ba5bbd309665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b22b160-2b36-4a88-a93a-648a5d21c187",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8bea11-ee28-43fb-8a9c-a3bea72e0f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699d70e9-64c8-4342-8be7-47ae06d5b442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384cc4ac-b65c-40af-83e7-066f2e0e5aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00629027-fc71-4d94-b5a5-93ac44748de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d49686-7593-42d6-b5c1-81fb6aaf02e5",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47dc480-a7ae-4feb-a334-5ebc5af2a110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38dca50b-8538-4103-8227-27d1bacfc293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20698cbd-3f1d-43fe-9b89-61b2da9b78fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1532804-6029-4aae-a1a4-e40c35f5f287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d51ab0-3f6f-4429-b01a-8447797bf66f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a594f1c-f526-4ae7-98ae-775fc6045e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca99d34c-40a3-4693-a02a-8c78118548ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764e04f1-7b84-4deb-be5e-e9fa4d5ac601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3411f4-861b-4c43-ace4-e629e26063d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9660facd-c180-4823-8857-75e3d1aa616b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca1ffcd-e4cd-4cb4-8fbe-72a65c36b3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2cdefb6-888d-459d-ac64-714bebd14011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09be778a-bbe2-41fd-904c-5287832d27ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4609bae-a802-414c-9007-daf2aa60d501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34232a34-b7eb-42a5-b8fe-92403bd31353",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58124c8-b4c6-41c0-8be4-7fcd198044cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c80d0d-557a-414d-8d91-f8cfb0862146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7678638d-9b64-438a-8cbc-b6e3b299077c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36703cf9-f969-4d65-93db-058375c3754e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e70e2ca-f35d-4e6f-9028-8434ad263047",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911e1d50-a947-4d63-ab93-12e9ccb3538c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727c6ede-d0a9-48ad-8561-1f633d42c642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f857cd9-aae6-4c31-bd4f-2e1d2be17304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "331b4452-76f6-4640-b962-a8d7c42bb105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7200c338-265d-40c9-bda5-c4f42fbdb970",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9666fe88-452c-45d8-98be-7e4a481d665f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e46a56-614a-4fb4-bd12-95ff1b28acd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9e9ff2-3a2f-4e07-a9bf-02307fb26334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c037b811-4761-4bf4-b0c1-94aa183b9470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa1aada-5eb0-4a17-9538-830937209551",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8902c8c3-9c5a-442f-8d2c-d4a59a525df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ec1a98-9763-413b-b2ff-fd79971525aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfe0307-fd9b-4021-ad3b-ef2223aae870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1547d0-5dbe-448f-918a-dc06e99edb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9a1437-3d12-4b9a-b0b6-4e315602f541",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bad23f-374e-42c7-92d0-c68a9819390b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa05b2f3-1ce6-4cd5-875d-4ccb7ec94ebb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070cd037-3b5d-46c5-b6a3-22011ede6ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "087cbb78-f522-45ec-9b21-eece9a1ad78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6fca70-83ef-41df-b36b-325e71e19aef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d50d527-1aa4-40a1-a0bd-7fda5c3cde0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb25129a-b989-43f2-977f-bf36205b77c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd9ced2-4030-4e4c-99db-01af2dfecadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b52ead9-cfd9-4cec-baee-c9afb2ea6733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810133de-979a-4b34-856a-1d020ae76993",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdeab4b-dded-43f8-af2f-95f5bb298e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fea49d-c896-42a6-ab1e-76f52b8a1cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5874034e-0eaa-40ae-9051-d4537c84c7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb6778b-294d-4f20-b0cf-c065311dd61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a85d9f-3857-466f-b044-e92c786875a0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3509bcfa-398d-4eca-8f37-091149863588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3c0be5-b69b-4eb5-861c-113fb285b420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d216a2-a677-48cc-9a92-dd30c6dd308e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "88042bb5-5c94-4423-b6fa-d4128e81e74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77abb3f-3b3c-42dc-8484-979b6ec84f05",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a247e57c-a35d-43f2-ae76-60701478b7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ac753d-8b37-45e2-a935-994f39378486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b205f9da-d92d-4b65-b36c-995fb100a874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c898dcf-6f2c-4801-b827-1525300be5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7cf5b2f-3881-41e3-aabf-c92c297b9e17",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1c9e06-ffa3-4592-96ab-290e514c9146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754a5994-253d-439b-a472-03ce6fb9d044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d2d281-9385-4605-b055-7e615b8f4bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c56a473f-7cd4-4fca-be3e-a4c49134dfad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04738c7a-8647-4825-b0a9-36d7be876ad8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b103577-54e4-4917-b2ee-f4e38c538860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7742fc4b-0b81-4ee1-b332-e178e3fd2d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a184be5e-3141-4d3b-8db2-9c5ecd33971b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e0b3dbf-1a30-44eb-b4ff-365b092ce1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a14b149-0df9-4445-981e-8bee7afb8f78",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61dffab0-ede4-4006-96ea-97cb547e7fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc49fc4-6e95-45c3-ba12-9a8aaa2e221d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f1c289-b845-490e-802e-852b36483b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "34b9f5f9-7a92-4997-baa7-73a8f4e32f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c382693a-efdc-4741-a31e-17084e33d4c4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ff449d-e58e-49b0-9e5a-c210635be31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e55b95-a51b-49f0-ba17-87820e134f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfb3287-aa08-4b1d-ae76-b2c469419a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f6bac1d-0938-4d6f-afcb-4e4dd8f76b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71d6ff3-7703-4c79-82b2-0f9ed694b7b3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aeaf067-8f13-4406-93ba-3984b62f0c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1b9d24-b9e1-46d0-a71f-4c567a6dcdb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227d39bd-f560-4733-b4b0-be893353de2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6e4978-2217-4fbd-b7e8-5d923a11317d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81146e66-91db-4d54-87fa-75a7986cf3fc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c6100a-f236-4418-bab7-7b853ba6fa3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92beff91-f0eb-47b2-8355-e60200e04300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5baf3c48-4dd5-4757-b591-e32f7e4032c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a22b7ba-7e46-41bf-b7dc-f3a1ce69dc6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a39e6e-27a0-47f6-8f1f-d5285d7be98f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b27a62a-d878-46fe-986e-de00475afdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ce8611-4c4e-49c2-9119-8d06a08029f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725e9363-c5ea-46e0-871e-f6727b0e6f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "453b8771-da63-40b7-8deb-1b1ba47c011d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5fd049-1bbe-41fc-9bf0-645562be8b6d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd4879e-c4b7-4131-a38f-7b87d1d60dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568fd3c1-9906-4bf1-a850-e5456193a5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c16fc2d1-fc3e-415f-b2b4-4070a15273f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a946657c-1d96-42c0-b166-b1ca9d879490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d522a660-e781-40c3-9c9c-05e8e89d5859",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf837d02-14fa-4ea2-add6-e85024c0f68d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5921f60-0c3d-4262-8517-f1e7f01aa586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffce7df-4e53-4eae-bd72-abbf4f930bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06f02da8-5a95-4954-988d-049e7fff81e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7f7b8a-b1e3-4359-a688-5c5354b8938a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f409455-1b6a-45b0-945a-a08e1a2bfa5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec533a0-671d-4b91-8484-a1bd1e3dd068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd67a718-b11f-438b-8d33-d6e3514fde2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "517b8052-8ad5-4862-9105-74ec0fa63e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa72d94-ff95-43d1-8477-6362bb90c647",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d2f055b-9e1d-4c96-9ddf-e9006cfe61dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da75788c-a6c4-4c39-beeb-ad218e238265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf7f7c9-146e-4255-884b-3ee13163b8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "59025610-b28c-40d1-b164-8eae9edba565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cb14de-c215-4abe-bcdb-2214fe8775d6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79daaf04-5e6b-4447-9b8c-4eba3ddaf570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d198a4-9003-4801-9b8b-12357f52a058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f3c8ee-caf0-4537-9e70-5f61e4a08076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "36dd013e-0be8-4a82-94dc-0cd5801bac6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b69bb2-0adb-4418-b047-9308301413df",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4635b326-c435-406d-8078-1c81743d3241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9b0a04-c95c-45fd-acb8-41d9ca42934a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a6e1e6-2382-4421-b7c4-4d5a1417377e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ea2d2b3-3747-4af4-bf38-bae48f56af22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff15a06-c5b1-4f52-919f-bb967e146d3e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64dc132-c487-4c1e-a9b4-b78de1004deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e3ae27-dc15-4f73-abec-63f427fc4e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bacef9-6ac4-4428-8a58-c768f9ca76c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b39e09e-47c3-43de-8ac0-8c02ced8611e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3aa6613-f168-49c5-937c-db5107b1ebed",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a84ef7c-a091-4221-94c3-f92266f986e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfb2fb3-15e9-461d-946a-a263ea9892bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea46129c-b81b-497a-908e-2933049e72dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40447499-5650-48c3-a7f4-e79135c58298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d050e5-3c60-454d-a946-9bf49934609f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e503c3-3cee-429f-a5e1-7c5a2e72f11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05acb827-d676-446b-8ad7-7d95f7d275c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e36360-bada-43e7-b910-0407d91c42eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90f4cbe7-e8cb-4426-8295-3d6dddfa140a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d52603-e14e-44df-a339-4ed66f751feb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91934de4-f56a-4f0b-b386-b380dbff9cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e496fa23-a50a-41a4-a829-166507d25bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef02b6b-8ffb-4f49-ba18-a9fd31d17ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5b8369-6747-475c-a5b9-b641a4828607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad70de6-6246-4e15-aacb-4abe49f1a038",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a77740-8fef-40ac-9e33-09e0e56a7693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cac29ce8-b4a9-4d69-b263-cff17d6c2f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3967f7d0-96ee-4273-a725-3866ed55b138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "113917a7-6c04-4feb-9b08-3a4fbde2f88c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9852d4f0-c0c4-45f4-97c5-2d7e93dabb5c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd45743-982b-4859-be58-08c0766bbfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9df317-3bc8-4cb0-90d6-cd9db4e96851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d6704e-7d8b-448b-a300-4f9e0cf75a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe21575-27a2-4580-8cec-78efc18d773d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7977ab79-dec9-419c-8523-3243df43941a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "909c6559-63aa-47ce-a3d3-bb5e5b352b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a42c86-994f-4db7-abd7-dd1f817bc9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a33684b-47cf-4282-9b61-f309c9597960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e59b631-b878-40be-8dec-cf574087f261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74c489d-7afd-43dd-90b3-40008dd581a7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ff674c-ca56-44d4-965e-0a08e5006fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05960955-aab9-49a9-9943-50e284a7282b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4797b2-3543-4b44-a371-782d42e663c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37f09a64-1d90-4389-b6c7-e255692c0848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc370e0d-2df7-48b6-88b6-9932de3d3318",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b574b3-38ec-450e-a36a-4c8801905aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d7164b-9fb4-4e90-85c6-04d897a6e01d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d9c524-bc27-48e9-be76-96f5cb52352d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10203183-e8b8-4008-98fc-db594493fa78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1816e28-b118-4c78-bf47-7122b2023614",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d904ac7b-7dd2-459d-af3a-5cca61ec1d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f4dba3-41d3-4e59-aa53-50a8852b6983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d68835-c342-4d03-9723-a3a81eb79728",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1912c799-c77c-4cdd-a947-562af8c73325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4314b59f-5a1f-44b7-90ae-a59fe9e08827",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7aae8fd-161f-451e-8cc3-a9d3ad69599e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f20fbf98-d07e-4d5b-a91f-a46f8c9accb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb50554d-a7db-4de9-884c-ddc92291590d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c601a26-6370-4509-87c2-277cb5288415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca8083c-4305-4932-a0b3-31dd7e97aae6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1740bca6-0b53-4519-899b-547e925367aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27201dfb-9378-4f39-960e-d5e819176845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a947d22d-196a-45f9-8717-1540735cf7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f79ed3-8534-4f89-ad7f-a8fb97e16129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97bdb48-dc9b-4e03-9ea1-51c4a8c76b1a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30dc23b2-28b8-464a-97db-9976079e417d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f542ee2d-a91b-47b3-b266-124d55c7f1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95753aa-4c26-4f83-ac93-145eac051560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5554dbe2-cc90-4d03-a2e5-d0ffe34961ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df58a6c1-7005-4c1e-aed6-0cfbb9d30b34",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f18516-e3f8-4347-90f1-a0395ae2fb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa502d25-ddc0-42dc-8312-a6651d4628ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f52f57-5aef-4376-9bdd-218419ee8c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e22323d-e36a-49e4-a66b-34e0093c688d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345cfb4c-5034-428b-a90e-9e8a2f379e48",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0410a5ba-d7d9-4020-a3dc-6624aa502000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c91208-4687-4c97-96bf-6881818c4a05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca852df-e9e8-4c03-b91a-ae9196094159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ada81acb-3842-41e1-ba85-3c8c426b6df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1196c9bd-e11e-4b95-b10a-0a9496ab6552",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8a9bee-f0e5-4c74-b4be-e1555f212f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b883c66-eab9-4049-8ada-7cdca1ad9cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a800f031-e0e7-4ef1-9cea-3bc59f5f39e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e873feb-b7f7-4f0f-ad90-9da2d0e4be28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587ade40-6d55-4667-a586-233695c785d3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08f1f8a-6368-4fb8-89e7-77ffaddf13e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "744a2925-5db2-4c1f-a8c6-e7182b8a5f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113511eb-0fd9-4b74-914e-c330cdae2d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f258e95-4123-4a5d-82c4-f57e214cb251"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e0e2cf3a-294b-4a03-85e8-a013ee5cc6ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "792f5f79-46a1-47d2-94c5-a422bdc6f7b3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf575d8e-a3a3-4d7e-9bbe-020ceb7acbc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3cf6d573-ced3-4b76-9cd8-6999ee0fc4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d625dff-8475-43f5-837b-73e013c86b62",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f2b25a2-c90b-41ca-8782-ece96e54bec5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82f71a15-a853-4080-b223-f1697888524e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa0367e0-10b5-491b-8871-774da4b35b5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42718e45-d45d-4b49-bd46-2ba3d7794c36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b80def8-3d4a-40e9-b7a4-2840904195a2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6744ec28-f618-4969-ae00-b89de0058a22",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b077844d-f2ef-4940-a705-56303271af5a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ca94cef3-245a-4242-a36b-a49a4c918476",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "440085d5-5bc5-4901-9f68-7ae593c976e0"
                }
              }
            ]
          },
          {
            "id": "9db97271-7b37-4f6c-892f-05e9a778255e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8f1460f-abc7-431d-860f-b92bae5c8b59",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "2a059feb-6282-4001-b459-fdf8229348fe",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8892177f-5618-43fe-92e4-0b61f5d1d101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "97825ea1-dffe-42ea-9d08-a3a2216e780b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c5f777-27b2-41fc-9a59-60faa4a59327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2773cf8a-d6de-4447-8f71-ecb6b20c3886"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "79fef41a-3ee1-4af3-ad4a-25f77bb8ad4c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "42d106b7-4ed1-4808-a573-8cb5a948720a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb587b55-04fe-4b54-bae0-d08d50317ee6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5c190ba-5497-4340-8dc5-91fa003b3830",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b31acf71-2563-4077-adac-e552a6581bae"
                    }
                  }
                ]
              },
              {
                "id": "576a78a4-2b60-41ee-9e3d-141a747c67bb",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bafcb84-6967-431a-bef0-2ba36f33dce2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "48c22f10-27ce-4efd-935b-40d784a93216"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "261a2643-45a2-455c-9735-3712f6b6e780",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86a69a57-daea-4dfc-859a-c450a13d15a6"
                    }
                  }
                ]
              },
              {
                "id": "07744599-3b6b-46c3-b769-5110025ce3fa",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2a91a46-dbf3-4bfe-bc7c-09c92739abb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a83361cc-2a21-4985-babd-7e600cad6f8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "083caa69-5a24-486f-a89b-e7b09cb50185",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f9f10081-f770-4318-a4b2-b527d3b8e6ba"
                    }
                  }
                ]
              },
              {
                "id": "ef73ef99-de92-40b9-b53d-8b3b0a0b677c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e73cf23-225a-44c3-8316-0daadb7135db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd3d2193-71c7-48a8-96c7-bd9e630fde66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f2c202b-6b1d-438e-861f-2aa4b8f5d32b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "abb2b5d6-42b1-4492-919e-c925f3bbf3e4"
                    }
                  }
                ]
              },
              {
                "id": "5a6e081e-84cf-4964-ae0c-1fa59c3f137e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2a51ac2-57ae-4d07-8e09-263226e56e45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37b27397-2366-4005-afc3-682873c45bd2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea274db1-0046-41c1-a32f-85490ba49f68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e6f99ae9-7ee3-4149-86bc-03891d5dafbf"
                    }
                  }
                ]
              },
              {
                "id": "e9a09abc-5daf-46ac-b390-9dc31f2c1a3c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b4c7b10-aaf9-43be-9f80-0fde3a97a8f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3214d80-3bed-4148-83a1-c41beb5d8e09"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3f5dcac-de02-4081-91ad-8239a39e8fc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3c462403-de2a-47df-9026-29e55e0611b0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "889c685b-c494-49c5-a72f-24e08995a28b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "791ae977-e641-4059-8802-7e4afa250127"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5ae89f4f-c5d5-4f3c-8916-fd563171b886",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "31ad5932-df57-4b6f-8eac-1c2d02d0e70d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce87e210-0128-4c9d-b661-cc0c3d0068f9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e6497b15-8455-4cca-a763-4d1f7082f564"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "758bb61b-2552-4ab2-b507-19ed96688e63",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2ca99b6e-41c5-44f0-8e78-7d820f217a5e"
            }
          }
        ]
      },
      {
        "id": "b002ab3b-52ea-40a9-ba11-83a4bc6144de",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "373b0c59-c918-48b7-98e3-62f104615eda",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e4fdc3e3-30ab-43fe-8e90-7ddb49b630ba",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0c83e857-daf2-4240-ae95-36d68467cfc6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "535787e3-8915-4fed-8aa1-f7afcb8f4004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a84a355-da23-4cab-9fce-df3580614f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239129b5-1334-4b79-94fe-5b43639014e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfbc657e-0a34-4527-bc7d-2227c84d7cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726bb3de-bd96-4823-87dd-c4719ae98682",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b0ba76-293a-4958-bd41-92b0e62c31af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8f28ff-e562-4d22-bd42-a2f87b48de00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535b43b7-0f2e-4231-b11a-3ed2acf94e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca97583-c517-49ef-ba4b-a2dd1bb16f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428f89cb-d0b0-4861-b424-f4dfcc91c159",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc54f056-11a4-4480-8f20-82ecef499884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c603564b-fc9a-4d46-8a44-b729eb238ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d92bb2-bcf8-462b-b5a6-0e9986886894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae674e9-4ce8-4b6d-bbb0-954b45b05d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f93c036-7194-449a-b652-1b55b57b6544",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ddcb69-52aa-4097-ad08-13b4fcabaa29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce2ddca4-dc88-4a35-bda7-4c14e60b11a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0515ae9-391c-4ba1-baba-7fafe64ab93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5bf7f4-b289-4ab2-a466-37b6caac16f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0c48ad5-280a-4023-b338-e7ff6ae53ce8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c585d2-dc8d-4f6f-b0d9-fd724e7c863c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98fec459-4187-4e32-95a0-ca9166cb25a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcaedbea-7c2a-4c93-bb56-80139b51cfa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7355e134-34d3-422a-b0ab-bfea7d5a24bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7750f80-9f3c-43d5-abfe-a8060e9ac28c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5029bfa0-eb13-4bd7-9fd6-d55c50bbd2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131f94b9-3f4b-4e78-b51a-13706a575f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d0b84b-cd7a-49b7-883f-cd8d3d56c633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7cefc3b-11e4-4be1-b209-c28ec72d3938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d507354-a7e1-4aa6-85da-bcdd187cabeb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d362dd-d277-4c96-b25a-5a3c91275892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d20a6d-20eb-473d-a20a-59e6d178e602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f7f93c-e7b1-408a-ae51-3ddb48061da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1502d66c-f6e0-4919-ac55-be46916f3c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1d43a5-a367-460d-90f1-dc264c492a1b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "710eaec2-80a7-474a-b0e2-1d2a3f776bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9decef82-ca31-4cfe-8690-b1fafbdd61e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25198908-20e0-4262-869f-125d54d5250e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a23d2e-1862-45f0-8dfd-3bbee9833998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8718085f-c8d1-4160-9491-5e0d97c5cc77",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f8e486-2713-48d2-9bc8-bd3657474dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5167f7fe-faf3-440a-855d-030e8867e561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a577db7-5036-4415-a331-c6d10b81587a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7984547-8d6b-4eb9-9ff7-bae881b0a3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd70c8b6-8b38-4f9e-a188-111906205271",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1483f376-f4f4-4563-8522-9b549b42f427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715c4104-285d-4d2a-81ba-c43c9bee9a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c493139d-9b40-4d96-a334-d6d50c89a1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a813d820-2307-4374-a814-e9a52a565627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c9e35b-acba-4e6b-8ab1-550d6d887bb4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902d8a97-7da8-4f7c-9c77-3bbc50e8960e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f82746d-07da-4f33-a89f-1d34ea527bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4812778-c4ca-405f-b270-8bde20146771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3643b3f2-86fc-4c9d-8462-495861869fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ff441f-fcd0-401b-9e60-d60cefa69568",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e86980a-0532-487f-864d-a20ee3e743c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0aa8e08-8fbf-4eb8-b8a2-bc4d2484ce05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4ff7c8-cb7f-4596-a99a-325b0c76990f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73cc9068-4238-4d87-b3df-b1652e6a800a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f685fc23-6e15-44b8-ae27-61573ccb64fd",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a40a4c9-041a-4ab4-9527-458ac82f80e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1fd911-d7d4-44f9-9bd8-d4e39f911574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8c42e7-08db-40b3-b814-c25fd12690b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "299cf34e-f87f-4fde-bf8a-a94952ef7115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9930383c-5985-4cf8-9715-d32013cb04bd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3efd2ab-5c03-4cad-abe9-aac5344a3b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a834662-3adf-4c1d-9e24-451ca59dff54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f1bc3f-c1e2-43d1-a4d7-92cb5eafc356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0537645-ffce-4e57-a531-dab9ee1489b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d9e3bb-cea7-4992-a383-2998a7621980",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc06ede-0449-4dd0-87e9-fe93594b5a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7e7bcd-1e6b-4601-b4b0-7c782d7b4995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5cc848-560f-4958-8471-45a31e986be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9032e8b-0fbc-40ec-a23a-fbbdd343d830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e245ca9e-7d78-4751-8153-1789af2fa635",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581d70b3-a98b-49b5-9967-557a6145fd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8fcde2-01bc-4144-b30b-4e11b1aeaf97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cbf8c8-9890-4c80-afa1-cb6d4c723876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e970ba6-6cae-450f-867f-f4b069ad3da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad35ec12-e400-4a77-8faf-6db41b93f848",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0921193-5a2e-4a25-8ecb-30b3962a5a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "598997b7-aae3-4370-928b-2e00ddd959ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948e58ae-c7f0-4300-ad68-1fe552bc97f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a26ec689-0199-4178-be77-f6e0525fe4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ee9bfa-2c0f-4e48-99ef-5a00086192c1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d86710d-5bc7-4799-981d-39875ea56e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8fee35-be5e-4aa5-896d-10649e57ff02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6ba0fa-3b3f-4e73-b897-cadd9838e8ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "828f72f4-4fd2-4e86-b6dc-8a8578efefac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67589a8-6699-40d8-93a2-82d0562cd885",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc07827-a3a0-4942-85b2-625256b6ad5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64d61a4-05cb-4eaa-b14f-773a503cc955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60940d1-9ede-439e-a483-fd123ce3f93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "656acda4-1e0b-443b-aebc-7f24848b3ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f262cecd-ee39-400a-b665-c28d5b299823",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75a5cc1-b483-4af7-aa89-7a5fcc3f7f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d200c178-e0e7-40fc-97e7-4fd07c8b6dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb7490e-5400-49ca-b47e-61e5e82cb03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b16adc40-ce38-49fc-9647-715f14040cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a5fb84-80bb-4763-a390-934669b749be",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e481c6-d2a4-43c9-8351-df137652503b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5b2fa9-f9e6-45f7-9fd4-558c95a0a495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554c67ca-cc94-469e-88d2-0596e358913a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ddd2df7-9c57-4b51-9342-d96815cd9a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b87e9a9-4e13-47b0-8c5c-be57ee2b500d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b82306-a349-4d74-95a3-5695792c413c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e244409-1944-4191-974a-0c345493c87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a6a5e3-4d9b-43e7-9a90-df0e0abda35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f72a223c-53b3-4e74-930f-7a8580fc26a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab45eab-e420-4583-87a2-917b8d421aa4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc9a1ff-57eb-43a3-a0fe-a315f07613d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5389e4e0-5d47-4fa2-8bf7-4313eeab233a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec7998e-9620-45b9-a75f-71bbac18b06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a083cd-ea28-42f0-9c35-24f72303783f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888e57ac-a515-4a1b-80bd-bd7336bd8371",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08be622b-566a-4d36-af56-17a5b0689e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b42ae6b-b8ea-4892-967d-4de47dfe1460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742891ba-fbc7-404e-9c62-0e8c3e4500a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8216ad-bae3-4169-a6a2-19dabc900fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80d28c2-05b6-4d46-b417-bcf31a23eb4c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64154bc-183c-4805-ac3d-46263b6f0169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c1cf44-cff8-45fc-b7fa-5dfb85f83546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebbc801-5f85-4b83-a94f-8bc253033e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca19c8d5-8809-47bf-b508-83f1aa6db2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50f9633-8d2a-4c17-8588-44748cbc6829",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71291d62-0ef2-4376-9ea3-0eaff5f570be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaca1c29-1da9-4c40-8248-a203f702373e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b010f6ea-89af-42f3-9b17-ea0f35de6f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "580e1cd7-c6d2-4805-9dbb-2b5d91242e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00dd401a-ee84-4c38-8569-d6fe0881c795",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301af712-b672-41de-b4fa-ef83382bc67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4874883e-cadf-4c68-a504-f924426cb9a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484a9d72-6eac-46ba-8bea-d377f18d4337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b08147-d48e-4508-ace0-24adda70015b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42aaf7cc-b70c-4282-a112-1f3961ae7a3e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91461b8-393c-407a-bf5b-603ad4815c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68aca446-3bae-425c-9d3f-2f4c11d327d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b2f9a4-9f3f-41bc-b283-4184629eeffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "194d1eae-9615-4fa9-af32-5356ead335df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f100f684-8a47-4616-b5b7-edb7f02df01f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4d7239-2faf-4675-b901-98257c144418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201aabe7-c42f-4ac3-a207-ad081647ff50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc338cfc-3860-4cf5-beee-71a86dfa54e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6bd081b-a78c-4452-b391-ccd03d5486cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6753e2a9-b46b-4cee-99d7-6ff0c29dd049",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9f4f1d-7cdd-426c-a285-886aff20849d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1973c8d-50e9-4b47-b913-824efdba7048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda75e73-15da-45c5-b3cf-e38cb321a54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e784826a-d87b-4520-8a0a-4e1f1ca3ca38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81e71e0-cee7-4490-970d-b114b087b4f4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e623b8f6-5a9b-4853-b548-11a3cca544bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16add7a5-922a-4ebf-b48b-8cc8c3357f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e568a4a-7289-4fa1-aa82-2d77391bca79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1ca5c4-8862-478b-a8a6-862ee27c9736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25480496-0f27-4bd8-aac7-3020816c9483",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eaddaf5-e217-4179-bd91-de37f1d8f993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac36132-ac18-48c2-a271-8cfab4e025b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01fb6c47-abcc-485a-bb00-d8a75af7bfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "519fe8e5-c6fc-4199-a4ad-b7013b15f7fe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "99824ec7-f82b-4045-a211-d9793da821a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac580998-c9ed-4140-a286-b16afd267647",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce7e59c-d969-4169-8924-c68622eb7310",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "eaca590d-a217-48a7-8f32-c69a2a08d519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "105c8af6-7bf4-4e9f-b12f-195612bb5dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29b8c4fb-0f95-4391-a083-3822ef3d07c3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2c10e9f-9db1-456c-9e55-0281284a78b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97dddfa8-89dc-4b3e-bdcf-0d2b52c9e9fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "495602ed-e5a7-4741-9f01-baf137e792ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5392823e-d5c5-4fb2-bb23-1a6bf271cd11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48b5eeba-180b-4c8b-8f69-9fc190287700",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c822f290-0f2e-4cc7-a7d5-950093954e0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58098d6b-c3a4-4029-a939-b39fcaf668c2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "856fadd0-19f3-4106-819b-295865ae30ef"
            }
          }
        ]
      },
      {
        "id": "e9f9c34a-a352-43a8-b498-eb61e35b5498",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "ceba00c3-4154-4a37-8da2-684294d07431",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6a35c3d5-cc00-4fac-8368-faa85358791d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fd52a1ad-36bb-46ed-8356-51f9faa3f48e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764a015e-c0cb-4299-af03-01678b821dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e84272-8803-4906-8c3f-2f2a9c83a145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e596169-560d-444f-ae77-564779cdb2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4638e5e-911a-440e-a3cb-5aa6b6b2bb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f20108a-cbbd-4f1b-b03e-1ec1cf32432a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906dd5f1-7f8e-446c-ab68-e8db3bdddd03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84fbe7fe-4b80-4fd8-98d0-9d8b929e9a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04d65ac-504f-45ea-a06a-acc74d2642db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "430a2003-3d0d-42e5-9922-25e02121ac6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b8758b-61b0-49e5-8dfe-e8afb62db019",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5800678-4149-4b89-a8bc-6d0f869b1ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133a6f93-4f62-4840-84d9-d04a7cd3755d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d24315b-5f26-4667-86d7-e176e4aba5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f366345e-a00d-4665-be6d-40a52387e372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5928ef-ae1c-4f64-9743-bc079fb70aa8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106bb30a-2968-479e-928c-b160f1d7aef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a295c7c-d74c-4a92-bcd8-90d226619b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b947c820-ef4b-48ec-99dc-22bb0678ca7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b464f5f0-284c-4d5c-ac12-647a8373c57f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09d22a4-9897-46ab-8a48-558437c0da9d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d62ff859-8e13-481a-844c-90e5867256a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f73b9ee-8229-4cfa-8767-3999039e753d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e946d46-ffdb-45e9-9648-92e6b71658a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "34d90d80-5e16-4629-aaa8-b24e810f4c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b6aad4-5d74-415c-b13e-ed8c0635a845",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3767f2b3-70c9-4eab-b4c7-73ddae4ee305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d823f16e-5c5e-4bc5-bb72-95b9ff0ebdf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f666d9-daa0-47a1-8367-e6acbfdab10e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b57ad32-e927-420f-b744-8cdbd9cf3119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a492037b-9f5a-4b03-8cca-b16903b096db",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b83ebc-f7ee-48af-aaa3-c7ce48a26c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6182c65a-7c90-4cee-80eb-344333858e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274ef757-bf1a-484b-a7a5-33640be28c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e1f539d-84a7-4c30-a372-ec6fa75c3856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3bed2e-35bd-4356-a118-5f2154c29097",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cbfde87-9186-454f-913e-a95f399af532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029de469-c751-45e5-b036-b388f65a30f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e970b271-e5cf-4159-accc-ee24f88daddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c4e27a-3114-4218-b1ea-9b26ff4a44fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1448e193-a0f1-4b7f-94aa-93eac459e784",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ef5dc3-ae32-46d3-9fad-ade557bb8960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f30a7ad0-1d64-4245-951d-12754b28ec66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb48a624-a403-46a3-889b-a965eaee2075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "432aafcf-e1a6-4003-b5e1-c858d6d858a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85612c41-cce3-4dab-a665-1c64b52e9ef7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ddcf3d-a16e-4e94-a1a0-f4076423ec8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece0a6ee-03ae-4950-89e4-44493dd0f259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5a33bd-b808-4585-bfb1-135f39042929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc89c21b-f58a-4464-8bb8-e8fc19568483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7e5064-6b4b-47e0-9d5d-a7c3e869226d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21a818a-d622-4e7b-92eb-042c2402ba93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbc5a8a4-f4ef-4594-bc5b-fcf3aa90c6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e20e20-7fe1-4877-9df5-3e78dd79109b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4d944c05-c132-4531-bdb3-001e22b9b70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6780ef22-ca50-485d-bf35-03d88dc5d4bb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2652b3-8e31-430a-9a7a-d43a0abeef3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d0df6f0-bd51-4ead-ab6f-756db198df25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cd3178-d61b-4232-96bb-a34a1357324a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb65ea57-a49b-49af-8d54-4e6c0b73cb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cb15e9-7550-47c4-9d67-93bcc23d5585",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e906daf5-7699-498e-8e1e-662cf57e5133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095b51db-e009-45e5-8e0b-c08697495bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b2276c-89d3-48e7-8e4b-94c878965a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9ced56-f171-4f29-8a10-f4d9c8192c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df5f878b-0877-44d4-8333-692fa5070f43",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a900aaef-aeef-449a-8230-60ae9662f072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05edff9-057e-4933-9856-316bb8720d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a6e56c-2317-446e-8c2e-0c72058f5fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "50f6cf99-ef66-43fc-abe9-774c4d69908d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4adf5dc-34d0-4678-8415-833a8e7f0280",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b147d80a-8c77-413d-bcd0-e33daba27075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f24f88-a0b1-4f60-ba80-767319579351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda03f3c-163d-4f19-9b9b-18a61aa74318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "587dada1-b3b2-42e5-a35f-cfb66c8fb113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae3744d-8871-4eef-83f2-4f738106d7e9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede9e09d-3b94-43cd-9982-f7055b053ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c829e40-3a06-4df3-bfc6-b002970a01f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b12146d4-0efd-4cb9-a925-2818c0989661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a501f5-c4b0-4f25-883c-c00bfdb44bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9561bb4c-1d77-4cc3-bc29-e42580a5b683",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcd74f9-8aeb-4d17-90d7-b5c6b88e0ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a208d6c-c970-46cf-afe0-4ca094d4361e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0ca5f9-af0b-490f-be6e-504245b46c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "129e602a-07b8-4a8e-9bda-1f6ba85ca91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99586a47-132d-4fd7-a6ab-ffe44d0a3864",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654ea68f-6d4c-427d-9ec5-b0e9f85c6114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ec33f5-8666-4703-be6a-252fd9a6475e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400d522e-aaca-456c-b904-15beee5fd2b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f145b64-374c-4a08-9660-aa34bc5a994c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6db8a8-198c-493c-9ff9-388569f41a71",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e960a3-2de8-40c2-a8ae-55909c263ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67bc0298-a0a4-46a3-b946-faeb418b4796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad8f2467-95b0-4389-b1de-f1213632fef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb47cc8c-536d-40eb-9432-526b6659eec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b48958ab-d0ed-40f2-bc58-908fe44bbc74",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9e4e62-f702-4968-98eb-0f32f30d2e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc51aeb-5f4c-41cf-80af-85223c43eb23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83aa4d1-fc71-4394-9762-665155263ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55489e49-f784-46c7-995c-fcf867b89cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16435757-8719-4081-ae2d-f3c5b71b4cf3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed442188-c3d8-4577-aa04-bf0e716b7cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f2faec5-0462-4a41-a407-ad01bd66414c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9a3f55-de2d-46a8-b05e-e90c5c6c6c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d460788c-7d55-4b9b-bbcd-bcc580573e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8034dd0-8630-41aa-9e64-e28a3529878d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e25bfa9-5d7d-45be-a56f-40f610f58dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "833b53be-95b8-40b3-97a2-4b3ccbb81013"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e9b5f5c-624b-4cd7-945c-843f1e75a2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d06f81c-4717-4cc3-9e2e-7644d80e8667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a7afed9-5e73-402c-a5c4-2fda73b3e191",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "881edb0c-4400-4ca8-9995-9f6b5be59e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f6d78d-0284-4840-9b51-4d09f6503d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "971396af-9c18-4b4e-a7f5-f9f04b7bfeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "334ea86a-6c20-4b8d-8bbf-672f34098133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a295f2-a648-433f-a2bc-34ab777ede2e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85c1d4e-cb5b-4367-801d-c5ba1c1246a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a74542a3-e4a5-4ad6-8eaf-eb3c90041608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e51e7a1-a021-4682-9044-ad8467a7eee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d190889-bdad-4478-bf0e-eaa80586ff1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae61c008-773a-42cc-9fce-5a786e95946f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250c5ba8-1dfb-421c-b842-299be9b9908a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08805b3-b0db-4f74-be35-4ae63199b0a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afc50fe-585a-4bec-ac9b-8efabdab9e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5de221c-01b8-4fbd-838a-d80f69182155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ec28e5-55e3-4b9d-8383-6d3652326349",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902c7a87-be85-4754-a9d0-085fde810163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f402e2cf-90b0-4f1d-9409-01b3cb31ce2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0d6e2d-344b-41d3-8198-73df2df1a62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ededaf82-7c5f-4fea-a70d-3a7023568fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfde2df4-6638-43a8-8651-2e4e9480b2e8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a2f73d-1b83-4833-9979-583324798cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02604021-c452-4897-8524-9ed4b42d6d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b99806a-f26a-468e-9271-bd34b2a17fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7efc16-2b01-41a9-9e87-918514230886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37916714-77a2-4561-89a4-e5fd656a3eb6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339e29d0-7a3a-402e-8e9f-af82fae7c54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4206630e-e071-4601-9de2-251262f600f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293f1a5b-4c42-424d-b9fb-9329f13a9df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb8a6b6c-81de-4244-95c1-61a8498d8be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59a07f6-b700-42f4-8846-7e99c887fab0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae2cf79-22e6-4121-87af-5d5711821b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a37e8c-8c53-45c2-be8d-b83557438783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784b61d8-4e15-436b-91f2-bd45fc5a3c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d2c647-f776-4f86-adaa-21b4083d0024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b019c0-3c88-42d3-8cb7-8349c50d9228",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a24da5-ed96-4e1a-be23-c3741b5a2391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49695541-9ff4-42ca-b041-74423059e5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a85b1c-eb9f-423a-b68e-51315743cab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ecc1716-5823-4b8d-b241-47b7d0ac4e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26eb3854-e39f-41b0-b25d-00af66f24eff",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1e092b-d69a-4f2b-8d07-d39746c829a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207d9de1-ae49-464c-a428-ba2db4b32ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef552a3-74d3-4e20-9e1b-0c9a93bc733d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ff3e96-cf13-442d-9e96-d1c95156eba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d083f124-f6c3-49b9-8304-4f9dde065dbf",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577fc88d-082c-4ffc-a1e2-afdae9db2e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "840dd0e1-8351-4736-8288-fb9deefafd41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0895f5b-0ea5-430e-ad6f-17a96557c7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9fc014-9099-4832-9cc4-fb115fee7266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea5e198-cdd6-40f4-9228-fc0fd51c681f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f307752-4a02-4924-8b80-4f8a376e7b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4142bff0-5ea0-471a-ad6b-c74b6670a14c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f1ce5d-27e1-441c-8a31-1716a9b90991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5109adc5-81a5-4d25-ba6c-5243bc3d5516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a0a274-34f2-4e59-9bb4-24b02610b74a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc3b977c-90c9-4104-9179-dcfbc2e000f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48398bb8-24dc-45c6-9aee-387cf69588c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb372dea-56e4-4313-a938-1b2a2366c581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7a6509-99d2-4f4f-b806-d1d17eb2656a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf7b220-b708-449c-8485-788c62acebdd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638de7c7-2293-4cbd-a7b4-6dc0a7944a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbcda6b0-c044-454c-8849-79503a727df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad5d564-7145-4ca4-adbd-cbb0aee69f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f479a6b6-7836-4c97-ac7a-6a600fbc1c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9edcffc-30bf-4f50-a20b-5d734deec9b9",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d72676c-c00e-4e6b-a644-d68da3a546d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "013256a3-d00d-4760-b308-312de15e6648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fb4c1e-ed59-4a8c-91e5-05aa880ff9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98912961-943f-46eb-98fe-f9a3fa9c35d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f9e053-07a8-461c-b1db-54c8d412212c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59a02a8-ad2f-4703-95f9-762718f69c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83bd3a3-daf0-40fc-bf49-c7dc44ae094c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88138011-dd6f-4fb6-9ba8-d046630e3e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5b7641-18a3-4185-9d3c-041dd59fa100"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dfae7727-571a-450f-837e-d588cc4d9a67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad789234-6176-4f5f-bbd3-6bdf40ca8dc1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8413fa86-738b-4e6e-9709-45935d1c1d74",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9516f4-8447-410e-a74c-302bcc2bdd09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da45fbb-7843-48cf-9cb0-a0a673a6c992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1439368-f463-4ae7-ab40-a1be0c65de0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a559237-79c8-4f68-ad79-4bdbc2e2ef90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "410d4d08-13b5-42a0-bb6a-61d4e00d9a5a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8186e3f2-b4f6-4112-9042-cb30b6c33320",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67006ec8-df6f-4654-8c26-d31aa28fc178"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a817010-2e12-418f-b320-7b685aff6c2b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5d8d812b-7631-49e8-a986-a68a2ab2107b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d03b3cb-50ed-4edf-b409-d03cc349c59c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3b14c0ba-ceb9-482e-a3cc-c1956523d6d4"
            }
          }
        ]
      },
      {
        "id": "6d76b994-f78d-41b3-8537-cc786215a45b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c620454a-e51b-4b25-851b-58761cc7458e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b82d134e-0739-4c59-8332-376705baf737",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8951fde9-994e-48f0-a737-4637801cf972",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9abd60e-cf6e-44b6-846a-ae41787c0c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a41dea-0cea-4388-a808-5ff116e2f39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd6365b-92f6-49f2-8c51-37bd61a809ee",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87572996-31ff-41fb-b9b3-44376ac82861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c806e2-5302-41aa-a9f4-596a2d34e784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41069212-79a8-46c7-987a-40c5831cfeb6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f2737b-d0a5-4207-9257-39c4f0e2d1d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d494de8f-3bf4-4c11-922a-7638fb45b4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9977e18e-4bf0-49e4-8354-a8bd6cd4f3e3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a6c1c4e-0b14-47e5-a46c-640c8db871ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a265ab6-d560-4161-ae8b-18bfed64769c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70513e90-7805-4bd7-a0a4-1fa898aa52b8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91fc041c-a27e-4a71-a347-014b88aeceb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5b9181-62cd-4c39-8405-37c0b0e25a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b35f180-aa3c-4ead-89f6-920d9faac922",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23f5903-8d43-4c78-bc02-81238cb5df30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95fc577d-e746-4509-8328-b680dca378f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbdcb1e-d181-4815-8d65-1f4b0b806901",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54b9df3-93d9-46e8-a578-5680ccf3cf87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7ddc1d-cbb4-4cd5-a9b1-ac3640a8f104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d103c49e-1ebb-4ccc-a824-d313dffc31c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f24aa5f3-3086-4c7a-8207-1243b2c0c627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994043e4-1789-457a-9a5a-a53f54f628b7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967a6c5d-462b-4e0b-9b8b-fde0e8354604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16b62510-5c9b-4553-b4c1-ce0520e51be7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f692cd-3f22-4fef-82b8-3e972d4e0d96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df321c9f-d7b3-4a99-b856-9cb68aa683c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f2ad8b-21e9-4d00-8307-b18f17051e35",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2456263-cbb5-4341-868e-9e5c1560fca6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f006375-dc87-47d9-9c5e-889bf4ab6168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "366911f9-140b-416d-bf41-2118e077d31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9dc7dac-3324-4928-849a-1c0abf03a149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2881bf6b-bc6f-494b-ac6d-9cf0c9ad72d8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cff3c37-e257-4d55-ab55-271a1b74efd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "858eda55-31b7-4f2d-bf96-42eb31a3dcb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4c203a-4262-4d81-8d06-562d784a4c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14caf896-dfb6-4000-bb07-7bb6406cfc88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c3f98e-6f01-4b71-aae7-750b8283ef28",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9a6eb53-4d18-46c1-b6b3-f7fe27c40656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b01683-052a-4d11-a779-6d10bffc601b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0594f379-0766-4509-aeb6-c2a2c051996f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9047dc9-c423-4abb-8a57-dc9b66f7f742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3230fe84-b7b2-4458-89e3-9a601628bfd9",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be89636c-0800-4ec5-90b2-4729176ec745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c370b07-3a75-4965-9ff9-863bd3fc828c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e01873-a79c-4fdc-8cc8-4009d8753bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad74e6e-3d18-40ca-88fa-8fbd1e2f6efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c093e3-9b66-46ac-ab40-38803732b62b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61ddf27-dd75-40dd-8eb2-1c754af00443",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26b64d5e-c468-4022-95a0-d200dd9b6dba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5578716e-85e5-41a2-bf70-40a015e1be21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b28c0f5c-7f47-4bb1-9f31-b9c93372a8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35e2b63-a57f-46cc-9c36-8a5507765c2f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02eae5d5-3d22-4ff0-8ac4-8043c91d194c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faee9ee6-3af8-44b9-93a6-f0111e7fdf59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16a5f9d-9a54-4a36-b2fa-788a1cdc1575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75508b6f-174a-4428-9d2b-2792d5e1965d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9f2b22-fb97-448c-8822-bea8f1fe2634",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a9e283-8ec0-4dc8-9ee5-c5b7aa04189f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f01fb133-4004-4ed7-8d7d-2b7ed3a2cc49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14ecab1-9286-4c7b-8f8b-61c9b9c9268c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9087aa8-420e-435a-89af-34a8c1806095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3e2b63-e6c2-4c66-881c-bf935956e2f9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0430cba-f937-416d-af6b-52f68ae8aa1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2cfbeec-012a-44cf-a973-a6b33d58683f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cfb013-5a50-4353-823d-d7c9fbfac6ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e29c46c-b905-451d-adfb-d68b420838d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f08288f-d723-4e94-8434-11afefb6a154",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdfa24f-5250-450a-a10a-8f9ef5f0bcf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a12c5264-3004-42ff-8f9d-8fc50942a0ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19e6b3f-5543-4d12-a41d-6cea501ef534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b11f7c7c-70c7-453e-9a6a-8111bf0723a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbb19a5-594b-40b4-b3da-5b2156b8f005",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484328df-54ec-4c83-8941-68d8280faf11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e60b520-0e60-41ca-9421-f2d049899630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4514069a-febd-49eb-89e0-2466545da48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0a2098-af69-4c70-b4bb-4fd68a33c85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a55fa45-64f2-49c4-90e2-9a6fc4d2ca4b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b836b9eb-d4fe-41a3-88d4-f93d371cf8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b706a5d4-c8b4-4e63-b744-a6ec1f92698d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1b52fe-8509-4163-b981-87c9479a7597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ade3f9-b929-429d-b58d-4b9d6e92d3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8178441c-b670-47ad-9491-340a8cd32c07",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810a9e7f-b4cd-4209-9738-7a80c98cbd4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e8bcee-613c-46a4-9d8e-1e25fafe5eb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e8fa92-ea71-425e-a7ef-a8d91fb85605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c2759e-6940-489a-81eb-375f42ca40e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6308095d-0770-488d-997f-b8da7d4873d3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc3d360-f73d-4220-9a78-268652b73c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16119666-73d4-4b68-bda3-7cda7a105ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0407adef-af95-4340-bf2e-4089e559814d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24855550-46a2-4f6a-b3d5-da1ccc1fbce4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8162e4c5-0a5b-4417-9095-6402bbcf7c1f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a65e160-d7ec-4764-997d-7c05f3bef741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13fd14ee-6742-44da-a9ac-f433c3e831f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8023352-9bb4-404f-ae0a-c5c66252b57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266787c8-9433-442c-81b1-38c26e978ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885029fa-66d1-45db-be81-2a3a65a8ed31",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da7cc69-b974-4b5c-a345-e29631b8b4f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bca7db9-14a8-4452-8cac-569e15d36cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b646ee-59f8-4038-b6f0-744f9e8dd996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755370df-9ed9-4bfc-9b02-17e80b4efd29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bfe2a1-c3a3-4aa2-91ee-5706aa4d1a49",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4b94fd-f9d2-4509-b6d4-d49db0fee71c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23de2a23-cb17-460b-b4ef-ab3727a19428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "081ebc8d-fb50-49f9-9c6e-c3c28d904565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a7f340-f6ae-477c-992a-c8a5fd1b36c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74bdaec-2cd8-4e96-9ae0-1d5af74aca4d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4290cf60-5a8e-41bf-8604-7fb0fee696ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ceb1ea35-8ff5-4850-ac20-e10b3d8e9475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5378607c-95e6-4a38-9df6-10b66a5c9b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db60d692-d3b9-403b-a799-583121e716dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d3d927-3f23-4930-a6af-6bd866ba6d02",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79ddc8a-7604-4e0b-ab56-9da9e1bdcbc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2ebe0c2-f2cd-4e08-bb51-c988617bebc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0543fc95-2b46-4fd6-806b-b48d1360c3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba56757-06e3-4cdf-ba54-a3da443bef7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa12263d-7d31-4160-b048-66f2ebd63901",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5212bd77-fd0b-4ec2-9f04-8a0e49e3730a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fec405fb-7526-4832-bc60-9c535472012e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "858599e0-3ef1-4513-9087-4f28280e5785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32259bf-08a8-4d66-95ae-c19ca3f784e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d243613-7b07-4261-ac10-7a19100cf87f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66edd4f7-ff37-4a16-9506-391e7002888a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eacf4869-1e8b-46d4-a6d1-924d27325b47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f607f8-2331-4827-8e0a-d01a21c799dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef80060-e2ed-4647-ac88-fe1275270a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2b1f8f-ef17-4e79-a34c-15d65faa5bf3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de14b8a-674a-4836-86ff-e51256fc83ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28e8e5ca-7adb-4fa3-af9f-c5a7fdc42c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6c4a73-7a19-4be8-b9e4-3f04f7c2577a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417f690f-ada9-473b-add1-4c6ed3420462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ffbdcf-9932-4fd2-9510-22742cea17f5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf95032f-be1f-470a-9f6d-cdd0ec88cf97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c62112e-7284-4d06-9ac7-81d319aef8c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c30fb7-a1e0-4e12-b53b-3edb7c5f600e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c8c354-541e-4dfe-b80f-599dfb5dc208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16d5d46-48fb-49db-b91c-7eeb2d3ba5f9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5822fdd-ed8a-4f90-b846-738953ae8cab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76d721ed-0fe9-4d40-ac85-1a8b35cd17c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3200dc7-5dd2-46a8-b79f-c71b5911fef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e9dbb8-9156-4eef-a82a-cfabacdfa04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1385472c-de0c-4b03-aa0c-26f4c9da805e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0e81e6-9a3b-4b80-bf74-e318ec9ad20d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f3c2a82-5b19-42f8-86a1-0ff994c2d051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f53ddf-1ae4-46d0-afe1-c66c0680a5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c002e777-ef57-424d-bd43-3fcf292a5603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af888622-f2a0-4113-8381-7b1fc2253fde",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc39646-c108-4a37-8cfe-950cbc67704c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00507e14-95e3-44fb-acd2-1bb2e02d770e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed217728-153f-4ea8-8373-8a03fb6b2183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391312af-9546-4e13-bee6-62bc32a8c68a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "333ca6b1-c433-4613-99ed-4aa8d33b9f2e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350ba082-ce53-4e28-ab11-45b940ea5fc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1afc6d20-f51b-48b6-acf9-e13ba963ddb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bffa13-e2d1-49ea-a4c8-ddd3b194b874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc863b6-b887-42d2-8037-2424cd86eaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b62ae0a-b950-4339-aa2a-fe5ac0cf5dbd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b27ba4-dd09-4cbf-9b70-6be1242e2a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b72f496-0bae-4e46-90e4-d343bc7e2a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f3207a-9ffe-4764-9ed5-b284a8361d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5260cb9e-85ef-440b-bde2-d1d94e4cced7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4188f823-15ce-4b44-b407-00b5326d4fa2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c026f96f-10ca-4d43-817e-fef44c450c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79772f5f-44b5-41be-af9e-47cff3399f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7d51ab-7f93-42bc-9152-9ec074ad4c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14443729-1816-4450-90ea-52e2b7041c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0554bbc0-03db-491c-b0a3-763a3daa5bbb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd606e7a-6866-4ed7-87ea-a0979402c236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b881ef5-6c10-4bca-822d-d794aacc1806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0056bef6-37dc-44df-b69f-a8cd1d673a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522e31e1-1fcf-410a-98b5-5f7b711e76c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0eedd13-c4f3-4e24-a44f-68ebceeaa77d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc2df6f-1cc1-4f18-a824-3c70ddc9e5a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d9eef0e-8a72-45e3-b2a5-12c703d01fda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66478cfe-3938-4882-bdc3-f74b65946edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17d2897-c78d-49d7-b4a7-6ce9346e83e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a388bc-1282-4a0c-8d3f-25ca93965d63",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22412ee2-7926-4cc8-97b3-88c0758f6944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39099618-abb5-4be2-ab90-1681f422fd5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84361ad3-dc54-4268-8307-87493a29509a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ce0728-9499-4c43-a6ad-24921fb2a359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58d6832-2d13-4930-9b5c-9a694c4d87c8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4add1051-c10b-4efe-8f8f-33059a1d494f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7446fda-34d3-449c-9b4d-9bbaddc20533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2deef8d9-1099-4a4f-bb2f-a0bf7f4f1a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d96592-faa1-40bc-b8d3-64a6221857cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3e86f3-0283-4a65-a1b2-c499a96e24af",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd319843-0cf9-4343-9cb8-43192722ee6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23014601-5126-48ea-b46e-409a1243b93f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0b4e95-64f6-4fc8-b9d2-8476d05303a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b4e033-93d0-43ba-bb9c-767aeeba8634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62200ed-9a29-45fd-9cee-62e36320a820",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "241aca65-bda9-411f-9d8e-a7c86afc4100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbbc38ac-5506-488b-a03b-a2247a397136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7655af0-a82d-4b8a-aba0-1539e007b1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4efd5565-c5f3-4c47-adaa-01e3a50e191b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de5c632-451f-495c-acf1-0cba931597b0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12084d3-ad85-45b0-9175-8a15e10de756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bef6b982-20fe-43d9-90c2-df313609a83d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f01ff1-a270-49c5-b465-37572ca346b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947aad93-2342-46bf-8d2c-a666bc97f62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9527edd-f9e7-461d-a660-57889f886847",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8576b6c2-4acf-4205-b217-ed27bd213f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53cd959-2d86-41ab-8fc7-16c873f75891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14969bf-7543-44e6-a3f1-360e14200b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f799738c-c9ab-4d6a-807b-5a6519256e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68e24e9-60f6-4519-8cb3-64200f670eef",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0261cde6-5982-427d-9552-4aaaeb1fc0fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75fd35dd-b496-494a-821f-ff0d3e2a953e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770fd962-2df1-4c44-9568-f12a50470f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a8f856-a9c6-4378-a506-0a75579e7ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392163d2-b5cd-4b4a-b949-7e74481ea625",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8ede09-5916-459b-b894-c3ba6a5af73f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0308f1c-081b-4d82-adcc-36d6b26fb944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e381f77-377e-429c-b096-c644c7892544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add49ec8-2de7-475a-838f-07bd55531e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e12c28-65d1-4916-b4e7-4673aeda3e47",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c104c5e-8a28-4c63-bad1-8acf34ab9514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4565b1-3adb-46cb-a4d9-e48d4ae42182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e0c571-c351-4e3e-8292-3db774b6ec90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04bb4ab0-37ea-4bba-b86c-89853535a482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75636b8-bca2-4a5a-adac-5de761d91b8f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8745afb1-c00c-48cd-9298-aa2e4f939557",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e576c5b7-36e2-4df1-9fac-3cc981c3157b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf41dee-58b5-47dc-abf7-da94517e6877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985e1fbb-b7a7-4501-8422-35ad96bd3db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f8e13c-4e94-4aa5-9652-463b9bad2b5e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4aff123-c9d3-48c3-aed9-3b8798ee9318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2205b4-51b6-4e32-8474-ec948bf3630b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b78106c-cef0-44c7-b1bd-81f1362523f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b81633a-287b-4f35-8cf7-1032d50ccac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db96df01-27e5-488f-a82f-b5e511039e72",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b8e77f-ea00-4871-aa31-bf60ea4c7d2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed55dfb5-157c-48a8-906a-5cfa4d11e451"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5af28c4-d933-4875-8d65-24c25cb71e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949ed33a-359d-47a4-8a6f-7a78db0b77db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4142d2f2-3700-492d-9bd1-49ba0309e7a3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5965d5-4989-4e8d-aab6-b038c5ecf574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89dc7a02-c94c-4719-b8fd-f695a97b3724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4701e7-fec9-44b6-bcd8-87e1f16b4e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e2ec3e-9025-4958-85e1-a246f6b9d33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637eec47-2017-4121-afbc-a31027c184c2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46cf0a2-ee12-4c92-922d-67edcc528118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0af53f-a71e-47d8-8497-8dd181183ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ef0627-3b82-4770-9fd0-3d0cd543dca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c41465c-c7fb-43e2-9551-6ee767da8133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91410f7e-ea9b-4faa-84b2-4528c139ec8c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ec0c39-1e9d-43c0-b821-c4219dcea070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f586c5-5ae2-4b6b-b6d2-8f164374ffbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbc3711-389f-4c09-b3ef-2f3ab3f7e563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda1bb98-6421-4bfc-aa3d-dfed28737b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad18f417-48c3-4bc2-9dcd-1921129bf465",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b54192-ae26-4356-8fd4-f6692d31c425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369afbc9-a479-4a9f-af3b-e94e42b95647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97525589-c2a7-46a1-a485-5cf688142e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabab23c-479a-426b-a99e-7bae5cfd36b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eaa97fa-80d2-430e-9c00-cacefa3eaaff",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b028a1f7-ee32-4a97-b8bc-3f7c802b282c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0137a946-78f8-4b70-9647-795acf1c2b16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25067edf-d021-42e3-b367-8c6fd7554ea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ee19f3-9f62-44b8-9925-3acd588547be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3cbc71-d656-438b-b531-d7e69fdd7937",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e69c813-eb0e-4f33-b31d-9a22ac13e171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab54f8a7-9c77-4db0-8c46-7a194719352d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "306c6726-bc7b-40dd-a2d6-017c6199ac12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42c9e53-1699-4f97-903a-adbd180b004d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab34cbf-7773-47f1-97d5-0dc612513871",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17633d68-93d4-4096-b511-59c905749a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bccb972-785b-45c4-9241-473acdc45788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb09625-a90b-483c-ac40-f9e0f4e12bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ed2ff0-d36b-4eb5-a300-534027a80204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37731a90-c345-4f8e-8df5-b62999b5a38d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc3226c-788d-4969-99ec-e144e3223ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ed8123-f045-4de0-9f78-49754cf0ee95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf45d3cf-edfd-46e5-b01a-df735324db08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "679fee70-bcae-4630-b2c3-b3550f200c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e405cb1-9253-4e24-a5d1-6166e7a0d3f1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25299615-578b-46ba-92b7-315718229cbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c650b349-a437-41b8-a17b-5714a8d1265c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ba8518-d060-4318-93be-6773b912a7cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359cad3e-4f53-48b8-8fc5-4b58e1daa70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96300101-ae48-41cf-8e26-c3667f0a96ec",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b16123-855c-4b52-a9e3-9467889a81f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1f6e95f-bca8-4530-b76c-eb1cb7cfd793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefd5155-78ac-49ca-81e4-0e6354dd7d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3599525e-72e1-4f8b-8d9a-03d63c4f573d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539996b5-ac62-4461-ba3b-3ced7c815606",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c67d11-a627-40cb-ab5d-4d6d6d87293e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14895448-cea4-4927-9c7c-8248f3ee2477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db36e57-bec8-442e-a94b-256e754fbd27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9096e1ad-04c9-47d2-abab-5a8ba7edb43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c352ec1-2654-42b2-aa42-0bd6abd62c65",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e945fb31-f435-48b5-a54c-4414da323741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b41b6e1-781a-470e-b688-5afa37c0d1d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b99f84c-8aea-4ab8-8f9c-0d25d53ab5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b480e339-899a-4521-bca5-9d269dbd5925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbba0eb-d250-443d-9110-c209233792fe",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc3d697-4f65-4d9e-b548-cc5d1d997110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2ca78d-6f09-4c3b-aec7-8a403ab31cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f6a230-04b5-4d6c-9615-a651a81a287d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c6014a2-a110-4f0f-b211-80a8fb06244c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9a2845-fcf1-4bf2-8ee4-4f3cbaa606ad",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91319318-fb2f-446f-bda1-106e8a218ed9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e5db6fa-21e8-43f2-9d67-6de014c3d8bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6f2bd5-f947-4333-9edf-ec778ab61d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4240a4d9-796b-498f-aeea-483d86a30ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dbdc9ec-afe1-4d94-afc4-c5a59dd4898b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13db8d26-0c05-47fc-b3d1-b48c10fa608e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2f43063-0e87-4397-9cdd-d6b308eaf30a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0005c59-a079-4fa8-b592-b3705d6e6a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7ff36f-cf92-4b38-80c3-3cb2f06318b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c324d156-e744-4644-8a5c-3f6674e63daf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8416ad-b2e6-42ed-a346-b1f2b863e766",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc706afe-acbf-4e3b-b740-f699c293efad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6652c88-98b7-46d6-b830-337f87feecfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301dddeb-e2b2-482c-9c17-7b8450815565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc3e4c8-c2f1-412a-a10a-3180f5fc5d64",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319e0b43-b89a-4762-9316-d3c9f94c6099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cd85b38-77c2-4a4d-9224-b47491fbf9f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e22d13-410d-405d-977f-b7ed2676f48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ea05dc-1a11-44b2-936c-419ea5fac165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0d8599-1520-44e8-a591-a5c738c1c55b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52c1c83-214c-40ca-84c7-f493e054b72e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56ac704a-00a4-4f08-9160-0e8e0921eff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "111c3e06-500f-4a54-8c51-6e25b725776c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da44fdf-74d6-4e1c-ba07-5f32be9998a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b2d921-b36f-4adb-89e0-05533fe49374",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368453d3-aeeb-4baf-9dee-bc1db6fadfe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e5a5e46-8f2d-451b-bada-c3164cd153dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa92d161-31ef-4c7a-8b90-6cd9209ca710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87564747-a1fa-4990-a8cc-3963dd4bbef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d72bb41-9776-4279-9c2b-3701d9f8e140",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1711148-c892-4528-bb96-a1799000617b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad85dabd-3ea1-4990-a6ea-792cc499d049"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85595fa8-b70d-491e-9561-fd23eea493fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d730abd-0cef-4c0b-a521-0a3557e10f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84aa5e2-7a3f-4407-90f3-1e6b29e76d82",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59faf20d-6957-4bde-83bf-0649b97f367a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46192821-cbc3-4686-8819-ecf55c15b400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f700b28-fe22-43c6-aa2c-39f4a3a4467e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c530410-de7e-44ab-be7e-34cbc714d19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060ac568-aa16-465d-996a-497ed46881b7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269afe42-072e-455e-bc77-ea4ff89b717c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03581c15-8bc7-409f-9f0e-726f3f9cbd4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36908feb-cc20-48cc-ad76-51befb471eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e50d527-7aa3-4c4e-9457-09c3691156a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196e07b7-d189-432a-9f2e-fd2f98b0c9db",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17563a4d-7386-461e-ba96-d39718323417",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8217403-cd2e-4f77-8bf4-01f8480613d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ae1178-eb30-42d3-9617-29a1f0783526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8bb3bcd-a1a9-432f-bbf7-63aac70da17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29520b2e-2462-4c63-8023-3cee3ce2bf3b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25939e7d-250a-442a-8b49-e79a22c15ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62943235-0904-4e9a-81d3-b251989d0ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ec8c54-3580-4dfd-a53c-c0f90dff0c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e753e088-a98b-4d3e-a629-0ad780b68f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945e2a42-647a-4f92-a367-8f0b19051ca6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f67df9d-f6dd-4096-9117-78ccc40c9556",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ff71e6c-dd60-4e2d-9b75-267e739c244c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73011601-772f-4097-9e69-4deee3703878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fcc3f3a-51cb-43f4-909c-5e17848a5f89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32020358-dacf-409a-8787-78350e74fafd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bb94c3-567f-4dee-a40e-770855f58979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "219c13c4-3c55-4008-8072-94f7928d63bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a77f667-5293-4809-afad-9415f358d55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b409066a-7805-4e9d-a581-e775149e0cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc52c41-8376-445b-91a6-b8cb581d9a34",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e13064b-fab0-4320-a754-9cd17ccc4d55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5773bd37-6bb0-4875-b54a-a2d89bdecc7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4726c2e7-928e-4f72-98f7-fb12c767696b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ac380ed-e110-4c2d-9ba8-529055ac6c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4dd2ef9-3085-4f65-9d73-671ceecd8780",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e262b23-ba23-4e7e-93ba-47024a6f2a8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abb58724-5f57-4f12-a743-1db648eb3477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ba180dc-24e2-4de3-86d6-b4e20175acde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1c4ed06-f80b-49d6-9148-dac62d1663b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cbd326-c863-4989-ad60-dcd54ca6e48e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb64b29-aa35-4612-9980-8267f5ce6ee8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73cbeb05-8d31-45fe-9e32-a78724be519f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1796a0-0969-417d-b735-0628262211c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914f3b5e-c981-459e-8c3f-ee930bc3b704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f0cf59-5eba-43f8-9495-c780a096be6d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bd6d47-f3c0-46ba-b251-5b9ebfc3bc84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "127d35da-714c-47d2-82f9-69fe8e1957cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "820a9864-384b-4519-bd52-18c4de352b62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f5abeab-a39a-437e-82f1-251999583b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451b7b5e-6ebc-4be9-952e-09a0e38b84e4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d568ddf5-811a-4685-8607-91fb799ae0e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b998785-bfd6-4ba2-9a66-2f575428659a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f889f673-8b3a-4f08-bad5-53f11c6a7c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79fe8ae-5277-4b70-be0a-7b032a398e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2fbb59-5c9c-41a9-8709-af0d1002ee6d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527f5e4d-83d0-4a54-81e2-e2d4a1cb097f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae2b11ae-5cf3-4a46-bdcb-7ab82a3ddf92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8541a01c-bcc0-4796-b3d7-25a7eb5211c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4527f34-ba4c-4c20-ae3b-36d775fa4fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c093f909-901e-4e1d-ada8-7abd508c115a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a4acf0-7c95-418b-94b9-86088811f4b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9485d494-9013-4638-8860-3f88e8f41f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08456f2-f692-4e73-a0e6-6c77a9e3de21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2be15c-8d20-45ab-b607-f502a2617481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3102c71-5a7c-4e4f-8051-331479147c1c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf99ac3c-9470-40ad-ac91-2d67e6b3cbec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18c18201-9acd-439a-a033-3ac6fc8cb596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e48a34-d42a-4a28-9b12-cc9958b44c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8158b273-690a-4c4e-99e9-2e1bd0784346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839a2d7f-0009-4274-bb5c-8c0e89643ae0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a156a7-eca2-490f-9783-3d9b909171e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5928d7e3-0e7a-47e3-94d1-ff65c4c42aa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "916f18ba-091d-4a3e-8036-acaab9cbd9b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bae8b05-e2ef-4491-9252-765b4b6d1962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74def94-244a-4255-a328-72ae90c7f6bc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cc6fd6-7e7b-4b33-8f3e-1ec3de4e07d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9310390-297b-4af1-b6a6-c40584c82ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82723c9b-ed17-4ff0-9106-e1a53b94819c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da50c330-4e3f-46d5-884f-52103aebf8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85881a69-0ee7-405f-8f5b-4ee872aaf143",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319dfbea-589a-42af-9206-8028df90ccc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c781535-b536-44e4-8a1f-d88e4a0d861e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80932caf-f438-4c40-a7e5-d0f76ac5f8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee975c25-ede9-4a4e-8c4e-77db54a39fad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b1830f-2a0b-4b12-a204-e112cc5bd0d5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb69ce4-a83c-4aca-bf38-e1e66ca1c86e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fe42457-0fe0-4a6f-96e7-3b41661a72b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e627465-6b8f-4a14-ae56-4e82e6490507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8823c5b4-908a-40b6-8522-142dc6e6a859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97966518-d666-4bb8-89a0-6b5d73f5ea6f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e5db412-0248-4cf2-896a-f573d3b2a61a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42ae24b1-89ad-4f3c-b2ab-dc9fbb0ddab3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d990fa61-453b-4ee0-853f-f3cf3c84eb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7e27db-17d9-4c2f-9495-b8d4f412cc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b3baab-173c-4078-884d-9881f742f58e",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a5d24be-0451-43b4-a20d-de647443df54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ba966a9-1f29-4296-9d8e-c9cd8ee30f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94e99ef-d730-4e4a-a173-64486d3a51e5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5604760-03cd-45fb-b2cb-15a5ce1f0344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1101352-f087-40ee-9a88-3306bee57ee2",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b8929d-19e4-44e0-9388-d4f0650d9cbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72cad5d2-5e48-4a04-a719-4be1b579dda7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1001c9a6-7f35-4a55-844e-b072f5a6ffd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72e6b472-51bd-4d46-b58e-b405c7d4cbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320131db-a98d-4c2e-a7fb-d48cb7ccd036",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c74c2d-b262-4ab1-9a6e-f7b89296945a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a589c1b-d068-4747-8893-507f4dfcb2cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf0fdc3-17e7-4f7c-9ccb-bbbdf211eb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b39e44-75d9-4b1c-b949-6a636a0ca93f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d59057f-2946-4384-b849-8307ab289643",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084d3c28-7332-416d-a85d-f5590aed886d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c248a0e-41e5-4943-ad45-92c6f8ff9c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466de684-dff4-4304-ac5e-8a90d5d1c4ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38db53ad-6582-4f29-a143-69da832ec8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db2c53a-7383-44b0-9ff3-d89de73ef48b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9160954-75cc-489c-bb0e-7810ec40b2e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91d4d47d-a1ae-467c-8b09-658ba77c70b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9682586-dd55-4582-b64c-7b4786370d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8315522-faf9-405b-b99a-932d68400296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1173b5-3f51-4979-a431-f56c6e0353fc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6089b67-6c4f-4bca-ae5f-43d713e4978f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56cd5f5b-3e12-4702-b791-658562bc3923"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4209aa54-523a-4710-a2ec-5740f27fb9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe316e7-d330-4dc0-8879-877e11688e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4762ff0b-0b64-402f-8ea9-965b885c720e",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7903b18-82dc-437d-8fc3-7b9ec9c498ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "babadc02-7cd9-40dc-a330-7fd7f278ad0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c85af0d-db7e-4b16-8d71-1ce2533d95c1",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "389e7332-3a92-4a1c-9bd2-24880e066c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca738988-bcc6-44e5-a4b9-20327a922ddb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83c518d-e40b-40e7-ad34-255443c2cf1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bf98737-4409-4dd9-8a02-ad113cf4923e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915e4872-20b6-4fa6-b64d-adf9f66acb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5aee762-c3ee-43eb-90fc-d76cc4fa26dc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc71e95c-7c8c-42d9-9b15-23b77dae353e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4785b93c-af01-4f10-95dd-0be88d4e8496"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b3b8cd5-e7f2-4c07-a65e-c94ffce50671",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b96fc7c-cd9a-44f0-b88a-81023c4c072d"
                    }
                  }
                ]
              },
              {
                "id": "e154315b-c425-4ee8-96d5-f7aad2548786",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a6552f66-11de-4e18-9d47-8cd337cee51e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289daafe-3133-4845-ab89-fed0c3bd98de",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a17b199e-f572-4611-b559-8ae12f4955b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d03601c0-7483-4454-884b-599ce7832746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68c46601-381c-4f58-8431-017efa1ef0ab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22158bcd-2b0a-4f33-8542-5ce200cec06f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32284b9d-d4db-4280-9ad4-ba8900d3f53e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cc29403-1794-4ee2-b7c9-12e017daafbb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf3b722b-9cfa-4a11-93d7-eb6e3534d5e7"
                    }
                  }
                ]
              },
              {
                "id": "e5cad6e5-513b-44ed-9526-728daeb1f1c2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "63e0097d-a1c5-4ff0-a3ba-8c0ec2ae50c4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26be3cc-680e-47c5-a15c-4181989877d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0746c687-385c-445d-8b10-e0ceebfe4548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388cee07-07cf-499b-a950-b58829bb7ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc49ffd-0e0d-492e-ab89-d86ba0774de2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6a5ee0ce-3ed8-49e7-a0c7-68cf215795e3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0bfb9dd-1166-463c-9761-d272329cb52c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee015a21-b74e-4133-b5dd-8f108fee11b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3864344f-a8fe-42da-af7f-e4d0ac54a585"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84ab288d-74a3-41c6-b638-01f8d918200b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83c2ab2e-3319-46d8-ab98-3eacd8dd211e"
                    }
                  }
                ]
              },
              {
                "id": "d3712e74-fc7f-423b-a905-5e95ab3b468d",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d63d3c52-9091-4468-857a-986c5d3e9d3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bf4be494-d552-4ddb-8c92-3ac4b4cd5804"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf4619c4-cc15-4af4-af3a-3d47d54b219b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a613f10-1b91-4a4f-a3b0-8e7bce2682be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f802d45-8248-4c30-b366-631f187c7293",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7a884194-ea47-406a-8cf0-4b3edd758b30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b6f7f95-b7b5-4a2f-a239-319254f74b69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f722e593-6865-4c4b-af8a-5a27ed8a3b12"
            }
          }
        ]
      },
      {
        "id": "7ab8d655-b70f-43f9-9485-27d85228f98a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "636dc7f7-4c41-415f-9b7d-e59b9145f309",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7afd4b82-664e-409d-a8f1-832b0a9a39af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d3f016c3-bf22-440a-9d7f-097772ea9c1d",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6035020-7ac6-49c5-98ca-2cfeec444f11",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a1d31de7-ca1b-4c08-b230-5789678f9e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77304578-08e1-454c-850b-1f2de5328a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4bf91b4-b9dc-4624-a6c7-32cba7c069c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4b64ea7-b7b0-4122-9591-74842c3d2a2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "85003751-b599-46d7-b749-f29336576c02"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d8e7f5f-7dd6-40c8-bba7-090053e65906",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd354d80-a1a6-4eeb-b787-ae309952911c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c970f6b8-dbc0-4b35-a8f2-e05b238bb0ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3fb30d41-1bf0-4050-a825-0a72ce0e8067"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ba9c4d67-60d7-417f-b1b0-0ac5167f033a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da59c3d4-1b0f-43b1-9f81-603e8bb5a61b"
            }
          }
        ]
      },
      {
        "id": "158e43a5-9e95-47e7-b860-330fbf5c2fad",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d67c9762-70d6-448d-b66d-3d2f2cf2bf6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d108cb49-0ffe-47c0-9611-7313ee2b9264",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1fbbbb4b-b616-41b1-98b8-694f7e537655",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b559c8-c140-4d6a-9b03-ccdf6fe0c2be",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea4d0b1d-e28b-4026-9187-8e57f3ca7f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ab21ee-9181-4b4f-b94c-7801d1c6245d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7f7ffe8-71e4-4c0b-b87b-0567c6f62be8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3eed7d81-7da9-4877-9578-0e62212c9636",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc9e72d8-558d-443f-8ba4-80f2b799fa89"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d9f4132-e377-4ce2-a796-54a0109f40f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb132fb9-3e40-44b2-8735-5e711df7df97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "097e08bc-dacf-4fbe-8c0a-995ae84c8bd9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a13918c4-94d3-4bed-b952-92dabf98b420"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6844240e-6ad7-49dc-8e85-3a0e8fe41cb5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7c3e686-6a9e-48d9-b31e-ed6990ff4475"
            }
          }
        ]
      },
      {
        "id": "985cb4f5-6f73-4ede-adf9-1b32728fcccd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a8f3545f-4d13-4bb0-9c48-f745b7f4db57",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8176a67-c393-4595-a82c-bbfc21c3ad63",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a738807-3082-4701-ae05-17b6e315f2d6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b453e7-33b2-4cd5-bb43-7e73a7809d81",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5ea2369-57e3-40d0-9d30-b42c96b0ebb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96dbbc5-145d-47e6-9341-aa340a415423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b935784-00b5-4cb5-a2c5-fee1b67803af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eec51939-7303-44ee-ab3b-9fa9cfebca2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcd5c090-61ea-4de2-a6a1-842d4815f6ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "96b7a1f1-0de8-454f-84c2-314fca5adfa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a5f9d8b-1df3-4040-b30d-7973522292f9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b7cb48c8-b056-437e-a0be-34d60b952ed9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c0b21b0e-c0ad-4168-99d2-6955e2906cdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15f94344-aee5-456f-9fa4-75af6978c867",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59717a3a-029d-4426-afbb-8f9a3d5b3955"
            }
          }
        ]
      },
      {
        "id": "64900d8f-1c6e-4599-b31d-51f06261a959",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e4339d3-1499-4ee6-b1e6-e09af3c42c99",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d384e320-f223-42b5-85f6-a1425dca0f02",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3cabfd42-7df8-4d70-a4e6-1eaa554a1d67",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "016a87da-933e-4b76-95b5-b887cdf32ac9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e92cdc25-69b4-441f-9157-5221200f98b3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 6.877192982456139,
      "responseMin": 2,
      "responseMax": 249,
      "responseSd": 19.369962435488336,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701391148629,
      "completed": 1701391159409
    },
    "executions": [
      {
        "id": "a91a01c4-cc9a-4b72-9f67-04277b9e3b95",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "85e6feea-d1c1-4444-9565-841e3318855e",
          "httpRequestId": "cdc65ea4-963e-485d-a2a9-3a3cd11a00e8"
        },
        "item": {
          "id": "a91a01c4-cc9a-4b72-9f67-04277b9e3b95",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "53ca4d53-9576-4a25-84b9-59cf1824d0c0",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "ef3fa85b-5874-424b-8f3d-e260ba270206",
        "cursor": {
          "ref": "1864d515-6657-4b3e-af4d-d6a7cc787ab1",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ddade735-73b6-4959-a3e5-0a1eb0e553da"
        },
        "item": {
          "id": "ef3fa85b-5874-424b-8f3d-e260ba270206",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b35d06fa-5dfd-442c-b6d9-fa0f6d976445",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "6d8372e4-fa6c-4ab4-a61d-6f31fcdd5a9b",
        "cursor": {
          "ref": "71f30772-44d7-466c-8e84-8cc67ba02cc9",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "64eb4e53-ce21-43a1-9970-366dcb51c0cf"
        },
        "item": {
          "id": "6d8372e4-fa6c-4ab4-a61d-6f31fcdd5a9b",
          "name": "did_json"
        },
        "response": {
          "id": "1d64b9d3-5f31-4d9a-9cce-fa51590b8a65",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe6139f-da89-458c-b346-71230db411e1",
        "cursor": {
          "ref": "5682e407-c5a3-42b0-b9d9-a8d089f6dca7",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fd6544eb-7fd6-4f68-b428-cf8b5e584030"
        },
        "item": {
          "id": "6fe6139f-da89-458c-b346-71230db411e1",
          "name": "did:invalid"
        },
        "response": {
          "id": "9ea4b25a-0c78-4b8a-bef1-db1e9d157595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe6139f-da89-458c-b346-71230db411e1",
        "cursor": {
          "ref": "5682e407-c5a3-42b0-b9d9-a8d089f6dca7",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fd6544eb-7fd6-4f68-b428-cf8b5e584030"
        },
        "item": {
          "id": "6fe6139f-da89-458c-b346-71230db411e1",
          "name": "did:invalid"
        },
        "response": {
          "id": "9ea4b25a-0c78-4b8a-bef1-db1e9d157595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a344ae2-e4f5-48b8-959f-6953bd39723e",
        "cursor": {
          "ref": "c22501f3-f16a-49cf-bb1d-f43b184c669e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "64e9ce50-f953-4c7e-a02a-7375c9cfbf54"
        },
        "item": {
          "id": "9a344ae2-e4f5-48b8-959f-6953bd39723e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7677cf3e-e21d-4028-94f6-6702e6597774",
          "status": "Not Found",
          "code": 404,
          "responseTime": 101,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b63f925-dde5-4e09-b20b-21dfbbf274f7",
        "cursor": {
          "ref": "6c0382fa-b82f-430d-a052-2f94a0ea4d62",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dd0dd53f-c76f-47dc-abec-cae6032c0873"
        },
        "item": {
          "id": "4b63f925-dde5-4e09-b20b-21dfbbf274f7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "95f6c460-14d0-462f-af5c-74059bd04c74",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d749b18-d23f-4f7b-b847-7ca2480e97a8",
        "cursor": {
          "ref": "c588a342-e63f-47e2-914c-48fb55d950e6",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "90e2587d-50e8-4422-b992-408f639bf5fe"
        },
        "item": {
          "id": "3d749b18-d23f-4f7b-b847-7ca2480e97a8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "518dfba9-01a1-4fd8-98e4-4c90811ac8df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4a7edc-0fc4-4fb2-bf84-18d0d5c97ba6",
        "cursor": {
          "ref": "f89559dd-4184-4495-93d9-f1eae9ff9901",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e186318b-c14c-40e3-bf62-19b400d9bcff"
        },
        "item": {
          "id": "ab4a7edc-0fc4-4fb2-bf84-18d0d5c97ba6",
          "name": "identifiers"
        },
        "response": {
          "id": "0563a20f-45b0-450b-abcf-2aaf53229764",
          "status": "OK",
          "code": 200,
          "responseTime": 49,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9005ca1-4197-4e6f-97f7-131716bcb294",
        "cursor": {
          "ref": "cbefeb9f-e99a-4f70-b5e8-d2af7718fd01",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "43fb47c6-3324-42a2-8cb8-e4e11a3562bb"
        },
        "item": {
          "id": "d9005ca1-4197-4e6f-97f7-131716bcb294",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "64a273ea-5c27-4d20-a7bf-21738b2520df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf315ca9-02bc-433e-9cf5-c7cb560d3af1",
        "cursor": {
          "ref": "7ef63a60-5cd1-4f48-889b-65507da846e9",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f06ef2fc-666c-4542-8ef9-1e227a5b99eb"
        },
        "item": {
          "id": "bf315ca9-02bc-433e-9cf5-c7cb560d3af1",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a892fb48-a40d-4e03-8565-e526193585b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59d3f50-47d7-4b37-8fa0-471a70903572",
        "cursor": {
          "ref": "9f3d1168-282c-4c79-9563-b88deeeb4347",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5d34cf54-b193-4e19-a71f-927d4925dbdc"
        },
        "item": {
          "id": "e59d3f50-47d7-4b37-8fa0-471a70903572",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6d6bc0e8-8a6a-4f62-9f41-3ad5116c92b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8177a7f4-37dc-4d10-a757-318ac85ffe9b",
        "cursor": {
          "ref": "e11c0e7f-a07e-43f7-9f36-24f32c0ecc0f",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5250dca1-6252-491a-a4b4-0647cde1949d"
        },
        "item": {
          "id": "8177a7f4-37dc-4d10-a757-318ac85ffe9b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "640845d0-cbbb-417b-96ea-654178c01944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9a0486-162f-48c9-a567-14be395bc282",
        "cursor": {
          "ref": "1d794b03-9cde-4014-a506-aa5b7f70d4f7",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ddc86583-38cb-43b2-a696-433bb196dc32"
        },
        "item": {
          "id": "ff9a0486-162f-48c9-a567-14be395bc282",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cb279700-cb06-41fc-abe8-db9c6e265449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab1bec8-8de3-4e18-b816-59152c6fd3b1",
        "cursor": {
          "ref": "8f0514a5-8db8-4c60-a892-d596b162374c",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3221ec93-aeb1-495e-94f8-7da20b57d17a"
        },
        "item": {
          "id": "8ab1bec8-8de3-4e18-b816-59152c6fd3b1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "27da1231-df45-4471-889d-b21f217fda35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf5e65b-dbf9-497d-82a3-174bd75117e4",
        "cursor": {
          "ref": "d5a52e67-caa8-4d04-9aba-098d2cdcce35",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "17b81be7-9b22-48f9-a822-be12181b6c16"
        },
        "item": {
          "id": "2cf5e65b-dbf9-497d-82a3-174bd75117e4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3b3dd09e-7e99-439d-8000-13961790cc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f5c848-4468-4ae6-80fb-905a8cedaf44",
        "cursor": {
          "ref": "2fe82313-9c74-4113-a3a2-d69755001c79",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "17a9b724-ac60-400f-9aa5-2858a2b8bc4f"
        },
        "item": {
          "id": "b0f5c848-4468-4ae6-80fb-905a8cedaf44",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "818e8987-b71c-4a3a-a721-5fd9977fed68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f194d9d6-d40f-4e74-ad41-19ff9fd1354b",
        "cursor": {
          "ref": "525ec522-50d3-41d5-81f0-93af8cfeda28",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e17fb75e-5d00-4890-8a3b-87f9145246fd"
        },
        "item": {
          "id": "f194d9d6-d40f-4e74-ad41-19ff9fd1354b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "593b858a-78cd-4690-81ca-26476297c45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecb7f08-58cd-47bd-b219-668df19400e7",
        "cursor": {
          "ref": "1b062513-325f-4807-bcc1-844c4c1eaf94",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "17160304-ca15-4d20-abb7-edb756591e17"
        },
        "item": {
          "id": "4ecb7f08-58cd-47bd-b219-668df19400e7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "07411bc3-3160-4d4f-bc2f-6c805a089475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e939943-71cb-42ad-98b6-755c6d282c0e",
        "cursor": {
          "ref": "3123dee2-1a4a-4069-9612-2727d8a87dfd",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3596681f-4068-4514-8fd8-cd6d097fbb4e"
        },
        "item": {
          "id": "8e939943-71cb-42ad-98b6-755c6d282c0e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "84b5a45a-96a0-4b0d-862a-e877a0a7192b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a814a1d-cdfb-463e-87d4-324654d609f7",
        "cursor": {
          "ref": "380d319b-f906-4c4d-8247-653e6d801a99",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b6ffba07-0cbf-4990-9090-17e0db0d1e7b"
        },
        "item": {
          "id": "9a814a1d-cdfb-463e-87d4-324654d609f7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f82a6e07-7001-4caf-a9e8-55f73780ba6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348bab28-47bf-4ac4-afb8-b1cf43176844",
        "cursor": {
          "ref": "0092d333-43a1-4dbd-840a-aa245e74eccf",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "15c556d2-9c1d-40dc-9546-48e17b132999"
        },
        "item": {
          "id": "348bab28-47bf-4ac4-afb8-b1cf43176844",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "3eb957c2-01ba-462b-9dc2-8472ca3e544a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b10d80d-d77e-482a-bd85-5c628b432d3b",
        "cursor": {
          "ref": "266b0798-ca95-4d42-a76a-804705ad16d1",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "db79edf8-917d-495e-b8dc-cebd09ce05d8"
        },
        "item": {
          "id": "0b10d80d-d77e-482a-bd85-5c628b432d3b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fe3554b6-e89a-411b-abe8-ac6244e490e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "844637f0-5b53-4c68-b410-dfe386a48d12",
        "cursor": {
          "ref": "4f953273-7b6d-4a86-808c-323213a02bff",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "58bef5a5-8c6a-466b-90f3-5879fe28e32f"
        },
        "item": {
          "id": "844637f0-5b53-4c68-b410-dfe386a48d12",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d1aa0684-5f1f-4c66-b410-018944544a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ad85bd-0ed0-4c25-bb50-3fd49f6e8afa",
        "cursor": {
          "ref": "64ccfea4-db16-4a46-b855-572d670b4edc",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ec5306e8-9b06-411b-81fb-25b96cbcb65c"
        },
        "item": {
          "id": "e9ad85bd-0ed0-4c25-bb50-3fd49f6e8afa",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "35b3486d-92df-4ba8-81d1-2262968f5677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4850d36c-e04b-49cb-896b-480c9d8eba22",
        "cursor": {
          "ref": "0205fbc2-83ce-42b9-a797-a3ea9af95222",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b7c9d199-6d36-4217-8756-836465b6d784"
        },
        "item": {
          "id": "4850d36c-e04b-49cb-896b-480c9d8eba22",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "17545a8e-9b4c-4e07-8235-210987e559a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24813811-08dc-4f7c-bf01-a8140c6202bd",
        "cursor": {
          "ref": "ae46fb6c-1d4d-45cf-b0f9-e9cafa99dfee",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b5c4a8ab-ed21-4e6d-a01d-720cbfd14590"
        },
        "item": {
          "id": "24813811-08dc-4f7c-bf01-a8140c6202bd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4391512d-61cd-4279-97d1-65821e238726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f024ca1c-2a69-4d20-b4c7-e145be46309c",
        "cursor": {
          "ref": "8745ef9f-d37b-4867-a512-38a7b94bb02d",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "920cd820-9a1f-4a90-900b-9a43d333d101"
        },
        "item": {
          "id": "f024ca1c-2a69-4d20-b4c7-e145be46309c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "819ec8c7-3882-4c68-ab60-59b281841e9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e3228b-1dd4-47c5-bb1d-ceb6a9e585e7",
        "cursor": {
          "ref": "b0de400b-50ad-436e-9990-b58945aba124",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ded8b16c-0069-4f45-8129-35334f801478"
        },
        "item": {
          "id": "c9e3228b-1dd4-47c5-bb1d-ceb6a9e585e7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "1d2d796d-0937-4562-97ea-c9988a166ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2b442b-5c3a-4228-b6ca-3171d40d9c43",
        "cursor": {
          "ref": "61c40b27-ce9a-4150-b8a4-66c32bbdf084",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ab2d12eb-8613-4b8f-a4c6-d7098af55733"
        },
        "item": {
          "id": "8d2b442b-5c3a-4228-b6ca-3171d40d9c43",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c5325a22-cce8-4fab-af66-9dbd4a3cbf9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eed22fa-68c3-40c5-b4b6-6a34aa81212d",
        "cursor": {
          "ref": "27c83540-f501-4b60-8cdd-57f549bf7e87",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4e2850d9-adaa-4b0e-9e3f-c179a43270c5"
        },
        "item": {
          "id": "2eed22fa-68c3-40c5-b4b6-6a34aa81212d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2e2e96be-6560-478a-888d-47ea879444e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c1b1b4-2ec3-47d0-9acf-3b78eb9cf241",
        "cursor": {
          "ref": "914df2f2-6a53-4998-9423-c59a783bdf93",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fcaf8458-0535-4df1-84c3-fa3c2491f16f"
        },
        "item": {
          "id": "28c1b1b4-2ec3-47d0-9acf-3b78eb9cf241",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0cc4faab-0e06-4294-91d5-e8274f4928e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49e1cec-e37b-40e6-9a88-a1c28dddc05d",
        "cursor": {
          "ref": "ef2dfc74-6baf-4646-9ec7-8e75a9ac378b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d2ec9f85-7a4a-450e-b181-33eb7c53ece2"
        },
        "item": {
          "id": "d49e1cec-e37b-40e6-9a88-a1c28dddc05d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "79ac2683-959b-4807-b6c7-ad7450f6ff48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1a1d30-1a77-4a04-a7e8-c06c38633107",
        "cursor": {
          "ref": "1bbe196e-ef58-4e20-855c-343dfdee3054",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8b0fb26e-b368-4fd8-ac5d-4fc76ba93b77"
        },
        "item": {
          "id": "9b1a1d30-1a77-4a04-a7e8-c06c38633107",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6fc947c6-9bf0-4c19-a5c9-461427d6bb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4321c718-caf7-4fd2-ae01-6f687646c205",
        "cursor": {
          "ref": "76d6eadc-f321-4806-ad33-1bc840d68d72",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1bb88078-57d1-48e6-be73-0e5daff26468"
        },
        "item": {
          "id": "4321c718-caf7-4fd2-ae01-6f687646c205",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3aabfb6a-dc3f-4ea9-b761-7e9f616235ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa539f1e-4bca-4a5e-8d20-2c5e88b8b123",
        "cursor": {
          "ref": "76febaa4-b380-49a4-b450-54255d79a85a",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c10a27bc-18f8-4760-af75-92a1e1e02050"
        },
        "item": {
          "id": "fa539f1e-4bca-4a5e-8d20-2c5e88b8b123",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "aa5acb9b-7449-4eb7-b87d-c24256f6a779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e93c13a-87de-4d32-bfbc-d0aea5274201",
        "cursor": {
          "ref": "8d83c590-3b52-4c84-bf4a-957c16ca0235",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ce8ed364-e7cb-47c4-950e-45bc4f3aa66f"
        },
        "item": {
          "id": "9e93c13a-87de-4d32-bfbc-d0aea5274201",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c6e539d9-41a3-4cf1-b192-c797dc374efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a0bbce-c29d-4478-a54a-a172b593ad09",
        "cursor": {
          "ref": "4af528a7-2e28-43be-8414-1a17e3e406f7",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6027036c-3f84-46dd-84a0-58d007856f74"
        },
        "item": {
          "id": "d7a0bbce-c29d-4478-a54a-a172b593ad09",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2fd50284-960d-467c-9ede-6b5d82673f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d742b67e-f14f-4f44-b62b-0ceab96683b2",
        "cursor": {
          "ref": "e2cfb0af-7306-4859-aaf4-12341156c9bb",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3b813831-afb1-4a70-88a7-ff4ae7ce6165"
        },
        "item": {
          "id": "d742b67e-f14f-4f44-b62b-0ceab96683b2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "010e1ba7-7400-419d-8f96-2681ffaeb07c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d20db08-6da0-463b-90b5-76440036b5bd",
        "cursor": {
          "ref": "ea6aa8f5-daf8-41d2-b20d-a6ab746aa0c8",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ed88e8d2-523e-4151-8246-4369b4afe83b"
        },
        "item": {
          "id": "9d20db08-6da0-463b-90b5-76440036b5bd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d4a9bf5d-1783-4326-aede-d80ae4a425fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114fa47a-2813-4a95-8943-12da35d4fbc8",
        "cursor": {
          "ref": "74fa5521-9cd0-406d-ab13-e8f28a82a165",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7e7969ed-9671-42df-9156-f4e2d2f92417"
        },
        "item": {
          "id": "114fa47a-2813-4a95-8943-12da35d4fbc8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0ea5f449-31c8-4de8-9692-debead9ae1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0bd782-939d-4ef4-9da3-741fd1253a2a",
        "cursor": {
          "ref": "3e667bdd-25fe-4331-a4c9-57a7186e51b4",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "88f984a5-98a4-47ed-aa01-66253406b923"
        },
        "item": {
          "id": "ec0bd782-939d-4ef4-9da3-741fd1253a2a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "910c5aec-2cb7-431b-a2b6-1711dc4e93e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99b8b1d-c724-40a2-a8ea-0fd59cd72f39",
        "cursor": {
          "ref": "ba82828b-a9fb-4b4d-ad43-6a53f41c8576",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7b72d2c8-b904-484b-bc3a-f757fd090d08"
        },
        "item": {
          "id": "c99b8b1d-c724-40a2-a8ea-0fd59cd72f39",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f7b4f6bd-61fa-4ac0-9ab5-65066cdb7cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6cbba13-07f9-47ca-8582-999dedf5dd4b",
        "cursor": {
          "ref": "ead52a2c-0e8b-428f-a1e8-c0bbcaa332b3",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7aa19a51-9ee5-4de3-acac-d69b724d466e"
        },
        "item": {
          "id": "e6cbba13-07f9-47ca-8582-999dedf5dd4b",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d5be7960-e129-42eb-a4e8-5580ea5b6814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e08d9cb-ccc3-4387-9b00-3f6a9986cc41",
        "cursor": {
          "ref": "d260b057-8a44-4e6f-bf9a-18ee0abef79f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "63cef98d-d1b3-44d9-bc76-b8d107a5593f"
        },
        "item": {
          "id": "0e08d9cb-ccc3-4387-9b00-3f6a9986cc41",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "79d01469-ec48-4ab8-941c-d26418baf2de",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7278b7-6d78-43c1-9128-1a128b05b2be",
        "cursor": {
          "ref": "d7886230-b62c-4281-9799-caa05356a89b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3b2d2255-8546-48a9-b197-728de50000b9"
        },
        "item": {
          "id": "ec7278b7-6d78-43c1-9128-1a128b05b2be",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "47bee3bd-811d-41c9-b16d-3204b9fab2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e04040-db40-4c2f-bccc-597f0fea8257",
        "cursor": {
          "ref": "96dcf4c2-2532-4c8d-9b42-ae17b58f646e",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "7e017172-d0e2-4f43-b5b4-a552aa1bed92"
        },
        "item": {
          "id": "06e04040-db40-4c2f-bccc-597f0fea8257",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "29bd0704-3865-47de-a128-a1d349c25054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9198f08-c063-4cfd-822d-0186540e894b",
        "cursor": {
          "ref": "49c06323-d141-4563-aea7-b0b0656ced7b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9811a236-30d3-4106-beac-c7525ace25fc"
        },
        "item": {
          "id": "a9198f08-c063-4cfd-822d-0186540e894b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "631785cd-06a3-4096-aac6-2ff01fd61dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4806071-e484-4676-ab59-e6ef85b36b1d",
        "cursor": {
          "ref": "cd764c34-4303-4b51-bbe5-4f78a6140088",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b9a05bab-5a1b-423a-a0d1-80c8c63a83a7"
        },
        "item": {
          "id": "a4806071-e484-4676-ab59-e6ef85b36b1d",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ee0cb531-3db8-455e-b1f4-3107600e2c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f31699-c768-4e1b-af6b-b72d01874ae0",
        "cursor": {
          "ref": "31c6a55d-8ef5-4482-82ac-0e7366131b23",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "80d0fc7c-2c5d-4e47-b511-23e7a1041f24"
        },
        "item": {
          "id": "d7f31699-c768-4e1b-af6b-b72d01874ae0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d190c8e4-aef8-40c3-973f-8cdb9025d05b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7d5d3d-f152-482d-b1fb-49361adf69d7",
        "cursor": {
          "ref": "b3e3f078-5e66-488d-9a55-1c78bcd09149",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2494d8ce-2592-4c51-a364-551b7a1ea512"
        },
        "item": {
          "id": "fa7d5d3d-f152-482d-b1fb-49361adf69d7",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "06de7b5e-bef4-4b2b-b1cf-764e09295711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b2718d0-58a1-4b40-a7bc-763d226aa7e5",
        "cursor": {
          "ref": "69bd8e0a-b19e-4460-8dba-f613f6da54a7",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "03c7dc45-053c-4877-bc6a-4a70f3711c2d"
        },
        "item": {
          "id": "7b2718d0-58a1-4b40-a7bc-763d226aa7e5",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "57bc789c-a20e-4496-9a3e-90f5fd44ea68",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 17,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413be3fa-9366-45ef-968e-c568c2a2d789",
        "cursor": {
          "ref": "b4e4ffa1-094e-4b08-9ed5-a29ccb627eec",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "15d08cdf-0a7d-4764-8723-49c05908fe73"
        },
        "item": {
          "id": "413be3fa-9366-45ef-968e-c568c2a2d789",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "48646b67-f7f6-4467-a2a9-7ecbb04614b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c793fb0f-2d76-4dc8-87b2-72b20d9a0db5",
        "cursor": {
          "ref": "de0727bc-92b0-4b6f-b67d-60691b721ec2",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d73325f7-d074-46e3-8d1e-cbf566fb879b"
        },
        "item": {
          "id": "c793fb0f-2d76-4dc8-87b2-72b20d9a0db5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "77dc53cb-57e0-4d4f-9573-624dde8d36c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c32ff44-ff71-47cb-9fc5-5a450a9c06cd",
        "cursor": {
          "ref": "43e705d4-7e23-47f5-b2e9-f4e64471ce7f",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "47a67845-ba4c-4133-8e5c-49d7a0bed7b5"
        },
        "item": {
          "id": "8c32ff44-ff71-47cb-9fc5-5a450a9c06cd",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "96dee9f4-287a-4dc4-acfd-9ab9ef12babf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9f0744-6177-4b62-b352-c4c431f9008c",
        "cursor": {
          "ref": "139b875b-b743-427b-9afb-3735b2fbf9e9",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3eb186ef-66c2-487f-960b-e418d61519ed"
        },
        "item": {
          "id": "3b9f0744-6177-4b62-b352-c4c431f9008c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "860f2cc4-fd47-437f-9b43-c9a785b6f2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f9b362-7202-47a4-9720-d7c11e630ba3",
        "cursor": {
          "ref": "ee504d10-171f-45a5-bc11-a1f609df45a7",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "f80bd29a-df8b-410b-a0bb-ff18e3641a2a"
        },
        "item": {
          "id": "a0f9b362-7202-47a4-9720-d7c11e630ba3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7e130fdc-0432-4e6c-9fc9-8d1c2f66daea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68346407-f978-4a37-b28f-83b22433c573",
        "cursor": {
          "ref": "e8fc5c61-fa6f-421d-8a60-b0b5394e5f9e",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3bc91ce1-f8fd-401c-b4b5-d7685406056c"
        },
        "item": {
          "id": "68346407-f978-4a37-b28f-83b22433c573",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4a6b6427-7388-43ec-8e47-44cd5e4cc52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b22b160-2b36-4a88-a93a-648a5d21c187",
        "cursor": {
          "ref": "1425e76e-f84e-43e4-857e-8b475959b150",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "048167dd-c435-490d-aca1-8c8086293a32"
        },
        "item": {
          "id": "3b22b160-2b36-4a88-a93a-648a5d21c187",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4dad4c59-7d3f-4e5f-981b-25647a394452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d49686-7593-42d6-b5c1-81fb6aaf02e5",
        "cursor": {
          "ref": "ca1ce5b5-91c0-418b-9960-e2599ff45852",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8d1dbb65-3fd1-4ac7-805f-f55aba0e556e"
        },
        "item": {
          "id": "d7d49686-7593-42d6-b5c1-81fb6aaf02e5",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9db83ca3-b395-409f-9ad3-3b1acf40ba49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d51ab0-3f6f-4429-b01a-8447797bf66f",
        "cursor": {
          "ref": "2600775b-53b6-42c8-be75-8ee570bb514b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3848b660-4ec8-4a54-8441-7736dae3ab96"
        },
        "item": {
          "id": "23d51ab0-3f6f-4429-b01a-8447797bf66f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f5add48f-24d4-47cb-9b5b-84918ab8b3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9660facd-c180-4823-8857-75e3d1aa616b",
        "cursor": {
          "ref": "6083dd05-e525-4a5c-8b1b-af88aebd13d5",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "beb42a66-3ff3-4255-b74d-018529e56281"
        },
        "item": {
          "id": "9660facd-c180-4823-8857-75e3d1aa616b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8e7b1c4a-915d-4fbe-99dc-9fa6916ed1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34232a34-b7eb-42a5-b8fe-92403bd31353",
        "cursor": {
          "ref": "99024861-07f9-4673-ab13-c5b3becf2a08",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1cc2d612-176e-44ee-83c3-5f0d47168a0b"
        },
        "item": {
          "id": "34232a34-b7eb-42a5-b8fe-92403bd31353",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "89aa3970-0527-4363-a63f-5464bb79a5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e70e2ca-f35d-4e6f-9028-8434ad263047",
        "cursor": {
          "ref": "761f251c-0354-4b89-b110-6e1babc291f7",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "c289dd47-371a-48de-9566-afad03f0269d"
        },
        "item": {
          "id": "7e70e2ca-f35d-4e6f-9028-8434ad263047",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c21e1354-6adb-4643-b485-72528de7bef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7200c338-265d-40c9-bda5-c4f42fbdb970",
        "cursor": {
          "ref": "7960f760-6e99-45cf-8d7d-af8aeb8a53aa",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ed02b107-ed49-4047-9be8-ce87af09504f"
        },
        "item": {
          "id": "7200c338-265d-40c9-bda5-c4f42fbdb970",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cfa73ff1-eac6-4586-b205-7b2fa9ac2bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa1aada-5eb0-4a17-9538-830937209551",
        "cursor": {
          "ref": "b8c7995b-0ad1-4d99-887b-e6f19a697c5d",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6b7fcb99-0ae5-4b27-889d-29c23eacb202"
        },
        "item": {
          "id": "6aa1aada-5eb0-4a17-9538-830937209551",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9a7bd39a-5437-4024-b883-f855d429f2a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9a1437-3d12-4b9a-b0b6-4e315602f541",
        "cursor": {
          "ref": "21b087a9-3764-4f7d-89df-9cc797d21a1b",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "aa6cf5b5-d2aa-444a-aa56-714d6492c60a"
        },
        "item": {
          "id": "1e9a1437-3d12-4b9a-b0b6-4e315602f541",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9acc5609-28e7-4d92-86dc-bd789cdf7663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6fca70-83ef-41df-b36b-325e71e19aef",
        "cursor": {
          "ref": "2a067066-68c2-4eaf-96d0-43ada0fde5d6",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f0d161a7-00c1-4dcc-9efd-7bf2b100163c"
        },
        "item": {
          "id": "4a6fca70-83ef-41df-b36b-325e71e19aef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f18c8f0a-e0fd-45ca-a96f-aeaf4f9e2b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810133de-979a-4b34-856a-1d020ae76993",
        "cursor": {
          "ref": "9a7a6a15-43af-43a2-b063-9581bb202eab",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e2f6c279-4e34-4081-be04-b8b52c051572"
        },
        "item": {
          "id": "810133de-979a-4b34-856a-1d020ae76993",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "33a68a57-6c33-41be-8afc-da57ea89b994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a85d9f-3857-466f-b044-e92c786875a0",
        "cursor": {
          "ref": "09cd524c-4b53-41fc-8564-4f5ddafba65a",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7b75577b-e6a7-47d6-ae0d-a930c0c934f1"
        },
        "item": {
          "id": "f4a85d9f-3857-466f-b044-e92c786875a0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "97515587-7f7a-4ca7-a29f-9238df45a946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77abb3f-3b3c-42dc-8484-979b6ec84f05",
        "cursor": {
          "ref": "ed160fb0-bae7-4a99-b684-43ba0fb7d4d3",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3c256800-270b-4178-93ab-0b0f655da991"
        },
        "item": {
          "id": "a77abb3f-3b3c-42dc-8484-979b6ec84f05",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f7d0ac3a-8d2d-48cd-b9e2-661a270605f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cf5b2f-3881-41e3-aabf-c92c297b9e17",
        "cursor": {
          "ref": "2dc26f93-a69d-4ac7-b972-8ff852843c0c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4fbf3c28-19c9-4e34-a611-77dce4611812"
        },
        "item": {
          "id": "f7cf5b2f-3881-41e3-aabf-c92c297b9e17",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "755d1a88-c41d-4cd0-9cea-47586891a71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04738c7a-8647-4825-b0a9-36d7be876ad8",
        "cursor": {
          "ref": "1e4d7c35-c362-4377-a895-d0390dab4148",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c5e065ab-499a-42d2-bf22-16b60e8ae12d"
        },
        "item": {
          "id": "04738c7a-8647-4825-b0a9-36d7be876ad8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cf11c4ca-30c5-4a5e-bc2d-e9c71c14c957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a14b149-0df9-4445-981e-8bee7afb8f78",
        "cursor": {
          "ref": "550cd613-e455-4993-bfe1-df484e474d0b",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "87d80a3b-3502-4e7f-a9e3-7e2487def41b"
        },
        "item": {
          "id": "3a14b149-0df9-4445-981e-8bee7afb8f78",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "baa889ee-dd59-4bc4-9d2d-6bb1304fc497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c382693a-efdc-4741-a31e-17084e33d4c4",
        "cursor": {
          "ref": "4e673e8c-8a09-47e2-9855-aec74f7837a3",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a5069b7a-36aa-46dc-be5d-675462db5e1b"
        },
        "item": {
          "id": "c382693a-efdc-4741-a31e-17084e33d4c4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "38ea7632-5a10-4cfa-acce-588c6f285beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71d6ff3-7703-4c79-82b2-0f9ed694b7b3",
        "cursor": {
          "ref": "0e9835e1-11d5-483f-b3f1-d974150cceee",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "24201d41-e1f9-4a8b-905b-3c81a920a538"
        },
        "item": {
          "id": "b71d6ff3-7703-4c79-82b2-0f9ed694b7b3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "848288e4-b573-402f-8c4d-d852342f575d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81146e66-91db-4d54-87fa-75a7986cf3fc",
        "cursor": {
          "ref": "37103c2d-1c8c-406b-9f91-7ff165026815",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f60a3d9c-5151-4951-84e0-74e81be8c43b"
        },
        "item": {
          "id": "81146e66-91db-4d54-87fa-75a7986cf3fc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a24c62e0-415b-4689-a1ef-b04d0d3fa42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a39e6e-27a0-47f6-8f1f-d5285d7be98f",
        "cursor": {
          "ref": "3f57ab56-a18e-42e9-acd9-8c9ca5ea2c6f",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "91c6e85b-c404-4896-b65f-eb598229544d"
        },
        "item": {
          "id": "28a39e6e-27a0-47f6-8f1f-d5285d7be98f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5d658db5-4a19-4745-bef1-8abd693610d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5fd049-1bbe-41fc-9bf0-645562be8b6d",
        "cursor": {
          "ref": "d52fee8f-88a9-42ba-aae7-ff16d259e527",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "251a724a-d50b-4789-aba7-bfe9cbaf6f20"
        },
        "item": {
          "id": "db5fd049-1bbe-41fc-9bf0-645562be8b6d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e7097f36-6c4a-4114-a1c9-317d108250c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d522a660-e781-40c3-9c9c-05e8e89d5859",
        "cursor": {
          "ref": "1a6d9b5d-297e-467f-8686-6d6b686c7114",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a7313700-6794-42c8-bf78-cd31099fb12a"
        },
        "item": {
          "id": "d522a660-e781-40c3-9c9c-05e8e89d5859",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "69a8e86c-9a44-427f-9d8a-5e125fb773be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7f7b8a-b1e3-4359-a688-5c5354b8938a",
        "cursor": {
          "ref": "43f535f7-861b-4453-bdad-b0a65446d8bb",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d6e7a465-d0e9-4708-a685-a1db6ade5500"
        },
        "item": {
          "id": "ee7f7b8a-b1e3-4359-a688-5c5354b8938a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1b1ec47b-f84f-4409-bb22-faec8bb1dbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa72d94-ff95-43d1-8477-6362bb90c647",
        "cursor": {
          "ref": "62bca6cd-4ce4-40d2-8660-92597c75d599",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ce4eedc6-be84-4297-b35e-8f6049269936"
        },
        "item": {
          "id": "eaa72d94-ff95-43d1-8477-6362bb90c647",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5f169b19-39d6-485d-b20c-ea38f62efc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cb14de-c215-4abe-bcdb-2214fe8775d6",
        "cursor": {
          "ref": "97562450-66b4-44e4-9bcd-e294b7ab7e89",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "617db0ad-fccc-40d2-9ff1-d34281f6348c"
        },
        "item": {
          "id": "c8cb14de-c215-4abe-bcdb-2214fe8775d6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "37613ec7-4775-4abe-9bdd-5071a275cd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b69bb2-0adb-4418-b047-9308301413df",
        "cursor": {
          "ref": "bb89c3ff-8671-4f3f-9a56-fd2aa7a08ec6",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3d98cb61-b073-4269-bfb1-869246b76a31"
        },
        "item": {
          "id": "34b69bb2-0adb-4418-b047-9308301413df",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "656fb9fd-fd5c-4784-aeb6-658d7cb570be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff15a06-c5b1-4f52-919f-bb967e146d3e",
        "cursor": {
          "ref": "2056e055-5d97-45a2-9544-f59f4053e28e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "391fd9c6-29a5-4317-aa23-a8cc0717861a"
        },
        "item": {
          "id": "3ff15a06-c5b1-4f52-919f-bb967e146d3e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f693b9dc-0d86-42b2-bdac-f1c8bceecbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3aa6613-f168-49c5-937c-db5107b1ebed",
        "cursor": {
          "ref": "82521e00-51b3-475f-9185-7a5bbcd17b20",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "faa5922c-f155-4c4a-a17e-fa3796764dee"
        },
        "item": {
          "id": "c3aa6613-f168-49c5-937c-db5107b1ebed",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bf36d51b-dd9e-4ec9-b126-03bacd7fa751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d050e5-3c60-454d-a946-9bf49934609f",
        "cursor": {
          "ref": "bebcdd46-d063-4fa4-8e51-e283d6d103ad",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "280a178e-6cc3-45cd-bf21-b759236ca60d"
        },
        "item": {
          "id": "65d050e5-3c60-454d-a946-9bf49934609f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b78cb45b-019a-4c3b-b7c7-d9a723fe0a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d52603-e14e-44df-a339-4ed66f751feb",
        "cursor": {
          "ref": "e32626af-9dc3-49ff-aef8-7a404cba53a0",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "80755075-479f-4c54-aa32-9de2452985da"
        },
        "item": {
          "id": "a5d52603-e14e-44df-a339-4ed66f751feb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4a053f99-96c8-45b3-b0df-60c2aa5dd852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad70de6-6246-4e15-aacb-4abe49f1a038",
        "cursor": {
          "ref": "9e126d3e-2a7d-4cb6-aecc-16dc6e469019",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "69e35356-0942-4e89-aa22-f12e19826c80"
        },
        "item": {
          "id": "4ad70de6-6246-4e15-aacb-4abe49f1a038",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "93aa20fa-88ed-4482-9090-14ceaa883318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9852d4f0-c0c4-45f4-97c5-2d7e93dabb5c",
        "cursor": {
          "ref": "4ce8a1e1-20d5-4eff-bdf9-5a22be7373d1",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d2d30261-b0a0-4231-8b47-cac72a4651e3"
        },
        "item": {
          "id": "9852d4f0-c0c4-45f4-97c5-2d7e93dabb5c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d77c00a8-6aa9-45a4-a3a0-12266afda1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7977ab79-dec9-419c-8523-3243df43941a",
        "cursor": {
          "ref": "8bd280bd-f348-403c-bc27-6b1d49eb5e84",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "79da5024-535d-4cf6-8dd4-38468808fd61"
        },
        "item": {
          "id": "7977ab79-dec9-419c-8523-3243df43941a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0a82b4cd-cb43-48c7-910e-3c466f5b0af8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74c489d-7afd-43dd-90b3-40008dd581a7",
        "cursor": {
          "ref": "279db00b-22d6-4e02-a602-a150e2af0188",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "835668ff-d28f-48c8-83ad-bb790165345b"
        },
        "item": {
          "id": "b74c489d-7afd-43dd-90b3-40008dd581a7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c3c92ba9-3386-410b-b923-9d7d96fdbb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc370e0d-2df7-48b6-88b6-9932de3d3318",
        "cursor": {
          "ref": "85f9aae1-d509-4f72-9317-0f1a4097092d",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "bd134681-e5d5-47a9-b231-4ea0a7650929"
        },
        "item": {
          "id": "fc370e0d-2df7-48b6-88b6-9932de3d3318",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "dbad86ac-e622-484a-bdf7-c4bcc43757b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1816e28-b118-4c78-bf47-7122b2023614",
        "cursor": {
          "ref": "7c6344a2-f31b-4f6e-8f47-a862e9834008",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "aee2d51f-d945-4f5f-835b-c81c2472f813"
        },
        "item": {
          "id": "d1816e28-b118-4c78-bf47-7122b2023614",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6fdcc122-8394-4ee8-9f69-47b727074e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4314b59f-5a1f-44b7-90ae-a59fe9e08827",
        "cursor": {
          "ref": "4d6fa613-b557-4af3-a095-f6bfcb813b46",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ee83afa7-c33d-4e7e-bfaa-010f814d5234"
        },
        "item": {
          "id": "4314b59f-5a1f-44b7-90ae-a59fe9e08827",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a15d5a4e-fc3d-4adf-b6ff-018dabcbff8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca8083c-4305-4932-a0b3-31dd7e97aae6",
        "cursor": {
          "ref": "5b067712-976a-42a5-923f-d962db5462ea",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d47d216a-2c60-48ef-ba4d-9a3a2af8e4d7"
        },
        "item": {
          "id": "2ca8083c-4305-4932-a0b3-31dd7e97aae6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a8c29744-d765-4deb-9fa0-ed3d48a2029d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97bdb48-dc9b-4e03-9ea1-51c4a8c76b1a",
        "cursor": {
          "ref": "e2c8ad1a-b545-46fe-9a1f-317ddfbbdd62",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e12153b3-0b29-4865-93c7-581f9ceedbaa"
        },
        "item": {
          "id": "a97bdb48-dc9b-4e03-9ea1-51c4a8c76b1a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "694c78dd-366b-426c-b173-d04b641f7d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df58a6c1-7005-4c1e-aed6-0cfbb9d30b34",
        "cursor": {
          "ref": "b9d632d7-710d-42d2-b199-e79a7e7356dc",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "cf0933ec-30ed-406c-9df1-3891cd7ec94c"
        },
        "item": {
          "id": "df58a6c1-7005-4c1e-aed6-0cfbb9d30b34",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "fe3df113-5f49-47d9-968c-aa746189cd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345cfb4c-5034-428b-a90e-9e8a2f379e48",
        "cursor": {
          "ref": "78032119-c8bb-413a-951c-e1cde49a23f9",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c5e31655-bcc4-4e08-976c-32090d421b01"
        },
        "item": {
          "id": "345cfb4c-5034-428b-a90e-9e8a2f379e48",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1c4296f6-0468-4b02-bfa5-be9d76cd9887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1196c9bd-e11e-4b95-b10a-0a9496ab6552",
        "cursor": {
          "ref": "5ea65962-3acd-42d8-bb7d-2419c96ef0fa",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "491ee20b-8695-4a2b-b2eb-0db2893f0c56"
        },
        "item": {
          "id": "1196c9bd-e11e-4b95-b10a-0a9496ab6552",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6d5ff095-e952-4e37-bf94-63fb6b874e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587ade40-6d55-4667-a586-233695c785d3",
        "cursor": {
          "ref": "31342646-d519-4f1d-adef-1346b11f6b7d",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "20c508b9-7ab7-4d18-bf5e-9e6e46e862c6"
        },
        "item": {
          "id": "587ade40-6d55-4667-a586-233695c785d3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "21337514-b456-461a-afd9-543f6afb55d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792f5f79-46a1-47d2-94c5-a422bdc6f7b3",
        "cursor": {
          "ref": "171dcf29-768b-421d-a373-71ed1242b806",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "26920365-333b-4e78-ac60-063eff693d0b"
        },
        "item": {
          "id": "792f5f79-46a1-47d2-94c5-a422bdc6f7b3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8adadca4-2aee-4e5e-960e-50539dc95cd2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a059feb-6282-4001-b459-fdf8229348fe",
        "cursor": {
          "ref": "a08a57a4-81be-4ee2-aa9c-a10c35db3a2c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f70d8b30-dc85-4734-a971-463bf6d8ba30"
        },
        "item": {
          "id": "2a059feb-6282-4001-b459-fdf8229348fe",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9956e0bd-c3e2-4850-8696-5b7508a1d55b",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fef41a-3ee1-4af3-ad4a-25f77bb8ad4c",
        "cursor": {
          "ref": "6ac0847a-d79d-4dff-b6d0-77a411675574",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "a6a21439-ff5e-4e03-84dd-6898748f94d3"
        },
        "item": {
          "id": "79fef41a-3ee1-4af3-ad4a-25f77bb8ad4c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1d55c6d0-4776-4462-b589-29b48cf74d1a",
          "status": "Created",
          "code": 201,
          "responseTime": 113,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "576a78a4-2b60-41ee-9e3d-141a747c67bb",
        "cursor": {
          "ref": "4b5108b9-43c3-4391-8b0d-501db1dc0877",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e5853dc9-48b4-4fcd-8aef-c6e705f32b5e"
        },
        "item": {
          "id": "576a78a4-2b60-41ee-9e3d-141a747c67bb",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4faba3dd-1ebe-45e4-8b6e-0860707abc3d",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "07744599-3b6b-46c3-b769-5110025ce3fa",
        "cursor": {
          "ref": "27af25c8-9096-4b1b-93af-5295eca756a5",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "af821b65-f80c-4dce-9822-d34a20f6c7fa"
        },
        "item": {
          "id": "07744599-3b6b-46c3-b769-5110025ce3fa",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7c7345c2-dc4b-4cba-94db-7c6e9279539c",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef73ef99-de92-40b9-b53d-8b3b0a0b677c",
        "cursor": {
          "ref": "24ff33a5-c4e1-4428-b145-4d6ee6ded390",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "158b692d-0c8c-4bc5-b029-8b45d2653401"
        },
        "item": {
          "id": "ef73ef99-de92-40b9-b53d-8b3b0a0b677c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "89cb2099-bf66-41af-93ef-3316d13eeb86",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6e081e-84cf-4964-ae0c-1fa59c3f137e",
        "cursor": {
          "ref": "22405ff3-66c2-4825-a5f9-c61e293e7f85",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "611f6372-2942-434b-afbc-3f10e5f00320"
        },
        "item": {
          "id": "5a6e081e-84cf-4964-ae0c-1fa59c3f137e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "960a5410-74cd-4a52-bada-85971530f4fc",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a09abc-5daf-46ac-b390-9dc31f2c1a3c",
        "cursor": {
          "ref": "34da6591-66ab-4f96-8684-90b2e5746951",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ba7c915f-9deb-4bea-959d-4ee9780a2fe6"
        },
        "item": {
          "id": "e9a09abc-5daf-46ac-b390-9dc31f2c1a3c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "968e15c0-5366-46a4-ac60-d2722c006ebf",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c83e857-daf2-4240-ae95-36d68467cfc6",
        "cursor": {
          "ref": "9e14434a-beb0-47e9-80fb-b53a4a891c10",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3220aeb2-6bf0-431b-8956-0f684d1ef65b"
        },
        "item": {
          "id": "0c83e857-daf2-4240-ae95-36d68467cfc6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9457f71b-d9de-4f58-b5ea-902afffcd079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726bb3de-bd96-4823-87dd-c4719ae98682",
        "cursor": {
          "ref": "d391fdd9-9e88-46ef-b384-4990f7636771",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f5da89fb-743c-4f9e-8b87-ba3db06f7ad3"
        },
        "item": {
          "id": "726bb3de-bd96-4823-87dd-c4719ae98682",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "40e82da2-14ff-46c8-b84e-f8ab1054836b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428f89cb-d0b0-4861-b424-f4dfcc91c159",
        "cursor": {
          "ref": "ea59839e-46d3-4eab-b156-99f5ee299df6",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4683265e-ee54-43f4-adaa-2032cd9b300c"
        },
        "item": {
          "id": "428f89cb-d0b0-4861-b424-f4dfcc91c159",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3f82c628-417a-4154-955e-c65833ccd48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f93c036-7194-449a-b652-1b55b57b6544",
        "cursor": {
          "ref": "fbf7d0e8-ae72-4bdc-802f-c0140019381c",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a5e09411-847d-4a04-9249-30082ee6d442"
        },
        "item": {
          "id": "6f93c036-7194-449a-b652-1b55b57b6544",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3cdb1fe2-0968-455d-b7ee-215f38b5a984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0c48ad5-280a-4023-b338-e7ff6ae53ce8",
        "cursor": {
          "ref": "d2c309a4-1e8d-4d63-8d15-330ae2cc9817",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9182bace-1e46-4d0a-8e33-b7acdfa76bd8"
        },
        "item": {
          "id": "c0c48ad5-280a-4023-b338-e7ff6ae53ce8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "58a51f46-0b7d-403a-9f53-5ba89f13bb79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7750f80-9f3c-43d5-abfe-a8060e9ac28c",
        "cursor": {
          "ref": "341e3911-e899-4c66-9d8c-661f341c5fdb",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4a4a1e9f-799f-4653-be81-cb1087b13aeb"
        },
        "item": {
          "id": "f7750f80-9f3c-43d5-abfe-a8060e9ac28c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ca9f81c2-989e-466d-9123-359fc4d7e56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d507354-a7e1-4aa6-85da-bcdd187cabeb",
        "cursor": {
          "ref": "99fec681-75d5-492a-bba7-033888b140ed",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0535aac4-2601-4ccd-8d91-4dfb6380d7ac"
        },
        "item": {
          "id": "3d507354-a7e1-4aa6-85da-bcdd187cabeb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fb787861-c19e-4d08-8955-a30acb69c60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1d43a5-a367-460d-90f1-dc264c492a1b",
        "cursor": {
          "ref": "2f09e441-8f4d-4a4b-bc97-7bf71ca1e2f8",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f4b7922b-8974-47d3-a823-de14ddec6bb6"
        },
        "item": {
          "id": "2a1d43a5-a367-460d-90f1-dc264c492a1b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "85eea212-6037-4ab1-9ce3-45b81b924f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8718085f-c8d1-4160-9491-5e0d97c5cc77",
        "cursor": {
          "ref": "a4071c0f-af84-4de4-b26f-23895ec40696",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6691aa04-7059-4c3c-8a8f-95e007e6a0f6"
        },
        "item": {
          "id": "8718085f-c8d1-4160-9491-5e0d97c5cc77",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "893d75db-0362-4109-8445-fc5c13c9b47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd70c8b6-8b38-4f9e-a188-111906205271",
        "cursor": {
          "ref": "d3894633-4bfb-4acd-81fd-a109e328a3de",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "efacb5c6-6a5c-485c-ae3d-5bc095e8f7c3"
        },
        "item": {
          "id": "fd70c8b6-8b38-4f9e-a188-111906205271",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "10acdb3b-90f2-41aa-b2c9-2b53bf80af21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c9e35b-acba-4e6b-8ab1-550d6d887bb4",
        "cursor": {
          "ref": "518dafbc-8bb3-4d8d-b616-da70ef2323a2",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "7e660305-710b-4f70-9854-899615a2dcc4"
        },
        "item": {
          "id": "16c9e35b-acba-4e6b-8ab1-550d6d887bb4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6e09cbe0-ecf4-4e32-ad48-a4b29b7a881f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ff441f-fcd0-401b-9e60-d60cefa69568",
        "cursor": {
          "ref": "08d4a6f1-dd22-488f-9103-7d64aa42f79b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1684ed0d-dfc0-402f-ae99-1a6a984fa1de"
        },
        "item": {
          "id": "26ff441f-fcd0-401b-9e60-d60cefa69568",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5041b6c5-eaf9-4ecd-9de9-f999744688f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f685fc23-6e15-44b8-ae27-61573ccb64fd",
        "cursor": {
          "ref": "d8b0b75b-3d5a-45a5-938c-90f2567c0fc2",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ab7f8f7f-967a-4abe-8da8-a90070965464"
        },
        "item": {
          "id": "f685fc23-6e15-44b8-ae27-61573ccb64fd",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3125dbc6-12ee-4ae0-90f6-df6494da5e55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9930383c-5985-4cf8-9715-d32013cb04bd",
        "cursor": {
          "ref": "2f3deaa6-0548-4aee-afa3-68a36a0c6286",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9492737e-e8cc-41db-8030-94b7a08b8137"
        },
        "item": {
          "id": "9930383c-5985-4cf8-9715-d32013cb04bd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7750a298-c184-427f-a2ea-0c1abde87543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d9e3bb-cea7-4992-a383-2998a7621980",
        "cursor": {
          "ref": "d84f403e-d69d-4060-a59f-d9b40ade92b1",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "35932690-854b-4c26-9a94-19303c3ef791"
        },
        "item": {
          "id": "53d9e3bb-cea7-4992-a383-2998a7621980",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "06fab974-eded-437c-9cde-3115d4a32c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e245ca9e-7d78-4751-8153-1789af2fa635",
        "cursor": {
          "ref": "a3d4aa3b-7797-4a61-98ea-49f1a7ebb359",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3fc8e290-f8d4-4ba2-9be1-e8be463b4fed"
        },
        "item": {
          "id": "e245ca9e-7d78-4751-8153-1789af2fa635",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "67b5dcfd-ad26-4872-8740-04b794e1d5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad35ec12-e400-4a77-8faf-6db41b93f848",
        "cursor": {
          "ref": "7e24fc0a-4d4f-44fb-8a13-cb843362e848",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0acd0478-e1c3-4006-b7f0-a34cceaeafde"
        },
        "item": {
          "id": "ad35ec12-e400-4a77-8faf-6db41b93f848",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "93932362-9922-4a35-afbe-5361d8883a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ee9bfa-2c0f-4e48-99ef-5a00086192c1",
        "cursor": {
          "ref": "ecd8fb1a-c4eb-48c3-8eef-aedb12a6ffcb",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bcc522ce-ac5c-4239-bea7-c247db13c033"
        },
        "item": {
          "id": "d6ee9bfa-2c0f-4e48-99ef-5a00086192c1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6de682fb-e4ac-4198-a410-791a083a4939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67589a8-6699-40d8-93a2-82d0562cd885",
        "cursor": {
          "ref": "6b371cc4-6610-4e11-9081-672b1de103db",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f8b8bacb-9bb6-4c2d-8cce-9af8fa22fbeb"
        },
        "item": {
          "id": "e67589a8-6699-40d8-93a2-82d0562cd885",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1f874f6d-1e78-4eab-be59-3c35e1278581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f262cecd-ee39-400a-b665-c28d5b299823",
        "cursor": {
          "ref": "dab64827-eca6-40fd-a5f2-8ec66337e36a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ab2f8aeb-b7bd-461a-86e5-e6d27d20f687"
        },
        "item": {
          "id": "f262cecd-ee39-400a-b665-c28d5b299823",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fe28154e-7a85-40e6-9002-aaeb0238af46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a5fb84-80bb-4763-a390-934669b749be",
        "cursor": {
          "ref": "c5aef12e-a1fe-4900-9925-94244425f0df",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3883058b-0a5d-47b4-ac68-0f89d6d6f41f"
        },
        "item": {
          "id": "c2a5fb84-80bb-4763-a390-934669b749be",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3b3e9647-89bb-4747-b112-9e2b7da6f2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b87e9a9-4e13-47b0-8c5c-be57ee2b500d",
        "cursor": {
          "ref": "a46cd59b-ffbf-4f86-a8e1-0809f6bab541",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5ac49fdc-9fc9-416d-b9e5-ccfbfb4a63d6"
        },
        "item": {
          "id": "6b87e9a9-4e13-47b0-8c5c-be57ee2b500d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7ac21b6e-20b5-4963-a215-d513f3312be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab45eab-e420-4583-87a2-917b8d421aa4",
        "cursor": {
          "ref": "cd4b717d-ee4c-425e-ba79-286e6e7bfc2d",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e35027b7-2acf-4a73-a45f-a7a18b706173"
        },
        "item": {
          "id": "5ab45eab-e420-4583-87a2-917b8d421aa4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "34fbd003-d457-4345-8740-cebb031851a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888e57ac-a515-4a1b-80bd-bd7336bd8371",
        "cursor": {
          "ref": "5b99b22d-5d33-4903-a0cc-6c3ff34cb37f",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f3a0dafe-abe9-473c-95a6-437c55347214"
        },
        "item": {
          "id": "888e57ac-a515-4a1b-80bd-bd7336bd8371",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6156a7e0-40cf-4e71-9dc6-f240e1e360aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80d28c2-05b6-4d46-b417-bcf31a23eb4c",
        "cursor": {
          "ref": "fa5374c4-81e2-4855-ab63-d212c755bff8",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6913c887-45c5-4f55-a86b-504f1d0fc87a"
        },
        "item": {
          "id": "e80d28c2-05b6-4d46-b417-bcf31a23eb4c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6f607ec4-13a2-4834-af54-ea0c357e4524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50f9633-8d2a-4c17-8588-44748cbc6829",
        "cursor": {
          "ref": "e85d4516-da7f-4ed5-a4b7-ac2b5f411ece",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "26ed671d-5b4f-42ff-977b-cfb26071f09d"
        },
        "item": {
          "id": "f50f9633-8d2a-4c17-8588-44748cbc6829",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a621cdf2-c840-45f9-b56a-f6d86bb6e8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00dd401a-ee84-4c38-8569-d6fe0881c795",
        "cursor": {
          "ref": "fbdf6d7c-1882-4ba3-a91e-6796fe577c03",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "65476749-9651-4e13-bf6e-b3137f376973"
        },
        "item": {
          "id": "00dd401a-ee84-4c38-8569-d6fe0881c795",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "42b01b4d-120b-44a6-9357-640709ad2dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42aaf7cc-b70c-4282-a112-1f3961ae7a3e",
        "cursor": {
          "ref": "713c099b-009e-4171-9f28-294d95e806d7",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c5d99823-87f6-4914-8bac-db3f6f22202a"
        },
        "item": {
          "id": "42aaf7cc-b70c-4282-a112-1f3961ae7a3e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3b33ec44-7993-444c-be04-8770ed4bf821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f100f684-8a47-4616-b5b7-edb7f02df01f",
        "cursor": {
          "ref": "a1e36d1d-c9ee-4517-823b-dd0cb2cad0a6",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "03db3d71-9915-4b57-8061-cd56026a6765"
        },
        "item": {
          "id": "f100f684-8a47-4616-b5b7-edb7f02df01f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0753ef39-1091-48d4-83df-73f9e31d28e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6753e2a9-b46b-4cee-99d7-6ff0c29dd049",
        "cursor": {
          "ref": "fc9b06ce-a2e2-450a-a1b0-e0af9dda98f6",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2babf8db-8f93-4bd7-ad1e-9f276f08e3b7"
        },
        "item": {
          "id": "6753e2a9-b46b-4cee-99d7-6ff0c29dd049",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5d9bfc50-2d52-442f-a0c6-b177269eab5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81e71e0-cee7-4490-970d-b114b087b4f4",
        "cursor": {
          "ref": "0111c6fa-a8ba-448a-8ab4-46116811861e",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bd9cef5b-7835-47ba-8d44-99905b3ecc2f"
        },
        "item": {
          "id": "c81e71e0-cee7-4490-970d-b114b087b4f4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a105a96c-b874-4b34-80c4-f506e78af828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25480496-0f27-4bd8-aac7-3020816c9483",
        "cursor": {
          "ref": "2a62ab6b-cdfb-4b02-933a-060b26e5afc1",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dd88003e-84ad-4a94-96e9-1813c129d099"
        },
        "item": {
          "id": "25480496-0f27-4bd8-aac7-3020816c9483",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e3239d8d-6d89-4086-8d66-7259aa577d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac580998-c9ed-4140-a286-b16afd267647",
        "cursor": {
          "ref": "8568f9f1-4549-45ca-889d-1cca445a4369",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e4bfc147-6d3f-4153-8c27-7735198ae27c"
        },
        "item": {
          "id": "ac580998-c9ed-4140-a286-b16afd267647",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c6658ae7-78f0-44bd-8e43-c146cd117d4c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd52a1ad-36bb-46ed-8356-51f9faa3f48e",
        "cursor": {
          "ref": "cb8e8935-c9da-4b32-8483-c37c5a921b6a",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "15c499c5-12d6-4e93-ba4b-dd52bdac1f52"
        },
        "item": {
          "id": "fd52a1ad-36bb-46ed-8356-51f9faa3f48e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d1fb85ec-fb87-4531-969a-3bfe6ee23d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f20108a-cbbd-4f1b-b03e-1ec1cf32432a",
        "cursor": {
          "ref": "75b5b40e-6e79-4e50-88fe-57f36e0730fd",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4e3156ef-f05d-40f7-b1ef-7f87d5a9c86e"
        },
        "item": {
          "id": "7f20108a-cbbd-4f1b-b03e-1ec1cf32432a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "81b76221-2828-4c41-b8ed-b404ed39813b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b8758b-61b0-49e5-8dfe-e8afb62db019",
        "cursor": {
          "ref": "03ac0f32-b0e5-4094-8e83-0f359ed24cd9",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "be744aa9-1af6-43cb-850b-c94ce285f582"
        },
        "item": {
          "id": "29b8758b-61b0-49e5-8dfe-e8afb62db019",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "03367abd-542e-40b6-a7e2-6e851cbd286a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5928ef-ae1c-4f64-9743-bc079fb70aa8",
        "cursor": {
          "ref": "4829e424-90bb-4713-89ef-34e45b23f5f8",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e2250658-302b-4733-a624-8a5ae9929f59"
        },
        "item": {
          "id": "2a5928ef-ae1c-4f64-9743-bc079fb70aa8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8252ebce-994e-4e1a-9f92-7c729e32ce65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09d22a4-9897-46ab-8a48-558437c0da9d",
        "cursor": {
          "ref": "ef51e3ef-6560-4286-b31f-304f69c1c1db",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2e6e4e2b-fe8f-430c-9fb7-8e9d95f6cc5e"
        },
        "item": {
          "id": "e09d22a4-9897-46ab-8a48-558437c0da9d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a847f3ba-5dd9-4a6c-8342-1f8282ca94ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b6aad4-5d74-415c-b13e-ed8c0635a845",
        "cursor": {
          "ref": "4013bc20-742c-4951-b5c7-3a53c4c1ace1",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "18d09fa7-6a52-4b8b-9b6b-2c3abad4bd56"
        },
        "item": {
          "id": "63b6aad4-5d74-415c-b13e-ed8c0635a845",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8e5a8548-2490-4c53-b003-f17921e5d510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a492037b-9f5a-4b03-8cca-b16903b096db",
        "cursor": {
          "ref": "448639d4-301a-49eb-9bcd-790c94efd711",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "894f069d-156b-49d1-871f-7a06d38a0db3"
        },
        "item": {
          "id": "a492037b-9f5a-4b03-8cca-b16903b096db",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "983ecb78-af04-43f3-9bd3-4febc359dece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3bed2e-35bd-4356-a118-5f2154c29097",
        "cursor": {
          "ref": "603befbd-ecbc-4326-a2e6-626f533865df",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c1349013-704f-4b38-901b-ef8c63c4f678"
        },
        "item": {
          "id": "6d3bed2e-35bd-4356-a118-5f2154c29097",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "efe171cd-a3d8-4bf6-866c-41e6fce12f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1448e193-a0f1-4b7f-94aa-93eac459e784",
        "cursor": {
          "ref": "7463b878-d87c-4c00-9fc4-297d6133b119",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ee8acaa6-f76e-4938-b5fd-ac61d0512b4a"
        },
        "item": {
          "id": "1448e193-a0f1-4b7f-94aa-93eac459e784",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "24ff5b9d-41aa-4da4-853c-efb8bdc482c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85612c41-cce3-4dab-a665-1c64b52e9ef7",
        "cursor": {
          "ref": "43e04913-7f75-4b8c-b301-5f791de9f430",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ffc84566-b7b5-497b-88a7-b172e20136d6"
        },
        "item": {
          "id": "85612c41-cce3-4dab-a665-1c64b52e9ef7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "10be5fd0-9823-434c-ae08-9b896b7ad154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7e5064-6b4b-47e0-9d5d-a7c3e869226d",
        "cursor": {
          "ref": "8ca1e0af-5850-45b5-ab01-f56499354753",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "12e2a1dd-ad78-4859-9e03-b0f96311f8e6"
        },
        "item": {
          "id": "4f7e5064-6b4b-47e0-9d5d-a7c3e869226d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5430aa40-1cc2-4f0a-be90-f54219637d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6780ef22-ca50-485d-bf35-03d88dc5d4bb",
        "cursor": {
          "ref": "2a8df795-2844-4e06-91c2-a16197f17f47",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a5877809-af0f-42fe-a1b4-8ef2fc5d0dfe"
        },
        "item": {
          "id": "6780ef22-ca50-485d-bf35-03d88dc5d4bb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f6c43e31-f244-4a89-8c03-029818ed0f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cb15e9-7550-47c4-9d67-93bcc23d5585",
        "cursor": {
          "ref": "92732732-b738-4b11-aa96-f03b3ea7ae1c",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "073c232b-0e61-4a8d-94f6-451f36de54e4"
        },
        "item": {
          "id": "b2cb15e9-7550-47c4-9d67-93bcc23d5585",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5374272e-4aae-412d-93f4-76d58f56775a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5f878b-0877-44d4-8333-692fa5070f43",
        "cursor": {
          "ref": "4d682346-6a7b-46cf-9bd3-43c86d3c5ed3",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a66a2488-0976-482c-b309-7cf43182cde8"
        },
        "item": {
          "id": "df5f878b-0877-44d4-8333-692fa5070f43",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f9e14989-bce0-4e8d-8e92-4c454d27be97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4adf5dc-34d0-4678-8415-833a8e7f0280",
        "cursor": {
          "ref": "f689aa23-67e8-42e2-aa4f-7a6db3540891",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3d1cd1ab-d1ef-46ff-9cc6-3c2982a310c2"
        },
        "item": {
          "id": "c4adf5dc-34d0-4678-8415-833a8e7f0280",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a4dcee4b-5762-43ea-883c-a7a5b81c60fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae3744d-8871-4eef-83f2-4f738106d7e9",
        "cursor": {
          "ref": "016f6f0b-ec41-40f7-820c-9b99afcf8aa3",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "c0246b10-0346-4b11-a79c-9502f2bc9b0c"
        },
        "item": {
          "id": "cae3744d-8871-4eef-83f2-4f738106d7e9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f3b20c3c-c5ec-405d-a9d8-3e15ea288465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9561bb4c-1d77-4cc3-bc29-e42580a5b683",
        "cursor": {
          "ref": "65f4dde6-6758-4b93-bf74-ead655b51467",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "806321f5-0611-4690-8071-ec077266eca5"
        },
        "item": {
          "id": "9561bb4c-1d77-4cc3-bc29-e42580a5b683",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2ce822d9-120b-4f0e-93e2-fd976f148500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99586a47-132d-4fd7-a6ab-ffe44d0a3864",
        "cursor": {
          "ref": "ab5f3a62-91f2-4423-85d3-da8fa3825cc0",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c8e0e5d1-b879-4cba-9f43-432ed54ea2a3"
        },
        "item": {
          "id": "99586a47-132d-4fd7-a6ab-ffe44d0a3864",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ecad7aa7-97e4-4bc1-add8-53c0d97225d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6db8a8-198c-493c-9ff9-388569f41a71",
        "cursor": {
          "ref": "130511e2-3b0c-4ae5-8f4c-466e24867b40",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e73fbe07-f964-4373-9139-763fbacd634e"
        },
        "item": {
          "id": "1d6db8a8-198c-493c-9ff9-388569f41a71",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "71a87814-7834-4c6d-9ee0-e3ee63dc6455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b48958ab-d0ed-40f2-bc58-908fe44bbc74",
        "cursor": {
          "ref": "809a3413-843d-4bdc-9d78-3f739cd8e1bb",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "093985b9-2d39-479f-b833-e07d7d86033f"
        },
        "item": {
          "id": "b48958ab-d0ed-40f2-bc58-908fe44bbc74",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1e5d1a26-d6a0-41b5-8ece-906fd61e03f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16435757-8719-4081-ae2d-f3c5b71b4cf3",
        "cursor": {
          "ref": "cf92e31c-b89f-4f63-a7b3-9768f571c9ef",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "586c90f2-cf7c-40e1-9d88-d948c04b6cc3"
        },
        "item": {
          "id": "16435757-8719-4081-ae2d-f3c5b71b4cf3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "903516bb-59ad-4805-b60c-6f45fb493290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8034dd0-8630-41aa-9e64-e28a3529878d",
        "cursor": {
          "ref": "17d054cd-8033-40f1-ba12-5d26c0280c07",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b2cb2723-dc31-4eda-be06-21be48bde564"
        },
        "item": {
          "id": "c8034dd0-8630-41aa-9e64-e28a3529878d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8a5a981f-c29d-4ee9-9e4f-1ba713e4709f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a7afed9-5e73-402c-a5c4-2fda73b3e191",
        "cursor": {
          "ref": "5c520c2e-2128-4f01-accd-d7afdeef592f",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e80137b2-f479-4b35-b1ef-4450700303fd"
        },
        "item": {
          "id": "9a7afed9-5e73-402c-a5c4-2fda73b3e191",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "85516176-650f-46a6-b265-dcfa9325dec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a295f2-a648-433f-a2bc-34ab777ede2e",
        "cursor": {
          "ref": "983b8ea6-6c82-47da-80f1-79e242e9765d",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "367174b3-4e31-4c92-a63a-f30eb0318a32"
        },
        "item": {
          "id": "f2a295f2-a648-433f-a2bc-34ab777ede2e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7d2dd51a-b22c-4bd8-b370-a966c89d8673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae61c008-773a-42cc-9fce-5a786e95946f",
        "cursor": {
          "ref": "89959b1d-c286-4c6d-b4d8-bd2c6c93fdb4",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9dcb3aca-bb88-40ea-b0e6-8b91d350d5d6"
        },
        "item": {
          "id": "ae61c008-773a-42cc-9fce-5a786e95946f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "2fe0e1ec-c6be-4426-91a8-dd9d14571a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ec28e5-55e3-4b9d-8383-6d3652326349",
        "cursor": {
          "ref": "87d0624b-9e38-493b-83a3-6f9fd96a8826",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "aa008355-5f6f-4cb9-9b45-f85b2a5bda3c"
        },
        "item": {
          "id": "b0ec28e5-55e3-4b9d-8383-6d3652326349",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5de79d08-1460-4da9-b2fc-93d724919fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfde2df4-6638-43a8-8651-2e4e9480b2e8",
        "cursor": {
          "ref": "edfb7af7-5821-47f4-a677-414f7c3156d7",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f83e22bb-7a12-476a-a798-8be86ae04b83"
        },
        "item": {
          "id": "bfde2df4-6638-43a8-8651-2e4e9480b2e8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d3f08883-cddc-45db-a9ae-6124d281f37f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37916714-77a2-4561-89a4-e5fd656a3eb6",
        "cursor": {
          "ref": "552fb40d-3d39-470e-ae3d-afce72a001aa",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0c4eb9cf-daf0-4ea8-8535-c0b2dd445fb2"
        },
        "item": {
          "id": "37916714-77a2-4561-89a4-e5fd656a3eb6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1d6a2323-c751-4195-9919-0ba20ae1572c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59a07f6-b700-42f4-8846-7e99c887fab0",
        "cursor": {
          "ref": "fbb3fd02-ccae-413f-84ec-2ac4708926d3",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c78201f3-9b85-4c76-8db5-7c727e3317c4"
        },
        "item": {
          "id": "e59a07f6-b700-42f4-8846-7e99c887fab0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7e03686b-aea1-4ccc-bebf-970af1d2c091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b019c0-3c88-42d3-8cb7-8349c50d9228",
        "cursor": {
          "ref": "6c3f0aea-daba-408b-9621-bcd521e9576c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0563c080-4f9e-4dfa-bd6f-8b19103e712e"
        },
        "item": {
          "id": "87b019c0-3c88-42d3-8cb7-8349c50d9228",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c2514ae5-426e-45b5-b6dd-70f4390fc292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26eb3854-e39f-41b0-b25d-00af66f24eff",
        "cursor": {
          "ref": "528f5728-5843-4a3d-9e47-0e7bb3ac2994",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fdcd173f-18c1-4e0d-a1d1-0c26c64051dc"
        },
        "item": {
          "id": "26eb3854-e39f-41b0-b25d-00af66f24eff",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2af338b1-c671-4c89-b41f-f4b63dd583fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d083f124-f6c3-49b9-8304-4f9dde065dbf",
        "cursor": {
          "ref": "ffcff4ce-5c8a-4d7f-89be-6f11aacdc182",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a7039037-b51f-4e3f-abfd-5ae54e1139c5"
        },
        "item": {
          "id": "d083f124-f6c3-49b9-8304-4f9dde065dbf",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8afeecb2-0966-49ae-9ab6-d60f220b53d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea5e198-cdd6-40f4-9228-fc0fd51c681f",
        "cursor": {
          "ref": "086da975-02ed-4851-b760-050278f93e89",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4a459370-afdf-4d25-b2d9-270018dcf013"
        },
        "item": {
          "id": "aea5e198-cdd6-40f4-9228-fc0fd51c681f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ee6b2c75-b14a-4ac0-b93a-a92e7de8ab8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a0a274-34f2-4e59-9bb4-24b02610b74a",
        "cursor": {
          "ref": "1a01bffc-1c88-4b31-993f-c3ea79f0dac7",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "2290a48b-0632-499d-98ba-f2d1d4677eaf"
        },
        "item": {
          "id": "96a0a274-34f2-4e59-9bb4-24b02610b74a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "bcad5722-9e92-43c8-9ad9-d5403ab1d918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf7b220-b708-449c-8485-788c62acebdd",
        "cursor": {
          "ref": "5e44bff1-fb38-4b0c-82ee-109f2073f22d",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7e5d4621-0785-4acf-9fb3-500b8e96356d"
        },
        "item": {
          "id": "adf7b220-b708-449c-8485-788c62acebdd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "bf40ae2e-a113-40f6-a6a3-39ccfbefda75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9edcffc-30bf-4f50-a20b-5d734deec9b9",
        "cursor": {
          "ref": "f436c592-86f5-493d-8af7-c3b025d534ef",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d03c771d-c2fa-4599-b014-3bc3e7e1801d"
        },
        "item": {
          "id": "a9edcffc-30bf-4f50-a20b-5d734deec9b9",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0d34e76f-ce0e-400c-99be-c18e169b570a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f9e053-07a8-461c-b1db-54c8d412212c",
        "cursor": {
          "ref": "784832f0-6f09-4d40-98fd-8689790c251e",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "12da1ab7-deb1-496f-b27a-c994726b4d3c"
        },
        "item": {
          "id": "d4f9e053-07a8-461c-b1db-54c8d412212c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "267fa12a-e908-4f17-8a4c-2ec71d3628a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad789234-6176-4f5f-bbd3-6bdf40ca8dc1",
        "cursor": {
          "ref": "ce181dbb-f1bd-49b8-84a5-c8ddb622d2bc",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2fc22740-3d6a-43e5-89ed-dad5a105e666"
        },
        "item": {
          "id": "ad789234-6176-4f5f-bbd3-6bdf40ca8dc1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4936a64b-d57d-4c91-b7e0-d9443617288f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8951fde9-994e-48f0-a737-4637801cf972",
        "cursor": {
          "ref": "b13d3451-5ce7-4646-9927-66c22799d220",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "452865d3-d388-4b42-9794-466ff36884d8"
        },
        "item": {
          "id": "8951fde9-994e-48f0-a737-4637801cf972",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c7f43b6e-1b37-4125-abd0-96e86608116c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd6365b-92f6-49f2-8c51-37bd61a809ee",
        "cursor": {
          "ref": "64279343-c5ce-47ff-ad45-6c88b70f9dbc",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3f29be46-6fc4-497a-a92e-5b936f43fbbd"
        },
        "item": {
          "id": "ddd6365b-92f6-49f2-8c51-37bd61a809ee",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f8ecb35d-a62a-4eca-bf49-4a0a61b35769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41069212-79a8-46c7-987a-40c5831cfeb6",
        "cursor": {
          "ref": "f3f0ec34-cdf5-43c2-9afd-4819400a226d",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7534f69a-17e0-4455-be5e-9cc14714fc19"
        },
        "item": {
          "id": "41069212-79a8-46c7-987a-40c5831cfeb6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8a42a1cd-bdb9-4235-8e30-8f9e054813f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9977e18e-4bf0-49e4-8354-a8bd6cd4f3e3",
        "cursor": {
          "ref": "de669372-cdbb-47ee-8f24-34e86402f8da",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c0a42e54-e479-415d-866c-058971cbfd9b"
        },
        "item": {
          "id": "9977e18e-4bf0-49e4-8354-a8bd6cd4f3e3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "160ba4ab-10b6-42e8-98a1-cc958031ea1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70513e90-7805-4bd7-a0a4-1fa898aa52b8",
        "cursor": {
          "ref": "3fbef700-62d8-43ac-aa33-3d59b5c60087",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1cb29e74-f57a-4429-b7fd-dc9caedc519d"
        },
        "item": {
          "id": "70513e90-7805-4bd7-a0a4-1fa898aa52b8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a68e09cb-0346-4724-b433-9decb96c856b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b35f180-aa3c-4ead-89f6-920d9faac922",
        "cursor": {
          "ref": "c274a72b-9e3a-47d2-b2f5-bab3c56269d2",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2157663e-ba82-4374-8ac2-f3fc861e540c"
        },
        "item": {
          "id": "4b35f180-aa3c-4ead-89f6-920d9faac922",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "da380a60-4143-42fb-8de9-612141c7bd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbdcb1e-d181-4815-8d65-1f4b0b806901",
        "cursor": {
          "ref": "336a22d5-7e5a-475a-a6a1-9abc536eef30",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5b18835b-35df-4a49-a17a-4d0af2ca7264"
        },
        "item": {
          "id": "0fbdcb1e-d181-4815-8d65-1f4b0b806901",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "18585471-c437-4b43-b5f5-25564a0cc29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994043e4-1789-457a-9a5a-a53f54f628b7",
        "cursor": {
          "ref": "d8671f93-6289-4bb7-a983-54ffe059ea8b",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fc01fe1a-d815-4c8c-a719-2314e064bdcf"
        },
        "item": {
          "id": "994043e4-1789-457a-9a5a-a53f54f628b7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2f516b44-d5f0-4ba0-80d1-6d92f3d24b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f2ad8b-21e9-4d00-8307-b18f17051e35",
        "cursor": {
          "ref": "d3de0156-5afe-4538-ba50-cd35f3888cf4",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6dbbe2cf-34c0-4540-8850-8b2a1967c0ad"
        },
        "item": {
          "id": "f7f2ad8b-21e9-4d00-8307-b18f17051e35",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "00655798-af2e-4793-857a-a544606542cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2881bf6b-bc6f-494b-ac6d-9cf0c9ad72d8",
        "cursor": {
          "ref": "4ce82f8c-4b38-42f7-989b-0d6caecd856b",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "18fa7478-e074-45cc-9c5e-0348b3593914"
        },
        "item": {
          "id": "2881bf6b-bc6f-494b-ac6d-9cf0c9ad72d8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a2664b4e-d753-491e-8e13-87103079edb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c3f98e-6f01-4b71-aae7-750b8283ef28",
        "cursor": {
          "ref": "0a767642-a637-4bb0-948f-3ee49cbb600b",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "14a7d822-6cdf-44bc-a8f6-57c16c9dcd2f"
        },
        "item": {
          "id": "72c3f98e-6f01-4b71-aae7-750b8283ef28",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ad11331a-8d84-412e-999a-bf5f2087ccfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3230fe84-b7b2-4458-89e3-9a601628bfd9",
        "cursor": {
          "ref": "74e4cdb7-5e36-47b3-b742-9620d4e16878",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0d575de8-dcd3-464a-ac3b-433eb7ef5dad"
        },
        "item": {
          "id": "3230fe84-b7b2-4458-89e3-9a601628bfd9",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ebe852cc-e3cb-4e7a-a374-9288fc86614d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c093e3-9b66-46ac-ab40-38803732b62b",
        "cursor": {
          "ref": "44152cb5-054c-438c-a0e6-9e002914eff1",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c4ecd17c-04af-49f3-9424-a08c160eba60"
        },
        "item": {
          "id": "74c093e3-9b66-46ac-ab40-38803732b62b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c9a725e7-13c9-4756-9b9d-d546383a9858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35e2b63-a57f-46cc-9c36-8a5507765c2f",
        "cursor": {
          "ref": "9ac50922-c41e-4708-94ee-7e96adcd7419",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7f93146c-5b4d-4d95-9fca-13a3a6219451"
        },
        "item": {
          "id": "b35e2b63-a57f-46cc-9c36-8a5507765c2f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2504a7fe-f20d-4034-ba8b-a09fdf276d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9f2b22-fb97-448c-8822-bea8f1fe2634",
        "cursor": {
          "ref": "551c3673-cff6-4bb6-a7d7-0acc05c4f2f7",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f4bb9bc5-2f83-4b68-a63e-d0cc4343e1b7"
        },
        "item": {
          "id": "df9f2b22-fb97-448c-8822-bea8f1fe2634",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "35834bc4-20b0-4a9d-8080-a45b65705cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3e2b63-e6c2-4c66-881c-bf935956e2f9",
        "cursor": {
          "ref": "4a3f8b5f-2b6d-4935-959e-daa0e24bf214",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "988316b8-da42-4234-a515-3cd645abb19b"
        },
        "item": {
          "id": "ac3e2b63-e6c2-4c66-881c-bf935956e2f9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8865d9da-d545-486e-8622-9ec0c2d3a2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f08288f-d723-4e94-8434-11afefb6a154",
        "cursor": {
          "ref": "6efdce7a-1b34-4232-96b6-05df51236236",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "89a1ddb4-d3f6-4a87-8dea-794ab349bd57"
        },
        "item": {
          "id": "5f08288f-d723-4e94-8434-11afefb6a154",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5c1427f6-8ae8-45dd-bcd4-952b4f07f5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbb19a5-594b-40b4-b3da-5b2156b8f005",
        "cursor": {
          "ref": "983e6e97-56e3-44a8-b349-167279282f4a",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "55085959-526b-4db3-81c3-34b6ee5e0d8c"
        },
        "item": {
          "id": "ccbb19a5-594b-40b4-b3da-5b2156b8f005",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3b41acc2-f7ef-4326-aba5-b16cde1661b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a55fa45-64f2-49c4-90e2-9a6fc4d2ca4b",
        "cursor": {
          "ref": "a1535353-6ea9-4928-ba91-de8fff8c9b2f",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b104d056-5e29-4a0c-8915-80be20f3c418"
        },
        "item": {
          "id": "2a55fa45-64f2-49c4-90e2-9a6fc4d2ca4b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "032e5f56-e5f2-48b9-a25a-919be53cf15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8178441c-b670-47ad-9491-340a8cd32c07",
        "cursor": {
          "ref": "5a6a67f7-48e4-446c-932e-a7bea4b99483",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e31bf999-c883-44ad-8671-438e55d8cdea"
        },
        "item": {
          "id": "8178441c-b670-47ad-9491-340a8cd32c07",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bbdc35c9-124a-4692-be70-6786e2e8fd1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6308095d-0770-488d-997f-b8da7d4873d3",
        "cursor": {
          "ref": "6239502a-9317-449a-b183-216615214841",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ab086311-4ac5-4950-a1c6-c52cd78169d8"
        },
        "item": {
          "id": "6308095d-0770-488d-997f-b8da7d4873d3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1c7a2fed-4f53-4fa4-8a9a-1a7448e8d985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8162e4c5-0a5b-4417-9095-6402bbcf7c1f",
        "cursor": {
          "ref": "35add842-d24c-4379-92d8-596a151fcec0",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "029acfde-668e-4bdb-b3fa-085ca789f4be"
        },
        "item": {
          "id": "8162e4c5-0a5b-4417-9095-6402bbcf7c1f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e209290e-b959-4494-9aa4-a1af0e09faa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885029fa-66d1-45db-be81-2a3a65a8ed31",
        "cursor": {
          "ref": "d18435dc-eda4-4194-87f3-4c328b97073d",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f302350f-c7e3-4855-9777-3162abf1060b"
        },
        "item": {
          "id": "885029fa-66d1-45db-be81-2a3a65a8ed31",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8f9c5708-60f8-4336-b345-d0260dcbcb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bfe2a1-c3a3-4aa2-91ee-5706aa4d1a49",
        "cursor": {
          "ref": "8f2f6193-9f4b-48f7-9324-a31091e0d1f1",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b426c1a7-7e77-42e0-a254-8f69f2e21181"
        },
        "item": {
          "id": "92bfe2a1-c3a3-4aa2-91ee-5706aa4d1a49",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6e37be7a-a49c-4e0c-a282-5724aee495b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74bdaec-2cd8-4e96-9ae0-1d5af74aca4d",
        "cursor": {
          "ref": "27f8b0fe-4f97-459e-8a10-6d6094f683b4",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f73df856-b072-4da4-9056-d8445502742d"
        },
        "item": {
          "id": "a74bdaec-2cd8-4e96-9ae0-1d5af74aca4d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6f1cbdcc-39f0-49f0-afe7-9e5c3c1c9bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d3d927-3f23-4930-a6af-6bd866ba6d02",
        "cursor": {
          "ref": "35608fb6-6f27-4b01-bb45-4476e0591513",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dd2b0109-fc16-44f2-a906-ca36070f0c30"
        },
        "item": {
          "id": "90d3d927-3f23-4930-a6af-6bd866ba6d02",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5b56a941-49e0-4c31-93b1-e7663d045a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa12263d-7d31-4160-b048-66f2ebd63901",
        "cursor": {
          "ref": "02c4f423-be76-4ae6-aa39-e7b536cd81fe",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d058b6c4-635c-4945-b501-b656bd76cc8b"
        },
        "item": {
          "id": "fa12263d-7d31-4160-b048-66f2ebd63901",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "360dd27b-8fe2-4d87-9a33-a27f5e6423e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d243613-7b07-4261-ac10-7a19100cf87f",
        "cursor": {
          "ref": "3551cb8b-f516-472d-b035-8453aa1a180d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "417142f4-4345-42c7-981c-70bf5240edfb"
        },
        "item": {
          "id": "1d243613-7b07-4261-ac10-7a19100cf87f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "37c24e50-cf81-43c3-8174-a53aa259d08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2b1f8f-ef17-4e79-a34c-15d65faa5bf3",
        "cursor": {
          "ref": "32e378c2-c577-4245-b961-0042effbc5f3",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7b8c5aee-7ed5-4c70-8179-0474eae531a4"
        },
        "item": {
          "id": "0e2b1f8f-ef17-4e79-a34c-15d65faa5bf3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fe1b79f8-6fb4-4ddf-b6e2-803a41bba36a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ffbdcf-9932-4fd2-9510-22742cea17f5",
        "cursor": {
          "ref": "1e6a178b-6f39-4cc4-a032-17a3401c40ff",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "56804d46-3c84-4da3-8b5a-632e2acda760"
        },
        "item": {
          "id": "86ffbdcf-9932-4fd2-9510-22742cea17f5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "8f470eb1-6b8c-4294-abe9-f8b7695b6f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16d5d46-48fb-49db-b91c-7eeb2d3ba5f9",
        "cursor": {
          "ref": "6ba3ec19-156b-4e66-bd3e-5808315ca823",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "789af7dc-bf85-4535-834a-83e122a8eea2"
        },
        "item": {
          "id": "e16d5d46-48fb-49db-b91c-7eeb2d3ba5f9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3ad36cee-909a-4636-b95c-6b8aaaf0fa42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1385472c-de0c-4b03-aa0c-26f4c9da805e",
        "cursor": {
          "ref": "fc0b1d80-8ffd-4da9-a27d-878882df50e8",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "55375422-bb93-44fc-8057-0b1130c220bf"
        },
        "item": {
          "id": "1385472c-de0c-4b03-aa0c-26f4c9da805e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9d3a8b50-bcda-43ef-9c5a-5e056e424809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af888622-f2a0-4113-8381-7b1fc2253fde",
        "cursor": {
          "ref": "d4bce5a6-48a3-4696-b760-513b8b6bd20b",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d986dcbe-d374-48b9-bf8a-604c31dda26c"
        },
        "item": {
          "id": "af888622-f2a0-4113-8381-7b1fc2253fde",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "427c2dc1-1831-4a36-a1fb-32ea94b4b94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "333ca6b1-c433-4613-99ed-4aa8d33b9f2e",
        "cursor": {
          "ref": "4114e503-e1fe-4f3b-9168-6e6eee21efe0",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "032c53d7-fd13-4678-a8c8-7a648d8cc821"
        },
        "item": {
          "id": "333ca6b1-c433-4613-99ed-4aa8d33b9f2e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "263e97ec-aee9-4f73-a3aa-8c39fb7004c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b62ae0a-b950-4339-aa2a-fe5ac0cf5dbd",
        "cursor": {
          "ref": "95a879bb-1163-4633-ab58-d03af53f07a9",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b9b1d9cf-a1b0-4529-8f9b-297ed769a885"
        },
        "item": {
          "id": "1b62ae0a-b950-4339-aa2a-fe5ac0cf5dbd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7eb3518a-27b5-424a-afce-8016dcf5a886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4188f823-15ce-4b44-b407-00b5326d4fa2",
        "cursor": {
          "ref": "44185be3-14c2-4723-a90d-a1f86d672db2",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "02e15afb-06f6-4126-b676-4bb6f63198bc"
        },
        "item": {
          "id": "4188f823-15ce-4b44-b407-00b5326d4fa2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "79800a54-0108-493d-9503-ff7f248e131e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0554bbc0-03db-491c-b0a3-763a3daa5bbb",
        "cursor": {
          "ref": "dfaf12d6-010f-424b-b03a-e5e9abe86f77",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "abe12aa9-3619-44bb-8d74-da987f8532c4"
        },
        "item": {
          "id": "0554bbc0-03db-491c-b0a3-763a3daa5bbb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "87cdce9b-43f9-4037-8547-449cc339bc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0eedd13-c4f3-4e24-a44f-68ebceeaa77d",
        "cursor": {
          "ref": "2abb5ee3-33e4-46d6-93e7-346eef94ff88",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "52ac6a32-11b6-42a8-950b-935b541ca926"
        },
        "item": {
          "id": "d0eedd13-c4f3-4e24-a44f-68ebceeaa77d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "afe2442f-1022-4bbf-b06c-796d49bb4ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a388bc-1282-4a0c-8d3f-25ca93965d63",
        "cursor": {
          "ref": "6cc4e180-040f-4e68-9a64-bf8bf33177b2",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "70ed9ba8-544d-4f75-8a09-d0debcdd9b7b"
        },
        "item": {
          "id": "c2a388bc-1282-4a0c-8d3f-25ca93965d63",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9c298ebb-8ee7-4ec9-a128-810dee7bb1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58d6832-2d13-4930-9b5c-9a694c4d87c8",
        "cursor": {
          "ref": "b31fc57e-17c2-4846-8f17-32f397dd2a9f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a992952d-d2ea-4557-9426-814e56766a2d"
        },
        "item": {
          "id": "f58d6832-2d13-4930-9b5c-9a694c4d87c8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1697b377-b971-429d-ab26-ce10e6fc8e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3e86f3-0283-4a65-a1b2-c499a96e24af",
        "cursor": {
          "ref": "50a6272e-28f4-454b-8038-e00460fbc568",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7ce9d259-8776-4596-a2f3-b537f5e1e74b"
        },
        "item": {
          "id": "2e3e86f3-0283-4a65-a1b2-c499a96e24af",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "896187f0-f497-4773-9584-0f5eb8483c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62200ed-9a29-45fd-9cee-62e36320a820",
        "cursor": {
          "ref": "af490cc1-090e-490f-a260-81d73cf8b848",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9ebbd9bc-42da-467c-bfa2-a21ce2a16602"
        },
        "item": {
          "id": "e62200ed-9a29-45fd-9cee-62e36320a820",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8df5da7e-cc7d-40ab-90ef-f4f2e53d722a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de5c632-451f-495c-acf1-0cba931597b0",
        "cursor": {
          "ref": "42a95076-a58f-45ea-bde3-3fb5cd78d141",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d1a1e6e0-5f60-4b15-8db6-c32f98f7d3b6"
        },
        "item": {
          "id": "2de5c632-451f-495c-acf1-0cba931597b0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9cfe4f87-8adc-47a1-b46e-06e4c1143247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9527edd-f9e7-461d-a660-57889f886847",
        "cursor": {
          "ref": "e8f577f2-f860-4bc0-b73e-9b480f550be0",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "5ecd7fd3-b898-4312-b240-aff0556de794"
        },
        "item": {
          "id": "a9527edd-f9e7-461d-a660-57889f886847",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4c5e0ea9-e39b-47ae-a947-86a1abda755b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68e24e9-60f6-4519-8cb3-64200f670eef",
        "cursor": {
          "ref": "c1c8992b-3d63-416f-8099-0a9c172b52a7",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "273533ff-bc34-4a65-bcd4-b5a2bc1fca9f"
        },
        "item": {
          "id": "c68e24e9-60f6-4519-8cb3-64200f670eef",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "992fc9b6-37cc-447f-9120-c3e218dbe7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392163d2-b5cd-4b4a-b949-7e74481ea625",
        "cursor": {
          "ref": "a5e83afc-df9d-473a-bef4-7ba308c062c0",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "df816623-bf6d-42de-9234-17e142847fa7"
        },
        "item": {
          "id": "392163d2-b5cd-4b4a-b949-7e74481ea625",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a2593b31-0aff-42b0-a9df-0fee56aa9b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e12c28-65d1-4916-b4e7-4673aeda3e47",
        "cursor": {
          "ref": "0ac7e53a-15bc-4c26-99b0-4a5038a612f9",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "eddb952b-6e8b-4ff2-972d-dfbaec03d409"
        },
        "item": {
          "id": "44e12c28-65d1-4916-b4e7-4673aeda3e47",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "68e64275-87c8-4f20-9a0a-9029c6e9574c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75636b8-bca2-4a5a-adac-5de761d91b8f",
        "cursor": {
          "ref": "5bca4326-0db1-4358-b5d8-a445c30390fc",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b86933c0-1adf-4307-aae8-7c8cdb926c3c"
        },
        "item": {
          "id": "c75636b8-bca2-4a5a-adac-5de761d91b8f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b08fbb89-f76e-4cff-bf88-897e5b8f2ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f8e13c-4e94-4aa5-9652-463b9bad2b5e",
        "cursor": {
          "ref": "dfcc2854-39ab-4dde-8f8b-132ae75cc242",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "96898b46-de5d-4a97-bead-02be4fa3af6c"
        },
        "item": {
          "id": "24f8e13c-4e94-4aa5-9652-463b9bad2b5e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c2280c02-d8eb-4315-b700-458ad405c849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db96df01-27e5-488f-a82f-b5e511039e72",
        "cursor": {
          "ref": "96d924f3-3ff5-401b-b9c9-5c83aad33753",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6601eec5-b54d-439f-ae67-6680f7ef11b8"
        },
        "item": {
          "id": "db96df01-27e5-488f-a82f-b5e511039e72",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4554306c-9807-4916-bfb4-7e5d73b64374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4142d2f2-3700-492d-9bd1-49ba0309e7a3",
        "cursor": {
          "ref": "3199fd96-5972-4ff3-b7bc-6aa2fe5f234a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "87789664-d660-48e1-8761-f973a5a43abb"
        },
        "item": {
          "id": "4142d2f2-3700-492d-9bd1-49ba0309e7a3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "74ca4897-8326-419e-b153-260392802e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637eec47-2017-4121-afbc-a31027c184c2",
        "cursor": {
          "ref": "154b6ab2-66a0-4415-98fa-f3e42cbfc60d",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2cc0e93c-cd7c-4aff-a61f-2de01a407d27"
        },
        "item": {
          "id": "637eec47-2017-4121-afbc-a31027c184c2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "43eda0ba-a384-4653-88ca-56e31fb28a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91410f7e-ea9b-4faa-84b2-4528c139ec8c",
        "cursor": {
          "ref": "03542d1f-da69-4601-9cc9-cd14a6957512",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "66b13a29-1449-471b-b5b2-ca36868bf944"
        },
        "item": {
          "id": "91410f7e-ea9b-4faa-84b2-4528c139ec8c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "16412e61-0246-4987-a9a3-a5679d8ed880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad18f417-48c3-4bc2-9dcd-1921129bf465",
        "cursor": {
          "ref": "9acf2609-cf30-4f21-a576-e4de515280d5",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9bf27bce-0b60-4082-9170-e709be53c693"
        },
        "item": {
          "id": "ad18f417-48c3-4bc2-9dcd-1921129bf465",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d2b97e0b-bb0f-4ea3-b37d-339ab2822630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eaa97fa-80d2-430e-9c00-cacefa3eaaff",
        "cursor": {
          "ref": "c17e89a8-e3a4-4e00-a848-3484f3b8ca1b",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ed227d96-b5ee-40e4-bafb-53d7f4c30278"
        },
        "item": {
          "id": "4eaa97fa-80d2-430e-9c00-cacefa3eaaff",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8d61420f-09d7-4fa0-b8d5-b455028821d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3cbc71-d656-438b-b531-d7e69fdd7937",
        "cursor": {
          "ref": "4affe436-0f96-4736-940b-65abb69c0c7d",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d141093e-8f51-46b5-aef6-b1515fe53cc4"
        },
        "item": {
          "id": "0e3cbc71-d656-438b-b531-d7e69fdd7937",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "68e591bb-469e-4b39-afc6-e8891389672c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab34cbf-7773-47f1-97d5-0dc612513871",
        "cursor": {
          "ref": "8033ccd9-a7f3-40dc-a535-f2932731f3be",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8c3f2de4-f3e2-4bc7-a85f-761a6fbeb0b4"
        },
        "item": {
          "id": "9ab34cbf-7773-47f1-97d5-0dc612513871",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1e243868-9feb-4f8a-a637-6e6a4c97ddc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37731a90-c345-4f8e-8df5-b62999b5a38d",
        "cursor": {
          "ref": "79d85253-dcc3-4a6b-a7d3-e8fdf91881d9",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7a10999a-4aaf-48c4-9e28-33b9b83fee50"
        },
        "item": {
          "id": "37731a90-c345-4f8e-8df5-b62999b5a38d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c3a8940a-bde3-426b-a116-736678fe37c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e405cb1-9253-4e24-a5d1-6166e7a0d3f1",
        "cursor": {
          "ref": "be0d6912-14ed-4f55-be2f-12c45a9df321",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4d111c06-92ae-48ce-8eec-501461c0a32d"
        },
        "item": {
          "id": "6e405cb1-9253-4e24-a5d1-6166e7a0d3f1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f55efcab-f3ee-4e3a-8138-fccfdda223e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96300101-ae48-41cf-8e26-c3667f0a96ec",
        "cursor": {
          "ref": "600cba02-79f7-4264-b23d-f6581c0b15d0",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "85865e9c-23b1-4e7e-90e8-33863e0c0c7e"
        },
        "item": {
          "id": "96300101-ae48-41cf-8e26-c3667f0a96ec",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6eee1f8e-54a8-437b-9a68-197264aaceee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539996b5-ac62-4461-ba3b-3ced7c815606",
        "cursor": {
          "ref": "9f8c1451-9de3-4db4-85e1-18f8811536b8",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5b8504ea-7b60-450f-94df-dd150bb2ad25"
        },
        "item": {
          "id": "539996b5-ac62-4461-ba3b-3ced7c815606",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "43020467-b9fc-43c9-8d24-61b171c35dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c352ec1-2654-42b2-aa42-0bd6abd62c65",
        "cursor": {
          "ref": "fc8d197e-1084-4f75-a8e9-54fb416382ac",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f9de35bb-7288-457b-acd6-a9b7b2885f59"
        },
        "item": {
          "id": "3c352ec1-2654-42b2-aa42-0bd6abd62c65",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "06b7978e-fba8-4087-869d-ed6385197ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbba0eb-d250-443d-9110-c209233792fe",
        "cursor": {
          "ref": "74ca2dca-86da-4ba9-ab02-d73bd05581b5",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "234878ca-0fcf-41bf-87ba-2c30b3fe3df8"
        },
        "item": {
          "id": "3fbba0eb-d250-443d-9110-c209233792fe",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4fd68a17-e756-4ad5-b870-14d08b610404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9a2845-fcf1-4bf2-8ee4-4f3cbaa606ad",
        "cursor": {
          "ref": "ec330e5b-4707-42f9-945a-82d01cb3cb29",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "04a5a499-955d-4ff6-82aa-9310a48cf8ad"
        },
        "item": {
          "id": "db9a2845-fcf1-4bf2-8ee4-4f3cbaa606ad",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4942a312-d027-4c02-b948-f8d7e52647a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dbdc9ec-afe1-4d94-afc4-c5a59dd4898b",
        "cursor": {
          "ref": "ad658a12-c79e-4711-8a79-edc1915c58e5",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "acf45fb1-6e60-45df-b397-62f319a1b7bd"
        },
        "item": {
          "id": "2dbdc9ec-afe1-4d94-afc4-c5a59dd4898b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1ed26796-fbcc-4bb0-a771-6cd45cf44c36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c324d156-e744-4644-8a5c-3f6674e63daf",
        "cursor": {
          "ref": "2cddb05d-2fcc-4e3e-aac6-01727eeb908d",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "95830896-bbc5-43c2-8232-e8626a611eef"
        },
        "item": {
          "id": "c324d156-e744-4644-8a5c-3f6674e63daf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c2f9607e-7c07-43b2-846a-9f7104e90b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc3e4c8-c2f1-412a-a10a-3180f5fc5d64",
        "cursor": {
          "ref": "ff91762c-c44d-4042-a353-a50070d80614",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "121cb23c-9acc-4146-bcac-67b2824b2d99"
        },
        "item": {
          "id": "6fc3e4c8-c2f1-412a-a10a-3180f5fc5d64",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "095df723-513d-4bd6-8646-e0f9a66f16c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0d8599-1520-44e8-a591-a5c738c1c55b",
        "cursor": {
          "ref": "860ca774-6a2b-4a58-b200-c0c2d474ff0d",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2969b52f-dc8b-46be-b520-a31fce86e617"
        },
        "item": {
          "id": "ad0d8599-1520-44e8-a591-a5c738c1c55b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "393ff560-a5eb-4206-bd23-36f942067f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b2d921-b36f-4adb-89e0-05533fe49374",
        "cursor": {
          "ref": "6f551f5d-9b83-40e5-9016-e95e7cbe40a0",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "adfdfc09-4ae4-4c09-9ee0-af21d758d082"
        },
        "item": {
          "id": "d8b2d921-b36f-4adb-89e0-05533fe49374",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a7bf305e-f42f-47f6-b624-25ca1c5711ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d72bb41-9776-4279-9c2b-3701d9f8e140",
        "cursor": {
          "ref": "3155fd2a-a696-49ac-92fc-9587e2ca5fd7",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "80860334-e3dd-4140-9df3-d78f7ac2fc5f"
        },
        "item": {
          "id": "5d72bb41-9776-4279-9c2b-3701d9f8e140",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c1f3e9a3-bc81-4482-84ca-cb1eeaa8502d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84aa5e2-7a3f-4407-90f3-1e6b29e76d82",
        "cursor": {
          "ref": "6a205a41-3dec-4a8f-b51c-9bea87a76ce2",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b162c3fb-b881-49cd-ac0e-b852e0bdf244"
        },
        "item": {
          "id": "c84aa5e2-7a3f-4407-90f3-1e6b29e76d82",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6fcafcc6-9f25-48c2-b9f0-6fc562d02c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060ac568-aa16-465d-996a-497ed46881b7",
        "cursor": {
          "ref": "7c247008-8a01-4622-918f-85daa4914996",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "212c809f-2e08-4a14-ba31-7d8ea404a41b"
        },
        "item": {
          "id": "060ac568-aa16-465d-996a-497ed46881b7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "72b2e110-e45c-4683-bcc9-eebb598288f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196e07b7-d189-432a-9f2e-fd2f98b0c9db",
        "cursor": {
          "ref": "32653b87-b25a-4c2a-bec6-f146ee5adf0c",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e009c1ad-2335-4f8d-bc6a-9f93a9cc052a"
        },
        "item": {
          "id": "196e07b7-d189-432a-9f2e-fd2f98b0c9db",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "597359b7-a79e-4625-af7f-0d661aa47c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29520b2e-2462-4c63-8023-3cee3ce2bf3b",
        "cursor": {
          "ref": "088105fb-7092-42fa-a4a8-635955c4526e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "5885bf89-62c7-4f7d-96e1-34adf58fd8c0"
        },
        "item": {
          "id": "29520b2e-2462-4c63-8023-3cee3ce2bf3b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1d139909-fa2a-4e23-8cc1-d0f5300aa8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945e2a42-647a-4f92-a367-8f0b19051ca6",
        "cursor": {
          "ref": "830e8d29-fbac-41bc-a574-e5d187f80119",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "fbe1d7c0-4f07-4901-bd4b-704417fef07c"
        },
        "item": {
          "id": "945e2a42-647a-4f92-a367-8f0b19051ca6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "71b54e03-d901-4e89-953c-b3dcbc1a589a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32020358-dacf-409a-8787-78350e74fafd",
        "cursor": {
          "ref": "9d464b2e-49ef-4a04-acc2-8ed383f2f0a6",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "af147f1f-2ea1-48aa-b10f-3047baee562d"
        },
        "item": {
          "id": "32020358-dacf-409a-8787-78350e74fafd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d18abae5-ac21-443b-af0b-b6f292dd8378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc52c41-8376-445b-91a6-b8cb581d9a34",
        "cursor": {
          "ref": "5c4ce16b-b368-457b-8f1a-71a188139fdd",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c9fb10be-1f4f-438a-afc3-71b99cb1f3ca"
        },
        "item": {
          "id": "acc52c41-8376-445b-91a6-b8cb581d9a34",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "cf7b483c-5004-4e37-903d-a9553251c8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4dd2ef9-3085-4f65-9d73-671ceecd8780",
        "cursor": {
          "ref": "ca08339c-39b6-469d-a8f4-b622c53b7975",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a08e682d-7f3f-4167-95e9-5d9f1cc0c738"
        },
        "item": {
          "id": "f4dd2ef9-3085-4f65-9d73-671ceecd8780",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a2049375-f75d-4d38-8480-ff6aabec1af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cbd326-c863-4989-ad60-dcd54ca6e48e",
        "cursor": {
          "ref": "a777c687-83fe-45c6-a852-d3209c57c797",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e213770c-e50a-444f-b62b-1fa75b6ab198"
        },
        "item": {
          "id": "38cbd326-c863-4989-ad60-dcd54ca6e48e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "6253d916-32a2-4aa4-8e3c-e2fc4a6d828f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f0cf59-5eba-43f8-9495-c780a096be6d",
        "cursor": {
          "ref": "63aae7da-3241-4588-a140-69724c5db8fd",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "bcd950c1-1c6b-40f7-94ab-704e7e9f45ba"
        },
        "item": {
          "id": "a6f0cf59-5eba-43f8-9495-c780a096be6d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "55ec773f-fb75-409e-be48-48edfb5b3186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451b7b5e-6ebc-4be9-952e-09a0e38b84e4",
        "cursor": {
          "ref": "5db8ab10-79db-4ff8-9889-fec58b33c69b",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "65dfad6d-70b4-4a0a-b96c-67d4284dcead"
        },
        "item": {
          "id": "451b7b5e-6ebc-4be9-952e-09a0e38b84e4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8a77215d-bd00-4af8-bbae-f98438a18374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2fbb59-5c9c-41a9-8709-af0d1002ee6d",
        "cursor": {
          "ref": "9cecfb88-85a3-47a2-86af-7b7bfe94d50a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "29f403fd-932f-4580-ae09-779f179277fb"
        },
        "item": {
          "id": "4c2fbb59-5c9c-41a9-8709-af0d1002ee6d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "94a1a04b-f621-418d-b004-9d10aa02f636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c093f909-901e-4e1d-ada8-7abd508c115a",
        "cursor": {
          "ref": "12ccd692-4015-4ee5-85da-a1cde025f065",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "7964fed2-f557-4fe0-8666-590ee0b9bf64"
        },
        "item": {
          "id": "c093f909-901e-4e1d-ada8-7abd508c115a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "61d9495c-e3cc-4ce9-b5ee-6df267ce1b18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3102c71-5a7c-4e4f-8051-331479147c1c",
        "cursor": {
          "ref": "adaeeb7f-85ad-47c1-924c-22f2ac3eb3b4",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d73caca7-ddbd-4763-9e26-303b4fcba273"
        },
        "item": {
          "id": "e3102c71-5a7c-4e4f-8051-331479147c1c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "623bcb51-de89-432a-8422-f07358f836d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839a2d7f-0009-4274-bb5c-8c0e89643ae0",
        "cursor": {
          "ref": "1a93d264-1be2-4a84-b36c-902a17d20740",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2c3dc982-b05d-4fe6-9a1b-9bcf48a33921"
        },
        "item": {
          "id": "839a2d7f-0009-4274-bb5c-8c0e89643ae0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "106a4e56-08fd-4faf-bfba-ac1071366f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74def94-244a-4255-a328-72ae90c7f6bc",
        "cursor": {
          "ref": "9c543d52-01bc-469b-ba39-ed0de64392aa",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6e652229-db64-408f-b2cc-67be3b3bed91"
        },
        "item": {
          "id": "e74def94-244a-4255-a328-72ae90c7f6bc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f5965e79-b883-49ef-ae79-939f1c8bab83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85881a69-0ee7-405f-8f5b-4ee872aaf143",
        "cursor": {
          "ref": "38b107c7-40f0-44af-bd48-108f9f4ca750",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f92575e8-63d8-4193-92f9-a442733a151a"
        },
        "item": {
          "id": "85881a69-0ee7-405f-8f5b-4ee872aaf143",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e9a1afae-49ff-4298-8dcc-065c102837ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b1830f-2a0b-4b12-a204-e112cc5bd0d5",
        "cursor": {
          "ref": "d1bd9048-27fe-4c40-8317-012e29bceec4",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "7b4a4d46-c4f1-450c-8476-667c13dc5476"
        },
        "item": {
          "id": "60b1830f-2a0b-4b12-a204-e112cc5bd0d5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4d7c7e0b-54bd-4bf8-b4c5-9cba5a6c4a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97966518-d666-4bb8-89a0-6b5d73f5ea6f",
        "cursor": {
          "ref": "5c1d7aa3-22a5-4745-a273-9f9be6580c06",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1617c8cb-0437-437a-b3d3-e5091b96adaf"
        },
        "item": {
          "id": "97966518-d666-4bb8-89a0-6b5d73f5ea6f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0e02a6e2-9086-4f26-9156-f5158a979fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b3baab-173c-4078-884d-9881f742f58e",
        "cursor": {
          "ref": "af12bc4b-3e41-4002-a112-9488f9169b68",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e33ea330-48e0-4d62-9b22-b7a8b9f9b154"
        },
        "item": {
          "id": "c5b3baab-173c-4078-884d-9881f742f58e",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b08e24a2-e543-46d3-8db1-398f817a45ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1101352-f087-40ee-9a88-3306bee57ee2",
        "cursor": {
          "ref": "ecfdb7ea-de50-4acb-b613-65cc381a45fc",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "cd2c8ff6-a0c3-49b5-ab8d-beba2ea91b3d"
        },
        "item": {
          "id": "e1101352-f087-40ee-9a88-3306bee57ee2",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "61c2d3e8-14e6-4549-ae5e-182b10eb6f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320131db-a98d-4c2e-a7fb-d48cb7ccd036",
        "cursor": {
          "ref": "b807391a-a9af-4be2-8c25-ca34585e5c19",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "f10affd2-6a8a-46cf-9f23-d7eb99b94bb3"
        },
        "item": {
          "id": "320131db-a98d-4c2e-a7fb-d48cb7ccd036",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f1d0af98-7756-429c-9556-0fd064c68d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d59057f-2946-4384-b849-8307ab289643",
        "cursor": {
          "ref": "79b21cc3-1a0b-4c70-8f69-24fb4fb1ac08",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "3e746fc4-748d-444a-987a-5c4e05b78e00"
        },
        "item": {
          "id": "3d59057f-2946-4384-b849-8307ab289643",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "21db41e0-deef-40bf-9e9d-792bf73e2a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db2c53a-7383-44b0-9ff3-d89de73ef48b",
        "cursor": {
          "ref": "d5574561-da21-4a9d-9ed9-68af9326d1a6",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1e039598-3090-46c9-935f-c6a817ad6f03"
        },
        "item": {
          "id": "3db2c53a-7383-44b0-9ff3-d89de73ef48b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "80fffb29-e4c9-49b0-a0a7-5a1fb862a9de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1173b5-3f51-4979-a431-f56c6e0353fc",
        "cursor": {
          "ref": "e60d5202-b193-4e1e-a902-8b70d091a9e4",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "1ab26d42-60fa-4ff7-96f0-f995eb3f5129"
        },
        "item": {
          "id": "df1173b5-3f51-4979-a431-f56c6e0353fc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ed7cb708-9937-4f17-8e53-a452252edc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4762ff0b-0b64-402f-8ea9-965b885c720e",
        "cursor": {
          "ref": "de027a64-1450-43aa-9fb4-7e1cf03bc653",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "6514559d-627e-42ec-ae74-106ad7bd4462"
        },
        "item": {
          "id": "4762ff0b-0b64-402f-8ea9-965b885c720e",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bd38cc45-c5f5-4353-8e62-8277a94b503c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca738988-bcc6-44e5-a4b9-20327a922ddb",
        "cursor": {
          "ref": "41a535fa-2fd7-4d1d-8e14-46190d2408e1",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "45ab96a9-0bff-4256-8ef1-a02f5ba75393"
        },
        "item": {
          "id": "ca738988-bcc6-44e5-a4b9-20327a922ddb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1cc20e39-b2db-4c9f-87d9-49f556aeff4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6552f66-11de-4e18-9d47-8cd337cee51e",
        "cursor": {
          "ref": "c204db1e-a9d2-45a5-bd85-25c059426d9b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4a38d6f3-1b67-4920-bc6f-0c61b8d37293"
        },
        "item": {
          "id": "a6552f66-11de-4e18-9d47-8cd337cee51e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "787fdc27-14a1-46fa-a644-3961e09e4b45",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e0097d-a1c5-4ff0-a3ba-8c0ec2ae50c4",
        "cursor": {
          "ref": "ec1922f1-4876-4733-a9e8-4ea1c22bef0a",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "99a44ad0-eecb-45c6-9e89-2534f6a67d9e"
        },
        "item": {
          "id": "63e0097d-a1c5-4ff0-a3ba-8c0ec2ae50c4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6292ce7b-89b6-463a-a760-d8c724331157",
          "status": "OK",
          "code": 200,
          "responseTime": 4,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bfb9dd-1166-463c-9761-d272329cb52c",
        "cursor": {
          "ref": "98513411-70fb-47a6-b576-4ffe9424ed2d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "84b5897a-c955-4e0b-be35-53a027a83f68"
        },
        "item": {
          "id": "e0bfb9dd-1166-463c-9761-d272329cb52c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fbfca89a-6baa-4a92-894c-83131c9e8387",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3712e74-fc7f-423b-a905-5e95ab3b468d",
        "cursor": {
          "ref": "abc36f97-a9db-487e-8d2c-258e6f398a85",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "9cabb268-99b0-4d5d-8d10-c080b1e4ea8d"
        },
        "item": {
          "id": "d3712e74-fc7f-423b-a905-5e95ab3b468d",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "54d2b67f-a604-4e95-a43f-5543c8f51c9f",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f016c3-bf22-440a-9d7f-097772ea9c1d",
        "cursor": {
          "ref": "4193b880-b253-4ee2-8c2a-e4831fd15e77",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "48520c79-a60d-4f28-a237-b59bfa1ce16b"
        },
        "item": {
          "id": "d3f016c3-bf22-440a-9d7f-097772ea9c1d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e2fbe8ed-c721-4664-8408-19e0ab403999",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f016c3-bf22-440a-9d7f-097772ea9c1d",
        "cursor": {
          "ref": "4193b880-b253-4ee2-8c2a-e4831fd15e77",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "48520c79-a60d-4f28-a237-b59bfa1ce16b"
        },
        "item": {
          "id": "d3f016c3-bf22-440a-9d7f-097772ea9c1d",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e2fbe8ed-c721-4664-8408-19e0ab403999",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbbbb4b-b616-41b1-98b8-694f7e537655",
        "cursor": {
          "ref": "0aa77031-3948-43fa-8771-8ec4d90273a8",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "aa83be22-91be-4dd0-aec0-bb73e3f8286e"
        },
        "item": {
          "id": "1fbbbb4b-b616-41b1-98b8-694f7e537655",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "205153fe-e0fd-47c4-ac6b-657231789c66",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a738807-3082-4701-ae05-17b6e315f2d6",
        "cursor": {
          "ref": "eb88454e-20fb-4e34-9879-d0dd4fcea8c0",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "bd5ef52d-7653-4890-ab92-3c8036bc2976"
        },
        "item": {
          "id": "4a738807-3082-4701-ae05-17b6e315f2d6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b4b797f9-72ca-4e79-9e67-de137cccf952",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}